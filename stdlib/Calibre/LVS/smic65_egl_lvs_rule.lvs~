#!tvf

tvf::VERBATIM {

///////////////////////////////////////////////////////////////////////////////////
//                                                                               //
// $RCSfnile: SMIC_CalLVS_55ULPRF_09121825_V1.16_0.lvs $         //
//                                                                               //
// Calibre LVS Deck for SMIC 55nm LL+ULP & RF 1P10M(9,8,7,6,5,4) Salicide 0.9V/1.2V/1.8V/2.5V//
//                                                                               //
//                                                                               //
// Revision: V1.16_0                                                             //
//                                                                               //
// Date: 2015/11/28 10:28:15                                                     //
//                                                                               //
///////////////////////////////////////////////////////////////////////////////////
//                                                                               //
// Revision History:                                                             //
//                                                                               //
// Rev.        Date       Who    What                                            //
// ----------- ---------  -----  ---------------------------------------------   //
//Revision1.0  2011/04/29  Betty Based on below documents:                       //
// ------- ---------- ----- ---------------------------------------------------- //
//                             Logic Design Rule: TD-LO65-DR-2001 Rev.:12R       //
//                                                  (Tech Dev. Rev.:1.7)         //
//                             MSRF  Design Rule: TD-MM65-DR-2001 Rev.:1T        //
//                                                  (Tech Dev. Rev.:0.2)         //
//                             Logic SPICE Model:                                //
//                                                                               //
//                             >> 1.2/2.5V:       TD-LO55-SP-2002 Rev.:1R        //
//                                                (Tech Dev. Rev.:1.1)           //
//                                                                               //
// ------- ---------- ----- ---------------------------------------------------- //
//Revision1.1  2011/06/09  Betty Based on below documents:                       //
//                             Logic Design Rule: TD-LO65-DR-2001 Rev.:13R       //
//                                                  (Tech Dev. Rev.:1.8)         //
//                             MSRF  Design Rule: TD-MM65-DR-2001 Rev.:1T        //
//                                                  (Tech Dev. Rev.:0.2)         //
//                             Logic SPICE Model:                                //
//                                                                               //
//                             >> 1.2/2.5V:       TD-LO55-SP-2002 Rev.:1R        //
//                                                (Tech Dev. Rev.:1.1)           //
//                             what's modified:                                  //
//                             1)change rwell definition                         //
// ------- ---------- ----- ---------------------------------------------------- //
//Revision1.2  2011/06/22  Betty Based on below documents:                       //
//                             Logic Design Rule: TD-LO65-DR-2001 Rev.:13R       //
//                                                  (Tech Dev. Rev.:1.8)         //
//                             MSRF  Design Rule: TD-MM65-DR-2001 Rev.:1T        //
//                                                  (Tech Dev. Rev.:0.2)         //
//                             Logic SPICE Model:                                //
//                                                                               //
//                             >> 1.2/2.5V:       TD-LO55-SP-2002 Rev.:1R        //
//                                                (Tech Dev. Rev.:1.1)           //
//                             what's modified:                                  //
//                             1)change the default mismod from 0 to 1           //
//                             2)add layer NOSHR(180:150) for LDMOS              //
//                             3)change flag_cc from 1 to 0                      //
//                             4)remove unenlarged BJT extraction definition     //
//                             5)add LVS SPICE MULTIPLIER NAME "MR" to let Calibre//
//                               treat MR as M                                   //
//                             6)delete NF for varactor based on spice model     //
//-------------- ---------- -----------------------------------------------------//
//Revision1.2_0R 2011/10/14 Jurry Based on below document:                       // 
//                             Logic Design Rule: TD-LO65-DR-2001 Rev.:13R       //
//                                                  (Tech Dev. Rev.:1.8)         //
//                             MSRF  Design Rule: TD-MM65-DR-2001 Rev.:1T        //
//                                                  (Tech Dev. Rev.:0.2)         //
//                             Logic SPICE Model:                                //
//                                                                               //
//                             >> 1.2/2.5V:       TD-LO55-SP-2002 Rev.:1R        //
//                                                  (Tech Dev. Rev.:1.2)         //
//                             MSRF  SPICE Model: TD-MM55-SP-2001 Rev.:0R        //
//                                                  (Tech Dev. Rev.:pre_v1p1)    //  
//                                                                               //
//                              What's modified:                                 //
//                             For 55LL part                                     //       
//                                                                               //
//                             1)LDMOS width and length shrink 0.9, AS/AD shrink //
//                               0.81 PS/PD shrink 0.9                           //
//                             2)NRS/NRD extracted value should be change from   // 
//                               zero to extracted value: NRS=AS/w*w NRD=AD/w*w  // 
//                             3)laddr & waddr should be deleted for  dnw12ll_ckt//
//                               dnwhvt12ll_ckt, dnwlvt12ll_ckt,dnw25ll_ckt,     //
//                               dnwod33ll_ckt,dnwud18ll_ckt.                    // 
//                               arw,prw,adnw,pdnw are added and the value is    //
//                               zero Extra two parasitic diode are extracted.   //
//                             4)front end resistor sheet resistance are updated.//
//                             5)parameter prelayout are changed to prelayout_x. //
//                             6)change 0.525 and 0.974 bitcell name             //
//                               0.525:                                          //
//                               NPGSVT > STNPGSVT                               //
//                               NPDSVT > STNPDSVT                               //
//                               PLSVT  > STPLSVT                                //
//                               0.974                                           //
//                               NPGADPSVT > DPNPGASVT                           //
//                               NPGBDPSVT > DPNPGBSVT                           // 
//                               NPDDPSVT  > DPNPDSVT                            //
//                               PLDPSVT   > DPPLSVT                             //
//                             7)Add 0.499 bitcell                               //
//                               UDNPDSVT, UDNPGSVT, UDPLSVT, UDNPDHVT, UDNPGHVT //
//                               UDPLHVT                                         //
//                               For 55RF part: initial add RF device            //
//                               Add RF MOS                                      //
//                               Add RF Resistor                                 //
//                               Add RF Varactor                                 //
//                               Add RF MOM                                      //
//                               Add RF Inductor                                 // 
//Revision1.2_1R 2011/11/11 Betty Based on below document:                       //
//                             Logic Design Rule: TD-LO65-DR-2001 Rev.:13.1R     //
//                                                  (Tech Dev. Rev.:1.8)         //
//                             MSRF  Design Rule: TD-MM65-DR-2001 Rev.:1T        //
//                                                  (Tech Dev. Rev.:0.2)         //
//                             Logic SPICE Model:                                //
//                                                                               //
//                             >> 1.2/2.5V:       TD-LO55-SP-2002 Rev.:1R        //
//                                                  (Tech Dev. Rev.:1.2)         //
//                             MSRF  SPICE Model: TD-MM55-SP-2001 Rev.:0R        //
//                                                  (Tech Dev. Rev.:pre_v1p1)    //
//                             what's modified:                                  //
//                             1)add DNW for LDPMOS                              //
//                             2)update 0.499 bitcell definition                 // 
//RevisionV1.3_2R 2012/07/06 Cherryc Based on below document:                    //
//                             Logic Design Rule: TD-LO65-DR-2001 Rev.:14.1R     //
//                                                  (Tech Dev. Rev.:1.9)         //
//                                                TD-LO55-DR-2002 Rev.:1R        //
//                                                  (Tech Dev. Rev.:1.0)         //
//                             MSRF  Design Rule: TD-MM65-DR-2001 Rev.:1T        //
//                                                  (Tech Dev. Rev.:0.2)         //
//                             Logic SPICE Model:                                //
//                                                                               //
//                             >> 1.2/2.5V:       TD-LO55-SP-2002 Rev.:1R        //
//                                                  (Tech Dev. Rev.:1.3)         //
//                             MSRF  SPICE Model: TD-MM55-SP-2001 Rev.:1R        //
//                                                  (Tech Dev. Rev.:1.3)         //
//                                                                               //
//                             SRAM Layout:       TD-SM65-CL-2001 Rev.:2R        //
//                                                (Tech Dev. Rev.: 1.1)          //
//                                                                               //
//                                                TD-SM65-CL-2002 Rev.:2R        //
//                                                (Tech Dev. Rev.: 1.1)          //
//                                                                               //
//                                                TD-SM65-CL-2003 Rev.:2T        //
//                                                (Tech Dev. Rev.: 0.3)          //
//                                                                               //
//                                                TD-SM65-CL-2004 Rev.:6R        //
//                                                (Tech Dev. Rev.:1.1)           //
//                                                TD-SM65-CL-2005 Rev.:4R        //
//                                                (Tech Dev. Rev.:1.1)           //
//                                                                               //
//                                                TD-SM65-CL-2007 Rev.:3R        //
//                                                (Tech Dev. Rev.:1.1)           //
//                                                                               //
//                                                TD-SM65-CL-2008 Rev.:3R        //
//                                                (Tech Dev. Rev.:1.1)           //
//                            what's modified:                                   //
//                            1)add below devices according to updated model:    //
//                              BJT:pnp12a4ll_sh,pnp12a25ll_sh, pnp12a100ll_sh,  // 
//                                  pnp18a4ll_sh,pnp18a25ll_sh, pnp18a100ll_sh,  // 
//                                  pnp25a4ll_sh,pnp25a25ll_sh, pnp25a100ll_sh,  // 
//                                  npn12a4ll_sh,npn12a25ll_sh, npn12a100ll_sh,  // 
//                                  npn18a4ll_sh,npn18a25ll_sh, npn18a100ll_sh,  // 
//                                  npn25a4ll_sh,npn25a25ll_sh, npn25a100ll_sh,  // 
//                                  pnp12a4ll_sh_mis_ckt,pnp12a25ll_sh_mis_ckt,  //
//                                  pnp12a100ll_sh_mis_ckt,pnp18a4ll_sh_mis_ckt  // 
//                                  pnp18a25ll_sh_mis_ckt, pnp18a100ll_sh_mis_ckt,// 
//                                  pnp25a4ll_sh_mis_ckt,pnp25a25ll_sh_mis_ckt,  //
//                                  pnp25a100ll_sh_mis_ckt,npn12a4ll_sh_mis_ckt, // 
//                                  npn12a25ll_sh_mis_ckt, npn12a100ll_sh_mis_ckt// 
//                                  npn18a4ll_sh_mis_ckt,npn18a25ll_sh_mis_ckt,  //
//                                  npn18a100ll_sh_mis_ckt,npn25a4ll_sh_mis_ckt, // 
//                                  npn25a25ll_sh_mis_ckt, npn25a100ll_sh_mis_ckt// 
//                              MOS:ntud18ll,ntod33ll,ntud18ll_mis_ckt,          //
//                                  ntod33ll_mis_ckt,nld50ll_sh_ckt,pld50ll_sh_ckt,//
//                                  nld50llod_sh_ckt,pld50llod_sh_ckt            //
//                              RES:rtm1_d2,rtm2_d2,rtm1_d2_ckt,rtm2_d2_ckt      //
//                              MOM:mom_2t_ckt,mom_3t_ckt                        //
//                             2)add parasitic_nwd when XRC_RUN is TRUE;         //
//                             3)delete all LL mom in previous LVS;              //
//                             4)add effective subd definition for rwell separation//
//                             5)set NRS/NRD=0 for SRAM;                        //
//                             6)fixed a typo error in ERC Check part as follows://
//                               "GND?" --> "?GND?"                              //
//                             7)remove PJ parameters comparing for DIODE;       //
//                             8)rechanged the 0.525 SVT bitcell device name     //
//                               STNPGSVT--->NPGSVT                              //
//                               STNPDSVT--->NPDSVT                              //
//                               STPLSVT --->PLSVT                               //
//                             9)rechanged the 0.974 SVT bitcell device name    //
//                               DPNPGASVT-->NPGADPSVT                           //
//                               DPNPGBSVT-->NPGBDPSVT                           //
//                               DPNPDSVT -->NPDDPSVT                            //
//                               DPPLSVT  -->PLDPSVT                             //
//                             10)support MR as multipler factor name for misckt mos //
//                             11)support following top metal resistor combination//
//                                TM1 width is 0.2um, TM2 width is 0.4um          //
//                             12)update definition method for DNWMOS;            //
//                             13)add pwell_wpe definition for wpe calculation;   //
//                             14)update definition method for mos varactor;      //
//                             15)add SRAM mismatch devices based on updated model//
//                             16)add NF extracting and comparing for LL varactor //
//                             17)add MOS device reduction tolerance to zero      // 
//                             18)update AS,AD,PS,PD calculation method for LDMOS // 
//                             19)change R model resistor parameters from R to W,L//
//                                when XRC_RUN=TRUE;                              //
//                             20)update option12 and option13 to extract corresponding//
//                              inducotr by choosing the following option:       //
//                              a)2TM inductor(9k+34k): value for option3,option12//
//                                option13 should be double,4 and 15,respectively;//
//                              b)1TM inductor(9k): vaule for option3,option13    //
//                                should be single and 4,respectively;            //
//                              c)1TM inductor(34k): vaule for option3,option13   //
//                                should be single and 15,respectively;           //
//                             21)add statement in Release_Note that every device //
//                                should has only one VARMOS layer.               //
//                             22)add erc.rep for ERC SUMMARY REPORT;              //
//                             23)add following connection code to extact the third//
//                               terminal for MOM: CONNECT poly_int MOM_poly      //
//                             24)delete below 6t dnwmos based on model updated:   //
//                                dnw12ll_ckt_rf_6t, dnwlvt12ll_ckt_rf_6t,         //
//                                dnw12ll_ckt_rf_6t_mis, dnwlvt12ll_ckt_rf_6t_mis, //
//                                dnw25ll_ckt_rf_6t, dnw25llod33_ckt_rf_6t,        //
//                                dnw25ll_ckt_rf_6t_mis, dnw25llod33_ckt_rf_6t_mis,//
//                                dnw18ll_ckt_rf_6t,                               //
//                             25)add scar,scbr and sccr for RF mos:               //
//                             26)delete below mom device based on model updated:  //
//                                 mom_rf,mom_rf_3t,mom_wops_rf,mom_wops_rf_3t      //
//                             27)add below mom_rf based on model updated:         //
//                             28)delete rndifsab_ckt_rf_3t and rpdifsab_ckt_rf_3t //
//                                based on model updated;                          //
//                             29)change rndifsab_ckt_rf and rpdifsab_ckt_rf from  //
//                                2-termianl to 3-termianl;                        //
//                             30)add mr parameter for XRC for following device:   //
//                                pvar12ll_ckt,pvar18ll_ckt,pvar25ll_ckt           //
//                             31)change default value for "VIRTUAL CONNECT COLON" //
//                                from NO to YES, but please set to "NO" when      //
//                                running full chip level.                         //
//                             32)change some model name from upper case to lower  //
//                                case to consistent with model name;              //
//                             33)Reset LVS REDUCE default setting as below:       //
//                                MOS: PARALLEL merge is allowed only L equals    //
//                                RES: For subckt resistor,PARALLEL merge or SERIES//
//                                     merge are allowed when L or W  equals, but //
//                                     for R model resistor,PARALLEL merge or SERIES//
//                                     merge in any conditons.                    //
//                                CAP: No merge allowed,including varactor,MOM,MIM//
//                                BJT: PARALLEL merge allowed                     //
//                                DIO: PARALLEL merge allowed                     //
//                                NOTE:pls set tolerance value from 0 to other value//
//                                by device's requirement as follows:             // 
//                                TOLERANCE L 0 --> TOLERANCE L 1(or other value) // 
//                                TOLERANCE W 0 --> TOLERANCE W 1(or other value) // 
//                             34)allow to extract parasitic diode for RF mos when //
//                                XRC_RUN is TRUE.                                 //
//                             35)fixed  a typo error for rsh value for rm6.       // 
//                             36)allow to filter subckt resistors when two terminal // 
//                                are tied together.                                 // 
//                             37)update inductor definition for RC parasitic extraction// 
//                             38)Remove AADUM from ntd and ptd to prevent false erc error// 
//                             39)add connection for metal in and out of MOMDMY for// 
//                                For 1P6M_1TM.                                    // 
//                             40)update parasitc_rwell definition based on new   // 
//                                RF mos layout.                                  // 
//                             41)add SCONNECT between ntd and nwell which is     //
//                                related with DNW;                               // 
//                             42)add OPTION 15 for diode PJ comparing or not;    //
//                             43)add ralpa_utm and ralpa_utm_ckt based on updated model;//
//                             44)update IO device WPE region as follows:         //
//                               (NW and DG overlap,  NW and TG overlap).        //
//                             45)update definition method for LLRF varactor.     //
//                             46)update RF varactor parameters based on new model//
//                             47)update parasitic diode definition.              //
//                             48)remove wpe for native device;                   //
//RevisionV1.3_2.1R 2012/07/13 Cherryc Based on below document:                    //
//                             Logic Design Rule: TD-LO65-DR-2001 Rev.:14.1R     //
//                                                  (Tech Dev. Rev.:1.9)         //
//                                                TD-LO55-DR-2002 Rev.:1R        //
//                                                  (Tech Dev. Rev.:1.0)         //
//                             MSRF  Design Rule: TD-MM65-DR-2001 Rev.:1T        //
//                                                  (Tech Dev. Rev.:0.2)         //
//                             Logic SPICE Model:                                //
//                                                                               //
//                             >> 1.2/2.5V:       TD-LO55-SP-2002 Rev.:1R        //
//                                                  (Tech Dev. Rev.:1.3)         //
//                             MSRF  SPICE Model: TD-MM55-SP-2001 Rev.:1R        //
//                                                  (Tech Dev. Rev.:1.3)         //
//                                          TECN: TD1206220002 Rev.:2R           //
//                                                  (Tech Dev. Rev.:1.3)         //
//                                                                               //
//                             SRAM Layout:       TD-SM65-CL-2001 Rev.:2R        //
//                                                (Tech Dev. Rev.: 1.1)          //
//                                                                               //
//                                                TD-SM65-CL-2002 Rev.:2R        //
//                                                (Tech Dev. Rev.: 1.1)          //
//                                                                               //
//                                                TD-SM65-CL-2003 Rev.:2T        //
//                                                (Tech Dev. Rev.: 0.3)          //
//                                                                               //
//                                                TD-SM65-CL-2004 Rev.:6R        //
//                                                (Tech Dev. Rev.:1.1)           //
//                                                TD-SM65-CL-2005 Rev.:4R        //
//                                                (Tech Dev. Rev.:1.1)           //
//                                                                               //
//                                                TD-SM65-CL-2007 Rev.:3R        //
//                                                (Tech Dev. Rev.:1.1)           //
//                                                                               //
//                                                TD-SM65-CL-2008 Rev.:3R        //
//                                                (Tech Dev. Rev.:1.1)           //
//                            what's modified:                                   //
//                             1)update device type for the following devices;   //
//                               NPGSVT,NPDSVT,PLSVT,NPGADPSVT,NPGBDPSVT,NPDDPSVT//
//                               PLDPSVT                                         //
//                             2)remove REDUCE TOLERANCE for logic mos, and set  //
//                               the tolerance in MACRO for non-logic mos device;//
//RevisionV1.3_3R 2013/01/31 Cherryc Based on below document:                    //
//                             Logic Design Rule: TD-LO65-DR-2001 Rev.:15R       //
//                                                  (Tech Dev. Rev.:1.10)        //
//                                                TD-LO55-DR-2002 Rev.:2R        //
//                                                  (Tech Dev. Rev.:1.0)         //
//                             Logic SPICE Model:                                //
//                                                                               //
//                             >> 1.2/2.5V:       TD-LO55-SP-2002 Rev.:1R        //
//                                                  (Tech Dev. Rev.:1.3)         //
//                             MSRF  SPICE Model: TD-MM55-SP-2001 Rev.:2R        //
//                                                  (Tech Dev. Rev.:1.3)         //
//                                                                               //
//                             SRAM SPICE Model:  TD-SM55-SP-2005 Rev.:0R        //
//                                                (Tech Dev. Rev.: 1.0)          //
//                                                TD1209260003                   //
//                                                (Tech Dev. Rev.: 1.0)          //
//                                                TD-SM55-SP-2004 Rev.:0R        //
//                                                (Tech Dev. Rev.:1.0)           //
//                                                TD-SM55-SP-2001 Rev.:0R        //
//                                                (Tech Dev. Rev.:1.0)           //
//                                                TD-SM55-SP-2002 Rev.:0R        //
//                                                (Tech Dev. Rev.:1.0)           //
//                                                TD1208290002                   //
//                                                (Tech Dev. Rev.:1.1)           //
//                                                TD1209260001                   //
//                                                (Tech Dev. Rev.:1.0)           //
//                            what's modified:                                   //
//                             1)update lvs to support CCI flow;                 //
//                             2)add below devices based on new model:           //
//                                spi_ind_rf_1p1,spi_ind_rf_1p2,spi_ind_rf_1p3,  //
//                                spi_ind_rf_psub_1p1,spi_ind_rf_psub_1p2,       //
//                                spi_ind_rf_psub_1p3                            //
//                             3)add 1P4M/1P5M metal option;                     //
//                             4)update the folowing ERC code                    //
//                               from: pathchk_layer2 =PATHCHK !LABELED          //
//                               to  : pathchk_layer2 =PATHCHK !LABELED NOFLOAT  //
//                             5)update gate definition;                         //
//                             6)add DEVICE TYPE for subckt SRAM device;         //
//                             7)update as/ps calcution method for LDMOS;        //
//                             8)update NRS/NRD parameters calculation method to //
//                                align with model and PDK;                      //
//                             9)align parameters with model and PDK;            //
//                             10)rechanged the 0.525 SVT bitcell device name    //
//                               NPGSVT--->STNPGSVT                              //
//                               NPDSVT--->STNPDSVT                              //
//                               PLSVT --->STPLSVT                               //
//                             11)delete 0.499/1.158SVT bitcell based on deleted model//
//                             12)update definition method for LLRF varactor.    //
// V1.3_4R 2013/5/24 Seven  Based on below documents:                            //
//                             Logic Design Rule: TD-LO65-DR-2001 Rev.:15R       //
//                                                  (Tech Dev. Rev.:1.10)        //
//                                                TD-LO55-DR-2002 Rev.:2R        //
//                                                  (Tech Dev. Rev.:1.0)         //
//                             Logic SPICE Model:                                //
//                             >> 1.2/2.5V:       TD-LO55-SP-2002 Rev.:1R        //
//                                                  (Tech Dev. Rev.:1.3)         //
//                             MSRF  SPICE Model: TD-MM55-SP-2001 Rev.:3R        //
//                                                  (Tech Dev. Rev.:1.3)         //
//                             SRAM SPICE Model:  TD-SM55-SP-2005 Rev.:0R (0.525HVT)//
//                                                (Tech Dev. Rev.: 1.0)          //
//                                                TD1209260003 (0.525SVT)        //
//                                                (Tech Dev. Rev.: 1.0)          //
//                                                TD-SM55-SP-2004 Rev.:0R (0.62HVT)//
//                                                (Tech Dev. Rev.:1.0)           //
//                                                TD-SM55-SP-2001 Rev.:0R (0.62SVT)//
//                                                (Tech Dev. Rev.:1.0)           //
//                                                TD-SM55-SP-2002 Rev.:0R (1.158HVT)//
//                                                (Tech Dev. Rev.:1.0)           //
//                                                TD-SM55-SP-2003 Rev.:1R (0.974HVT)//
//                                                (Tech Dev. Rev.:1.1)           //
//                                                TD-SM55-CL-2002 Rev.:0R (0.974HVT&SVT)//
//                             1)open the option "VAR_PARALLEL_REDUCE"           //
//                             2)change the calculation of NRD/NRS to original method//
//                             3)update mom definition to support other LL devices and //
//                               metal to be put under LL MOM, which has text layer(such as "momcap25")//
//                               on MOMDMY layer; and also support other metal to put//
//                               under RF MOM which has text layer on MOMDMY layer//
//                             4)add EFUSE_res device                            //
//                             5)change the definition of parasitic diode in order//
//                               to avoid bad device                             //
//                             6)change M to MR of RF Varactor according to model//
//                             7)add inductors as belows based on RF SPICE MODEL:TD-MM55-SP-2001//
//                               ind_2Tdiff_alutm_tn(n=1~5)/ind_3Tdiff_alutm_tn(n=1~5)//
//                               ind_2Tdiff_alutm_psub_tn(n=1~5)/ind_3Tdiff_alutm_psub_tn(n=1~5)//
//                             8)change the size of 0.974um^2 HVT&SVT SRAM due to model updated//
// V1.3_4R 2013/10/21 Seven  What's updated:                                     //
//                           1)add STM2DUM in the definition of metal            //
//                           2)optimize the CONNECT section from poly_int to npoly,ppoly//
//                             for RC accuracy                                   //
//                           3)add FR for resistor for calibreview rightly back-annotation//
// V1.3_4R 2014/01/21 Seven  Base on below document:                             //
//                           Spice Model:  TD-LO55-SP-2002 Rev.:2R               //
//                                           (Tech Dev. Rev.:1.3)                //
//                           What's modified:                                    //
//                           1)change the value of rm1_ckt from 0.131 to 0.132   //
//                             change the value of rm2_ckt~rm8_ckt from 0.098 to 0.099//
//                           2)add W,L for diode for calibreview rightly back-annotation//
// V1.3_5R 2014/06/20 Seven  Base on below document:                             //
//                             Logic Design Rule: TD-LO65-DR-2001 Rev.:15R       //
//                                                  (Tech Dev. Rev.:1.10)        //
//                                                TD-LO55-DR-2002 Rev.:2R        //
//                                                  (Tech Dev. Rev.:1.0)         //
//                             Logic SPICE Model:                                //
//                             >> 1.2/2.5V:       TD-LO55-SP-2002 Rev.:2R        //
//                                                  (Tech Dev. Rev.:1.3)         //
//                             MSRF  SPICE Model: TD-MM55-SP-2001 Rev.:4R        //
//                                                  (Tech Dev. Rev.:1.3)         //
//                             SRAM SPICE Model:  TD-SM55-SP-2005 Rev.:0R (0.525HVT)//
//                                                (Tech Dev. Rev.: 1.0)          //
//                                                TD1209260003 (0.525SVT)        //
//                                                (Tech Dev. Rev.: 1.0)          //
//                                                TD-SM55-SP-2004 Rev.:0R (0.62HVT)//
//                                                (Tech Dev. Rev.:1.0)           //
//                                                TD-SM55-SP-2001 Rev.:0R (0.62SVT)//
//                                                (Tech Dev. Rev.:1.0)           //
//                                                TD-SM55-SP-2002 Rev.:0R (1.158HVT)//
//                                                (Tech Dev. Rev.:1.0)           //
//                                                TD-SM55-SP-2003 Rev.:2R (0.974HVT)//
//                                                (Tech Dev. Rev.:1.2)           //
//                                                TD-SM55-CL-2002 Rev.:1R (0.974HVT&SVT)//
//                                                (Tech Dev. Rev.:1.1)           //
//                           What's modified:                                    //
//                           1)change size of 974 bitcell to 3R according to model update//
//                           2)merge ind_3Tdiff_alutm_psub_t1~t5 to ind_3Tdiff_alutm_psub//
//                             merge ind_2Tdiff_alutm_psub_t1~t5 to ind_2Tdiff_alutm_psub//
//                             merge ind_3Tdiff_alutm_t1~t5 to ind_3Tdiff_alutm//
//                             merge ind_2Tdiff_alutm_t1~t5 to ind_2Tdiff_alutm//
//                           3)add new inductors like below:                     //
//                             rf_ind_alutm_psub   rf_ind_2d8alutm_psub          //
//                             spi_ind_rf_RDL2d8_psub_1p1 spi_ind_rf_RDL2d8_psub_1p2//
//                             spi_ind_rf_RDL2d8_psub_1p3 spi_ind_rf_RDL2d8_psub_2p3//
//                           4)add 5T/6T mos listed below:                       //
//                             dnw12ll_ckt_rf_6t dnwlvt12ll_ckt_rf_6t dnw12ll_ckt_rf_6t_sdc//
//                             dnwlvt12ll_ckt_rf_6t_sdc p12ll_ckt_rf_5t plvt12ll_ckt_rf_5t//
//                             p12ll_ckt_rf_5t_sdc plvt12ll_ckt_rf_5t_sdc        //
//                             dnw18ll_ckt_rf_6t p18ll_ckt_rf_5t dnw25ll_ckt_rf_6t//
//                             dnw25ll_ckt_rf_6t_sdc p25ll_ckt_rf_5t p25ll_ckt_rf_5t_sdc//
//                             dnw25llod33_ckt_rf_6t p25llod33_ckt_rf_5t         //
//                             dnw12ll_ckt_rf_6t_mis dnwlvt12ll_ckt_rf_6t_mis    //
//                             dnw12ll_ckt_rf_6t_sdc_mis dnwlvt12ll_ckt_rf_6t_sdc_mis//
//                             p12ll_ckt_rf_5t_mis plvt12ll_ckt_rf_5t_mis        //
//                             p12ll_ckt_rf_5t_sdc_mis plvt12ll_ckt_rf_5t_sdc_mis//
//                             dnw25ll_ckt_rf_6t_mis dnw25ll_ckt_rf_6t_sdc_mis   //
//                             p25ll_ckt_rf_5t_mis p25ll_ckt_rf_5t_sdc_mis       //
//                             p25llod33_ckt_rf_5t_mis dnw25llod33_ckt_rf_6t_mis //
//                           5)delete the option EFUSE_RES_R for DS request      //
//                           6)exclude PSUB layer for wpe well edge definition   //
//                           7)add INDTEM layer for checking inductor inter via  //
//                           8)optimize the definition of ldmos with NFDMK       //
// V1.3_6R 2014/12/05 Seven  What's updated:                                     //
//                           1)add XRC_RUN option for ldmos to avoid PURE LVS run//
//                             not trigger ADP license                           //
//                                                                               //
// V1.14_0 2015/08/24 Leon   1)add Back_Annotation_Flow option to control annotation parameter//
//                           2)add CASE_SENSITIVITY option to control case sensitive//
//                           3)exclude AA dummy in ERC check                     //     
//                           4)enhance text layer definition for inductor        //
//                           5)add some devices as below:                        //
//                             ulln,ullp,ulln_mis_ckt,ullp_mis_ckt,dnwulln_ckt   //
//                             rhrpo,rhrpo_3t,rhrpo_ckt,rhrpo_3t_ckt,ndioull,pdioull//
//                             mom_4t_ckt,mom_5t_ckt                             //
//                           6)enhanced definition of parasitic_nw               //
//                           7)optimize varactor device definition               //
//                                                                               //
// V1.15_0  2015/10/15 Leon  What's modified:                                    //
//                           1.update MOM metal definition to exclude metal dummy//
//                           2.update MASK SVDB DIRECTORY "svdb" XRC QUERY       //
//                                 to MASK SVDB DIRECTORY "svdb" CCI QUERY       //
//                           3.update ptd definition to exclude MARKS            //
//                           4.update default set of Back_annotation_flow switch //
//                             from "1" to "2"                                   // 
//                           5.update Back_annotation_flow swith control to avoid//
//                             to use calibreadp license in lvs compare          //
//V1.16_0 2016/11/28  Carly Updated based on SPICE MODEL and Sample GDS         //
//                           DR:TD-LO55-DR-2002 (Tech:1.11_4)                    //
//                           SP:TD-LO55-SP-2002 (Tech:1.16_0)                    //
//                           SRAM Layout:                                        //
//                           TD-LO55-CL-2001 (Rev.:0)                            //
//                           (Tech Dev. Rev.:1.0)                                //
//                           55ULP_062swl_hvt_miniarray_v1p0_20150616.gds        //
//                           TD-LO55-CL-2002 (Rev.:0)                            //
//                           (Tech Dev. Rev.:1.0)                                //
//                           55smic_974dp_swl_hvt_miniarray_v1p1_split1_20151026v3.gds //
//                                                                               //
//                           What's modified:                                    //
//                           1.update parameter m to mr for res upon updated model://
//                             rndifsab_ckt_rf/rpdifsab_ckt_rf/rnposab_ckt_rf    //
//                             rpposab_ckt_rf/rnposab_ckt_rf_3t/rpposab_ckt_rf_3t// 
//                             rnwsti_ckt/rnwaa_ckt/rndifsab_ckt                 // 
//                             rpdifsab_ckt/rnposab_ckt/rpposab_ckt              //
//                             rnposab_3t_ckt/rpposab_3t_ckt                     //
//                           2.Add 55ULP 0.62um2 &0.974um2 SRAM bitcell:         //
//                             dnnpdull_ckt/dnnpgull_ckt/dnplull_ckt/dpnpdull_ckt//
//                             dpnpgaull_ckt/dpnpgbull_ckt/dpplull_ckt           //
//                           3.Add 2.5v underdrive 1.8v RF MOSFET:               //
//                             dnw25llud18_ckt_rf/dnw25llud18_ckt_rf_6t          //
//                             dnw25llud18_ckt_rf_6t_mis/dnw25llud18_ckt_rf_mis  //
//                             n25llud18_ckt_rf/n25llud18_ckt_rf_mis             //
//                             p25llud18_ckt_rf/p25llud18_ckt_rf_5t              //
//                             p25llud18_ckt_rf_5t_mis/p25llud18_ckt_rf_mis      //
//                           4.Add HRP RF resistor:                              //
//                             rhrpo_ckt_rf/rhrpo_ckt_rf_3t                      //
//                           5.remove the topmetal, bottometal, shield back-     // 
//                             annotation parameter upon RC's request.           //
//                           6.Add none-layer upon new version DR.               //
//                           7.Optimize the option's sequence for convienent use //
//                           8.Modify the options "TM1_Width","TM2_Width" and    //
//                             "Back_Annotation_Flow" to upper case.             //  
//                           9.Change the default setting of options             //
//                             "NWELL_NOT_TO_POWER_CHECK" for and                //
//                             "PWELL_NOT_TO_GROUND_CHECK" from FALSE to TRUE.   //
//                          10.modify the option "XRC_RUN" to "RC_RUN" for LVS   //
//                             optimization.                                     //
//                          11.update rndifsab_ckt/rpdifsab_ckt body layer       //
//                             definition to not exclude layer "RF3T".           //
//                          12.substitute "pw_nw","pw_nw_rf","pwell_nwell" by    //
//                             "bulk_all"for LVS optimization.                   //
//                          13.modify parasitic diode option using for LVS       //
//                             optimization                                      //
//                          14.update the differential inductor R formula.       //
//                          15.Update the third terminal of rpdifsab_ckt_rf from //
//                             pwell_nwell to nwell follow RF model.             //
//                          16.Add ESDIO2,ESD5V,FUSEMK1 in LAYER MAPPING part    //
//                          17.Add terminal description for diode,bjt,res for LVS//
//                             optimization                                      //
//                          18.remove redundant layer "npgadp_all/npgadp/npgbdp_all//
//                             npgbdp/npddp_all/npddp/AA_SN/AA_SP/mom_wips        //
//                             rwell_ptd/dnwd_ptd"                               //
//                          19.Add trace property for subckt res on topmetal 5 & 4//
//                          20.Add LAYOUT BASE CELL "rtm2_ckt_rf*" and add RFDEV, //
//                             INDMY in LAYOUT BASE Layer.                        //
//                          21.Update MOM_poly to exclude GTDUM for pass dummy    //
//                             insertion pattern.                                 //
//                          22.Update spi_pm_PI from not interact AA to iAA for   //
//                             dummy insertion pattern clean.                     // 
///////////////////////////////////////////////////////////////////////////////////
//                                                                               //
// DISCLAIMER                                                                    //
///////////////////////////////////////////////////////////////////////////////////
//                                                                               //
// DISCLAIMER                                                                    //
//                                                                               //
//   SMIC hereby provides the quality information to you but makes no claims,    //
// promises or guarantees about the accuracy, completeness, or adequacy of the   //
// information herein. The information contained herein is provided on an "AS IS"//
// basis without any warranty, and SMIC assumes no obligation to provide support //
// of any kind or otherwise maintain the information.                            //
//                                                                               //
//   SMIC disclaims any representation that the information does not infringe any//
// intellectual property rights or proprietary rights of any third parties.SMIC  //
// makes no other warranty, whether express, implied or statutory as to any      //
// matter whatsoever,including but not limited to the accuracy or sufficiency of //
// any information or the merchantability and fitness for a particular purpose.  //
// Neither SMIC nor any of its representatives shall be liable for any cause of  //
// action incurred to connect to this service.                                   //
//                                                                               //
//                                                                               //
// STATEMENT OF USE AND CONFIDENTIALITY                                          // 
//                                                                               //
//   The following/attached material contains confidential and proprietary       //
// information of SMIC. This material is based upon information which SMIC       //
// considers reliable, but SMIC neither represents nor warrants that such        //
// information is accurate or complete, and it must not be relied upon as such.  //
// This information was prepared for informational purposes and is for the use   //
// by SMIC's customer only. SMIC reserves the right to make changes in the       //
// information at any time without notice.                                       //
//   No part of this information may be reproduced, transmitted, transcribed,    //
// stored in a retrieval system, or translated into any human or computer        //
// language, in any form or by any means, electronic, mechanical, magnetic,      //
// optical, chemical, manual, or otherwise, without the prior written consent of //
// SMIC. Any unauthorized use or disclosure of this material is strictly         //
// prohibited and may be unlawful. By accepting this material, the receiving     //
// party shall be deemed to have acknowledged, accepted, and agreed to be bound  //
// by the foregoing limitations and restrictions. Thank you.                     //
//                                                                               //
///////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////
//                                                                               //
// NOTICE                                                                        //
//                                                                               //
//   This file includes SVRF/TVF Technology under license by Mentor Graphics     //
// Corporation. "SVRF/TVF Technology" shall mean Mentor Graphics' Standard       //
// Verification Rule Format ("SVRF") and Tcl Verification Format ("TVF")         //
// proprietary syntaxes for expressing process rules.  You shall not use         //
// SVRF/TVF Technology unless you are a Mentor Graphics customer with a license  //
// to use the applicable Mentor Graphics software.  The exact terms of your      //
// obligations and rights are governed by your respective license.  You shall    //
// not use SVRF/TVF Technology except: (a) for your internal business purposes   //
// and (b) for use with Mentor Graphics' Calibre@ tools.  All SVRF/TVF           //
// Technology constitutes or contains trade secrets and confidential information //
// of Mentor Graphics or its licensors.  You shall not make SVRF/TVF Technology  //
// available in any form to any person other than your employees and on-site     //
// contractors, excluding Mentor Graphics competitors, whose job performance     //
// requires access and who are under obligations of confidentiality.             //
//                                                                               //
///////////////////////////////////////////////////////////////////////////////////
//                                                                               //
// Device List                                                                   //
//                                                                               //
// NGATE  = AA*GT*SN-NW; PGATE  = AA*GT*SP*NW; CNGATE = AA*GT*SN*NW              //
//                                                                               //
// "*" means "AND" and "-" means "NOT"                                           //
//                                                                               //
// --------------------- ---------------------------- -------------------------  //
// Device Name           Description                  Device Layer Operation     //
// --------------------- ---------------------------- -------------------------  //
// MOSFET                                                                        //
//                                                                               //
// n12ll     1.2V NMOS              (NGATE-DG-TG-VTNH-LVN-PSUB-NC-OVERPL-UNDEPL-DNWTR-MOSCKT)//
// p12ll     1.2V PMOS              (PGATE-DG-TG-VTPH-LVP-PSUB-NC-OVERPL-UNDEPL-DNWTR-MOSCKT)//
// n18ll     1.8V NMOS              (NGATE*DG-TG-VTNH-LVN-PSUB-NC-OVERPL-UNDEPL-DNWTR-MOSCKT)//
// p18ll     1.8V PMOS              (PGATE*DG-TG-VTPH-LVP-PSUB-NC-OVERPL-UNDEPL-DNWTR-MOSCKT)//
// nt12ll    1.2V Native NMOS       (NGATE-DG-TG*PSUB-VTNH-LVN-NC-OVERPL-UNDEPL-DNWTR-MOSCKT)//
// nt18ll    1.8V Native NMOS       (NGATE*DG-TG*PSUB-VTNH-LVN-NC-OVERPL-UNDEPL-DNWTR-MOSCKT)//
// nhvt12ll  1.2V HVT NMOS          (NGATE-DG-TG*VTNH-LVN-PSUB-NC-OVERPL-UNDEPL-DNWTR-MOSCKT)//
// phvt12ll  1.2V HVT PMOS          (PGATE-DG-TG*VTPH-LVP-PSUB-NC-OVERPL-UNDEPL-DNWTR-MOSCKT)//
// nlvt12ll  1.2V LVT NMOS          (NGATE-DG-TG*LVN-VTNH-PSUB-NC-OVERPL-UNDEPL-DNWTR-MOSCKT)//
// plvt12ll  1.2V LVT PMOS          (PGATE-DG-TG*LVP-VTPH-PSUB-NC-OVERPL-UNDEPL-DNWTR-MOSCKT)//
// n25ll     2.5V NMOS              (NGATE-DG*TG-VTNH-LVN-PSUB-NC-OVERPL-UNDEPL-DNWTR-MOSCKT)//
// p25ll     2.5V PMOS              (PGATE-DG*TG-VTPH-LVP-PSUB-NC-OVERPL-UNDEPL-DNWTR-MOSCKT)//
// nt25ll    2.5V Native NMOS       (NGATE-DG*TG*PSUB-VTNH-LVP-NC-OVERPL-UNDEPL-DNWTR-MOSCKT)//
// nod33ll   2.5V overdriver NMOS   (NGATE-DG*TG*OVERPL-VTNH-LVN-PSUB-NC-UNDEPL-DNWTR-MOSCKT)//
// pod33ll   2.5V overdriver PMOS   (PGATE-DG*TG*OVERPL-VTPH-LVP-PSUB-NC-UNDEPL-DNWTR-MOSCKT)//
// nud18ll   1.8V underdriver NMOS  (NGATE-DG*TG-OVERPL-VTNH-LVN-PSUB-NC*UNDEPL-DNWTR-MOSCKT)//
// pud18ll   1.8V underdriver PMOS  (PGATE-DG*TG-OVERPL-VTPH-LVP-PSUB-NC*UNDEPL-DNWTR-MOSCKT)//
// ntud18ll  1.8V underdriver Native NMOS  (NGATE-DG*TG-OVERPL-VTNH-LVN*PSUB-NC*UNDEPL-DNWTR-MOSCKT)//
// ntod33ll  2.5V overdriver Native NMOS   (NGATE-DG*TG*OVERPL-VTNH-LVN*PSUB-NC-UNDEPL-DNWTR-MOSCKT)//
// ulln      1.2V ULL NMOS          (NGATE-DG-TG*UHVT*VTNH-PSUB-NC-OVERPL-UNDEPL-DNWTR-MOSCKT)//
// ullp      1.2V ULL PMOS          (PGATE-DG-TG*UHVT*VTPH-PSUB-NC-OVERPL-UNDEPL-DNWTR-MOSCKT)//
// dnw12ll_ckt 1.2V DNW NMOS         (NGATE-DG-TG-VTNH-LVN-PSUB-NC-OVERPL-UNDEPL*DNWTR*DNW)//
// dnwhvt12ll_ckt 1.2V HVT DNWMOS    (NGATE-DG-TG*VTNH-LVN-PSUB-NC-OVERPL-UNDEPL*DNWTR*DNW)//
// dnwlvt12ll_ckt 1.2V LVT DNWMOS    (NGATE-DG-TG-VTNH*LVN-PSUB-NC-OVERPL-UNDEPL*DNWTR*DNW)//
// dnw18ll_ckt 1.8V DNW NMOS         (NGATE*DG-TG-VTNH-LVN-PSUB-NC-OVERPL-UNDEPL*DNWTR*DNW)//
// dnw25ll_ckt 2.5V DNW NMOS         (NGATE-DG*TG-VTNH-LVN-PSUB-NC-OVERPL-UNDEPL*DNWTR*DNW)//
// dnwod33ll_ckt 2.5V OD 3.3 DNW NMOS (NGATE-DG*TG-VTNH-LVN-PSUB-NC*OVERPL-UNDEPL*DNWTR*DNW)//
// dnwud18ll_ckt 2.5V UD 1.8 DNW NMOS (NGATE-DG*TG-VTNH-LVN-PSUB-NC-OVERPL*UNDEPL*DNWTR*DNW)//
// dnwulln_ckt   1.2V DNW NMOS       (NGATE-DG-TG*VTNH*UHVT-PSUB-NC-OVERPL-UNDEPL*DNWTR*DNW)//
//                                                                                          //
// n12ll_mis_ckt 1.2V NMOS           (NGATE-DG-TG-VTNH-LVN-PSUB-NC-OVERPL-UNDEPL-DNWTR*MOSCKT)//
// nt12ll_mis_ckt 1.2V NMOS          (NGATE-DG-TG-VTNH-LVN*PSUB-NC-OVERPL-UNDEPL-DNWTR*MOSCKT)//
// nt18ll_mis_ckt 1.8V NMOS          (NGATE*DG-TG-VTNH-LVN*PSUB-NC-OVERPL-UNDEPL-DNWTR*MOSCKT)//
// p12ll_mis_ckt 1.2V PMOS           (PGATE-DG-TG-VTPH-LVP-PSUB-NC-OVERPL-UNDEPL-DNWTR*MOSCKT)//
// n18ll_mis_ckt 1.8V NMOS           (NGATE*DG-TG-VTNH-LVN-PSUB-NC-OVERPL-UNDEPL-DNWTR*MOSCKT)//
// p18ll_mis_ckt 1.8V PMOS           (PGATE*DG-TG-VTPH-LVP-PSUB-NC-OVERPL-UNDEPL-DNWTR*MOSCKT)//
// nhvt12ll_mis_ckt  1.2V HVT NMOS   (NGATE-DG-TG*VTNH-LVN-PSUB-NC-OVERPL-UNDEPL-DNWTR*MOSCKT)//
// phvt12ll_mis_ckt  1.2V HVT PMOS   (PGATE-DG-TG*VTPH-LVP-PSUB-NC-OVERPL-UNDEPL-DNWTR*MOSCKT)//
// nlvt12ll_mis_ckt  1.2V LVT NMOS   (NGATE-DG-TG*LVN-VTNH-PSUB-NC-OVERPL-UNDEPL-DNWTR*MOSCKT)//
// plvt12ll_mis_ckt  1.2V LVT PMOS   (PGATE-DG-TG*LVP-VTPH-PSUB-NC-OVERPL-UNDEPL-DNWTR*MOSCKT)//
// n25ll_mis_ckt  2.5V NMOS          (NGATE-DG*TG-VTNH-LVN-PSUB-NC-OVERPL-UNDEPL-DNWTR*MOSCKT)//
// nt25ll_mis_ckt  2.5V NMOS         (NGATE-DG*TG-VTNH-LVN*PSUB-NC-OVERPL-UNDEPL-DNWTR*MOSCKT)//
// p25ll_mis_ckt  2.5V PMOS          (PGATE-DG*TG-VTPH-LVP-PSUB-NC-OVERPL-UNDEPL-DNWTR*MOSCKT)//
// nod33ll_mis_ckt 2.5V overdriver NMOS   (NGATE-DG*TG*OVERPL-VTNH-LVN-PSUB-NC-UNDEPL-DNWTR*MOSCKT)//
// pod33ll_mis_ckt 2.5V overdriver PMOS   (PGATE-DG*TG*OVERPL-VTPH-LVP-PSUB-NC-UNDEPL-DNWTR*MOSCKT)//
// nud18ll_mis_ckt 2.5V underdriver NMOS   (NGATE-DG*TG-OVERPL-VTNH-LVN-PSUB-NC*UNDEPL-DNWTR*MOSCKT)//
// pud18ll_mis_ckt 2.5V underdriver PMOS   (PGATE-DG*TG-OVERPL-VTPH-LVP-PSUB-NC*UNDEPL-DNWTR*MOSCKT)//
// ntud18ll_mis_ckt  1.8V underdriver Native NMOS  (NGATE-DG*TG-OVERPL-VTNH-LVN*PSUB-NC*UNDEPL-DNWTR*MOSCKT)//
// ntod33ll_mis_ckt  2.5V overdriver Native NMOS   (NGATE-DG*TG*OVERPL-VTNH-LVN*PSUB-NC-UNDEPL-DNWTR*MOSCKT)//
// ulln_mis_ckt   1.2V ULL NMOS      (NGATE-DG-TG*UHVT*VTNH-PSUB-NC-OVERPL-UNDEPL-DNWTR*MOSCKT)//
// ullp_mis_ckt   1.2V ULL PMOS      (PGATE-DG-TG*UHVT*VTPH-PSUB-NC-OVERPL-UNDEPL-DNWTR*MOSCKT)//
//-------------------------------------------------------------------------------//
// LDMOS                                                                         //
// nld50ll_ckt    2.5V LDNMOS         (SN*GT*AA*NW*STIDMY*LDBK-OVERPL-MOSCKT*NOSHR)    //
// pld50ll_ckt    2.5V LDPMOS         (SP*GT*AA*NW*STIDMY*LDBK-OVERPL-MOSCKT*NOSHR)    //
// nld50llod_ckt  2.5V OV 3.3V LDNMOS (SN*GT*AA*NW*STIDMY*LDBK*DNW*OVERPL-MOSCKT*NOSHR)//
// pld50llod_ckt  2.5V OV 3.3V LDPMOS (SP*GT*AA*NW*STIDMY*LDBK*DNW*OVERPL-MOSCKT*NOSHR)//
//                                                                                     //
// nld50ll_sh_ckt    2.5V shrink LDNMOS         (SN*GT*AA*NW*STIDMY*LDBK-OVERPL-MOSCKT-NOSHR)    //
// pld50ll_sh_ckt    2.5V shrink LDPMOS         (SP*GT*AA*NW*STIDMY*LDBK-OVERPL-MOSCKT-NOSHR)    //
// nld50llod_sh_ckt  2.5V OV 3.3V shrink LDNMOS (SN*GT*AA*NW*STIDMY*LDBK*DNW*OVERPL-MOSCKT-NOSHR)//
// pld50llod_sh_ckt  2.5V OV 3.3V shrink LDPMOS (SP*GT*AA*NW*STIDMY*LDBK*DNW*OVERPL-MOSCKT-NOSHR)//
//-------------------------------------------------------------------------------//
// BJT                                                                           //
// pnp12a100ll           1.2V PNP_11.1*11.1    (DMPNP*AA*SP*NW*NOSHR-DG-TG-MOSCKT)//
// pnp12a25ll            1.2V PNP_5.55*5.55    (DMPNP*AA*SP*NW*NOSHR-DG-TG-MOSCKT)//
// pnp12a4ll             1.2V PNP_2.22*2.22    (DMPNP*AA*SP*NW*NOSHR-DG-TG-MOSCKT)//
// pnp18a100ll           1.8V PNP_11.1*11.1    (DMPNP*AA*SP*NW*DG*NOSHR-TG-MOSCKT)//
// pnp18a25ll            1.8V PNP_5.55*5.55    (DMPNP*AA*SP*NW*DG*NOSHR-TG-MOSCKT)//
// pnp18a4ll             1.8V PNP_2.22*2.22    (DMPNP*AA*SP*NW*DG*NOSHR-TG-MOSCKT)//
// pnp25a100ll           2.5V PNP_11.1*11.1    (DMPNP*AA*SP*NW-DG*TG*NOSHR-MOSCKT)//
// pnp25a25ll            2.5V PNP_5.55*5.55    (DMPNP*AA*SP*NW-DG*TG*NOSHR-MOSCKT)//
// pnp25a4ll             2.5V PNP_2.22*2.22    (DMPNP*AA*SP*NW-DG*TG*NOSHR-MOSCKT)//
// npn12a100ll           1.2V NPN_11.1*11.1    (DMPNP*AA*SN*NW*DNW-DG-TG*NOSHR-MOSCKT)//
// npn12a25ll            1.2V NPN_5.55*5.55    (DMPNP*AA*SN*NW*DNW-DG-TG*NOSHR-MOSCKT)//
// npn12a4ll             1.2V NPN_2.22*2.22    (DMPNP*AA*SN*NW*DNW-DG-TG*NOSHR-MOSCKT)//
// npn18a100ll           1.8V NPN_11.1*11.1    (DMPNP*AA*SN*NW*DNW*DG-TG*NOSHR-MOSCKT)//
// npn18a25ll            1.8V NPN_5.55*5.55    (DMPNP*AA*SN*NW*DNW*DG-TG*NOSHR-MOSCKT)//
// npn18a4ll             1.8V NPN_2.22*2.22    (DMPNP*AA*SN*NW*DNW*DG-TG*NOSHR-MOSCKT)//
// npn25a100ll           2.5V NPN_11.1*11.1    (DMPNP*AA*SN*NW*DNW-DG*TG*NOSHR-MOSCKT)//
// npn25a25ll            2.5V NPN_5.55*5.55    (DMPNP*AA*SN*NW*DNW-DG*TG*NOSHR-MOSCKT)//
// npn25a4ll             2.5V NPN_2.22*2.22    (DMPNP*AA*SN*NW*DNW-DG*TG*NOSHR-MOSCKT)//
//                                                                               //
// pnp12a100ll_sh        1.2V PNP_11.1*11.1    (DMPNP*AA*SP*NW-NOSHR-DG-TG-MOSCKT)//
// pnp12a25ll_sh         1.2V PNP_5.55*5.55    (DMPNP*AA*SP*NW-NOSHR-DG-TG-MOSCKT)//
// pnp12a4ll_sh          1.2V PNP_2.22*2.22    (DMPNP*AA*SP*NW-NOSHR-DG-TG-MOSCKT)//
// pnp18a100ll_sh        1.8V PNP_11.1*11.1    (DMPNP*AA*SP*NW*DG-NOSHR-TG-MOSCKT)//
// pnp18a25ll_sh         1.8V PNP_5.55*5.55    (DMPNP*AA*SP*NW*DG-NOSHR-TG-MOSCKT)//
// pnp18a4ll_sh          1.8V PNP_2.22*2.22    (DMPNP*AA*SP*NW*DG-NOSHR-TG-MOSCKT)//
// pnp25a100ll_sh        2.5V PNP_11.1*11.1    (DMPNP*AA*SP*NW-DG*TG-NOSHR-MOSCKT)//
// pnp25a25ll_sh         2.5V PNP_5.55*5.55    (DMPNP*AA*SP*NW-DG*TG-NOSHR-MOSCKT)//
// pnp25a4ll_sh          2.5V PNP_2.22*2.22    (DMPNP*AA*SP*NW-DG*TG-NOSHR-MOSCKT)//
// npn12a100ll_sh        1.2V NPN_11.1*11.1    (DMPNP*AA*SN*NW*DNW-DG-TG-NOSHR-MOSCKT)//
// npn12a25ll_sh         1.2V NPN_5.55*5.55    (DMPNP*AA*SN*NW*DNW-DG-TG-NOSHR-MOSCKT)//
// npn12a4ll_sh          1.2V NPN_2.22*2.22    (DMPNP*AA*SN*NW*DNW-DG-TG-NOSHR-MOSCKT)//
// npn18a100ll_sh        1.8V NPN_11.1*11.1    (DMPNP*AA*SN*NW*DNW*DG-TG-NOSHR-MOSCKT)//
// npn18a25ll_sh         1.8V NPN_5.55*5.55    (DMPNP*AA*SN*NW*DNW*DG-TG-NOSHR-MOSCKT)//
// npn18a4ll_sh          1.8V NPN_2.22*2.22    (DMPNP*AA*SN*NW*DNW*DG-TG-NOSHR-MOSCKT)//
// npn25a100ll_sh        2.5V NPN_11.1*11.1    (DMPNP*AA*SN*NW*DNW-DG*TG-NOSHR-MOSCKT)//
// npn25a25ll_sh         2.5V NPN_5.55*5.55    (DMPNP*AA*SN*NW*DNW-DG*TG-NOSHR-MOSCKT)//
// npn25a4ll_sh          2.5V NPN_2.22*2.22    (DMPNP*AA*SN*NW*DNW-DG*TG-NOSHR-MOSCKT)//
//                                                                               //
// MISMATCH BJT                                                                  //
//                                                                               //
// pnp12a100ll_mis_ckt  1.2V PNP_11.1*11.1    (DMPNP*AA*SP*NW*NOSHR-DG-TG*MOSCKT)//
// pnp12a25ll_mis_ckt   1.2V PNP_5.55*5.55    (DMPNP*AA*SP*NW*NOSHR-DG-TG*MOSCKT)//
// pnp12a4ll_mis_ckt    1.2V PNP_2.22*2.22    (DMPNP*AA*SP*NW*NOSHR-DG-TG*MOSCKT)//
// pnp18a100ll_mis_ckt  1.8V PNP_11.1*11.1    (DMPNP*AA*SP*NW*DG*NOSHR-TG*MOSCKT)//
// pnp18a25ll_mis_ckt   1.8V PNP_5.55*5.55    (DMPNP*AA*SP*NW*DG*NOSHR-TG*MOSCKT)//
// pnp18a4ll_mis_ckt    1.8V PNP_2.22*2.22    (DMPNP*AA*SP*NW*DG*NOSHR-TG*MOSCKT)//
// pnp25a100ll_mis_ckt  2.5V PNP_11.1*11.1    (DMPNP*AA*SP*NW-DG*TG*NOSHR*MOSCKT)//
// pnp25a25ll_mis_ckt   2.5V PNP_5.55*5.55    (DMPNP*AA*SP*NW-DG*TG*NOSHR*MOSCKT)//
// pnp25a4ll_mis_ckt    2.5V PNP_2.22*2.22    (DMPNP*AA*SP*NW-DG*TG*NOSHR*MOSCKT)//
// npn12a100ll_mis_ckt  1.2V NPN_11.1*11.1    (DMPNP*AA*SN*NW*DNW-DG-TG*NOSHR*MOSCKT)//
// npn12a25ll_mis_ckt   1.2V NPN_5.55*5.55    (DMPNP*AA*SN*NW*DNW-DG-TG*NOSHR*MOSCKT)//
// npn12a4ll_mis_ckt    1.2V NPN_2.22*2.22    (DMPNP*AA*SN*NW*DNW-DG-TG*NOSHR*MOSCKT)//
// npn18a100ll_mis_ckt  1.8V NPN_11.1*11.1    (DMPNP*AA*SN*NW*DNW*DG-TG*NOSHR*MOSCKT)//
// npn18a25ll_mis_ckt   1.8V NPN_5.55*5.55    (DMPNP*AA*SN*NW*DNW*DG-TG*NOSHR*MOSCKT)//
// npn18a4ll_mis_ckt    1.8V NPN_2.22*2.22    (DMPNP*AA*SN*NW*DNW*DG-TG*NOSHR*MOSCKT)//
// npn25a100ll_mis_ckt  2.5V NPN_11.1*11.1    (DMPNP*AA*SN*NW*DNW-DG*TG*NOSHR*MOSCKT)//
// npn25a25ll_mis_ckt   2.5V NPN_5.55*5.55    (DMPNP*AA*SN*NW*DNW-DG*TG*NOSHR*MOSCKT)//
// npn25a4ll_mis_ckt    2.5V NPN_2.22*2.22    (DMPNP*AA*SN*NW*DNW-DG*TG*NOSHR*MOSCKT)//
//                                                                               //
// pnp12a100ll_sh_mis_ckt  1.2V PNP_11.1*11.1    (DMPNP*AA*SP*NW-NOSHR-DG-TG*MOSCKT)//
// pnp12a25ll_sh_mis_ckt   1.2V PNP_5.55*5.55    (DMPNP*AA*SP*NW-NOSHR-DG-TG*MOSCKT)//
// pnp12a4ll_sh_mis_ckt    1.2V PNP_2.22*2.22    (DMPNP*AA*SP*NW-NOSHR-DG-TG*MOSCKT)//
// pnp18a100ll_sh_mis_ckt  1.8V PNP_11.1*11.1    (DMPNP*AA*SP*NW*DG-NOSHR-TG*MOSCKT)//
// pnp18a25ll_sh_mis_ckt   1.8V PNP_5.55*5.55    (DMPNP*AA*SP*NW*DG-NOSHR-TG*MOSCKT)//
// pnp18a4ll_sh_mis_ckt    1.8V PNP_2.22*2.22    (DMPNP*AA*SP*NW*DG-NOSHR-TG*MOSCKT)//
// pnp25a100ll_sh_mis_ckt  2.5V PNP_11.1*11.1    (DMPNP*AA*SP*NW-DG*TG-NOSHR*MOSCKT)//
// pnp25a25ll_sh_mis_ckt   2.5V PNP_5.55*5.55    (DMPNP*AA*SP*NW-DG*TG-NOSHR*MOSCKT)//
// pnp25a4ll_sh_mis_ckt    2.5V PNP_2.22*2.22    (DMPNP*AA*SP*NW-DG*TG-NOSHR*MOSCKT)//
// npn12a100ll_sh_mis_ckt  1.2V NPN_11.1*11.1    (DMPNP*AA*SN*NW*DNW-DG-TG-NOSHR*MOSCKT)//
// npn12a25ll_sh_mis_ckt   1.2V NPN_5.55*5.55    (DMPNP*AA*SN*NW*DNW-DG-TG-NOSHR*MOSCKT)//
// npn12a4ll_sh_mis_ckt    1.2V NPN_2.22*2.22    (DMPNP*AA*SN*NW*DNW-DG-TG-NOSHR*MOSCKT)//
// npn18a100ll_sh_mis_ckt  1.8V NPN_11.1*11.1    (DMPNP*AA*SN*NW*DNW*DG-TG-NOSHR*MOSCKT)//
// npn18a25ll_sh_mis_ckt   1.8V NPN_5.55*5.55    (DMPNP*AA*SN*NW*DNW*DG-TG-NOSHR*MOSCKT)//
// npn18a4ll_sh_mis_ckt    1.8V NPN_2.22*2.22    (DMPNP*AA*SN*NW*DNW*DG-TG-NOSHR*MOSCKT)//
// npn25a100ll_sh_mis_ckt  2.5V NPN_11.1*11.1    (DMPNP*AA*SN*NW*DNW-DG*TG-NOSHR*MOSCKT)//
// npn25a25ll_sh_mis_ckt   2.5V NPN_5.55*5.55    (DMPNP*AA*SN*NW*DNW-DG*TG-NOSHR*MOSCKT)//
// npn25a4ll_sh_mis_ckt    2.5V NPN_2.22*2.22    (DMPNP*AA*SN*NW*DNW-DG*TG-NOSHR*MOSCKT)//
//-------------------------------------------------------------------------------//
// DIODE                                                                         //
//                                                                               //
// ndio12ll              1.2V N+/PWELL                (DSTR*AA*SN-DG-TG)         //
// ndio18ll              1.8V N+/PWELL                (DSTR*AA*SN*DG-TG)         //
// ntdio12ll             1.2V Native N+/PWELL         (DSTR*AA*SN-DG-TG*PSUB)    //
// ntdio18ll             1.8V Native N+/PWELL         (DSTR*AA*SN*DG-TG*PSUB)    //
// pdio12ll              1.2V P+/NWELL                (DSTR*AA*SP-DG-TG)         //
// pdio18ll              1.8V P+/NWELL                (DSTR*AA*SP*DG-TG)         //
// ndio12llhvt           1.2V HVT N+/PWELL            (DSTR*AA*SN-DG-TG*VTNH)    //
// pdio12llhvt           1.2V HVT P+/NWELL            (DSTR*AA*SP-DG-TG*VTPH)    //  
// ndio12lllvt           1.2V LVT N+/PWELL            (DSTR*AA*SN-DG-TG*LVN)     //
// pdio12lllvt           1.2V LVT P+/NWELL            (DSTR*AA*SP-DG-TG*LVP)     //
// nwdioll               NWELL/PSUB                   (DSTR*NW)                  //
// ndio25ll              2.5V N+/PWELL                (DSTR*AA*SN-DG*TG-OVERPL)  //
// pdio25ll              2.5V P+/NWELL                (DSTR*AA*SP-DG*TG-OVERPL)  //
// ntdio25ll             2.5V Native N+/PWELL         (DSTR*AA*SN-DG*TG)         //
// dnd12ll               1.2V N+/Rwell                (DSTR*AA*SN*DNW*NW-DG-TG)  //
// rwd12ll               1.2V Rwell/DNW               (DSTR*AA*DNW*NW-DG-TG)     //
// dnwd12ll              1.2V DNW/PWELL               (DSTR*AA*DNW*NW-DG-TG)     //
// ndioull               1.2V ULL N+/PWELL            (DSTR*AA*SN-DG-TG*UHVT)    //
// pdioull               1.2V ULL P+/NWELL            (DSTR*AA*SP-DG-TG*UHVT)    //
//                                                                               //
// parasitic_nwd         parasitic NWELL/PSUB                                    //
// parasitic_rwd         parasitic Rwell/DNW                                     //
// parasitic_dnwd        parasitic DNW/PWELL                                     //
//-------------------------------------------------------------------------------//
// Resistor                                                                      //
//                                                                               //
// rnwsti                NWELL under STI              (RESNW*NW-RESCKT)          //
// rnwaa                 NWELL under AA               (RESNW*NW*AA*SAB-RESCKT)   //
// rndifsab              Non-silicide N+ Diffusion    (RESAA*SN*AA*SAB-RESCKT)   //
// rndif                 Silicide N+ Diffusion        (RESAA*SN*AA-SAB-RESCKT)   //
// rpdifsab              Non-silicide P+ Diffusion    (RESAA*SP*AA*SAB-RESCKT)   //
// rpdif                 Silicide P+ Diffusion        (RESAA*SP*AA-SAB-RESCKT)   //
// rpposab               Non-silicide P+ Poly(2T)     (RESP1*SP*GT*SAB-RESP3T-RESCKT)//
// rpposab_3t            Non-silicide P+ Poly(3T)     (RESP1*SP*GT*SAB*RESP3T-RESCKT)//
// rppo                  Silicide P+ Poly(2T)         (RESP1*SP*GT-SAB-RESP3T-RESCKT)//
// rppo_3t               Silicide P+ Poly(3T)         (RESP1*SP*GT-SAB*RESP3T-RESCKT)//
// rnposab               Non-silicide N+ Poly(2T)     (RESP1*SN*GT*SAB-RESP3T-RESCKT)//
// rnposab_3t            Non-silicide N+ Poly(3T)     (RESP1*SN*GT*SAB*RESP3T-RESCKT)//
// rnpo                  Silicide N+ Poly(2T)         (RESP1*SN*GT-SAB-RESP3T-RESCKT)//
// rnpo_3t               Silicide N+ Poly(3T)         (RESP1*SN*GT-SAB*RESP3T-RESCKT)//
// rhrpo                 High Resistance Poly(2T)     (GT*HRP*HRPDMY*SAB-RESP3T-RESCKT)//
// rhrpo_3t              High Resistance Poly(3T)     (GT*HRP*HRPDMY*SAB*RESP3T-RESCKT)//
// rm1                   Metal1 Resistor              (M1R*M1-RESCKT)                //
// rm2                   Metal2 Resistor              (M2R*M2-RESCKT)                //
// rm3                   Metal3 Resistor              (M3R*M3-RESCKT)                //
// rm4                   Metal4 Resistor              (M4R*M4-RESCKT)                //
// rm5                   Metal5 Resistor              (M5R*M5-RESCKT)                //
// rm6                   Metal6 Resistor              (M6R*M6-RESCKT)                //
// rm7                   Metal7 Resistor              (M7R*M7-RESCKT)                //
// rm8                   Metal8 Resistor              (M8R*M8-RESCKT)                //
// rtm1                  TM1 Resistor                 (TM1R*TM1-RESCKT)              //
// rtm2                  TM2 Resistor                 (TM2R*TM2-RESCKT)              //
// rtm1_d2               TM1 Resistor                 (TM1R*STM1-RESCKT)              //
// rtm2_d2               TM2 Resistor                 (TM2R*STM2-RESCKT)              //
// ralpa                 ALPA Resistor                (ALPA*ALPAR-RESCKT)            //
//                                                                               // 
// rnwsti_ckt            NWELL under STI              (RESNW*NW*RESCKT)          //
// rnwaa_ckt             NWELL under AA               (RESNW*NW*AA*SAB*RESCKT)   //
// rndifsab_ckt          Non-silicide N+ Diffusion    (RESAA*SN*AA*SAB*RESCKT)   //
// rndif_ckt             Silicide N+ Diffusion        (RESAA*SN*AA-SAB*RESCKT)   //
// rpdifsab_ckt          Non-silicide P+ Diffusion    (RESAA*SP*AA*SAB*RESCKT)   //
// rpdif_ckt             Silicide P+ Diffusion        (RESAA*SP*AA-SAB*RESCKT)   //
// rpposab_ckt           Non-silicide P+ Poly(2T)     (RESP1*SP*GT*SAB-RESP3T*RESCKT)//
// rpposab_3t_ckt        Non-silicide P+ Poly(3T)     (RESP1*SP*GT*SAB*RESP3T*RESCKT)//
// rppo_ckt              Silicide P+ Poly(2T)         (RESP1*SP*GT-SAB-RESP3T*RESCKT)//
// rppo_3t_ckt           Silicide P+ Poly(3T)         (RESP1*SP*GT-SAB*RESP3T*RESCKT)//
// rnposab_ckt           Non-silicide N+ Poly(2T)     (RESP1*SN*GT*SAB-RESP3T*RESCKT)//
// rnposab_3t_ckt        Non-silicide N+ Poly(3T)     (RESP1*SN*GT*SAB*RESP3T*RESCKT)//
// rnpo_ckt              Silicide N+ Poly(2T)         (RESP1*SN*GT-SAB-RESP3T*RESCKT)//
// rnpo_3t_ckt           Silicide N+ Poly(3T)         (RESP1*SN*GT-SAB*RESP3T*RESCKT)//
// rhrpo_ckt             High Resistance Poly(2T)     (GT*HRP*HRPDMY*SAB-RESP3T*RESCKT)//
// rhrpo_3t_ckt          High Resistance Poly(3T)     (GT*HRP*HRPDMY*SAB*RESP3T*RESCKT)//
// rm1_ckt               Metal1 Resistor              (M1R*M1*RESCKT)                //
// rm2_ckt               Metal2 Resistor              (M2R*M2*RESCKT)                //
// rm3_ckt               Metal3 Resistor              (M3R*M3*RESCKT)                //
// rm4_ckt               Metal4 Resistor              (M4R*M4*RESCKT)                //
// rm5_ckt               Metal5 Resistor              (M5R*M5*RESCKT)                //
// rm6_ckt               Metal6 Resistor              (M6R*M6*RESCKT)                //
// rm7_ckt               Metal7 Resistor              (M7R*M7*RESCKT)                //
// rm8_ckt               Metal8 Resistor              (M8R*M8*RESCKT)                //
// rtm1_ckt              TM1 Resistor                 (TM1R*TM1*RESCKT)              //
// rtm2_ckt              TM2 Resistor                 (TM2R*TM2*RESCKT)              //
// rtm1_d2_ckt           TM1 Resistor                 (TM1R*STM1*RESCKT)             //
// rtm2_d2_ckt           TM2 Resistor                 (TM2R*STM2*RESCKT)             //
// ralpa_ckt             ALPA Resistor                (ALPA*ALPAR*RESCKT)           //
//-------------------------------------------------------------------------------//
// SMIC SRAM                                                                     //
// 0.525 bitcell                                                                 //
// STNPGHVT         HVT N Pass Gate     (NGATE-DG-TG*OPC*INST*STSRAM*VTNH)       //
// STNPGSVT         LVT N PASS Gate     (NGATE-DG-TG*OPC*INST*STSRAM-VTNH)       // 
// STNPDHVT         HVT N Pull Down     (NGATE-DG-TG*OPC*INST*STSRAM*VTNH)       //
// STNPDSVT         LVT N Pull Down     (NGATE-DG-TG*OPC*INST*STSRAM-VTNH)       //
// STPLHVT          HVT P Load          (PGATE-DG-TG*OPC*INST*STSRAM*VTPH)       //
// STPLSVT          LVT P Load          (PGATE-DG-TG*OPC*INST*STSRAM-VTPH)       //
//                                                                               //
// STNPGHVT_ckt     HVT N Pass Gate     (NGATE-DG-TG*OPC*INST*STSRAM*VTNH)       //
// NPGSVT_ckt       LVT N PASS Gate     (NGATE-DG-TG*OPC*INST*STSRAM-VTNH)       //
// STNPDHVT_ckt     HVT N Pull Down     (NGATE-DG-TG*OPC*INST*STSRAM*VTNH)       //
// NPDSVT_ckt       LVT N Pull Down     (NGATE-DG-TG*OPC*INST*STSRAM-VTNH)       //
// STPLHVT_ckt      HVT P Load          (PGATE-DG-TG*OPC*INST*STSRAM*VTPH)       //
// PLSVT_ckt        LVT P Load          (PGATE-DG-TG*OPC*INST*STSRAM-VTPH)       //
//                                                                               //
// 0.974 bitcell                                                                 //
// DPNPGAHVT        HVT N Pass Gate(DP) (NGATE-DG-TG*OPC*INST*DPSRAM*VTNH-UHVT)  // 
// DPNPGASVT        LVT N Pass Gate(DP) (NGATE-DG-TG*OPC*INST*DPSRAM-VTNH-UHVT)  //
// DPNPGBHVT        HVT N Pass Gate(DP) (NGATE-DG-TG*OPC*INST*DPSRAM*VTNH-UHVT)  // 
// DPNPGBSVT        LVT N Pass Gate(DP) (NGATE-DG-TG*OPC*INST*DPSRAM-VTNH-UHVT)  //
// DPNPDHVT         HVT N Pull Down(DP) (NGATE-DG-TG*OPC*INST*DPSRAM*VTNH-UHVT)  // 
// DPNPDSVT         LVT N Pull Down(DP) (NGATE-DG-TG*OPC*INST*DPSRAM-VTNH-UHVT)  //
// DPPLHVT          HVT P Load          (PGATE-DG-TG*OPC*INST*DPSRAM*VTPH-UHVT)  //
// DPPLSVT          LVT P Load          (PGATE-DG-TG*OPC*INST*DPSRAM-VTPH-UHVT)  //
//                                                                               //
// DPNPGAHVT_ckt    HVT N Pass Gate(DP) (NGATE-DG-TG*OPC*INST*DPSRAM*VTNH-UHVT)  //
// NPGADPSVT_ckt    LVT N Pass Gate(DP) (NGATE-DG-TG*OPC*INST*DPSRAM-VTNH-UHVT)  //
// DPNPGBHVT_ckt    HVT N Pass Gate(DP) (NGATE-DG-TG*OPC*INST*DPSRAM*VTNH-UHVT)  //
// NPGBDPSVT_ckt    LVT N Pass Gate(DP) (NGATE-DG-TG*OPC*INST*DPSRAM-VTNH-UHVT)  //
// DPNPDHVT_ckt     HVT N Pull Down(DP) (NGATE-DG-TG*OPC*INST*DPSRAM*VTNH-UHVT)  //
// NPDDPSVT_ckt     LVT N Pull Down(DP) (NGATE-DG-TG*OPC*INST*DPSRAM-VTNH-UHVT)  //
// DPPLHVT_ckt      HVT P Load          (PGATE-DG-TG*OPC*INST*DPSRAM*VTPH-UHVT)  //
// PLDPSVT_ckt      LVT P Load          (PGATE-DG-TG*OPC*INST*DPSRAM-VTPH-UHVT)  //
//                                                                               //
// DPNPDULL_CKT     ULP N Pull Down     (NGATE-DG-TG*OPC*INST*DPSRAM*VTNH*UHVT)  //
// DPNPGAULL_CKT    ULP N Pass Gate     (NGATE-DG-TG*OPC*INST*DPSRAM*VTNH*UHVT)  //
// DPNPGBULL_CKT    ULP N Pass Gate     (NGATE-DG-TG*OPC*INST*DPSRAM*VTNH*UHVT)  //
// DPPLULL_CKT      ULP P Load          (PGATE-DG-TG*OPC*INST*DPSRAM*VTPH*UHVT)  //
//                                                                               //
// 0.62 bitcell                                                                  //
// DNNPGHVT         HVT N Pass Gate     (NGATE-DG-TG*OPC*INST*DNSRAM*VTNH-UHVT)  // 
// DNNPGSVT         LVT N Pass Gate     (NGATE-DG-TG*OPC*INST*DNSRAM-VTNH-UHVT)  //
// DNNPDHVT         HVT N Pull Down     (NGATE-DG-TG*OPC*INST*DNSRAM*VTNH-UHVT)  //
// DNNPDSVT         LVT N Pull Down     (NGATE-DG-TG*OPC*INST*DNSRAM-VTNH-UHVT)  //
// DNPLHVT          HVT P Load          (PGATE-DG-TG*OPC*INST*DNSRAM*VTPH-UHVT)  //
// DNPLSVT          LVT P Load          (PGATE-DG-TG*OPC*INST*DNSRAM-VTPH-UHVT)  //
//                                                                               //
// DNNPGHVT_ckt     HVT N Pass Gate     (NGATE-DG-TG*OPC*INST*DNSRAM*VTNH)       //
// DNNPGSVT_ckt     LVT N PASS Gate     (NGATE-DG-TG*OPC*INST*DNSRAM-VTNH)       //
// DNNPDHVT_ckt     HVT N Pull Down     (NGATE-DG-TG*OPC*INST*DNSRAM*VTNH)       //
// DNNPDSVT_ckt     LVT N Pull Down     (NGATE-DG-TG*OPC*INST*DNSRAM-VTNH)       //
// DNPLHVT_ckt      HVT P Load          (PGATE-DG-TG*OPC*INST*DNSRAM*VTPH)       //
// DNPLSVT_ckt      LVT P Load          (PGATE-DG-TG*OPC*INST*DNSRAM-VTPH)       //
//                                                                               //
// DNNPDULL_CKT     ULP N Pull Down     (NGATE-DG-TG*OPC*INST*DNSRAM*VTNH*UHVT)  //
// DNNPGULL_CKT     ULP N Pass Gate     (NGATE-DG-TG*OPC*INST*DNSRAM*VTNH*UHVT)  //
// DNPLULL_CKT      ULP P Load          (PGATE-DG-TG*OPC*INST*DNSRAM*VTPH*UHVT)  //
//                                                                               //
// 1.158 bitcell                                                                 //
// RFNPGAHVT        HVT N Pass Gate(DP) (NGATE-DG-TG*OPC*INST*RFSRAM*VTNH)       // 
// RFNPGBPHVT       HVT N Pass Gate(DP) (NGATE-DG-TG*OPC*INST*RFSRAM*VTNH)       // 
// RFNPDHVT         HVT N Pull Down(DP) (NGATE-DG-TG*OPC*INST*RFSRAM*VTNH)       // 
// RFPLHVT          HVT P Load          (PGATE-DG-TG*OPC*INST*RFSRAM*VTPH)       //
//                                                                               //
// RFNPGAHVT_ckt    HVT N Pass Gate(DP) (NGATE-DG-TG*OPC*INST*RFSRAM*VTNH)       //
// RFNPGBPHVT_ckt   HVT N Pass Gate(DP) (NGATE-DG-TG*OPC*INST*RFSRAM*VTNH)       //
// RFNPDHVT_ckt     HVT N Pull Down(DP) (NGATE-DG-TG*OPC*INST*RFSRAM*VTNH)       //
// RFPLHVT_ckt      HVT P Load          (PGATE-DG-TG*OPC*INST*RFSRAM*VTPH)       //
//                                                                               //
//-------------------------------------------------------------------------------//
// Special devices in SMIC IO:                                                   //
// C1                    1.2V NMOS in NWELL           (CNGATE-DG-TG-VARMOS)      //
// C2                    1.8V NMOS in NWELL           (CNGATE*DG-TG-VARMOS)      //
// C3                    2.5V NMOS in NWELL           (CNGATE-DG*TG-VARMOS)      //
//                                                                               //
// Mos Varactor:                                                                 //
// pvar12ll_ckt          1.2V mos varactor            (CNGATE-DG-TG*VARMOS)      //
// pvar18ll_ckt          1.8V mos varactor            (CNGATE*DG-TG*VARMOS)      //
// pvar25ll_ckt          2.5V mos varactor            (CNGATE-DG*TG*VARMOS)      //
//                                                                               //
// MOM Capacitor                                                                 //
//                                                                               //
// mom_2t_ckt            Mtm~Mbm MOM          (MOMDMY*Mtm~Mbm*Vtm~Vbm-1-RF3T-MOMMES)//
// mom_3t_ckt         3T Mtm~Mbm MOM          (MOMDMY*Mtm~Mbm*Vtm~Vbm-1*RF3T-MOMMES)//
// mom_4t_ckt         4T Mtm~Mbm MOM          (MOMDMY*Mtm~Mbm*Vtm~Vbm-1-RF3T*MOMMES)//
// mom_5t_ckt         5T Mtm~Mbm MOM          (MOMDMY*Mtm~Mbm*Vtm~Vbm-1*RF3T*MOMMES)//
//--------------------------------------------------------------------------------//
//RF Devices:                                                                     //
//RFMOS                                                                           //
// n12ll_ckt_rf                   1.2V RF NMOS subckt                 (NGATE-DG-TG*RFDEV*RFMOSD-DNW-RFSD-MOSCKT)//
// n12ll_ckt_rf_mis               1.2V RF NMOS subckt                 (NGATE-DG-TG*RFDEV*RFMOSD-DNW-RFSD*MOSCKT)//
// n12ll_ckt_rf_sdc               1.2V SD Switch RF NMOS subckt       (NGATE-DG-TG*RFDEV*RFMOSD-DNW*RFSD-MOSCKT)//
// n12ll_ckt_rf_sdc_mis           1.2V SD Switch RF NMOS subckt       (NGATE-DG-TG*RFDEV*RFMOSD-DNW*RFSD*MOSCKT)//
// nlvt12ll_ckt_rf                1.2V LVT RF NMOS subckt             (NGATE-DG-TG*LVN*RFDEV*RFMOSD-DNW-RFSD-MOSCKT)//
// nlvt12ll_ckt_rf_mis            1.2V LVT RF NMOS subckt             (NGATE-DG-TG*LVN*RFDEV*RFMOSD-DNW-RFSD*MOSCKT)//
// nlvt12ll_ckt_rf_sdc            1.2V SD Switch LVT RF NMOS subckt   (NGATE-DG-TG*LVN*RFDEV*RFMOSD-DNW*RFSD-MOSCKT)//
// nlvt12ll_ckt_rf_sdc_mis        1.2V SD Switch LVT RF NMOS subckt   (NGATE-DG-TG*LVN*RFDEV*RFMOSD-DNW*RFSD*MOSCKT)//
// n18ll_ckt_rf                   1.8V RF NMOS subckt                 (NGATE*DG-TG*RFDEV*RFMOSD-DNW)//
// n25(33)ll_ckt_rf               2.5/3.3V RF NMOS subckt             (NGATE-DG*TG*RFDEV*RFMOSD-DNW-RFSD-MOSCKT)//
// n25(33)ll_ckt_rf_mis           2.5/3.3V RF NMOS subckt             (NGATE-DG*TG*RFDEV*RFMOSD-DNW-RFSD*MOSCKT)//
// n25(33)ll_ckt_rf_sdc           2.5/3.3V SD Switch RF NMOS subckt   (NGATE-DG*TG*RFDEV*RFMOSD-DNW*RFSD-MOSCKT)//
// n25(33)ll_ckt_rf_sdc_mis       2.5/3.3V SD Switch RF NMOS subckt   (NGATE-DG*TG*RFDEV*RFMOSD-DNW*RFSD*MOSCKT)//
// dnw12ll_ckt_rf                 1.2V RF DNWMOS subckt               (NGATE-DG-TG*RFDEV*RFMOSD*DNW-RFSD-RFDN6T-MOSCKT)//
// dnw12ll_ckt_rf_6t              1.2V 6T RF DNWMOS subckt            (NGATE-DG-TG*RFDEV*RFMOSD*DNW-RFSD*RFDN6T-MOSCKT)//
// dnw12ll_ckt_rf_mis             1.2V RF DNWMOS subckt               (NGATE-DG-TG*RFDEV*RFMOSD*DNW-RFSD-RFDN6T*MOSCKT)//
// dnw12ll_ckt_rf_6t_mis          1.2V 6T RF DNWMOS subckt            (NGATE-DG-TG*RFDEV*RFMOSD*DNW-RFSD*RFDN6T*MOSCKT)//
// dnw12ll_ckt_rf_sdc             1.2V RF DNWMOS subckt               (NGATE-DG-TG*RFDEV*RFMOSD*DNW*RFSD-RFDN6T-MOSCKT)//
// dnw12ll_ckt_rf_6t_sdc          1.2V 6T RF DNWMOS subckt            (NGATE-DG-TG*RFDEV*RFMOSD*DNW*RFSD*RFDN6T-MOSCKT)//
// dnw12ll_ckt_rf_sdc_mis         1.2V RF DNWMOS subckt               (NGATE-DG-TG*RFDEV*RFMOSD*DNW*RFSD-RFDN6T*MOSCKT)//
// dnw12ll_ckt_rf_6t_sdc_mis      1.2V 6T RF DNWMOS subckt            (NGATE-DG-TG*RFDEV*RFMOSD*DNW*RFSD*RFDN6T*MOSCKT)//
// dnwlvt12ll_ckt_rf              1.2V LVT RF DNWMOS subckt           (NGATE-DG-TG*LVN*RFDEV*RFMOSD*DNW-RFSD-RFDN6T-MOSCKT)//
// dnwlvt12ll_ckt_rf_6t           1.2V 6T LVT RF DNWMOS subckt        (NGATE-DG-TG*LVN*RFDEV*RFMOSD*DNW-RFSD*RFDN6T-MOSCKT)//
// dnwlvt12ll_ckt_rf_mis          1.2V LVT RF DNWMOS subckt           (NGATE-DG-TG*LVN*RFDEV*RFMOSD*DNW-RFSD-RFDN6T*MOSCKT)//
// dnwlvt12ll_ckt_rf_6t_mis       1.2V 6T LVT RF DNWMOS subckt        (NGATE-DG-TG*LVN*RFDEV*RFMOSD*DNW-RFSD*RFDN6T*MOSCKT)//
// dnwlvt12ll_ckt_rf_sdc          1.2V LVT RF DNWMOS subckt           (NGATE-DG-TG*LVN*RFDEV*RFMOSD*DNW*RFSD-RFDN6T-MOSCKT)//
// dnwlvt12ll_ckt_rf_6t_sdc       1.2V 6T LVT RF DNWMOS subckt        (NGATE-DG-TG*LVN*RFDEV*RFMOSD*DNW*RFSD*RFDN6T-MOSCKT)//
// dnwlvt12ll_ckt_rf_sdc_mis      1.2V LVT RF DNWMOS subckt           (NGATE-DG-TG*LVN*RFDEV*RFMOSD*DNW*RFSD-RFDN6T*MOSCKT)//
// dnwlvt12ll_ckt_rf_6t_sdc_mis   1.2V 6T LVT RF DNWMOS subckt        (NGATE-DG-TG*LVN*RFDEV*RFMOSD*DNW*RFSD*RFDN6T*MOSCKT)//
// dnw18ll_ckt_rf                 1.8V RF DNWMOS subckt               (NGATE*DG-TG*RFDEV*RFMOSD*DNW-RFDN6T)//
// dnw18ll_ckt_rf_6t              1.8V 6T RF DNWMOS subckt            (NGATE*DG-TG*RFDEV*RFMOSD*DNW*RFDN6T)//
// dnw25(33)ll_ckt_rf             2.5/3.3V RF DNWMOS subckt           (NGATE-DG*TG*RFDEV*RFMOSD*DNW-RFSD-RFDN6T-MOSCKT)//
// dnw25ll_ckt_rf_6t              2.5V 6T RF DNWMOS subckt            (NGATE-DG*TG*RFDEV*RFMOSD*DNW-RFSD*RFDN6T-MOSCKT)//
// dnw25(33)ll_ckt_rf_mis         2.5/3.3V RF DNWMOS subckt           (NGATE-DG*TG*RFDEV*RFMOSD*DNW-RFSD-RFDN6T*MOSCKT)//
// dnw25ll_ckt_rf_6t_mis          2.5V 6T RF DNWMOS subckt            (NGATE-DG*TG*RFDEV*RFMOSD*DNW-RFSD*RFDN6T*MOSCKT)//
// dnw25(33)ll_ckt_rf_sdc         2.5/3.3V RF DNWMOS subckt           (NGATE-DG*TG*RFDEV*RFMOSD*DNW*RFSD-RFDN6T-MOSCKT)//
// dnw25ll_ckt_rf_6t_sdc          2.5V 6T RF DNWMOS subckt            (NGATE-DG*TG*RFDEV*RFMOSD*DNW*RFSD*RFDN6T-MOSCKT)//
// dnw25(33)ll_ckt_rf_sdc_mis     2.5/3.3V RF DNWMOS subckt           (NGATE-DG*TG*RFDEV*RFMOSD*DNW*RFSD-RFDN6T*MOSCKT)//
// dnw25ll_ckt_rf_6t_sdc_mis      2.5V 6T RF DNWMOS subckt            (NGATE-DG*TG*RFDEV*RFMOSD*DNW*RFSD*RFDN6T*MOSCKT)//
// p12ll_ckt_rf                   1.2V RF PMOS subckt                 (PGATE-DG-TG*RFDEV*RFMOSD-RFSD-MOSCKT)//
// p12ll_ckt_rf_5t                1.2V 5T RF PMOS subckt              (PGATE-DG-TG*RFDEV*RFMOSD-RFSD*RFDN5T-MOSCKT)//
// p12ll_ckt_rf_mis               1.2V RF PMOS subckt                 (PGATE-DG-TG*RFDEV*RFMOSD-RFSD*MOSCKT)//
// p12ll_ckt_rf_5t_mis            1.2V 5T RF PMOS subckt              (PGATE-DG-TG*RFDEV*RFMOSD-RFSD*RFDN5T*MOSCKT)//
// p12ll_ckt_rf_sdc               1.2V RF PMOS subckt                 (PGATE-DG-TG*RFDEV*RFMOSD*RFSD-MOSCKT)//
// p12ll_ckt_rf_5t_sdc            1.2V 5T RF PMOS subckt              (PGATE-DG-TG*RFDEV*RFMOSD*RFSD*RFDN5T-MOSCKT)//
// p12ll_ckt_rf_sdc_mis           1.2V RF PMOS subckt                 (PGATE-DG-TG*RFDEV*RFMOSD*RFSD*MOSCKT)//
// p12ll_ckt_rf_5t_sdc_mis        1.2V 5T RF PMOS subckt              (PGATE-DG-TG*RFDEV*RFMOSD*RFSD*RFDN5T*MOSCKT)//
// plvt12ll_ckt_rf                1.2V LVT RF PMOS subckt             (PGATE-DG-TG*LVP*RFDEV*RFMOSD-RFSD-MOSCKT)//
// plvt12ll_ckt_rf_5t             1.2V 5T LVT RF PMOS subckt          (PGATE-DG-TG*LVP*RFDEV*RFMOSD-RFSD*RFDN5T-MOSCKT)//
// plvt12ll_ckt_rf_mis            1.2V LVT RF PMOS subckt             (PGATE-DG-TG*LVP*RFDEV*RFMOSD-RFSD*MOSCKT)//
// plvt12ll_ckt_rf_5t_mis         1.2V 5T LVT RF PMOS subckt          (PGATE-DG-TG*LVP*RFDEV*RFMOSD-RFSD*RFDN5T*MOSCKT)//
// plvt12ll_ckt_rf_sdc            1.2V LVT RF PMOS subckt             (PGATE-DG-TG*LVP*RFDEV*RFMOSD*RFSD-MOSCKT)//
// plvt12ll_ckt_rf_5t_sdc         1.2V 5T LVT RF PMOS subckt          (PGATE-DG-TG*LVP*RFDEV*RFMOSD*RFSD*RFDN5T-MOSCKT)//
// plvt12ll_ckt_rf_sdc_mis        1.2V LVT RF PMOS subckt             (PGATE-DG-TG*LVP*RFDEV*RFMOSD*RFSD*MOSCKT)//
// plvt12ll_ckt_rf_5t_sdc_mis     1.2V 5T LVT RF PMOS subckt          (PGATE-DG-TG*LVP*RFDEV*RFMOSD*RFSD*RFDN5T*MOSCKT)//
// p18ll_ckt_rf                   1.8V RF PMOS subckt                 (PGATE*DG-TG*RFDEV*RFMOSD)     //
// p18ll_ckt_rf_5t                1.8V 5T RF PMOS subckt              (PGATE*DG-TG*RFDEV*RFMOSD*RFDN5T//
// p25(33)ll_ckt_rf               2.5/3.3V RF PMOS subckt             (PGATE-DG*TG*RFDEV*RFMOSD-RFSD-MOSCKT)//
// p25ll_ckt_rf_5t                2.5V 5T RF PMOS subckt              (PGATE-DG*TG*RFDEV*RFMOSD-RFSD*RFDN5T-MOSCKT)//
// p25(33)ll_ckt_rf_mis           2.5/3.3V RF PMOS subckt             (PGATE-DG*TG*RFDEV*RFMOSD-RFSD*MOSCKT)//
// p25ll_ckt_rf_5t_mis            2.5V 5T RF PMOS subckt              (PGATE-DG*TG*RFDEV*RFMOSD-RFSD*RFDN5T*MOSCKT)//
// p25(33)ll_ckt_rf_sdc           2.5/3.3V RF PMOS subckt             (PGATE-DG*TG*RFDEV*RFMOSD*RFSD-MOSCKT)//
// p25ll_ckt_rf_5t_sdc            2.5V 5T RF PMOS subckt              (PGATE-DG*TG*RFDEV*RFMOSD*RFSD*RFDN5T-MOSCKT)//
// p25(33)ll_ckt_rf_sdc_mis       2.5/3.3V RF PMOS subckt             (PGATE-DG*TG*RFDEV*RFMOSD*RFSD*MOSCKT)//
// p25ll_ckt_rf_5t_sdc_mis        2.5V 5T RF PMOS subckt              (PGATE-DG*TG*RFDEV*RFMOSD*RFSD*RFDN5T*MOSCKT)//
// n25llod33_ckt_rf               2.5V OV 3.3V RF NMOS subckt         (NGATE-DG*TG*RFDEV*RFMOSD-DNW-RFSD*OVERPL-MOSCKT)//      
// n25llod33_ckt_rf_mis           2.5V OV 3.3V RF NMOS subckt         (NGATE-DG*TG*RFDEV*RFMOSD-DNW-RFSD*OVERPL*MOSCKT)//      
// dnw25llod33_ckt_rf             2.5V OV 3.3V RF DNW MOS subckt      (NGATE-DG*TG*RFDEV*RFMOSD*DNW-RFSD-RFDN6T*OVERPL-MOSCKT)//
// dnw25llod33_ckt_rf_6t          2.5V OV 6T RF DNW MOS subckt        (NGATE-DG*TG*RFDEV*RFMOSD*DNW-RFSD*RFDN6T*OVERPL-MOSCKT)//
// dnw25llod33_ckt_rf_mis         2.5V OV 3.3V RF DNW MOS subckt      (NGATE-DG*TG*RFDEV*RFMOSD*DNW-RFSD-RFDN6T*OVERPL*MOSCKT)//
// dnw25llod33_ckt_rf_6t_mis      2.5V OV 6T RF DNW MOS subckt        (NGATE-DG*TG*RFDEV*RFMOSD*DNW-RFSD*RFDN6T*OVERPL*MOSCKT)//
// p25llod33_ckt_rf               2.5V OV 3.3V RF PMOS subckt         (PGATE-DG*TG*RFDEV*RFMOSD-RFSD*OVERPL-MOSCKT)//
// p25llod33_ckt_rf_5t            2.5V OV 5T RF PMOS subckt           (PGATE-DG*TG*RFDEV*RFMOSD-RFSD*RFDN5T*OVERPL-MOSCKT)//
// p25llod33_ckt_rf_mis           2.5V OV 3.3V RF PMOS subckt         (PGATE-DG*TG*RFDEV*RFMOSD-RFSD*OVERPL*MOSCKT)//
// p25llod33_ckt_rf_5t_mis        2.5V OV 5T RF PMOS subckt           (PGATE-DG*TG*RFDEV*RFMOSD-RFSD*RFDN5T*OVERPL*MOSCKT)//
// dnw25llud18_ckt_rf             2.5V UD 1.8V RF DNW MOS subckt      (NGATE-DG*TG*RFDEV*RFMOSD*DNW-RFSD-RFDN6T*UNDEPL-MOSCKT)//
// dnw25llud18_ckt_rf_6t          2.5V UD 6T RF DNW MOS subckt        (NGATE-DG*TG*RFDEV*RFMOSD*DNW-RFSD*RFDN6T*UNDEPL-MOSCKT)//
// dnw25llud18_ckt_rf_6t_mis      2.5V UD 6T RF DNW MOS subckt        (NGATE-DG*TG*RFDEV*RFMOSD*DNW-RFSD*RFDN6T*UNDEPL*MOSCKT)//
// dnw25llud18_ckt_rf_mis         2.5V UD 1.8V RF DNW MOS subckt      (NGATE-DG*TG*RFDEV*RFMOSD*DNW-RFSD-RFDN6T*UNDEPL*MOSCKT)//
// n25llud18_ckt_rf               2.5V UD 1.8V RF NMOS subckt         (NGATE-DG*TG*RFDEV*RFMOSD-DNW-RFSD*UNDEPL-MOSCKT)//
// n25llud18_ckt_rf_mis           2.5V UD 1.8V RF NMOS subckt         (NGATE-DG*TG*RFDEV*RFMOSD-DNW-RFSD*UNDEPL*MOSCKT)//
// p25llud18_ckt_rf               2.5V UD 1.8V RF PMOS subckt         (PGATE-DG*TG*RFDEV*RFMOSD-RFSD*UNDEPL-MOSCKT)//
// p25llud18_ckt_rf_5t            2.5V UD 1.8V 5T RF PMOS subckt      (PGATE-DG*TG*RFDEV*RFMOSD-RFSD*RFDN5T*UNDEPL-MOSCKT)//
// p25llud18_ckt_rf_5t_mis        2.5V UD 1.8V 5T RF PMOS subckt      (PGATE-DG*TG*RFDEV*RFMOSD-RFSD*RFDN5T*UNDEPL*MOSCKT)//
// p25llud18_ckt_rf_mis           2.5V UD 1.8V RF PMOS subckt         (PGATE-DG*TG*RFDEV*RFMOSD-RFSD*UNDEPL*MOSCKT)//
//-------------------------------------------------------------------------------//
//RF Resistor                                                                        //
// rndifsab_ckt_rf    SAB N+ Diff Resistor subckt        (RESAA*SN*AA*SAB*RFDEV)     //
// rpdifsab_ckt_rf    SAB P+ Diff Resistor subckt        (RESAA*SP*AA*SAB*RFDEV)     //
// rnposab_ckt_rf     SAB N+ Poly Resistor subckt(2T)    (RESP1*SN*GT*SAB*RFDEV-RF3T)//
// rnposab_ckt_rf_3t  SAB N+ Poly Resistor subckt(3T)    (RESP1*SN*GT*SAB*RFDEV*RF3T)//
// rpposab_ckt_rf     SAB P+ Poly Resistor subckt(2T)    (RESP1*SP*GT*SAB*RFDEV-RF3T)//
// rpposab_ckt_rf_3t  SAB P+ Poly Resistor subckt(3T)    (RESP1*SP*GT*SAB*RFDEV*RF3T)//
// rhrpo_ckt_rf       RF HRP Resistor subckt(2T)         (GT*HRP*HRPDMY*SAB*RFDEV-RF3T)//
// rhrpo_ckt_rf_3t    RF HRP Resistor subckt(3T)         (GT*HRP*HRPDMY*SAB*RFDEV*RF3T)//
// rtm2_ckt_rf        rtm2 RF Resistor subckt        (TM2*TM2R*RFDEV)            //
//-------------------------------------------------------------------------------//
//RF Varactor                                                                    //
//                                                                               //
// pvar12ll_ckt_rf    1.2V MOSFET Varactor subckt (CNGATE-DG-TG*VARMOS*RFDEV-DNW-RF3T)//
// pvar12ll_ckt_rf_3t 1.2V MOSFET Varactor subckt (CNGATE-DG-TG*VARMOS*RFDEV-DNW*RF3T)//
// pvar12lldnw_ckt_rf 1.2V MOSFET Varactor subckt (CNGATE-DG-TG*VARMOS*RFDEV*DNW-RF3T)//
// pvar12lldnw_ckt_rf_3t 1.2V MOSFET Varactor subckt (CNGATE-DG-TG*VARMOS*RFDEV*DNW*RF3T)//
// pvar18ll_ckt_rf    1.8V MOSFET Varactor subckt (CNGATE*DG-TG*VARMOS*RFDEV-DNW-RF3T)//
// pvar18ll_ckt_rf_3t 1.8V MOSFET Varactor subckt (CNGATE*DG-TG*VARMOS*RFDEV-DNW*RF3T)//
// pvar18lldnw_ckt_rf 1.8V MOSFET Varactor subckt (CNGATE*DG-TG*VARMOS*RFDEV*DNW-RF3T)//
// pvar18lldnw_ckt_rf_3t 1.8V MOSFET Varactor subckt (CNGATE*DG-TG*VARMOS*RFDEV*DNW*RF3T)//
// pvar25(33)ll_ckt_rf 2.5/3.3V MOSFET Varactor subckt (CNGATE*DG-TG*VARMOS*RFDEV-DNW-RF3T)//
// pvar25(33)ll_ckt_rf_3t 2.5/3.3V MOSFET Varactor subckt (CNGATE*DG-TG*VARMOS*RFDEV-DNW*RF3T)//
// pvar25(33)lldnw_ckt_rf 2.5/3.3V MOSFET Varactor subckt (CNGATE*DG-TG*VARMOS*RFDEV*DNW-RF3T)//
// pvar25(33)lldnw_ckt_rf_3t 2.5/3.3V MOSFET Varactor subckt (CNGATE*DG-TG*VARMOS*RFDEV*DNW*RF3T)//
//-------------------------------------------------------------------------------//
//RF MOM Capacitor                                                               //
// mom_rf             M1~M3 mom capacitor            (MOMDMY*M1~3*V1~2*RFDEV)    //
//                    M2~M4 mom capacitor            (MOMDMY*M2~4*V2~3*RFDEV)    //
//                    M3~M5 mom capacitor            (MOMDMY*M3~5*V3~4*RFDEV)    //
//                    M4~M6 mom capacitor            (MOMDMY*M4~6*V4~5*RFDEV)    //
//                    M2~M5 mom capacitor            (MOMDMY*M2~5*V2~4*RFDEV)    //
//                    M3~M6 mom capacitor            (MOMDMY*M3~6*V3~5*RFDEV)    //
//                    M2~M6 mom capacitor            (MOMDMY*M2~6*V2~5*RFDEV)    //
//                    M1~M6 mom capacitor            (MOMDMY*M1~6*V1~5*RFDEV)    //
//                    M1~M2 mom capacitor            (MOMDMY*M1~2*V1*RFDEV)      //
//                    M2~M3 mom capacitor            (MOMDMY*M2~3*V1*RFDEV)      //
//                    M3~M4 mom capacitor            (MOMDMY*M3~4*V1*RFDEV)      //
//                    M4~M5 mom capacitor            (MOMDMY*M4~5*V1*RFDEV)      //
//                    M5~M6 mom capacitor            (MOMDMY*M5~6*V1*RFDEV)      //
//              NOTE: shielding = 0   no shielding                               //
//                    shielding = 1   poly shielding                             //					
//                    shielding = 2   metal shielding                            //
//------------------------------------------------------------------------------------------ //
//RF Inductor                                                                    //
// ind_rf_t2     spiral inductor       (TM1*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*TM1TXT*M1TXT~M8TXT*DUMBM*NOSHR)//
// ind_rf_t3     spiral inductor       (TM1*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*TM1TXT*M1TXT~M8TXT*DUMBM*NOSHR)//
// ind_rf_t4     spiral inductor       (TM1*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*TM1TXT*M1TXT~M8TXT*DUMBM*NOSHR)//
// ind_rf_t5     spiral inductor       (TM1*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*TM1TXT*M1TXT~M8TXT*DUMBM*NOSHR)//
// ind_rf_t6     spiral inductor       (TM1*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*TM1TXT*M1TXT~M8TXT*DUMBM*NOSHR)//
// ind_diff_t2   differential inductor (TM1*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*TM1TXT*M1TXT~M3TXT*DUMBM*NOSHR)//
// ind_diff_t3   differential inductor (TM1*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*TM1TXT*M1TXT~M3TXT*DUMBM*NOSHR)//
// ind_diff_t4   differential inductor (TM1*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*TM1TXT*M1TXT~M3TXT*DUMBM*NOSHR)//
// ind_diff_t5   differential inductor (TM1*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*TM1TXT*M1TXT~M3TXT*DUMBM*NOSHR)//
// ind_diff_t6   differential inductor (TM1*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*TM1TXT*M1TXT~M3TXT*DUMBM*NOSHR)//
//                                                                              //
// ind_rf_t2_psub     3t spiral inductor      (TM1*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*TM1TXT*M1TXT~M8TXT*DUMBM*RF3T*NOSHR)//
// ind_rf_t3_psub     3t spiral inductor      (TM1*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*TM1TXT*M1TXT~M8TXT*DUMBM*RF3T*NOSHR)//
// ind_rf_t4_psub     3t spiral inductor      (TM1*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*TM1TXT*M1TXT~M8TXT*DUMBM*RF3T*NOSHR)//
// ind_rf_t5_psub     3t spiral inductor      (TM1*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*TM1TXT*M1TXT~M8TXT*DUMBM*RF3T*NOSHR)//
// ind_rf_t6_psub     3t spiral inductor      (TM1*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*TM1TXT*M1TXT~M8TXT*DUMBM*RF3T*NOSHR)//
// ind_diff_t2_psub  4t differential inductor (TM1*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*TM1TXT*M1TXT~M3TXT*DUMBM*RF3T*NOSHR)//
// ind_diff_t3_psub  4t differential inductor (TM1*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*TM1TXT*M1TXT~M3TXT*DUMBM*RF3T*NOSHR)//
// ind_diff_t4_psub  4t differential inductor (TM1*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*TM1TXT*M1TXT~M3TXT*DUMBM*RF3T*NOSHR)//
// ind_diff_t5_psub  4t differential inductor (TM1*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*TM1TXT*M1TXT~M3TXT*DUMBM*RF3T*NOSHR)//
// ind_diff_t6_psub  4t differential inductor (TM1*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*TM1TXT*M1TXT~M3TXT*DUMBM)*RF3T*NOSHR//
// Above are for 1P10M_2TM.If other metal option,pls skip corresponding metal   // 
//                                                                              //
// ind_rf_1tm_t2      spiral inductor       (TM2*M1~M8*RFDEV*INDUMY*PSUB*TM2TXT*M8TXT~M1TXT*DUMBM*GT*AA*NOSHR)//
// ind_rf_1tm_t3      spiral inductor       (TM2*M1~M8*RFDEV*INDUMY*PSUB*TM2TXT*M8TXT~M1TXT*DUMBM*GT*AA*NOSHR)//
// ind_rf_1tm_t4      spiral inductor       (TM2*M1~M8*RFDEV*INDUMY*PSUB*TM2TXT*M8TXT~M1TXT*DUMBM*GT*AA*NOSHR)//
// ind_rf_1tm_t5      spiral inductor       (TM2*M1~M8*RFDEV*INDUMY*PSUB*TM2TXT*M8TXT~M1TXT*DUMBM*GT*AA*NOSHR)//
// ind_diff_1tm_t2    differential inductor (TM2*M1~M8*RFDEV*INDUMY*PSUB*TM2TXT*M3TXT~M1TXT*DUMBM*GT*AA*NOSHR)//
// ind_diff_1tm_t3    differential inductor (TM2*M1~M8*RFDEV*INDUMY*PSUB*TM2TXT*M3TXT~M1TXT*DUMBM*GT*AA*NOSHR)//
// ind_diff_1tm_t4    differential inductor (TM2*M1~M8*RFDEV*INDUMY*PSUB*TM2TXT*M3TXT~M1TXT*DUMBM*GT*AA*NOSHR)//
// ind_diff_1tm_t5    differential inductor (TM2*M1~M8*RFDEV*INDUMY*PSUB*TM2TXT*M3TXT~M1TXT*DUMBM*GT*AA*NOSHR)//
//                                                                             //
// ind_rf_1tm_t2_psub     3t spiral inductor       (TM2*M1~M8*RFDEV*INDUMY*PSUB*TM2TXT*M8TXT~M1TXT*DUMBM*GT*AA*RF3T*NOSHR)//
// ind_rf_1tm_t3_psub     3t spiral inductor       (TM2*M1~M8*RFDEV*INDUMY*PSUB*TM2TXT*M8TXT~M1TXT*DUMBM*GT*AA*RF3T*NOSHR)//
// ind_rf_1tm_t4_psub     3t spiral inductor       (TM2*M1~M8*RFDEV*INDUMY*PSUB*TM2TXT*M8TXT~M1TXT*DUMBM*GT*AA*RF3T*NOSHR)//
// ind_rf_1tm_t5_psub     3t spiral inductor       (TM2*M1~M8*RFDEV*INDUMY*PSUB*TM2TXT*M8TXT~M1TXT*DUMBM*GT*AA*RF3T*NOSHR)//
// ind_diff_1tm_t2_psub   4t differential inductor (TM2*M1~M8*RFDEV*INDUMY*PSUB*TM2TXT*M3TXT~M1TXT*DUMBM*GT*AA*RF3T*NOSHR)//
// ind_diff_1tm_t3_psub   4t differential inductor (TM2*M1~M8*RFDEV*INDUMY*PSUB*TM2TXT*M3TXT~M1TXT*DUMBM*GT*AA*RF3T*NOSHR)//
// ind_diff_1tm_t4_psub   4t differential inductor (TM2*M1~M8*RFDEV*INDUMY*PSUB*TM2TXT*M3TXT~M1TXT*DUMBM*GT*AA*RF3T*NOSHR)//
// ind_diff_1tm_t5_psub   4t differential inductor (TM2*M1~M8*RFDEV*INDUMY*PSUB*TM2TXT*M3TXT~M1TXT*DUMBM*GT*AA*RF3T*NOSHR)//
//                                                                             //
// ind_rf_t1alpa_t1       alpa spiral inductor    (RDL*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*M8TXT~M1TXT*DUMBM*GT*AA*NOSHR)//
// ind_rf_t1alpa_t2       alpa spiral inductor    (RDL*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*M8TXT~M1TXT*DUMBM*GT*AA*NOSHR)//
// ind_rf_t1alpa_t3       alpa spiral inductor    (RDL*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*M8TXT~M1TXT*DUMBM*GT*AA*NOSHR)//
// ind_rf_t1alpa_t4       alpa spiral inductor    (RDL*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*M8TXT~M1TXT*DUMBM*GT*AA*NOSHR)//
// ind_rf_t1alpa_t5       alpa spiral inductor    (RDL*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*M8TXT~M1TXT*DUMBM*GT*AA*NOSHR)//
// ind_rf_t1alpa_psub_t1  3t alpa spiral inductor (RDL*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*M8TXT~M1TXT*DUMBM*GT*AA*RF3T*NOSHR)//
// ind_rf_t1alpa_psub_t2  3t alpa spiral inductor (RDL*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*M8TXT~M1TXT*DUMBM*GT*AA*RF3T*NOSHR)//
// ind_rf_t1alpa_psub_t3  3t alpa spiral inductor (RDL*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*M8TXT~M1TXT*DUMBM*GT*AA*RF3T*NOSHR)//
// ind_rf_t1alpa_psub_t4  3t alpa spiral inductor (RDL*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*M8TXT~M1TXT*DUMBM*GT*AA*RF3T*NOSHR)//
// ind_rf_t1alpa_psub_t5  3t alpa spiral inductor (RDL*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*M8TXT~M1TXT*DUMBM*GT*AA*RF3T*NOSHR)//
//                                                                             //
// ind_rf_diff_t1alpa_t1  alpa differential inductor    (RDL*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*M3TXT~M1TXT*DUMBM*GT*AA*NOSHR)//
// ind_rf_diff_t1alpa_t2  alpa differential inductor    (RDL*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*M3TXT~M1TXT*DUMBM*GT*AA*NOSHR)//
// ind_rf_diff_t1alpa_t3  alpa differential inductor    (RDL*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*M3TXT~M1TXT*DUMBM*GT*AA*NOSHR)//
// ind_rf_diff_t1alpa_t4  alpa differential inductor    (RDL*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*M3TXT~M1TXT*DUMBM*GT*AA*NOSHR)//
// ind_rf_diff_t1alpa_t5  alpa differential inductor    (RDL*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*M3TXT~M1TXT*DUMBM*GT*AA*NOSHR)//
// diff_t1alpa_psub_t1    3t alpa differential inductor (RDL*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*M3TXT~M1TXT*DUMBM*GT*AA*RF3T*NOSHR)//
// diff_t1alpa_psub_t2    3t alpa differential inductor (RDL*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*M3TXT~M1TXT*DUMBM*GT*AA*RF3T*NOSHR)//
// diff_t1alpa_psub_t3    3t alpa differential inductor (RDL*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*M3TXT~M1TXT*DUMBM*GT*AA*RF3T*NOSHR)//
// diff_t1alpa_psub_t4    3t alpa differential inductor (RDL*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*M3TXT~M1TXT*DUMBM*GT*AA*RF3T*NOSHR)//
// diff_t1alpa_psub_t5    3t alpa differential inductor (RDL*TM2*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*M3TXT~M1TXT*DUMBM*GT*AA*RF3T*NOSHR)//
// spi_ind_rf_1p1        spiral inductor (TM2*BCB1*RDL*RFDEV*INDUMY*PSUB*TM2TXT*DUMBM*AA*GT*M1*NOSHR)//
// spi_ind_rf_1p2        spiral inductor (TM2*BCB1*RDL*RFDEV*INDUMY*PSUB*TM2TXT*DUMBM*AA*GT*M1*NOSHR)//
// spi_ind_rf_1p3        spiral inductor (TM2*BCB1*RDL*RFDEV*INDUMY*PSUB*TM2TXT*DUMBM*AA*GT*M1*NOSHR)//
// spi_ind_rf_psub_1p1   spiral inductor (TM2*BCB1*RDL*RFDEV*INDUMY*PSUB*TM2TXT*DUMBM*AA*GT*M1*RF3T*NOSHR)//
// spi_ind_rf_psub_1p2   spiral inductor (TM2*BCB1*RDL*RFDEV*INDUMY*PSUB*TM2TXT*DUMBM*AA*GT*M1*RF3T*NOSHR)//
// spi_ind_rf_psub_1p3   spiral inductor (TM2*BCB1*RDL*RFDEV*INDUMY*PSUB*TM2TXT*DUMBM*AA*GT*M1*RF3T*NOSHR)//
//                                                                             //
// ind_2Tdiff_alutm  2T MTT2+ALPA differential inductor (RDL*TM2*BCB1*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*M3TXT~M1TXT*DUMBM*GT*AA*NOSHR)//
// ind_2Tdiff_alutm_psub 2T MTT2+ALPA differential inductor (RDL*TM2*BCB1*M8~M1*RFDEV*INDUMY*PSUB*RF3T*TM2TXT*M3TXT~M1TXT*DUMBM*GT*AA*NOSHR)//
// ind_3Tdiff_alutm 3T MTT2+ALPA differential inductor (RDL*TM2*BCB1*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*M3TXT~M1TXT*DUMBM*GT*AA*NOSHR)//
// ind_3Tdiff_alutm_psub 3T MTT2+ALPA differential inductor (RDL*TM2*BCB1*M8~M1*RFDEV*INDUMY*PSUB*RF3T*TM2TXT*M3TXT~M1TXT*DUMBM*GT*AA*NOSHR)//
// ind_2Tdiff_2d8alutm_psub 2T MTT2+ALPA(THICK) differential inductor (RDL*TM2*BCB1*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*M3TXT~M1TXT*DUMBM*GT*AA*NOSHR)//
// ind_3Tdiff_2d8alutm_psub 3T MTT2+ALPA(THICK) differential inductor (RDL*TM2*BCB1*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*M3TXT~M1TXT*DUMBM*GT*AA*NOSHR)//
// rf_ind_alutm_psub  Spiral inductor MTT2+ALPA (RDL*TM2*BCB1*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*M3TXT~M1TXT*DUMBM*GT*AA*NOSHR)//
// rf_ind_2d8alutm_psub  Spiral inductor MTT2+ALPA(THICK) (RDL*TM2*BCB1*M8~M1*RFDEV*INDUMY*PSUB*TM2TXT*M3TXT~M1TXT*DUMBM*GT*AA*NOSHR)//
// spi_ind_rf_RDL2d8_psub_1p1 spiral Inductor (2.8RDL) (TM2*BCB1*RDL*RFDEV*INDUMY*PSUB*TM2TXT*DUMBM*AA*GT*M1*NOSHR)//
// spi_ind_rf_RDL2d8_psub_1p2 spiral Inductor (2.8RDL) (TM2*BCB1*RDL*RFDEV*INDUMY*PSUB*TM2TXT*DUMBM*AA*GT*M1*NOSHR)//
// spi_ind_rf_RDL2d8_psub_1p3 spiral Inductor (2.8RDL) (TM2*BCB1*RDL*RFDEV*INDUMY*PSUB*TM2TXT*DUMBM*AA*GT*M1*NOSHR)//
// spi_ind_rf_RDL2d8_psub_2p3 spiral Inductor (2.8RDL) (TM2*BCB1*RDL*RFDEV*INDUMY*PSUB*TM2TXT*DUMBM*AA*GT*M1*NOSHR)//
// Above are for 1P10M_2TM.If other metal option,pls skip corresponding metal    //
// Above can't be for 1P4M and 1P5M;                                             //
///////////////////////////////////////////////////////////////////////////////////////////////



///////////////////////////////////////////////////////////////////////////////////
//                                                                               //
//                             Environment Setting                               //
//                                                                               //
///////////////////////////////////////////////////////////////////////////////////


//*Please set the following options to proper values according to your design:
//==================================================================================
//*OPTION 1: Define IO. The  value is 1825.
//*For 55nm Logic LL 1.2/1.8/2.5V process, set this option to 1825;

#DEFINE IO 1825
//==================================================================================
//*OPTION 2: Define TOP Metal. The value can be 10,9,8,7,6,5,4. Default value is 10.

#DEFINE TOPMETAL 7
//===================================================================================
//*OPTION 3: Define number of top metal.The value can be single or double.  
//*Default value is double.
//*If you use double top metal process, set this option to double(Lower Case).
//*If you use single top metal process, set this option to single(Lower Case).
//*If you set TOPMETAL to 10, you must set option TOP_METAL_NUM to double, single top 
//*metal for 1P10M is not allowed!

#DEFINE TOP_METAL_NUM single
//===================================================================================
//*OPTION 4: Define WIDTH of TM1.The value can be 2 or 4. Default value is 4.
//*2: TM1 width is 0.2um, and TM1 thickness is 3.5K.
//*4: TM1 width is 0.4um, and TM1 thickness is 9K.
//*If TM1 width is 0.4um, and then TM2 width should be 0.4um or above.

#DEFINE TM1_WIDTH 4
//====================================================================================
//*OPTION 5: Define WIDTH of TM2.The value can be 2,4 or 15. Default value is 4.
//*2: TM2 width is 0.2um, and TM2 thickness is 3.5K.
//*4: TM2 width is 0.4um, and TM2 thickness is 9K.
//*15:TM2 width is 1.5um, and TM2 thickness is 34k.

#DEFINE TM2_WIDTH 15
//====================================================================================
//*OPTION 6: Define thickness of ALPA.The value can be thin or thick. Default value is THIN.
//*THIN:  ALPA thickness is 14.5K.
//*THICK: ALPA thickness is 28K.

#DEFINE ALPA_THICK THICK
//====================================================================================
//*OPTION 7: Define XRC RUN check or not.The value can be TRUE or FALSE(Upper Case).
//*Default value is FALSE

#DEFINE RC_RUN TRUE     
//===================================================================================
//*OPTION 8: Define the back annotation flow.The value can be 1 or 2,Default value is 2.
//*1: extrview flow,LVS will reserve some extra parameters for back-annotation.
//*2: netlist flow,LVS will not reserve the back-annotation parameters.

#DEFINE BACK_ANNOTATION_FLOW 2
//====================================================================================
//*OPTION 9: Define ERC Check or Not. The value can be TRUE or FALSE(Upper Case).
//*Default value is TRUE.

#DEFINE ERCCHECK TRUE 
//===================================================================================
//*OPTION 10: turn on nwell floating check or not. The value can be TRUE or FALSE(Upper Case).
//*Nwell resistor and BJT are not checked.
//*Default value is FALSE.

#DEFINE NWELL_FLOATING_CHECK FALSE
//===================================================================================
//*OPTION 11: turn on nwell not connecting to power check or not. The value can be TRUE or FALSE(Upper Case).
//*Nwell resistor and BJT are not checked.
//*Default value is FALSE.

#DEFINE NWELL_NOT_TO_POWER_CHECK TRUE 
//===================================================================================
//*OPTION 12: turn on pwell not connecting to ground check or not. The value can be TRUE or FALSE(Upper Case).
//*Default value is FALSE.

#DEFINE PWELL_NOT_TO_GROUND_CHECK TRUE
//===================================================================================
//*OPTION 13: extract parasitic DNW DIODE or not.The value can be TRUE or FALSE(Upper Case).
//*Default value is FALSE.

#DEFINE PARASI_DIO_CMP_DNW FALSE
//===================================================================================
//*OPTION 14: extract parasitic NW DIODE or not.The value can be TRUE or FALSE(Upper Case).
//*Default value is FALSE.

#DEFINE PARASI_DIO_CMP_NW FALSE
//===================================================================================
//*OPTION 15: trace parameter of parasitic DNW DIODE or not.The value can be TRUE or FALSE(Upper Case).
//*Default value is FALSE.

#DEFINE PARASI_DIO_Property_CMP_DNW FALSE
//===================================================================================
//*OPTION 16: trace parameter of parasitic NW DIODE or not.The value can be TRUE or FALSE(Upper Case).
//*Default value is FALSE.

#DEFINE PARASI_DIO_Property_CMP_NW FALSE
//===================================================================================
//*OPTION 17: Define MOS mismatch model.Set this option to 1 to turn on mos mismatch model.
//Set this option to 0 to turn off it. Default value is 1. 

#DEFINE MOS_MIS_MODE 1
//===================================================================================
//*OPTION 18: Define BJT mismatch model.Set this option to 1 to turn on bjt mismatch model.
//Set this option to 0 to turn off it. Default value is 1.

#DEFINE BJT_MIS_MODE 1
//===================================================================================
//*OPTION 19: Define VAR mismatch model.Set this option to 1 to turn on var mismatch model.
//Set this option to 0 to turn off it. Default value is 1.

#DEFINE VAR_MIS_MODE 1
//===================================================================================
//*OPTION 20: Define MOM mismatch model.Set this option to 1 to turn on MOM mismatch model.
//Set this option to 0 to turn off it. Default value is 1.

#DEFINE MOM_MIS_MODE 1
//===================================================================================
//*OPTION 21: Define RES mismatch model.Set this option to 1 to turn on RES mismatch model.
//Set this option to 0 to turn off it. Default value is 1.

#DEFINE RES_MIS_MODE 1
//===================================================================================
//*OPTION 22: Define RF MOS mismatch model.Set this option to 1 to turn on rf mos mismatch model.
//Set this option to 0 to turn off it. Default value is 1.

#DEFINE RF_MOS_MIS_MODE 1
//===================================================================================
//*OPTION 23:Define SRAM model.The value can be DEV or SUBCKT. Default value is DEV.
//*DEV(Upper Case): Model is DEV.
//*SUBCKT(Upper Case):Model is SUBCKT.

#DEFINE SRAM DEV
//====================================================================================
//*OPTION 24: compare PJ parameter or not for DIODE.The value can be TRUE or FALSE(Upper Case).
//*Default value is FALSE.

#DEFINE DIO_PJ FALSE
//===================================================================================
//*OPTION 25: Extract EFUSE_res or not;
//*Default value is FALSE.

#DEFINE EFUSE_RES FALSE 
//===================================================================================
//*OPTION 26: Define whether to use CASE-SENSIVITY.The value can be TRUE or FALSE(Upper Case).

#DEFINE CASE_SENSITIVITY FALSE
//====================================================================================

//=================================================
//Define Variable for the tolerance of each device
//user can change below tolerance according to the design
//=======================================================
VARIABLE mos_err 5
VARIABLE dio_err 5
VARIABLE bjt_err 5
VARIABLE res_err 5
VARIABLE var_err 5
VARIABLE mim_err 5
VARIABLE mom_err 5
VARIABLE ind_err 5
//=======================================================


VARIABLE PA_size_value 1.5  //Default is 1.5,CTM can change it by choice;

SOURCE PATH "xxx.cdl"
SOURCE PRIMARY "xxx"
SOURCE SYSTEM SPICE

LAYOUT PATH "xxx.gds"
LAYOUT PRIMARY "xxx"
LAYOUT SYSTEM GDSII


LVS REPORT "lvs.rep"
LVS REPORT OPTION A B C D S

UNIT CAPACITANCE FF
UNIT RESISTANCE OHM
UNIT LENGTH U

#IFDEF RC_RUN TRUE
PEX NETLIST LUMPED "lumped.dist" HSPICE LAYOUT GROUND VSS MASK
PEX REPORT LUMPED none
PEX REPORT DISTRIBUTED none
PEX NETLIST DISTRIBUTED "distributed.dist" HSPICE LAYOUT GROUND VSS MASK
//MASK SVDB DIRECTORY "svdb" XRC QUERY
MASK SVDB DIRECTORY "svdb" CCI QUERY
#ELSE
MASK SVDB DIRECTORY "svdb" QUERY
#ENDIF

LVS SPICE REPLICATE DEVICES YES //added due to solve 'RC == issue'

ERC MAXIMUM RESULTS 100
ERC RESULTS DATABASE erc.db
ERC SUMMARY REPORT erc.rep

#IFDEF CASE_SENSITIVITY TRUE
LAYOUT CASE YES
SOURCE CASE YES
LVS COMPARE CASE YES
#ENDIF

FLAG SKEW YES
FLAG OFFGRID YES

LVS ISOLATE SHORTS YES
LVS SPICE PREFER PINS          YES
LVS Spice Strict WL	       YES
LVS RECOGNIZE GATES            NONE
LVS ABORT ON SUPPLY ERROR      NO
LVS ALL CAPACITOR PINS SWAPPABLE YES
LVS IGNORE PORTS               NO
LVS CHECK PORT NAMES           YES
LVS REDUCE PARALLEL MOS        YES 
LVS REDUCE SERIES RESISTORS    YES
LVS REDUCE PARALLEL RESISTORS  YES
LVS REDUCE PARALLEL DIODES     YES
LVS REDUCE PARALLEL CAPACITORS NO
LVS REDUCE SERIES CAPACITORS   NO
LVS REDUCE PARALLEL BIPOLAR    YES
LVS REDUCE SPLIT GATES         YES 
 [ effective W, L
 P = sum( W * L ) // Sum of Wi * Li
 Q = sum( W / L ) // Sum of Wi / Li
 L = sqrt( P / Q ) // Effective L
 W = sqrt( P * Q ) // Effective W
 ]

LVS FILTER UNUSED OPTION AB RC RE RG
LVS PROPERTY RESOLUTION MAXIMUM 65536
LAYOUT BASE LAYER iAA SN SP iGT CT NW MOMDMY INDMY RFDEV
LAYOUT BASE CELL "rtm2_ckt_rf*" 
LVS SPICE MULTIPLIER NAME "M" "MR" //special multipler factor name
VIRTUAL CONNECT COLON YES // Please set to "NO" when running full chip level.
//VIRTUAL CONNECT NAME "?"

LVS PROPERTY MAP dnw12ll_ckt l lr layout
LVS PROPERTY MAP dnw12ll_ckt w wr layout
LVS PROPERTY MAP dnw12ll_ckt l lr source
LVS PROPERTY MAP dnw12ll_ckt w wr source
LVS PROPERTY MAP dnwulln_ckt l lr layout
LVS PROPERTY MAP dnwulln_ckt w wr layout
LVS PROPERTY MAP dnwulln_ckt l lr source
LVS PROPERTY MAP dnwulln_ckt w wr source
LVS PROPERTY MAP dnw18ll_ckt l lr layout
LVS PROPERTY MAP dnw18ll_ckt w wr layout
LVS PROPERTY MAP dnw18ll_ckt l lr source
LVS PROPERTY MAP dnw18ll_ckt w wr source
LVS PROPERTY MAP dnwlvt12ll_ckt l lr layout
LVS PROPERTY MAP dnwlvt12ll_ckt w wr layout
LVS PROPERTY MAP dnwlvt12ll_ckt l lr source
LVS PROPERTY MAP dnwlvt12ll_ckt w wr source
LVS PROPERTY MAP dnwhvt12ll_ckt l lr layout
LVS PROPERTY MAP dnwhvt12ll_ckt w wr layout
LVS PROPERTY MAP dnwhvt12ll_ckt l lr source
LVS PROPERTY MAP dnwhvt12ll_ckt w wr source
#IFDEF IO 1825
LVS PROPERTY MAP dnw25ll_ckt l lr layout
LVS PROPERTY MAP dnw25ll_ckt w wr layout
LVS PROPERTY MAP dnw25ll_ckt l lr source
LVS PROPERTY MAP dnw25ll_ckt w wr source
LVS PROPERTY MAP dnwud18ll_ckt l lr layout
LVS PROPERTY MAP dnwud18ll_ckt w wr layout
LVS PROPERTY MAP dnwud18ll_ckt l lr source
LVS PROPERTY MAP dnwud18ll_ckt w wr source
LVS PROPERTY MAP dnwod33ll_ckt l lr layout
LVS PROPERTY MAP dnwod33ll_ckt w wr layout
LVS PROPERTY MAP dnwod33ll_ckt l lr source
LVS PROPERTY MAP dnwod33ll_ckt w wr source
#ENDIF

LVS GROUND NAME "VSS" "SAVSS?" "?gnd?" "?GND?" "?VSS?" "?vss?"
LVS POWER  NAME "VDD" "SAVDD?" "?VDD?" "?VCC?" "?vcc?" "?vdd?"
LVS SPICE MULTIPLIER NAME "M" "MR" //special multipler factor name

//////////////////////////////////////////////
// Layer Mapping                            //  
//////////////////////////////////////////////
LAYER MAP      10   DATATYPE 0 1000
LAYER MAP      12   DATATYPE 0 1000
LAYER MAP      13   DATATYPE 0 1000
LAYER iAA      1000  //Active area
LAYER MAP      10   DATATYPE 1 1010
LAYER AADUM    1010 // Dummy Active Area
LAYER AA_all   iAA AADUM
LAYER NW       14   // N-Well
LAYER MAP      19   DATATYPE 0 1900
LAYER DNW      1900 // Deep N Well imp for substrate noise suppression
LAYER CL       18   // Cell implant
LAYER NC       21   // N-Cell implant
LAYER DG       29   // Dual Gate 
LAYER MAP      30   DATATYPE 0 300
LAYER iGT      300
LAYER MAP      30   DATATYPE 1 301
LAYER GTDUM    301
LAYER GT_all   iGT GTDUM
//LAYER EGL1     701
//LAYER EGL2     702
//LAYER EGL3     703
LAYER EGLMR1     184
LAYER EGLMR2     185
//LAYER EGL1MR1     186
//LAYER EGL1MR2     136

LAYER HRP      39   // High Resistance Poly
LAYER SN       40   // N+ S/D implant
LAYER SP       43   // P+ S/D implant
LAYER VTPH     46   // Core 1.0V high vt PMOS
LAYER VTNH     47   // Core 1.0V high vt NMOS
LAYER SAB      48   // Salicide Block
LAYER CT       50   // Contact
LAYER MAP      61  DATATYPE 0 610 //Metal1
LAYER MAP      61  TEXTTYPE 0 610 //Metal1
LAYER M1      610   
LAYER MAP      61  DATATYPE 1 611 //Metal1 Dummy
LAYER M1DUM   611    
LAYER MAP      62  DATATYPE 0 620 //Metal2
LAYER MAP      62  TEXTTYPE 0 620 //Metal2
LAYER M2      620
LAYER MAP      62  DATATYPE 1 621 //Metal2 Dummy
LAYER M2DUM   621
LAYER MAP      63   TEXTTYPE  63  363
LAYER IGNORE   363
LAYER MAP      63  DATATYPE 0 630 //Metal3
LAYER MAP      63  TEXTTYPE 0 630 //Metal3
LAYER M3      630
LAYER MAP      63  DATATYPE 1 631 //Metal3 Dummy
LAYER M3DUM   631
LAYER MAP      64  DATATYPE 0 640 //Metal4
LAYER MAP      64  TEXTTYPE 0 640 //Metal4
LAYER M4      640
LAYER MAP      64  DATATYPE 1 641 //Metal4 Dummy
LAYER M4DUM   641
LAYER MAP      65  DATATYPE 0 650 //Metal5
LAYER MAP      65  TEXTTYPE 0 650 //Metal5
LAYER M5      650
LAYER MAP      65  DATATYPE 1 651 //Metal5 Dummy
LAYER M5DUM   651
LAYER MAP      66  DATATYPE 0 660 //Metal6
LAYER MAP      66  TEXTTYPE 0 660 //Metal6
LAYER M6      660
LAYER MAP      66  DATATYPE 1 661 //Metal6 Dummy
LAYER M6DUM   661
LAYER MAP      67  DATATYPE 0 670 //Metal7
LAYER MAP      67  TEXTTYPE 0 670 //Metal7
LAYER M7      670
LAYER MAP      67  DATATYPE 1 671 //Metal7 Dummy
LAYER M7DUM   671
LAYER MAP      68  DATATYPE 0 680 //Metal8
LAYER MAP      68  TEXTTYPE 0 680 //Metal8
LAYER M8      680
LAYER MAP      68  DATATYPE 1 681 //Metal8 Dummy
LAYER M8DUM   681
LAYER Via1     70   // VIA-1
LAYER Via2     71   // VIA-2
LAYER Via3     72   // VIA-3
LAYER Via4     73   // VIA-4
LAYER Via5     74   // VIA-5
LAYER V6       75   // VIA-6
LAYER V7       76   // VIA-7
LAYER PSUB     85   // PSUB area
LAYER MAP      80  DATATYPE 0 800
LAYER PA       800   // Passivation/Pad
LAYER MAP      165 DATATYPE 0 1650
LAYER BCB1     1650
LAYER MAP      166 DATATYPE 0 1660
LAYER MAP      166 TEXTTYPE 0 1660
LAYER iRDL     1660
LAYER MAP      93 DATATYPE 0 930
LAYER VARMOS   930  // Dummy for mos varactor
LAYER RESNW    95   // Dummy for NW resistor
LAYER MAP      96 DATATYPE 0 960
LAYER RESP1    960  // Dummy for Poly resistor
LAYER MAP      96 DATATYPE 1 961
LAYER RESP3T   961 // Dummy for 3T Poly resistor
LAYER RESAA    97   // Dummy for AA resistor
LAYER OPCBA    100  // Blocking Layer for OPC operation on AA
LAYER OPCBP    101  // Blocking Layer for OPC operation on GT
LAYER OPCBM    102  // Blocking Layer for OPC operation on M1
LAYER INST     60   // Blocking Layer for SRAM
LAYER MAP      60 DATATYPE 1 601   
LAYER STSRAM   601  // LVS dummy layer for Q342 SRAM cells
LAYER MAP      60 DATATYPE 2 602
LAYER DNSRAM   602  // LVS dummy layer for Q299 and H299 SRAM cells    
LAYER MAP      60 DATATYPE 4 604
LAYER DPSRAM   604  // LVS dummy layer for DP576 SRAM cells
LAYER MAP      60 DATATYPE 9 609
LAYER RFSRAM   609  // LVS dummy layer for F741 SRAM cells
LAYER MAP      60 DATATYPE 3 603
LAYER UDSRAM   603  // LVS dummy layer for Q252 and Q499 SRAM cells
LAYER MAP      120 DATATYPE 0 1200 //Top Metal 1
LAYER MAP      120 TEXTTYPE 0 1200 //Top Metal 1
LAYER TM1     1200  
LAYER MAP      120 DATATYPE 1 1201 //Top Metal 1 Dummy
LAYER TM1DUM  1201  
LAYER TV1      121  // Top Via 1
LAYER MAP      122 DATATYPE 0 1220 //Top Metal 2
LAYER MAP      122 TEXTTYPE 0 1220 //Top Metal 2
LAYER TM2     1220  
LAYER MAP      122 DATATYPE 1 1221 //Top Metal 2 Dummy
LAYER TM2DUM  1221  
LAYER TV2      123  // Top Via 2

LAYER MAP      228 DATATYPE 0 2280 //2x Top Metal 1
LAYER MAP      228 TEXTTYPE 0 2280 //2x Top Metal 1
LAYER STM1    2280
LAYER MAP      228 DATATYPE 1 2281 //2x Top Metal 1 Dummy
LAYER STM1DUM  2281
LAYER STV1     243  // 2x Top Via 1
LAYER MAP      229 DATATYPE 0 2290 //2x Top Metal 2
LAYER MAP      229 TEXTTYPE 0 2290 //2x Top Metal 2
LAYER STM2    2290
LAYER MAP      229 DATATYPE 1 2291 //2x Top Metal 2 Dummy
LAYER STM2DUM  2291
LAYER STV2      244  // 2x Top Via 2

LAYER TG       125  // Tripple Gate
LAYER SUBD     1311
LAYER MAP      131 DATATYPE 1 1311 //Substrate dummy layer
LAYER DMPNP    134  // Dummy for BJT
LAYER DSTR     138  // Dummy for Diode
LAYER MAP      139 DATATYPE 0 1390 
LAYER DCTY     1390 // Area with no extraction for LVS
LAYER MAP      171 DATATYPE 0 1710
LAYER M1R      1710  // Dummy for Metal1 Resistor
LAYER MAP      172 DATATYPE 0 1720
LAYER M2R      1720  // Dummy for Metal2 Resistor
LAYER MAP      173 DATATYPE 0 1730
LAYER M3R      1730  // Dummy for Metal3 Resistor
LAYER MAP      174 DATATYPE 0 1740
LAYER M4R      1740  // Dummy for Metal4 Resistor
LAYER MAP      175 DATATYPE 0 1750
LAYER M5R      1750  // Dummy for Metal5 Resistor
LAYER MAP      176 DATATYPE 0 1760
LAYER M6R      1760  // Dummy for Metal6 Resistor
LAYER MAP      177 DATATYPE 0 1770
LAYER M7R      1770  // Dummy for Metal7 Resistor
LAYER MAP      178 DATATYPE 0 1780
LAYER M8R      1780  // Dummy for Metal8 Resistor
LAYER MAP      201 DATATYPE 0 2010
LAYER TM1R     2010  // Dummy for Top Metal1 Resistor
LAYER MAP      202 DATATYPE 0 2020
LAYER TM2R     2020 // Dummy for Top Metal2 Resistor
LAYER MAP      210 DATATYPE 0 2100
LAYER HRPDMY   2100 // HRP Dummy layer
LAYER LVP      218  // Core 1.0V low vt PMOS
LAYER LVN      219  // Core 1.0V low vt NMOS
LAYER MAP      211 DATATYPE 1 2111
LAYER MOMDMY   2111  // MOM Dummy layer
LAYER MAP      125 DATATYPE 4 1254
LAYER OVERPL   1254  // Dummy layer for overdriver device
LAYER MAP      125 DATATYPE 5 1255
LAYER UNDEPL  1255  // Dummy layer for underdriver device
LAYER RFDEV     181  // Dummy for RF device
LAYER RFMOSD    182  // Dummy for RF MOSFET Drain
LAYER MAP       183 DATATYPE 0 1830
LAYER VARJUN    94 1830   // Dummy for Junction Diode
LAYER INDMY     212  // Dummy for Inductor
LAYER MAP       183 DATATYPE 2 1832
LAYER RF3T      1832
LAYER M1TXT     141
LAYER M2TXT     142
LAYER M3TXT     143
LAYER M4TXT     144
LAYER M5TXT     145
LAYER M6TXT     146
LAYER M7TXT     147
LAYER M8TXT     148
LAYER TM2TXT    1223
LAYER MAP 122 DATATYPE 3 1223
LAYER MAP 122 TEXTTYPE 3 1223

LAYER TM1TXT    1203
LAYER MAP 120 DATATYPE 3 1203
LAYER MAP 120 TEXTTYPE 3 1203

LAYER MAP       19 DATATYPE 2 1920
LAYER DNWTR     1920 // dnw mos(logic or mixed) dummy layer
LAYER MAP       83 DATATYPE 1 831
LAYER ALPAR     831  // Dummy for  ALPA  Resistor
LAYER MAP      83  DATATYPE 2 832
LAYER MAP      83  TEXTTYPE 2 832
LAYER ALPATXT  832   // ALPA TEXT Layer
LAYER MAP       90 DATATYPE 0 900
LAYER DUMBM     900 // Block layer for dummy operation on all metal
LAYER MAP       92 DATATYPE 0 920
LAYER DUMBP     920 // Block layer for dummy operation on GT
LAYER MAP       91  DATATYPE 0 910
LAYER DUMBA     910       //Dummy AA blocking layer
LAYER MAP       181 DATATYPE 3 1813
LAYER RFSD      1813 //RF MOS of even finger with S/D permute for LVS
LAYER MAP       181 DATATYPE 4 1814
LAYER RFDN6T    1814 //RF six terminal devices for LVS
LAYER MAP       181 DATATYPE 7 1817
LAYER RFDN5T    1817 //
LAYER MAP       215 DATATYPE 0 2150
LAYER STIDMY    2150 //LDMOS transistor field plate area
LAYER MAP       216 DATATYPE 150 2165
LAYER LDBK      2165 //LDMOS function area
LAYER MAP       131 DATATYPE 2 1312
LAYER MOSCKT    1312 //Mismatch devices lvs marking layer
LAYER MAP       131 DATATYPE 3 1313 //LVS subckt resistor dummy layer
LAYER RESCKT    1313
LAYER MAP       180 DATATYPE 150 1815    //BLOCK layer for no-shrinkable cell
LAYER NOSHR     1815
LAYER MAP      81   DATATYPE  1 811//MARK layer for Efuse gate
LAYER GTFUSE   811
LAYER MAP      81   DATATYPE  2 812 //MARK layer for Efuse
LAYER EFUSE    812
LAYER MAP     131 DATATYPE 5 1315
LAYER NFDMK   1315 //LVS mark layer for multiple fingers
LAYER MAP       212 DATATYPE 1 2121
LAYER INDR      2121 // Dummy to calculate Inductor Radius
LAYER MAP     212 DATATYPE 3 2123
LAYER INDTEM  2123 //LVS mark layer for inductor inter via
LAYER MAP     159 DATATYPE 151 1591
LAYER UHVT    1591
LAYER MAP      41 DATATYPE 0 410
LAYER ESD1     410
LAYER MAP      57 DATATYPE 0 570
LAYER NPR1     570
LAYER MAP      211 DATATYPE 3 2113
LAYER MOMP1    2113
LAYER MAP      211 DATATYPE 4 2114
LAYER MOMP2    2114
LAYER MAP      211 DATATYPE 5 2115
LAYER MOMMES   2115
LAYER MAP      211 DATATYPE 2 2112
LAYER MOMTEM   2112
LAYER MAP      211 DATATYPE 7 2117
LAYER MOMCOL   2117
LAYER MAP      211 DATATYPE 8 2118
LAYER MOMROW   2118
LAYER MAP      189 DATATYPE 151 1891
LAYER MARKS    1891
LAYER MAP      133 DATATYPE 1 1331
LAYER ESD5V    1331
LAYER MAP      133 DATATYPE 3 1333
LAYER ESDIO2   1333
LAYER MAP      81  DATATYPE 152 8152
LAYER FUSEMK1  8152


////////////////////////////////
// To exclude the NO-LVS layer//
////////////////////////////////
AA   = AA_all NOT DCTY
GT   = GT_all NOT DCTY
/*
M1   = iM1 NOT DCTY
M2   = iM2 NOT DCTY
M3   = iM3 NOT DCTY
M4   = iM4 NOT DCTY
M5   = iM5 NOT DCTY
M6   = iM6 NOT DCTY
M7   = iM7 NOT DCTY
M8   = iM8 NOT DCTY
TM1  = iTM1 NOT DCTY
TM2  = iTM2 NOT DCTY
STM1  = iSTM1 NOT DCTY
STM2  = iSTM2 NOT DCTY

M1DUM   = iM1DUM NOT DCTY
M2DUM   = iM2DUM NOT DCTY
M3DUM   = iM3DUM NOT DCTY
M4DUM   = iM4DUM NOT DCTY
M5DUM   = iM5DUM NOT DCTY
M6DUM   = iM6DUM NOT DCTY
M7DUM   = iM7DUM NOT DCTY
M8DUM   = iM8DUM NOT DCTY
TM1DUM  = iTM1DUM NOT DCTY
TM2DUM  = iTM2DUM NOT DCTY
STM1DUM  = iSTM1DUM NOT DCTY
STM2DUM  = iSTM2DUM NOT DCTY
*/

TEXT LAYER 1660 ATTACH 1660 ALPA
PORT LAYER TEXT 1660

TEXT LAYER 832 ATTACH 832 ALPA
PORT LAYER TEXT 832

#IFDEF TOPMETAL 4
#ELSE
#IFDEF TOPMETAL 5
#ELSE
TEXT LAYER 141 ATTACH 141 m1_ind
PORT LAYER TEXT 141
TEXT LAYER 142 ATTACH 142 m2_ind
PORT LAYER TEXT 142
TEXT LAYER 610 ATTACH 610 m1_ind
PORT LAYER TEXT 610
TEXT LAYER 620 ATTACH 620 m2_ind
PORT LAYER TEXT 620
TEXT LAYER 143 ATTACH 143 m3_ind
PORT LAYER TEXT 143
TEXT LAYER 630 ATTACH 630 m3_ind
PORT LAYER TEXT 630
#ENDIF
#ENDIF

#IFDEF TOPMETAL 10 

TEXT LAYER 141 ATTACH 141 metal1
PORT LAYER TEXT 141
TEXT LAYER 142 ATTACH 142 metal2
PORT LAYER TEXT 142
TEXT LAYER 610 ATTACH 610 metal1
PORT LAYER TEXT 610
TEXT LAYER 620 ATTACH 620 metal2
PORT LAYER TEXT 620
TEXT LAYER 143 ATTACH 143 metal3
PORT LAYER TEXT 143
TEXT LAYER 144 ATTACH 144 metal4
PORT LAYER TEXT 144
TEXT LAYER 145 ATTACH 145 metal5
PORT LAYER TEXT 145
TEXT LAYER 146 ATTACH 146 metal6
PORT LAYER TEXT 146
TEXT LAYER 147 ATTACH 147 metal7
PORT LAYER TEXT 147
TEXT LAYER 148 ATTACH 148 metal8
PORT LAYER TEXT 148
TEXT LAYER 630 ATTACH 630 metal3
PORT LAYER TEXT 630
TEXT LAYER 640 ATTACH 640 metal4
PORT LAYER TEXT 640
TEXT LAYER 650 ATTACH 650 metal5
PORT LAYER TEXT 650
TEXT LAYER 660 ATTACH 660 metal6
PORT LAYER TEXT 660
TEXT LAYER 670 ATTACH 670 metal7
PORT LAYER TEXT 670
TEXT LAYER 680 ATTACH 680 metal8
PORT LAYER TEXT 680

TEXT LAYER 141 ATTACH 141 m1_ind
PORT LAYER TEXT 141
TEXT LAYER 142 ATTACH 142 m2_ind
PORT LAYER TEXT 142
TEXT LAYER 610 ATTACH 610 m1_ind
PORT LAYER TEXT 610
TEXT LAYER 620 ATTACH 620 m2_ind
PORT LAYER TEXT 620
TEXT LAYER 143 ATTACH 143 m3_ind
PORT LAYER TEXT 143
TEXT LAYER 144 ATTACH 144 m4_ind
PORT LAYER TEXT 144
TEXT LAYER 145 ATTACH 145 m5_ind
PORT LAYER TEXT 145
TEXT LAYER 146 ATTACH 146 m6_ind
PORT LAYER TEXT 146
TEXT LAYER 147 ATTACH 147 m7_ind
PORT LAYER TEXT 147
TEXT LAYER 148 ATTACH 148 m8_ind
PORT LAYER TEXT 148
TEXT LAYER 630 ATTACH 630 m3_ind
PORT LAYER TEXT 630
TEXT LAYER 640 ATTACH 640 m4_ind
PORT LAYER TEXT 640
TEXT LAYER 650 ATTACH 650 m5_ind
PORT LAYER TEXT 650
TEXT LAYER 660 ATTACH 660 m6_ind
PORT LAYER TEXT 660
TEXT LAYER 670 ATTACH 670 m7_ind
PORT LAYER TEXT 670
TEXT LAYER 680 ATTACH 680 m8_ind
PORT LAYER TEXT 680


//TEXT LAYER 141 ATTACH 141 mom_metal1
//PORT LAYER TEXT 141
//TEXT LAYER 142 ATTACH 142 mom_metal2
//PORT LAYER TEXT 142
//TEXT LAYER 610 ATTACH 610 mom_metal1
//PORT LAYER TEXT 610
//TEXT LAYER 620 ATTACH 620 mom_metal2
//PORT LAYER TEXT 620
//TEXT LAYER 143 ATTACH 143 mom_metal3
//PORT LAYER TEXT 143
//TEXT LAYER 144 ATTACH 144 mom_metal4
//PORT LAYER TEXT 144
//TEXT LAYER 145 ATTACH 145 mom_metal5
//PORT LAYER TEXT 145
//TEXT LAYER 146 ATTACH 146 mom_metal6
//PORT LAYER TEXT 146
//TEXT LAYER 630 ATTACH 630 mom_metal3
//PORT LAYER TEXT 630
//TEXT LAYER 640 ATTACH 640 mom_metal4
//PORT LAYER TEXT 640
//TEXT LAYER 650 ATTACH 650 mom_metal5
//PORT LAYER TEXT 650
//TEXT LAYER 660 ATTACH 660 mom_metal6
//PORT LAYER TEXT 660

#IFDEF TOP_METAL_NUM double
TEXT LAYER 1203 ATTACH 1203 metal9
TEXT LAYER 1203 ATTACH 1203 m9_ind_conn
PORT LAYER TEXT 1203
TEXT LAYER 1223 ATTACH 1223 metal10
TEXT LAYER 1223 ATTACH 1223 m10_ind_conn
TEXT LAYER 1223 ATTACH 1223 m10_ind_rc
PORT LAYER TEXT 1223

#IFDEF TM1_WIDTH 4
TEXT LAYER 1200 ATTACH 1200 metal9
TEXT LAYER 1200 ATTACH 1200 m9_ind_conn
PORT LAYER TEXT 1200

#IFDEF TM2_WIDTH 4
TEXT LAYER 1220 ATTACH 1220 metal10
TEXT LAYER 1220 ATTACH 1220 m10_ind_conn
TEXT LAYER 1220 ATTACH 1220 m10_ind_rc
PORT LAYER TEXT 1220
#ENDIF

#IFDEF TM2_WIDTH 15
TEXT LAYER 1220 ATTACH 1220 metal10
TEXT LAYER 1220 ATTACH 1220 m10_ind_conn
TEXT LAYER 1220 ATTACH 1220 m10_ind_rc
PORT LAYER TEXT 1220
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 2
TEXT LAYER 2280 ATTACH 2280 metal9
TEXT LAYER 2280 ATTACH 2280 m9_ind_conn
PORT LAYER TEXT 2280

#IFDEF TM2_WIDTH 2
TEXT LAYER 2290 ATTACH 2290 metal10
TEXT LAYER 2290 ATTACH 2290 m10_ind_conn
TEXT LAYER 2290 ATTACH 2290 m10_ind_rc
PORT LAYER TEXT 2290
#ELSE
TEXT LAYER 1220 ATTACH 1220 metal10
TEXT LAYER 1220 ATTACH 1220 m10_ind_conn
TEXT LAYER 1220 ATTACH 1220 m10_ind_rc
PORT LAYER TEXT 1220
#ENDIF
#ENDIF

#ENDIF
#ENDIF

#IFDEF TOPMETAL 9

TEXT LAYER 141 ATTACH 141 metal1
PORT LAYER TEXT 141
TEXT LAYER 142 ATTACH 142 metal2
PORT LAYER TEXT 142
TEXT LAYER 610 ATTACH 610 metal1
PORT LAYER TEXT 610
TEXT LAYER 620 ATTACH 620 metal2
PORT LAYER TEXT 620
TEXT LAYER 143 ATTACH 143 metal3
PORT LAYER TEXT 143
TEXT LAYER 144 ATTACH 144 metal4
PORT LAYER TEXT 144
TEXT LAYER 145 ATTACH 145 metal5
PORT LAYER TEXT 145
TEXT LAYER 146 ATTACH 146 metal6
PORT LAYER TEXT 146
TEXT LAYER 147 ATTACH 147 metal7
PORT LAYER TEXT 147
TEXT LAYER 630 ATTACH 630 metal3
PORT LAYER TEXT 630
TEXT LAYER 640 ATTACH 640 metal4
PORT LAYER TEXT 640
TEXT LAYER 650 ATTACH 650 metal5
PORT LAYER TEXT 650
TEXT LAYER 660 ATTACH 660 metal6
PORT LAYER TEXT 660
TEXT LAYER 670 ATTACH 670 metal7
PORT LAYER TEXT 670

TEXT LAYER 141 ATTACH 141 m1_ind
PORT LAYER TEXT 141
TEXT LAYER 142 ATTACH 142 m2_ind
PORT LAYER TEXT 142
TEXT LAYER 610 ATTACH 610 m1_ind
PORT LAYER TEXT 610
TEXT LAYER 620 ATTACH 620 m2_ind
PORT LAYER TEXT 620
TEXT LAYER 143 ATTACH 143 m3_ind
PORT LAYER TEXT 143
TEXT LAYER 144 ATTACH 144 m4_ind
PORT LAYER TEXT 144
TEXT LAYER 145 ATTACH 145 m5_ind
PORT LAYER TEXT 145
TEXT LAYER 146 ATTACH 146 m6_ind
PORT LAYER TEXT 146
TEXT LAYER 147 ATTACH 147 m7_ind
PORT LAYER TEXT 147
TEXT LAYER 630 ATTACH 630 m3_ind
PORT LAYER TEXT 630
TEXT LAYER 640 ATTACH 640 m4_ind
PORT LAYER TEXT 640
TEXT LAYER 650 ATTACH 650 m5_ind
PORT LAYER TEXT 650
TEXT LAYER 660 ATTACH 660 m6_ind
PORT LAYER TEXT 660
TEXT LAYER 670 ATTACH 670 m7_ind
PORT LAYER TEXT 670
//TEXT LAYER 141 ATTACH 141 mom_metal1
//PORT LAYER TEXT 141
//TEXT LAYER 142 ATTACH 142 mom_metal2
//PORT LAYER TEXT 142
//TEXT LAYER 610 ATTACH 610 mom_metal1
//PORT LAYER TEXT 610
//TEXT LAYER 620 ATTACH 620 mom_metal2
//PORT LAYER TEXT 620
//TEXT LAYER 143 ATTACH 143 mom_metal3
//PORT LAYER TEXT 143
//TEXT LAYER 144 ATTACH 144 mom_metal4
//PORT LAYER TEXT 144
//TEXT LAYER 145 ATTACH 145 mom_metal5
//PORT LAYER TEXT 145
//TEXT LAYER 146 ATTACH 146 mom_metal6
//PORT LAYER TEXT 146
//TEXT LAYER 630 ATTACH 630 mom_metal3
//PORT LAYER TEXT 630
//TEXT LAYER 640 ATTACH 640 mom_metal4
//PORT LAYER TEXT 640
//TEXT LAYER 650 ATTACH 650 mom_metal5
//PORT LAYER TEXT 650
//TEXT LAYER 660 ATTACH 660 mom_metal6
//PORT LAYER TEXT 660

#IFDEF TOP_METAL_NUM single
TEXT LAYER 148 ATTACH 148 metal8
TEXT LAYER 148 ATTACH 148 m8_ind_conn
PORT LAYER TEXT 148
TEXT LAYER 680 ATTACH 680 metal8
TEXT LAYER 680 ATTACH 680 m8_ind_conn
PORT LAYER TEXT 680
TEXT LAYER 1223 ATTACH 1223 metal9
TEXT LAYER 1223 ATTACH 1223 m9_ind_conn
TEXT LAYER 1223 ATTACH 1223 m9_ind_rc
PORT LAYER TEXT 1223

#IFDEF TM2_WIDTH 2
TEXT LAYER 2290 ATTACH 2290 metal9
TEXT LAYER 2290 ATTACH 2290 m9_ind_conn
TEXT LAYER 2290 ATTACH 2290 m9_ind_rc
PORT LAYER TEXT 2290
#ELSE
TEXT LAYER 1220 ATTACH 1220 metal9
TEXT LAYER 1220 ATTACH 1220 m9_ind_conn
TEXT LAYER 1220 ATTACH 1220 m9_ind_rc
PORT LAYER TEXT 1220
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM double
TEXT LAYER 1203 ATTACH 1203 metal8
TEXT LAYER 1203 ATTACH 1203 m8_ind_conn
PORT LAYER TEXT 1203
TEXT LAYER 1223 ATTACH 1223 metal9
TEXT LAYER 1223 ATTACH 1223 m9_ind_conn
TEXT LAYER 1223 ATTACH 1223 m9_ind_rc
PORT LAYER TEXT 1223

#IFDEF TM1_WIDTH 4
TEXT LAYER 1200 ATTACH 1200 metal8
TEXT LAYER 1200 ATTACH 1200 m8_ind_conn
PORT LAYER TEXT 1200

#IFDEF TM2_WIDTH 4
TEXT LAYER 1220 ATTACH 1220 metal9
TEXT LAYER 1220 ATTACH 1220 m9_ind_conn
TEXT LAYER 1220 ATTACH 1220 m9_ind_rc
PORT LAYER TEXT 1220
#ENDIF

#IFDEF TM2_WIDTH 15
TEXT LAYER 1220 ATTACH 1220 metal9
TEXT LAYER 1220 ATTACH 1220 m9_ind_conn
TEXT LAYER 1220 ATTACH 1220 m9_ind_rc
PORT LAYER TEXT 1220
#ENDIF

#ENDIF

#IFDEF TM1_WIDTH 2
TEXT LAYER 2280 ATTACH 2280 metal8
TEXT LAYER 2280 ATTACH 2280 m8_ind_conn
PORT LAYER TEXT 2280

#IFDEF TM2_WIDTH 2
TEXT LAYER 2290 ATTACH 2290 metal9
TEXT LAYER 2290 ATTACH 2290 m9_ind_conn
TEXT LAYER 2290 ATTACH 2290 m9_ind_rc
PORT LAYER TEXT 2290
#ELSE
TEXT LAYER 1220 ATTACH 1220 metal9
TEXT LAYER 1220 ATTACH 1220 m9_ind_conn
TEXT LAYER 1220 ATTACH 1220 m9_ind_rc
PORT LAYER TEXT 1220
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOPMETAL 8

TEXT LAYER 141 ATTACH 141 metal1
PORT LAYER TEXT 141
TEXT LAYER 142 ATTACH 142 metal2
PORT LAYER TEXT 142
TEXT LAYER 610 ATTACH 610 metal1
PORT LAYER TEXT 610
TEXT LAYER 620 ATTACH 620 metal2
PORT LAYER TEXT 620
TEXT LAYER 143 ATTACH 143 metal3
PORT LAYER TEXT 143
TEXT LAYER 144 ATTACH 144 metal4
PORT LAYER TEXT 144
TEXT LAYER 145 ATTACH 145 metal5
PORT LAYER TEXT 145
TEXT LAYER 146 ATTACH 146 metal6
PORT LAYER TEXT 146
TEXT LAYER 630 ATTACH 630 metal3
PORT LAYER TEXT 630
TEXT LAYER 640 ATTACH 640 metal4
PORT LAYER TEXT 640
TEXT LAYER 650 ATTACH 650 metal5
PORT LAYER TEXT 650
TEXT LAYER 660 ATTACH 660 metal6
PORT LAYER TEXT 660

TEXT LAYER 141 ATTACH 141 m1_ind
PORT LAYER TEXT 141
TEXT LAYER 142 ATTACH 142 m2_ind
PORT LAYER TEXT 142
TEXT LAYER 610 ATTACH 610 m1_ind
PORT LAYER TEXT 610
TEXT LAYER 620 ATTACH 620 m2_ind
PORT LAYER TEXT 620
TEXT LAYER 143 ATTACH 143 m3_ind
PORT LAYER TEXT 143
TEXT LAYER 144 ATTACH 144 m4_ind
PORT LAYER TEXT 144
TEXT LAYER 145 ATTACH 145 m5_ind
PORT LAYER TEXT 145
TEXT LAYER 146 ATTACH 146 m6_ind
PORT LAYER TEXT 146
TEXT LAYER 630 ATTACH 630 m3_ind
PORT LAYER TEXT 630
TEXT LAYER 640 ATTACH 640 m4_ind
PORT LAYER TEXT 640
TEXT LAYER 650 ATTACH 650 m5_ind
PORT LAYER TEXT 650
TEXT LAYER 660 ATTACH 660 m6_ind
PORT LAYER TEXT 660


//TEXT LAYER 141 ATTACH 141 mom_metal1
//PORT LAYER TEXT 141
//TEXT LAYER 142 ATTACH 142 mom_metal2
//PORT LAYER TEXT 142
//TEXT LAYER 610 ATTACH 610 mom_metal1
//PORT LAYER TEXT 610
//TEXT LAYER 620 ATTACH 620 mom_metal2
//PORT LAYER TEXT 620
//TEXT LAYER 143 ATTACH 143 mom_metal3
//PORT LAYER TEXT 143
//TEXT LAYER 144 ATTACH 144 mom_metal4
//PORT LAYER TEXT 144
//TEXT LAYER 145 ATTACH 145 mom_metal5
//PORT LAYER TEXT 145
//TEXT LAYER 146 ATTACH 146 mom_metal6
//PORT LAYER TEXT 146
//TEXT LAYER 630 ATTACH 630 mom_metal3
//PORT LAYER TEXT 630
//TEXT LAYER 640 ATTACH 640 mom_metal4
//PORT LAYER TEXT 640
//TEXT LAYER 650 ATTACH 650 mom_metal5
//PORT LAYER TEXT 650
//TEXT LAYER 660 ATTACH 660 mom_metal6
//PORT LAYER TEXT 660

#IFDEF TOP_METAL_NUM single
TEXT LAYER 147 ATTACH 147 metal7
TEXT LAYER 147 ATTACH 147 m7_ind_conn
PORT LAYER TEXT 147
TEXT LAYER 670 ATTACH 670 metal7
TEXT LAYER 670 ATTACH 670 m7_ind_conn
PORT LAYER TEXT 670
TEXT LAYER 1223 ATTACH 1223 metal8
TEXT LAYER 1223 ATTACH 1223 m8_ind_conn
TEXT LAYER 1223 ATTACH 1223 m8_ind_rc
PORT LAYER TEXT 1223

#IFDEF TM2_WIDTH 2
TEXT LAYER 2290 ATTACH 2290 metal8
TEXT LAYER 2290 ATTACH 2290 m8_ind_conn
TEXT LAYER 2290 ATTACH 2290 m8_ind_rc
PORT LAYER TEXT 2290
#ELSE
TEXT LAYER 1220 ATTACH 1220 metal8
TEXT LAYER 1220 ATTACH 1220 m8_ind_conn
TEXT LAYER 1220 ATTACH 1220 m8_ind_rc
PORT LAYER TEXT 1220
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM double
TEXT LAYER 1203 ATTACH 1203 metal7
TEXT LAYER 1203 ATTACH 1203 m7_ind_conn
PORT LAYER TEXT 1203
TEXT LAYER 1223 ATTACH 1223 metal8
TEXT LAYER 1223 ATTACH 1223 m8_ind_conn
TEXT LAYER 1223 ATTACH 1223 m8_ind_rc
PORT LAYER TEXT 1223

#IFDEF TM1_WIDTH 4
TEXT LAYER 1200 ATTACH 1200 metal7
TEXT LAYER 1200 ATTACH 1200 m7_ind_conn
PORT LAYER TEXT 1200

#IFDEF TM2_WIDTH 4
TEXT LAYER 1220 ATTACH 1220 metal8
TEXT LAYER 1220 ATTACH 1220 m8_ind_conn
TEXT LAYER 1220 ATTACH 1220 m8_ind_rc
PORT LAYER TEXT 1220
#ENDIF

#IFDEF TM2_WIDTH 15
TEXT LAYER 1220 ATTACH 1220 metal8
TEXT LAYER 1220 ATTACH 1220 m8_ind_conn
TEXT LAYER 1220 ATTACH 1220 m8_ind_rc
PORT LAYER TEXT 1220
#ENDIF

#ENDIF

#IFDEF TM1_WIDTH 2
TEXT LAYER 2280 ATTACH 2280 metal7
TEXT LAYER 2280 ATTACH 2280 m7_ind_conn
PORT LAYER TEXT 2280

#IFDEF TM2_WIDTH 2
TEXT LAYER 2290 ATTACH 2290 metal8
TEXT LAYER 2290 ATTACH 2290 m8_ind_conn
TEXT LAYER 2290 ATTACH 2290 m8_ind_rc
PORT LAYER TEXT 2290
#ELSE
TEXT LAYER 1220 ATTACH 1220 metal8
TEXT LAYER 1220 ATTACH 1220 m8_ind_conn
TEXT LAYER 1220 ATTACH 1220 m8_ind_rc
PORT LAYER TEXT 1220
#ENDIF
#ENDIF

#ENDIF
#ENDIF

#IFDEF TOPMETAL 7

TEXT LAYER 141 ATTACH 141 metal1
PORT LAYER TEXT 141
TEXT LAYER 142 ATTACH 142 metal2
PORT LAYER TEXT 142
TEXT LAYER 610 ATTACH 610 metal1
PORT LAYER TEXT 610
TEXT LAYER 620 ATTACH 620 metal2
PORT LAYER TEXT 620
TEXT LAYER 143 ATTACH 143 metal3
PORT LAYER TEXT 143
TEXT LAYER 144 ATTACH 144 metal4
PORT LAYER TEXT 144
TEXT LAYER 145 ATTACH 145 metal5
PORT LAYER TEXT 145
TEXT LAYER 630 ATTACH 630 metal3
PORT LAYER TEXT 630
TEXT LAYER 640 ATTACH 640 metal4
PORT LAYER TEXT 640
TEXT LAYER 650 ATTACH 650 metal5
PORT LAYER TEXT 650

TEXT LAYER 141 ATTACH 141 m1_ind
PORT LAYER TEXT 141
TEXT LAYER 142 ATTACH 142 m2_ind
PORT LAYER TEXT 142
TEXT LAYER 610 ATTACH 610 m1_ind
PORT LAYER TEXT 610
TEXT LAYER 620 ATTACH 620 m2_ind
PORT LAYER TEXT 620
TEXT LAYER 143 ATTACH 143 m3_ind
PORT LAYER TEXT 143
TEXT LAYER 144 ATTACH 144 m4_ind
PORT LAYER TEXT 144
TEXT LAYER 145 ATTACH 145 m5_ind
PORT LAYER TEXT 145
TEXT LAYER 630 ATTACH 630 m3_ind
PORT LAYER TEXT 630
TEXT LAYER 640 ATTACH 640 m4_ind
PORT LAYER TEXT 640
TEXT LAYER 650 ATTACH 650 m5_ind
PORT LAYER TEXT 650

//TEXT LAYER 141 ATTACH 141 mom_metal1
//PORT LAYER TEXT 141
//TEXT LAYER 142 ATTACH 142 mom_metal2
//PORT LAYER TEXT 142
//TEXT LAYER 610 ATTACH 610 mom_metal1
//PORT LAYER TEXT 610
//TEXT LAYER 620 ATTACH 620 mom_metal2
//PORT LAYER TEXT 620
//TEXT LAYER 143 ATTACH 143 mom_metal3
//PORT LAYER TEXT 143
//TEXT LAYER 144 ATTACH 144 mom_metal4
//PORT LAYER TEXT 144
//TEXT LAYER 145 ATTACH 145 mom_metal5
//PORT LAYER TEXT 145
//TEXT LAYER 630 ATTACH 630 mom_metal3
//PORT LAYER TEXT 630
//TEXT LAYER 640 ATTACH 640 mom_metal4
//PORT LAYER TEXT 640
//TEXT LAYER 650 ATTACH 650 mom_metal5
//PORT LAYER TEXT 650

#IFDEF TOP_METAL_NUM single
TEXT LAYER 146 ATTACH 146 metal6
TEXT LAYER 146 ATTACH 146 m6_ind_conn
PORT LAYER TEXT 146
TEXT LAYER 660 ATTACH 660 metal6
TEXT LAYER 660 ATTACH 660 m6_ind_conn
PORT LAYER TEXT 660
TEXT LAYER 1223 ATTACH 1223 metal7
TEXT LAYER 1223 ATTACH 1223 m7_ind_conn
TEXT LAYER 1223 ATTACH 1223 m7_ind_rc
PORT LAYER TEXT 1223

#IFDEF TM2_WIDTH 2
TEXT LAYER 2290 ATTACH 2290 metal7
TEXT LAYER 2290 ATTACH 2290 m7_ind_conn
TEXT LAYER 2290 ATTACH 2290 m7_ind_rc
PORT LAYER TEXT 2290
#ELSE
TEXT LAYER 1220 ATTACH 1220 metal7
TEXT LAYER 1220 ATTACH 1220 m7_ind_conn
TEXT LAYER 1220 ATTACH 1220 m7_ind_rc
PORT LAYER TEXT 1220
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM double
TEXT LAYER 1203 ATTACH 1203 metal6
TEXT LAYER 1203 ATTACH 1203 m6_ind_conn
PORT LAYER TEXT 1203
TEXT LAYER 1223 ATTACH 1223 metal7
TEXT LAYER 1223 ATTACH 1223 m7_ind_conn
TEXT LAYER 1223 ATTACH 1223 m7_ind_rc
PORT LAYER TEXT 1223

#IFDEF TM1_WIDTH 4
TEXT LAYER 1200 ATTACH 1200 metal6
TEXT LAYER 1200 ATTACH 1200 m6_ind_conn
PORT LAYER TEXT 1200

#IFDEF TM2_WIDTH 4
TEXT LAYER 1220 ATTACH 1220 metal7
TEXT LAYER 1220 ATTACH 1220 m7_ind_conn
TEXT LAYER 1220 ATTACH 1220 m7_ind_rc
PORT LAYER TEXT 1220
#ENDIF

#IFDEF TM2_WIDTH 15
TEXT LAYER 1220 ATTACH 1220 metal7
TEXT LAYER 1220 ATTACH 1220 m7_ind_conn
TEXT LAYER 1220 ATTACH 1220 m7_ind_rc
PORT LAYER TEXT 1220
#ENDIF

#ENDIF

#IFDEF TM1_WIDTH 2
TEXT LAYER 2280 ATTACH 2280 metal6
TEXT LAYER 2280 ATTACH 2280 m6_ind_conn
PORT LAYER TEXT 2280

#IFDEF TM2_WIDTH 2
TEXT LAYER 2290 ATTACH 2290 metal7
TEXT LAYER 2290 ATTACH 2290 m7_ind_conn
TEXT LAYER 2290 ATTACH 2290 m7_ind_rc
PORT LAYER TEXT 2290
#ELSE
TEXT LAYER 1220 ATTACH 1220 metal7
TEXT LAYER 1220 ATTACH 1220 m7_ind_conn
TEXT LAYER 1220 ATTACH 1220 m7_ind_rc
PORT LAYER TEXT 1220
#ENDIF
#ENDIF

#ENDIF
#ENDIF

#IFDEF TOPMETAL 6

TEXT LAYER 141 ATTACH 141 metal1
PORT LAYER TEXT 141
TEXT LAYER 142 ATTACH 142 metal2
PORT LAYER TEXT 142
TEXT LAYER 610 ATTACH 610 metal1
PORT LAYER TEXT 610
TEXT LAYER 620 ATTACH 620 metal2
PORT LAYER TEXT 620
TEXT LAYER 143 ATTACH 143 metal3
PORT LAYER TEXT 143
TEXT LAYER 144 ATTACH 144 metal4
PORT LAYER TEXT 144
TEXT LAYER 630 ATTACH 630 metal3
PORT LAYER TEXT 630
TEXT LAYER 640 ATTACH 640 metal4
PORT LAYER TEXT 640

TEXT LAYER 141 ATTACH 141 m1_ind
PORT LAYER TEXT 141
TEXT LAYER 142 ATTACH 142 m2_ind
PORT LAYER TEXT 142
TEXT LAYER 610 ATTACH 610 m1_ind
PORT LAYER TEXT 610
TEXT LAYER 620 ATTACH 620 m2_ind
PORT LAYER TEXT 620
TEXT LAYER 143 ATTACH 143 m3_ind
PORT LAYER TEXT 143
TEXT LAYER 144 ATTACH 144 m4_ind
PORT LAYER TEXT 144
TEXT LAYER 630 ATTACH 630 m3_ind
PORT LAYER TEXT 630
TEXT LAYER 640 ATTACH 640 m4_ind
PORT LAYER TEXT 640

//TEXT LAYER 141 ATTACH 141 mom_metal1
//PORT LAYER TEXT 141
//TEXT LAYER 142 ATTACH 142 mom_metal2
//PORT LAYER TEXT 142
//TEXT LAYER 610 ATTACH 610 mom_metal1
//PORT LAYER TEXT 610
//TEXT LAYER 620 ATTACH 620 mom_metal2
//PORT LAYER TEXT 620
//TEXT LAYER 143 ATTACH 143 mom_metal3
//PORT LAYER TEXT 143
//TEXT LAYER 144 ATTACH 144 mom_metal4
//PORT LAYER TEXT 144
//TEXT LAYER 630 ATTACH 630 mom_metal3
//PORT LAYER TEXT 630
//TEXT LAYER 640 ATTACH 640 mom_metal4
//PORT LAYER TEXT 640

#IFDEF TOP_METAL_NUM single
TEXT LAYER 145 ATTACH 145 metal5
TEXT LAYER 145 ATTACH 145 m5_ind_conn
PORT LAYER TEXT 145
TEXT LAYER 650 ATTACH 650 metal5
TEXT LAYER 650 ATTACH 650 m5_ind_conn
PORT LAYER TEXT 650
TEXT LAYER 1223 ATTACH 1223 metal6
TEXT LAYER 1223 ATTACH 1223 m6_ind_conn
TEXT LAYER 1223 ATTACH 1223 m6_ind_rc
PORT LAYER TEXT 1223

#IFDEF TM2_WIDTH 2
TEXT LAYER 2290 ATTACH 2290 metal6
TEXT LAYER 2290 ATTACH 2290 m6_ind_conn
TEXT LAYER 2290 ATTACH 2290 m6_ind_rc
PORT LAYER TEXT 2290
#ELSE
TEXT LAYER 1220 ATTACH 1220 metal6
TEXT LAYER 1220 ATTACH 1220 m6_ind_conn
TEXT LAYER 1220 ATTACH 1220 m6_ind_rc
PORT LAYER TEXT 1220
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM double
TEXT LAYER 1203 ATTACH 1203 metal5
TEXT LAYER 1203 ATTACH 1203 m5_ind_conn
PORT LAYER TEXT 1203
TEXT LAYER 1223 ATTACH 1223 metal6
TEXT LAYER 1223 ATTACH 1223 m6_ind_conn
TEXT LAYER 1223 ATTACH 1223 m6_ind_rc
PORT LAYER TEXT 1223

#IFDEF TM1_WIDTH 4
TEXT LAYER 1200 ATTACH 1200 metal5
TEXT LAYER 1200 ATTACH 1200 m5_ind_conn
PORT LAYER TEXT 1200

#IFDEF TM2_WIDTH 4
TEXT LAYER 1220 ATTACH 1220 metal6
TEXT LAYER 1220 ATTACH 1220 m6_ind_conn
TEXT LAYER 1220 ATTACH 1220 m6_ind_rc
PORT LAYER TEXT 1220
#ENDIF

#IFDEF TM2_WIDTH 15
TEXT LAYER 1220 ATTACH 1220 metal6
TEXT LAYER 1220 ATTACH 1220 m6_ind_conn
TEXT LAYER 1220 ATTACH 1220 m6_ind_rc
PORT LAYER TEXT 1220
#ENDIF

#ENDIF

#IFDEF TM1_WIDTH 2
TEXT LAYER 2280 ATTACH 2280 metal5
TEXT LAYER 2280 ATTACH 2280 m5_ind_conn
PORT LAYER TEXT 2280

#IFDEF TM2_WIDTH 2
TEXT LAYER 2290 ATTACH 2290 metal6
TEXT LAYER 2290 ATTACH 2290 m6_ind_conn
TEXT LAYER 2290 ATTACH 2290 m6_ind_rc
PORT LAYER TEXT 2290
#ELSE
TEXT LAYER 1220 ATTACH 1220 metal6
TEXT LAYER 1220 ATTACH 1220 m6_ind_conn
TEXT LAYER 1220 ATTACH 1220 m6_ind_rc
PORT LAYER TEXT 1220
#ENDIF
#ENDIF

#ENDIF
#ENDIF

#IFDEF TOPMETAL 5

TEXT LAYER 141 ATTACH 141 metal1
PORT LAYER TEXT 141
TEXT LAYER 142 ATTACH 142 metal2
PORT LAYER TEXT 142
TEXT LAYER 610 ATTACH 610 metal1
PORT LAYER TEXT 610
TEXT LAYER 620 ATTACH 620 metal2
PORT LAYER TEXT 620
TEXT LAYER 143 ATTACH 143 metal3
PORT LAYER TEXT 143
TEXT LAYER 630 ATTACH 630 metal3
PORT LAYER TEXT 630

#IFDEF TOP_METAL_NUM single
TEXT LAYER 144 ATTACH 144 metal4
PORT LAYER TEXT 144
TEXT LAYER 640 ATTACH 640 metal4
PORT LAYER TEXT 640
TEXT LAYER 1223 ATTACH 1223 metal5
PORT LAYER TEXT 1223

#IFDEF TM2_WIDTH 2
TEXT LAYER 2290 ATTACH 2290 metal5
PORT LAYER TEXT 2290
#ELSE
TEXT LAYER 1220 ATTACH 1220 metal5
PORT LAYER TEXT 1220
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM double
TEXT LAYER 1203 ATTACH 1203 metal4
PORT LAYER TEXT 1203
TEXT LAYER 1223 ATTACH 1223 metal5
PORT LAYER TEXT 1223

#IFDEF TM1_WIDTH 4
TEXT LAYER 1200 ATTACH 1200 metal4
PORT LAYER TEXT 1200

#IFDEF TM2_WIDTH 4
TEXT LAYER 1220 ATTACH 1220 metal5
PORT LAYER TEXT 1220
#ENDIF

#IFDEF TM2_WIDTH 15
TEXT LAYER 1220 ATTACH 1220 metal5
PORT LAYER TEXT 1220
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 2
TEXT LAYER 2280 ATTACH 2280 metal4
PORT LAYER TEXT 2280

#IFDEF TM2_WIDTH 2
TEXT LAYER 2290 ATTACH 2290 metal5
PORT LAYER TEXT 2290
#ELSE
TEXT LAYER 1220 ATTACH 1220 metal5
PORT LAYER TEXT 1220
#ENDIF
#ENDIF

#ENDIF
#ENDIF

#IFDEF TOPMETAL 4

TEXT LAYER 141 ATTACH 141 metal1
PORT LAYER TEXT 141
TEXT LAYER 142 ATTACH 142 metal2
PORT LAYER TEXT 142
TEXT LAYER 610 ATTACH 610 metal1
PORT LAYER TEXT 610
TEXT LAYER 620 ATTACH 620 metal2
PORT LAYER TEXT 620
TEXT LAYER 143 ATTACH 143 metal3
PORT LAYER TEXT 143
TEXT LAYER 630 ATTACH 630 metal3
PORT LAYER TEXT 630

#IFDEF TOP_METAL_NUM single
TEXT LAYER 1223 ATTACH 1223 metal4
PORT LAYER TEXT 1223

#IFDEF TM2_WIDTH 2
TEXT LAYER 2290 ATTACH 2290 metal4
PORT LAYER TEXT 2290
#ELSE
TEXT LAYER 1220 ATTACH 1220 metal4
PORT LAYER TEXT 1220
#ENDIF
#ENDIF
#ENDIF

//////////////////////////////////////////////
// Loigc Operation                          //
//////////////////////////////////////////////

//*Form Bulk layer
DRC:1   = EXTENT
//DRC:1   = EXTENT DRAWN ORIGINAL
BULK    = SIZE DRC:1 BY 0.001

//*Define Pwell layer
scut    = SIZE SUBD  BY 0.005
cutring = scut NOT SUBD
wella   = cutring OR NW
pwell   = BULK NOT wella
pwell_wpe_core = ((((SIZE DRC:1 BY 2.000) NOT NW) NOT DG) NOT TG) NOT PSUB  
pwell_wpe_IO1  = ((((SIZE DRC:1 BY 2.000) NOT NW) AND DG) NOT TG) NOT PSUB 
pwell_wpe_IO2  = ((((SIZE DRC:1 BY 2.000) NOT NW) NOT DG) AND TG) NOT PSUB
//pwell_wpe   = BULK NOT NW
rwella  = NW HOLES
rwellb  = rwella AND DNW
rwell1  = rwellb NOT nwell
rwell   = rwell1 NOT cutring
rwell_wpe_core   = ((rwell NOT DG) NOT TG) NOT PSUB
rwell_wpe_IO1    = ((rwell AND DG) NOT TG) NOT PSUB
rwell_wpe_IO2    = ((rwell NOT DG) AND TG) NOT PSUB
pwell1  = pwell AND rwell
dnwd_psub = pwell NOT pwell1
psub_all  = (BULK NOT DNW) NOT cutring
//nwell_DNW = DNW OR (nwell INTERACT DNW)
bulk_all  = BULK NOT cutring

ndifi   = AA AND SN
pdifi   = AA AND SP

npolyi   = GT AND SN
ppolyi   = GT AND SP

//*Diffusion Resistor

DIFNOSILI   = RESAA AND SAB
DIFDUMSAB   = RESAA INTERACT SAB
DIFSILI     = RESAA NOT DIFDUMSAB

RES_RNDIFSAB_old      = (((ndifi AND DIFNOSILI) NOT RFDEV) NOT RF3T) NOT RESCKT
RES_RNDIFSAB_CKT_old  = ((ndifi AND DIFNOSILI) NOT RFDEV) AND RESCKT
RES_RNDIFSAB_RF_old   = (ndifi AND DIFNOSILI) AND RFDEV
RES_RNDIFSAB_RF3T = ((ndifi AND DIFNOSILI) AND RFDEV) AND RF3T

RES_RPDIFSAB_old     = (((pdifi AND DIFNOSILI) NOT RFDEV) NOT RF3T) NOT RESCKT
RES_RPDIFSAB_CKT_old = ((pdifi AND DIFNOSILI) NOT RFDEV) AND RESCKT
RES_RPDIFSAB_RF_old  = (pdifi AND DIFNOSILI) AND RFDEV
RES_RPDIFSAB_RF3T= ((pdifi AND DIFNOSILI) AND RFDEV) AND RF3T

RES_RNDIF_old    = (ndifi AND DIFSILI) NOT RESCKT
RES_RNDIF_CKT_old= (ndifi AND DIFSILI) AND RESCKT
RES_RPDIF_old    = (pdifi AND DIFSILI) NOT RESCKT
RES_RPDIF_CKT_old= (pdifi AND DIFSILI) AND RESCKT

ndif = (((((ndifi  NOT RES_RNDIFSAB) NOT RES_RNDIFSAB_CKT) NOT RES_RNDIF) NOT RES_RNDIF_CKT) NOT RES_RNDIFSAB_RF) NOT RES_RNDIFSAB_RF3T
pdif = (((((pdifi  NOT RES_RPDIFSAB) NOT RES_RPDIFSAB_CKT) NOT RES_RPDIF) NOT RES_RPDIF_CKT) NOT RES_RPDIFSAB_RF) NOT RES_RPDIFSAB_RF3T


//*Poly Resistor

POLYNOSILI  = RESP1 AND SAB
POLYDUMSAB  = RESP1 INTERACT SAB
POLYSILI    = RESP1 NOT POLYDUMSAB

RES_RNPOSAB_old       = ((((npolyi AND POLYNOSILI) NOT RESP3T) NOT RFDEV) NOT RF3T) NOT RESCKT
RES_RNPOSAB_CKT_old   = ((((npolyi AND POLYNOSILI) NOT RESP3T) NOT RFDEV) NOT RF3T) AND RESCKT
RES_RNPOSAB_RF_old    = (((npolyi AND POLYNOSILI) NOT RESP3T) AND RFDEV) NOT RF3T
RES_RNPOSAB_RF3T  = (((npolyi AND POLYNOSILI) NOT RESP3T) AND RFDEV) AND RF3T
RES_RNPOSAB_RF3T_NW_old = RES_RNPOSAB_RF3T AND nwell
RES_RNPOSAB_RF3T_PW_old = RES_RNPOSAB_RF3T NOT nwell

RES_RNPOSAB_3T_old    = (((npolyi AND POLYNOSILI) AND RESP3T) NOT RFDEV) NOT RESCKT
RES_RNPOSAB_3T_CKT= (((npolyi AND POLYNOSILI) AND RESP3T) NOT RFDEV) AND RESCKT
RES_RNPOSAB_3T_NW     = RES_RNPOSAB_3T AND nwell
RES_RNPOSAB_3T_PW     = RES_RNPOSAB_3T NOT nwell
RES_RNPOSAB_3T_NW_CKT_old = RES_RNPOSAB_3T_CKT AND nwell
RES_RNPOSAB_3T_PW_CKT_old = RES_RNPOSAB_3T_CKT NOT nwell


RES_RPPOSAB_old       = ((((ppolyi AND POLYNOSILI) NOT RESP3T) NOT RFDEV) NOT RF3T) NOT RESCKT
RES_RPPOSAB_CKT_old   = ((((ppolyi AND POLYNOSILI) NOT RESP3T) NOT RFDEV) NOT RF3T) AND RESCKT
RES_RPPOSAB_RF_old    = (((ppolyi AND POLYNOSILI) NOT RESP3T) AND RFDEV) NOT RF3T
RES_RPPOSAB_RF3T  = (((ppolyi AND POLYNOSILI) NOT RESP3T) AND RFDEV) AND RF3T
RES_RPPOSAB_RF3T_NW_old = RES_RPPOSAB_RF3T AND nwell
RES_RPPOSAB_RF3T_PW_old = RES_RPPOSAB_RF3T NOT nwell

RES_RPPOSAB_3T_old    = (((ppolyi AND POLYNOSILI) AND RESP3T) NOT RFDEV) NOT RESCKT
RES_RPPOSAB_3T_CKT= (((ppolyi AND POLYNOSILI) AND RESP3T) NOT RFDEV) AND RESCKT
RES_RPPOSAB_3T_NW = RES_RPPOSAB_3T AND nwell
RES_RPPOSAB_3T_PW = RES_RPPOSAB_3T NOT nwell
RES_RPPOSAB_3T_NW_CKT_old = RES_RPPOSAB_3T_CKT AND nwell
RES_RPPOSAB_3T_PW_CKT_old = RES_RPPOSAB_3T_CKT NOT nwell

RES_RNPO_old          = ((npolyi AND POLYSILI) NOT RESP3T) NOT RESCKT
RES_RNPO_CKT_old      = ((npolyi AND POLYSILI) NOT RESP3T) AND RESCKT
RES_RNPO_3T_old       = ((npolyi AND POLYSILI) AND RESP3T) NOT RESCKT
RES_RNPO_3T_CKT   = ((npolyi AND POLYSILI) AND RESP3T) AND RESCKT
RES_RNPO_3T_NW    = RES_RNPO_3T AND nwell
RES_RNPO_3T_PW    = RES_RNPO_3T NOT nwell
RES_RNPO_3T_NW_CKT_old= RES_RNPO_3T_CKT AND nwell
RES_RNPO_3T_PW_CKT_old= RES_RNPO_3T_CKT NOT nwell

RES_RPPO_old          = ((ppolyi AND POLYSILI) NOT RESP3T) NOT RESCKT
RES_RPPO_CKT_old      = ((ppolyi AND POLYSILI) NOT RESP3T) AND RESCKT
RES_RPPO_3T_old       = ((ppolyi AND POLYSILI) AND RESP3T) NOT RESCKT
RES_RPPO_3T_CKT   = ((ppolyi AND POLYSILI) AND RESP3T) AND RESCKT
RES_RPPO_3T_NW    = RES_RPPO_3T AND nwell
RES_RPPO_3T_PW    = RES_RPPO_3T NOT nwell
RES_RPPO_3T_NW_CKT_old= RES_RPPO_3T_CKT AND nwell
RES_RPPO_3T_PW_CKT_old= RES_RPPO_3T_CKT NOT nwell

npr = ((((((((((((RES_RNPOSAB OR RES_RNPOSAB_CKT) OR RES_RNPOSAB_3T_NW) OR RES_RNPOSAB_3T_NW_CKT) OR RES_RNPOSAB_3T_PW) OR RES_RNPOSAB_3T_PW_CKT) OR RES_RNPO) OR RES_RNPO_CKT) OR RES_RNPO_3T_NW) OR RES_RNPO_3T_NW_CKT) OR RES_RNPO_3T_PW) OR RES_RNPO_3T_PW_CKT) OR RES_RNPOSAB_RF) OR RES_RNPOSAB_RF3T
ppr = ((((((((((((RES_RPPOSAB OR RES_RPPOSAB_CKT) OR RES_RPPOSAB_3T_NW) OR RES_RPPOSAB_3T_NW_CKT) OR RES_RPPOSAB_3T_PW) OR RES_RPPOSAB_3T_PW_CKT) OR RES_RPPO) OR RES_RPPO_CKT) OR RES_RPPO_3T_NW) OR RES_RPPO_3T_NW_CKT) OR RES_RPPO_3T_PW) OR RES_RPPO_3T_PW_CKT) OR RES_RPPOSAB_RF) OR RES_RPPOSAB_RF3T


//RES_RHRPO         = (((GT AND HRP) AND HRPDMY) AND SAB) NOT RESP3T
//RES_RHRPO_3T      = (((GT AND HRP) AND HRPDMY) AND SAB) AND RESP3T 
//RES_RHRPO_3T_NW   = RES_RHRPO_3T AND nwell
//RES_RHRPO_3T_PW   = RES_RHRPO_3T NOT nwell 

//*Define HRP poly resisitor
hrppoly     = GT AND HRP
hrpdums     = HRPDMY AND SAB
hrppo1      = (hrppoly AND hrpdums) NOT RESP3T

RES_RHRPO_old       = ((hrppo1 NOT RFDEV) NOT RESCKT) INTERACT SP 
RES_RHRPO_CKT_old   = ((hrppo1 NOT RFDEV) AND RESCKT) INTERACT SP
RES_RHRPO_3T_old    = (((hrppoly AND hrpdums) AND RESP3T) NOT RESCKT) INTERACT SP
RES_RHRPO_3T_CKT = (((hrppoly AND hrpdums) AND RESP3T) AND RESCKT) INTERACT SP
RES_RHRPO_3T_CKT_NW_old = RES_RHRPO_3T_CKT AND nwell
RES_RHRPO_3T_CKT_PW_old = RES_RHRPO_3T_CKT NOT nwell
RES_RHRPO_RF_old    = ((hrppo1 AND RFDEV) NOT RF3T) INTERACT SP
RES_RHRPO_RF_3T = ((hrppoly AND hrpdums) AND RF3T)INTERACT SP 
RES_RHRPO_RF_3T_NW_old = RES_RHRPO_RF_3T AND nwell
RES_RHRPO_RF_3T_PW_old = RES_RHRPO_RF_3T NOT nwell


#IFDEF EFUSE_RES TRUE
rpoly    = (((((((((npr OR ppr) OR RES_RHRPO) OR RES_RHRPO_CKT) OR RES_RHRPO_3T) OR RES_RHRPO_3T_CKT_NW) OR RES_RHRPO_3T_CKT_PW) OR RES_RHRPO_RF) OR RES_RHRPO_RF_3T_NW) OR RES_RHRPO_RF_3T_PW)  OR efgate
#ELSE
rpoly    = ((((((((npr OR ppr) OR RES_RHRPO) OR RES_RHRPO_CKT) OR RES_RHRPO_3T) OR RES_RHRPO_3T_CKT_NW) OR RES_RHRPO_3T_CKT_PW) OR RES_RHRPO_RF) OR RES_RHRPO_RF_3T_NW) OR RES_RHRPO_RF_3T_PW

#ENDIF

//poly1    = GT  NOT rpoly

EGL4_GT  = EGLMR1 with text "EGL4" 
EGL4_GT2 = EGLMR2 with text "EGL4" 
EGL4_SD  = EGL4_GT2 NOT EGL4_GT

EGL1_GT1 = EGLMR1 with text "EGL1"
EGL1_GT2 = EGLMR2 with text "EGL1"
EGL1_GT  = EGL1_GT1 OR EGL1_GT2

poly1      = ((GT  NOT rpoly) NOT EGL4_GT) NOT EGL1_GT
poly1_egl4 = (GT  NOT rpoly) AND EGL4_GT
poly1_egl4_box1 = Extents (EGL4_GT NOT poly1_egl4)
poly1_egl4_box2 = Extents poly1_egl4
poly1_egl4_box  = poly1_egl4_box2 NOT poly1_egl4_box1
//poly1_egl4_box  = copy poly1_egl4
poly1_egl1 = (GT  NOT rpoly) AND EGL1_GT
//poly1_egl1_box  = Extents poly1_egl1
//poly1_egl1_box  = copy EGL1MR1
poly1_egl1_box  = copy poly1_egl1

//efpoly1 = (GT AND SP) AND EFUSE
efpoly1 = GT AND EFUSE
efpoly2 = efpoly1 INTERACT CT
efgate_old  = efpoly2 AND GTFUSE
efpoly  = efpoly2 NOT efgate

//*NWELL Resistor

nwr     = NW AND RESNW
sabaa   = aa AND sab
RES_RNWAA_old       = (nwr AND sabaa) NOT RESCKT
RES_RNWAA_CKT_old   = (nwr AND sabaa) AND RESCKT
RES_RNWSTI_old      = (nwr NOT sabaa) NOT RESCKT
RES_RNWSTI_CKT_old  = (nwr NOT sabaa) AND RESCKT

nwell   = NW not nwr
nwell_wpe_core = ((nwell NOT DG) NOT TG) NOT PSUB
nwell_wpe_IO1  = ((nwell AND DG) NOT TG) NOT PSUB
nwell_wpe_IO2  = ((nwell NOT DG) AND TG) NOT PSUB

//*Metal Resistor

rdl_res      = (iRDL AND ALPAR) NOT RESCKT
rdl_res_ckt  = (iRDL AND ALPAR) AND RESCKT
rdl_ind      = iRDL AND INDMY
rdl_ind_conn = rdl_ind NOT PSUB
rdl_2d8ind_conn = rdl_ind not RFDEV

RDL          = iRDL NOT (ALPAR OR rdl_ind)

rm1     = (M1 AND M1R) NOT RESCKT
rm1_ckt = (M1 AND M1R) AND RESCKT
metal1a = M1 NOT M1R
rm2     = (M2 AND M2R) NOT RESCKT
rm2_ckt = (M2 AND M2R) AND RESCKT
metal2a = M2 NOT M2R
rm3     = (M3 AND M3R) NOT RESCKT
rm3_ckt = (M3 AND M3R) AND RESCKT
metal3a = M3 NOT M3R

#IFDEF TOPMETAL 10
rm4     = (M4 AND M4R) NOT RESCKT
rm4_ckt = (M4 AND M4R) AND RESCKT
metal4a = M4 NOT M4R
rm5     = (M5 AND M5R) NOT RESCKT
rm5_ckt = (M5 AND M5R) AND RESCKT
metal5a = M5 NOT M5R
rm6     = (M6 AND M6R) NOT RESCKT
rm6_ckt = (M6 AND M6R) AND RESCKT
metal6a = M6 NOT M6R
rm7     = (M7 AND M7R) NOT RESCKT
rm7_ckt = (M7 AND M7R) AND RESCKT
metal7a = M7 NOT M7R
rm8     = (M8 AND M8R) NOT RESCKT
rm8_ckt = (M8 AND M8R) AND RESCKT
metal8a = M8 NOT M8R

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 4
rm9     = (TM1 AND TM1R) NOT RESCKT
rm9_ckt = (TM1 AND TM1R) AND RESCKT
metal9a = TM1 NOT TM1R

#IFDEF TM2_WIDTH 4
rm10    = ((TM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm10_ckt= ((TM2 AND TM2R) NOT RFDEV) AND RESCKT
rm10_rf = (TM2 AND TM2R) AND RFDEV
metal10a = TM2 NOT TM2R
#ENDIF

#IFDEF TM2_WIDTH 15
rm10    = ((TM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm10_ckt= ((TM2 AND TM2R) NOT RFDEV) AND RESCKT
rm10_rf = (TM2 AND TM2R) AND RFDEV
metal10a = TM2 NOT TM2R
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 2
rm9     = (STM1 AND TM1R) NOT RESCKT
rm9_ckt = (STM1 AND TM1R) AND RESCKT
metal9a = STM1 NOT TM1R

#IFDEF TM2_WIDTH 2
rm10    = ((STM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm10_ckt= ((STM2 AND TM2R) NOT RFDEV) AND RESCKT
rm10_rf = (STM2 AND TM2R) AND RFDEV
metal10a = STM2 NOT TM2R
#ELSE
rm10    = ((TM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm10_ckt= ((TM2 AND TM2R) NOT RFDEV) AND RESCKT
rm10_rf = (TM2 AND TM2R) AND RFDEV
metal10a = TM2 NOT TM2R
#ENDIF
#ENDIF

#ENDIF
#ENDIF

#IFDEF TOPMETAL 9
rm4     = (M4 AND M4R) NOT RESCKT
rm4_ckt = (M4 AND M4R) AND RESCKT
metal4a = M4 NOT M4R
rm5     = (M5 AND M5R) NOT RESCKT
rm5_ckt = (M5 AND M5R) AND RESCKT
metal5a = M5 NOT M5R
rm6     = (M6 AND M6R) NOT RESCKT
rm6_ckt = (M6 AND M6R) AND RESCKT
metal6a = M6 NOT M6R
rm7      = (M7 AND M7R) NOT RESCKT
rm7_ckt  = (M7 AND M7R) AND RESCKT
metal7a   = M7 NOT M7R

#IFDEF TOP_METAL_NUM single
rm8       = (M8 AND M8R) NOT RESCKT
rm8_ckt   = (M8 AND M8R) AND RESCKT
metal8a   = M8 NOT M8R

#IFDEF TM2_WIDTH 2
rm9       = ((STM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm9_ckt   = ((STM2 AND TM2R) NOT RFDEV) AND RESCKT
rm9_rf    = (STM2 AND TM2R) AND RFDEV
metal9a   = STM2 NOT TM2R
#ELSE
rm9       = ((TM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm9_ckt   = ((TM2 AND TM2R) NOT RFDEV) AND RESCKT
rm9_rf    = (TM2 AND TM2R) AND RFDEV
metal9a   = TM2 NOT TM2R
#ENDIF

#ENDIF

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 4
rm8     = (TM1 AND TM1R) NOT RESCKT
rm8_ckt = (TM1 AND TM1R) AND RESCKT
metal8a = TM1 NOT TM1R

#IFDEF TM2_WIDTH 4
rm9     = ((TM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm9_ckt = ((TM2 AND TM2R) NOT RFDEV) AND RESCKT
rm9_rf  = (TM2 AND TM2R) AND RFDEV
metal9a = TM2 NOT TM2R
#ENDIF

#IFDEF TM2_WIDTH 15
rm9     = ((TM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm9_ckt = ((TM2 AND TM2R) NOT RFDEV) AND RESCKT
rm9_rf  = (TM2 AND TM2R) AND RFDEV
metal9a = TM2 NOT TM2R
#ENDIF

#ENDIF

#IFDEF TM1_WIDTH 2
rm8     = (STM1 AND TM1R) NOT RESCKT
rm8_ckt = (STM1 AND TM1R) AND RESCKT
metal8a = STM1 NOT TM1R

#IFDEF TM2_WIDTH 2
rm9     = ((STM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm9_ckt = ((STM2 AND TM2R) NOT RFDEV) AND RESCKT
rm9_rf  = (STM2 AND TM2R) AND RFDEV
metal9a = STM2 NOT TM2R
#ELSE
rm9     = ((TM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm9_ckt = ((TM2 AND TM2R) NOT RFDEV) AND RESCKT
rm9_rf  = (TM2 AND TM2R) AND RFDEV
metal9a = TM2 NOT TM2R
#ENDIF
#ENDIF

#ENDIF
#ENDIF

#IFDEF TOPMETAL 8
rm4     = (M4 AND M4R) NOT RESCKT
rm4_ckt = (M4 AND M4R) AND RESCKT
metal4a = M4 NOT M4R
rm5     = (M5 AND M5R) NOT RESCKT
rm5_ckt = (M5 AND M5R) AND RESCKT
metal5a = M5 NOT M5R
rm6     = (M6 AND M6R) NOT RESCKT
rm6_ckt = (M6 AND M6R) AND RESCKT
metal6a = M6 NOT M6R

#IFDEF TOP_METAL_NUM single
rm7       = (M7 AND M7R) NOT RESCKT
rm7_ckt   = (M7 AND M7R) AND RESCKT
metal7a   = M7 NOT M7R

#IFDEF TM2_WIDTH 2
rm8       = ((STM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm8_ckt   = ((STM2 AND TM2R) NOT RFDEV) AND RESCKT
rm8_rf    = (STM2 AND TM2R) AND RFDEV
metal8a   = STM2 NOT TM2R
#ELSE
rm8       = ((TM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm8_ckt   = ((TM2 AND TM2R) NOT RFDEV) AND RESCKT
rm8_rf    = (TM2 AND TM2R) AND RFDEV
metal8a  = TM2 NOT TM2R
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 4
rm7     = (TM1 AND TM1R) NOT RESCKT
rm7_ckt = (TM1 AND TM1R) AND RESCKT
metal7a = TM1 NOT TM1R

#IFDEF TM2_WIDTH 4
rm8     = ((TM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm8_ckt = ((TM2 AND TM2R) NOT RFDEV) AND RESCKT
rm8_rf  = (TM2 AND TM2R) AND RFDEV
metal8a = TM2 NOT TM2R
#ENDIF

#IFDEF TM2_WIDTH 15
rm8     = ((TM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm8_ckt = ((TM2 AND TM2R) NOT RFDEV) AND RESCKT
rm8_rf  = (TM2 AND TM2R) AND RFDEV
metal8a = TM2 NOT TM2R
#ENDIF

#ENDIF

#IFDEF TM1_WIDTH 2
rm7     = (STM1 AND TM1R) NOT RESCKT
rm7_ckt = (STM1 AND TM1R) AND RESCKT
metal7a = STM1 NOT TM1R

#IFDEF TM2_WIDTH 2
rm8     = ((STM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm8_ckt = ((STM2 AND TM2R) NOT RFDEV) AND RESCKT
rm8_rf  = (STM2 AND TM2R) AND RFDEV
metal8a = STM2 NOT TM2R
#ELSE
rm8     = ((TM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm8_ckt = ((TM2 AND TM2R) NOT RFDEV) AND RESCKT
rm8_rf  = (TM2 AND TM2R) AND RFDEV
metal8a = TM2 NOT TM2R
#ENDIF
#ENDIF

#ENDIF
#ENDIF

#IFDEF TOPMETAL 7
rm4     = (M4 AND M4R) NOT RESCKT
rm4_ckt = (M4 AND M4R) AND RESCKT
metal4a = M4 NOT M4R
rm5     = (M5 AND M5R) NOT RESCKT
rm5_ckt = (M5 AND M5R) AND RESCKT
metal5a = M5 NOT M5R

#IFDEF TOP_METAL_NUM single
rm6       = (M6 AND M6R) NOT RESCKT
rm6_ckt   = (M6 AND M6R) AND RESCKT
metal6a   = M6 NOT M6R

#IFDEF TM2_WIDTH 2
rm7       = ((STM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm7_ckt   = ((STM2 AND TM2R) NOT RFDEV) AND RESCKT
rm7_rf    = (STM2 AND TM2R) AND RFDEV
metal7a   = STM2 NOT TM2R
#ELSE
rm7       = ((TM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm7_ckt   = ((TM2 AND TM2R) NOT RFDEV) AND RESCKT
rm7_rf    = (TM2 AND TM2R) AND RFDEV
metal7a   = TM2 NOT TM2R
#ENDIF

#ENDIF

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 4
rm6     = (TM1 AND TM1R) NOT RESCKT
rm6_ckt = (TM1 AND TM1R) AND RESCKT
metal6a = TM1 NOT TM1R

#IFDEF TM2_WIDTH 4
rm7     = ((TM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm7_ckt = ((TM2 AND TM2R) NOT RFDEV) AND RESCKT
rm7_rf  = (TM2 AND TM2R) AND RFDEV
metal7a = TM2 NOT TM2R
#ENDIF

#IFDEF TM2_WIDTH 15
rm7     = ((TM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm7_ckt = ((TM2 AND TM2R) NOT RFDEV) AND RESCKT
rm7_rf  = (TM2 AND TM2R) AND RFDEV
metal7a = TM2 NOT TM2R
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 2
rm6     = (STM1 AND TM1R) NOT RESCKT
rm6_ckt = (STM1 AND TM1R) AND RESCKT
metal6a = STM1 NOT TM1R

#IFDEF TM2_WIDTH 2
rm7     = ((STM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm7_ckt = ((STM2 AND TM2R) NOT RFDEV) AND RESCKT
rm7_rf  = (STM2 AND TM2R) AND RFDEV
metal7a = STM2 NOT TM2R
#ELSE
rm7     = ((TM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm7_ckt = ((TM2 AND TM2R) NOT RFDEV) AND RESCKT
rm7_rf  = (TM2 AND TM2R) AND RFDEV
metal7a = TM2 NOT TM2R
#ENDIF
#ENDIF

#ENDIF
#ENDIF

#IFDEF TOPMETAL 6
rm4     = (M4 AND M4R) NOT RESCKT
rm4_ckt = (M4 AND M4R) AND RESCKT
metal4a = M4 NOT M4R

#IFDEF TOP_METAL_NUM single
rm5     = (M5  AND M5R) NOT RESCKT
rm5_ckt = (M5  AND M5R) AND RESCKT
metal5a = M5  NOT M5R

#IFDEF TM2_WIDTH 2
rm6     = ((STM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm6_ckt = ((STM2 AND TM2R) NOT RFDEV) AND RESCKT
rm6_rf  = (STM2 AND TM2R) AND RFDEV
metal6a = STM2 NOT TM2R
#ELSE
rm6     = ((TM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm6_ckt = ((TM2 AND TM2R) NOT RFDEV) AND RESCKT
rm6_rf  = (TM2 AND TM2R) AND RFDEV
metal6a = TM2 NOT TM2R
#ENDIF

#ENDIF

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 4
rm5     = (TM1 AND TM1R) NOT RESCKT
rm5_ckt = (TM1 AND TM1R) AND RESCKT
metal5a = TM1 NOT TM1R

#IFDEF TM2_WIDTH 4
rm6     = ((TM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm6_ckt = ((TM2 AND TM2R) NOT RFDEV) AND RESCKT
rm6_rf  = (TM2 AND TM2R) AND RFDEV
metal6a = TM2 NOT TM2R
#ENDIF

#IFDEF TM2_WIDTH 15
rm6     = ((TM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm6_ckt = ((TM2 AND TM2R) NOT RFDEV) AND RESCKT
rm6_rf  = (TM2 AND TM2R) AND RFDEV
metal6a = TM2 NOT TM2R
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 2
rm5     = (STM1 AND TM1R) NOT RESCKT
rm5_ckt = (STM1 AND TM1R) AND RESCKT
metal5a = STM1 NOT TM1R

#IFDEF TM2_WIDTH 2
rm6     = ((STM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm6_ckt = ((STM2 AND TM2R) NOT RFDEV) AND RESCKT
rm6_rf  = (STM2 AND TM2R) AND RFDEV
metal6a = STM2 NOT TM2R
#ELSE
rm6     = ((TM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm6_ckt = ((TM2 AND TM2R) NOT RFDEV) AND RESCKT
rm6_rf  = (TM2 AND TM2R) AND RFDEV
metal6a = TM2 NOT TM2R
#ENDIF
#ENDIF

#ENDIF
#ENDIF

#IFDEF TOPMETAL 5

#IFDEF TOP_METAL_NUM single
rm4     = (M4 AND M4R) NOT RESCKT
rm4_ckt = (M4 AND M4R) AND RESCKT
metal4a = M4 NOT M4R

#IFDEF TM2_WIDTH 2
rm5     = ((STM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm5_ckt = ((STM2 AND TM2R) NOT RFDEV) AND RESCKT
rm5_rf  = (STM2 AND TM2R) AND RFDEV
metal5a = STM2 NOT TM2R
#ELSE
rm5     = ((TM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm5_ckt = ((TM2 AND TM2R) NOT RFDEV) AND RESCKT
rm5_rf  = (TM2 AND TM2R) AND RFDEV
metal5a = TM2 NOT TM2R
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 4
rm4     = (TM1 AND TM1R) NOT RESCKT
rm4_ckt = (TM1 AND TM1R) AND RESCKT
metal4a = TM1 NOT TM1R

#IFDEF TM2_WIDTH 4
rm5     = ((TM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm5_ckt = ((TM2 AND TM2R) NOT RFDEV) AND RESCKT
rm5_rf  = (TM2 AND TM2R) AND RFDEV
metal5a = TM2 NOT TM2R
#ENDIF

#IFDEF TM2_WIDTH 15
rm5     = ((TM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm5_ckt = ((TM2 AND TM2R) NOT RFDEV) AND RESCKT
rm5_rf  = (TM2 AND TM2R) AND RFDEV
metal5a = TM2 NOT TM2R
#ENDIF

#ENDIF

#IFDEF TM1_WIDTH 2
rm4     = (STM1 AND TM1R) NOT RESCKT
rm4_ckt = (STM1 AND TM1R) AND RESCKT
metal4a = STM1 NOT TM1R

#IFDEF TM2_WIDTH 2
rm5     = ((STM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm5_ckt = ((STM2 AND TM2R) NOT RFDEV) AND RESCKT
rm5_rf  = (STM2 AND TM2R) AND RFDEV
metal5a = STM2 NOT TM2R
#ELSE
rm5     = ((TM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm5_ckt = ((TM2 AND TM2R) NOT RFDEV) AND RESCKT
rm5_rf  = (TM2 AND TM2R) AND RFDEV
metal5a = TM2 NOT TM2R
#ENDIF
#ENDIF

#ENDIF
#ENDIF

#IFDEF TOPMETAL 4

#IFDEF TOP_METAL_NUM single

#IFDEF TM2_WIDTH 2
rm4     = ((STM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm4_ckt = ((STM2 AND TM2R) NOT RFDEV) AND RESCKT
rm4_rf  = (STM2 AND TM2R) AND RFDEV
metal4a = STM2 NOT TM2R
#ELSE
rm4     = ((TM2 AND TM2R) NOT RFDEV) NOT RESCKT
rm4_ckt = ((TM2 AND TM2R) NOT RFDEV) AND RESCKT
rm4_rf  = (TM2 AND TM2R) AND RFDEV
metal4a = TM2 NOT TM2R
#ENDIF
#ENDIF
#ENDIF

//*End of Resistor

//*Define MOM Device
#IFDEF TOPMETAL 4
#IFDEF TOP_METAL_NUM single

mom_metal1         = metal1a AND MOMDMY
mom_v1             = Via1 AND MOMDMY
V1                 = copy Via1
metal1b            = copy metal1a 
mom_metal2         = metal2a AND MOMDMY
mom_v2             = Via2 AND MOMDMY
V2                 = copy Via2
metal2b            = copy metal2a
mom_metal3         = metal3a AND MOMDMY
metal3b            = copy metal3a

mom_m1_m3_via = mom_v1 AND mom_v2

mom_text = (mom12reg_1 or mom13reg_1) or mom23reg_1


mom12reg_1    = MOMDMY with text "momcap12"
mom12tt1       = mom_metal1 AND mom_metal2
mom12f1        = mom12tt1 NOT INTERACT mom_v1
mom12reg1      = EXTENTS (SIZE (mom12f1 AND mom12reg_1) BY 0.1 INSIDE OF MOMDMY)
mom12tt2       = (mom_metal1 AND mom_metal2) NOT INTERACT mom_metal3
mom12f2        = mom12tt2 NOT INTERACT mom_v1
mom12reg2      = (EXTENTS (SIZE mom12f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom12reg       = mom12reg1 OR mom12reg2
mom12f         = mom12f1 OR mom12f2
momcap12      = (((mom12reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap12_3t   = (((mom12reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap12rf    = (((mom12reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap12rf_3t = (((mom12reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal12
mom_terminal12= ((mom_metal1 AND mom_metal2) INTERACT mom12reg) ENCLOSE mom_v1

momcap12rf_wips    = momcap12rf AND MOM_poly
momcap12rf_wops    = momcap12rf NOT MOM_poly
momcap12rf_3t_wips = momcap12rf_3t AND MOM_poly
momcap12rf_3t_wops = momcap12rf_3t NOT MOM_poly
momcap12_3t_wips   = (momcap12_3t AND mom_gt) NOT INTERACT mom_wims
momcap12_3t_wops   = (momcap12_3t NOT mom_gt) NOT INTERACT mom_wims
momcap12_3t_wims   = (momcap12_3t NOT mom_gt) INTERACT mom_wims


mom23reg_1     = MOMDMY with text "momcap23"
mom23tt1       = mom_metal2 AND mom_metal3
mom23f1        = mom23tt1 NOT INTERACT mom_v2
mom23reg1      = EXTENTS (SIZE (mom23f1 AND mom23reg_1) BY 0.1 INSIDE OF MOMDMY)
mom23tt2       = (mom_metal2 AND mom_metal3) NOT INTERACT mom_metal1
mom23f2        = mom23tt2 NOT INTERACT mom_v2
mom23reg2      = (EXTENTS (SIZE mom23f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom23reg       = mom23reg1 OR mom23reg2
mom23f         = mom23f1 OR mom23f2
momcap23      = (((mom23reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES 
momcap23_3t   = (((mom23reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES 
mom_terminal23= (mom_metal2 AND mom_metal3) ENCLOSE mom_v2

momcap23_3t_wips   = (momcap23_3t AND mom_gt) NOT INTERACT mom_wims
momcap23_3t_wops   = (momcap23_3t NOT mom_gt) NOT INTERACT mom_wims
momcap23_3t_wims   = (momcap23_3t NOT mom_gt) INTERACT mom_wims

//mom23tt_rf2       = mom_metal2 AND mom_metal3
//mom23f_rf2        = mom23tt_rf2 NOT INTERACT mom_v2
mom23reg_rf2      = EXTENTS (SIZE mom23f1 BY 0.1 INSIDE OF MOMDMY)
mom23reg_rf       = mom23reg_rf2 OR mom23reg1
mom23f_rf         = copy mom23f1
momcap23rf       = (((mom23reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap23rf_3t    = ((mom23reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal23rf = ((mom_metal2 AND mom_metal3) INTERACT mom23reg_rf) ENCLOSE mom_v2
mom_terminal23rf_m = (((mom_metal2 AND mom_metal3) INTERACT mom23reg_rf) ENCLOSE mom_v2) NOT INTERACT mom_v1

momcap23rf_wips    = momcap23rf AND MOM_poly
momcap23rf_wops    = momcap23rf NOT MOM_poly
momcap23rf_3t_wips = ((momcap23rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal23rf 
momcap23rf_3t_wops = ((momcap23rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal23rf
momcap23rf_3t_wim  = ((momcap23rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal23rf_m

mom13reg_1    = MOMDMY with text "momcap13"
mom13tt       = (mom_metal1 AND mom_metal2) AND mom_metal3
mom13f        = mom13tt NOT INTERACT (mom_v1 OR mom_v2)
mom13reg1     = EXTENTS (SIZE (mom13f AND mom13reg_1) BY 0.1 INSIDE OF MOMDMY)
mom13reg2     = (EXTENTS (SIZE mom13f BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom13reg      = mom13reg1 OR mom13reg2
momcap13      = (((mom13reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap13_3t   = (((mom13reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap13rf    = (((mom13reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap13rf_3t = (((mom13reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal13
mom_terminal13= (((mom_metal1 AND mom_metal2) AND mom_metal3) INTERACT mom13reg) ENCLOSE mom_m1_m3_via

momcap13rf_wips    = momcap13rf AND MOM_poly
momcap13rf_wops    = momcap13rf NOT MOM_poly
momcap13rf_3t_wips = momcap13rf_3t AND MOM_poly
momcap13rf_3t_wops = momcap13rf_3t NOT MOM_poly
momcap13_3t_wips   = (momcap13_3t AND mom_gt) NOT INTERACT mom_wims
momcap13_3t_wops   = (momcap13_3t NOT mom_gt) NOT INTERACT mom_wims
momcap13_3t_wims   = (momcap13_3t NOT mom_gt) INTERACT mom_wims
#ENDIF
#ENDIF

#IFDEF TOPMETAL 5
#IFDEF TOP_METAL_NUM double

mom_metal1         = metal1a AND MOMDMY
mom_v1             = Via1 AND MOMDMY
V1                 = copy Via1 
metal1b            = copy metal1a 
mom_metal2         = metal2a AND MOMDMY
mom_v2             = Via2 AND MOMDMY
V2                 = copy Via2 
metal2b            = copy metal2a
mom_metal3         = metal3a AND MOMDMY
metal3b            = copy metal3a

mom_m1_m3_via = mom_v1 AND mom_v2

mom_text = (mom12reg_1 or mom13reg_1) or mom23reg_1


mom12reg_1    = MOMDMY with text "momcap12"
mom12tt1       = mom_metal1 AND mom_metal2
mom12f1        = mom12tt1 NOT INTERACT mom_v1
mom12reg1      = EXTENTS (SIZE (mom12f1 AND mom12reg_1) BY 0.1 INSIDE OF MOMDMY)
mom12tt2       = (mom_metal1 AND mom_metal2) NOT INTERACT mom_metal3
mom12f2        = mom12tt2 NOT INTERACT mom_v1
mom12reg2      = (EXTENTS (SIZE mom12f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom12reg       = mom12reg1 OR mom12reg2
mom12f         = mom12f1 OR mom12f2
momcap12      = (((mom12reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap12_3t   = (((mom12reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap12rf    = (((mom12reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap12rf_3t = (((mom12reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal12
mom_terminal12= ((mom_metal1 AND mom_metal2) INTERACT mom12reg) ENCLOSE mom_v1

momcap12rf_wips    = momcap12rf AND MOM_poly
momcap12rf_wops    = momcap12rf NOT MOM_poly
momcap12rf_3t_wips = momcap12rf_3t AND MOM_poly
momcap12rf_3t_wops = momcap12rf_3t NOT MOM_poly
momcap12_3t_wips   = (momcap12_3t AND mom_gt) NOT INTERACT mom_wims
momcap12_3t_wops   = (momcap12_3t NOT mom_gt) NOT INTERACT mom_wims
momcap12_3t_wims   = (momcap12_3t NOT mom_gt) INTERACT mom_wims

mom23reg_1     = MOMDMY with text "momcap23"
mom23tt1       = mom_metal2 AND mom_metal3
mom23f1        = mom23tt1 NOT INTERACT mom_v2
mom23reg1      = EXTENTS (SIZE (mom23f1 AND mom23reg_1) BY 0.1 INSIDE OF MOMDMY)
mom23tt2       = (mom_metal2 AND mom_metal3) NOT INTERACT mom_metal1
mom23f2        = mom23tt2 NOT INTERACT mom_v2
mom23reg2      = (EXTENTS (SIZE mom23f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom23reg       = mom23reg1 OR mom23reg2
mom23f         = mom23f1 OR mom23f2
momcap23      = (((mom23reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap23_3t   = (((mom23reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal23= (mom_metal2 AND mom_metal3) ENCLOSE mom_v2

momcap23_3t_wips   = (momcap23_3t AND mom_gt) NOT INTERACT mom_wims
momcap23_3t_wops   = (momcap23_3t NOT mom_gt) NOT INTERACT mom_wims
momcap23_3t_wims   = (momcap23_3t NOT mom_gt) INTERACT mom_wims

//mom23tt_rf       = mom_metal2 AND mom_metal3
//mom23f_rf        = mom23tt_rf NOT INTERACT mom_v2
mom23reg_rf2      = EXTENTS (SIZE mom23f1 BY 0.1 INSIDE OF MOMDMY)
mom23reg_rf       = mom23reg1 OR mom23reg_rf2
mom23f_rf         = copy mom23f1
momcap23rf       = (((mom23reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap23rf_3t    = ((mom23reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal23rf = ((mom_metal2 AND mom_metal3) INTERACT mom23reg_rf) ENCLOSE mom_v2
mom_terminal23rf_m = (((mom_metal2 AND mom_metal3) INTERACT mom23reg_rf) ENCLOSE mom_v2) NOT INTERACT mom_v1

momcap23rf_wips    = momcap23rf AND MOM_poly
momcap23rf_wops    = momcap23rf NOT MOM_poly
momcap23rf_3t_wips = ((momcap23rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal23rf 
momcap23rf_3t_wops = ((momcap23rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal23rf
momcap23rf_3t_wim  = ((momcap23rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal23rf_m

mom13reg_1    = MOMDMY with text "momcap13"
mom13tt       = (mom_metal1 AND mom_metal2) AND mom_metal3
mom13f        = mom13tt NOT INTERACT (mom_v1 OR mom_v2)
mom13reg1     = EXTENTS (SIZE (mom13f AND mom13reg_1) BY 0.1 INSIDE OF MOMDMY)
mom13reg2     = (EXTENTS (SIZE mom13f BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom13reg      = mom13reg1 OR mom13reg2
momcap13      = (((mom13reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap13_3t   = (((mom13reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap13rf    = (((mom13reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap13rf_3t = (((mom13reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal13
mom_terminal13= (((mom_metal1 AND mom_metal2) AND mom_metal3) INTERACT mom13reg) ENCLOSE mom_m1_m3_via

momcap13rf_wips    = momcap13rf AND MOM_poly
momcap13rf_wops    = momcap13rf NOT MOM_poly
momcap13rf_3t_wips = momcap13rf_3t AND MOM_poly
momcap13rf_3t_wops = momcap13rf_3t NOT MOM_poly
momcap13_3t_wips   = (momcap13_3t AND mom_gt) NOT INTERACT mom_wims
momcap13_3t_wops   = (momcap13_3t NOT mom_gt) NOT INTERACT mom_wims
momcap13_3t_wims   = (momcap13_3t NOT mom_gt) INTERACT mom_wims

#ENDIF
#ENDIF

#IFDEF TOPMETAL 5
#IFDEF TOP_METAL_NUM single

mom_metal1         = metal1a AND MOMDMY
mom_v1             = Via1 AND MOMDMY
V1                 = copy Via1
metal1b            = copy metal1a 
mom_metal2         = metal2a AND MOMDMY
mom_v2             = Via2 AND MOMDMY
V2                 = copy Via2 
metal2b            = copy metal2a
mom_metal3         = metal3a AND MOMDMY
mom_v3             = Via3 AND MOMDMY
V3                 = copy Via3 
metal3b            = copy metal3a
mom_metal4         = metal4a AND MOMDMY
metal4b            = copy metal4a

mom_m1_m3_via = mom_v1 AND mom_v2
mom_m2_m4_via = mom_v2 AND mom_v3
mom_m1_m4_via = (mom_v1 AND mom_v2) AND mom_v3

mom_text = ((((mom12reg_1 or mom13reg_1) or mom14reg_1) or mom23reg_1) or mom24reg_1) or mom34reg_1


mom12reg_1    = MOMDMY with text "momcap12"
mom12tt1       = mom_metal1 AND mom_metal2
mom12f1        = mom12tt1 NOT INTERACT mom_v1
mom12reg1      = EXTENTS (SIZE (mom12f1 AND mom12reg_1) BY 0.1 INSIDE OF MOMDMY)
mom12tt2       = ((mom_metal1 AND mom_metal2) NOT INTERACT mom_metal3) NOT INTERACT mom_metal4
mom12f2        = mom12tt2 NOT INTERACT mom_v1
mom12reg2      = (EXTENTS (SIZE mom12f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom12reg       = mom12reg1 OR mom12reg2
mom12f         = mom12f1 OR mom12f2
momcap12      = (((mom12reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap12_3t   = (((mom12reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap12rf    = (((mom12reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap12rf_3t = (((mom12reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal12
mom_terminal12= ((mom_metal1 AND mom_metal2) INTERACT mom12reg) ENCLOSE mom_v1

momcap12rf_wips    = momcap12rf AND MOM_poly
momcap12rf_wops    = momcap12rf NOT MOM_poly
momcap12rf_3t_wips = momcap12rf_3t AND MOM_poly
momcap12rf_3t_wops = momcap12rf_3t NOT MOM_poly
momcap12_3t_wips   = (momcap12_3t AND mom_gt) NOT INTERACT mom_wims
momcap12_3t_wops   = (momcap12_3t NOT mom_gt) NOT INTERACT mom_wims
momcap12_3t_wims   = (momcap12_3t NOT mom_gt) INTERACT mom_wims

mom23reg_1     = MOMDMY with text "momcap23"
mom23tt1       = mom_metal2 AND mom_metal3
mom23f1        = mom23tt1 NOT INTERACT mom_v2
mom23reg1      = EXTENTS (SIZE (mom23f1 AND mom23reg_1) BY 0.1 INSIDE OF MOMDMY)
mom23tt2       = ((mom_metal2 AND mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal1
mom23f2        = mom23tt2 NOT INTERACT mom_v2
mom23reg2      = (EXTENTS (SIZE mom23f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom23reg       = mom23reg1 OR mom23reg2
mom23f         = mom23f1 OR mom23f2
momcap23      = (((mom23reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap23_3t   = (((mom23reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal23= (mom_metal2 AND mom_metal3) ENCLOSE mom_v2

momcap23_3t_wips   = (momcap23_3t AND mom_gt) NOT INTERACT mom_wims
momcap23_3t_wops   = (momcap23_3t NOT mom_gt) NOT INTERACT mom_wims
momcap23_3t_wims   = (momcap23_3t NOT mom_gt) INTERACT mom_wims

mom23tt_rf2       = (mom_metal2 AND mom_metal3) NOT INTERACT mom_metal4
mom23f_rf2        = mom23tt_rf2 NOT INTERACT mom_v2
mom23reg_rf2      = EXTENTS (SIZE mom23f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom23reg_rf       = mom23reg1 OR mom23reg_rf2
mom23f_rf         = mom23f1 OR mom23f_rf2 
momcap23rf       = (((mom23reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap23rf_3t    = ((mom23reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal23rf = ((mom_metal2 AND mom_metal3) INTERACT mom23reg_rf) ENCLOSE mom_v2
mom_terminal23rf_m = (((mom_metal2 AND mom_metal3) INTERACT mom23reg_rf) ENCLOSE mom_v2) NOT INTERACT mom_v1

momcap23rf_wips    = momcap23rf AND MOM_poly
momcap23rf_wops    = momcap23rf NOT MOM_poly
momcap23rf_3t_wips = ((momcap23rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal23rf 
momcap23rf_3t_wops = ((momcap23rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal23rf
momcap23rf_3t_wim  = ((momcap23rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal23rf_m

mom34reg_1    = MOMDMY with text "momcap34"
mom34tt1       = mom_metal3 AND mom_metal4
mom34f1        = mom34tt1 NOT INTERACT mom_v3
mom34reg1      = EXTENTS (SIZE (mom34f1 AND mom34reg_1) BY 0.1 INSIDE OF MOMDMY)
mom34tt2       = ((mom_metal3 AND mom_metal4) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2
mom34f2        = mom34tt2 NOT INTERACT mom_v3
mom34reg2      = (EXTENTS (SIZE mom34f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom34reg       = mom34reg1 OR mom34reg2
mom34f         = mom34f1 OR mom34f2
momcap34      = (((mom34reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap34_3t   = (((mom34reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal34= (mom_metal3 AND mom_metal4) ENCLOSE mom_v3

momcap34_3t_wips   = (momcap34_3t AND mom_gt) NOT INTERACT mom_wims
momcap34_3t_wops   = (momcap34_3t NOT mom_gt) NOT INTERACT mom_wims
momcap34_3t_wims   = (momcap34_3t NOT mom_gt) INTERACT mom_wims

mom34tt_rf2       = (mom_metal3 AND mom_metal4) NOT INTERACT mom_metal1
mom34f_rf2        = mom34tt_rf2 NOT INTERACT mom_v3
mom34reg_rf2      = EXTENTS (SIZE mom34f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom34reg_rf       = mom34reg1 OR mom34reg_rf2
mom34f_rf         = mom34f1 OR mom34f_rf2
momcap34rf       = (((mom34reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap34rf_3t    = ((mom34reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal34rf = (((mom_metal3 AND mom_metal4) INTERACT mom34reg_rf) ENCLOSE mom_v3) INTERACT momcap34rf_3t
mom_terminal34rf_m = (((mom_metal3 AND mom_metal4) INTERACT mom34reg_rf) ENCLOSE mom_v3) NOT INTERACT mom_v2

momcap34rf_wips    = momcap34rf AND MOM_poly
momcap34rf_wops    = momcap34rf NOT MOM_poly
momcap34rf_3t_wips = ((momcap34rf_3t AND MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal34rf
momcap34rf_3t_wops = ((momcap34rf_3t NOT MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal34rf
momcap34rf_3t_wim  = ((momcap34rf_3t NOT MOM_poly) INTERACT mom_metal2) INTERACT mom_terminal34rf_m

mom13reg_1    = MOMDMY with text "momcap13"
mom13tt1       = (mom_metal1 AND mom_metal2) AND mom_metal3
mom13f1        = mom13tt1 NOT INTERACT (mom_v1 OR mom_v2)
mom13reg1      = EXTENTS (SIZE (mom13f1 AND mom13reg_1) BY 0.1 INSIDE OF MOMDMY)
mom13tt2       = ((mom_metal1 AND mom_metal2) AND mom_metal3) NOT INTERACT mom_metal4
mom13f2        = mom13tt2 NOT INTERACT (mom_v1 OR mom_v2)
mom13reg2      = (EXTENTS (SIZE mom13f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom13reg       = mom13reg1 OR mom13reg2
mom13f         = mom13f1 OR mom13f2
momcap13      = (((mom13reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap13_3t   = (((mom13reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap13rf    = (((mom13reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap13rf_3t = (((mom13reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal13
mom_terminal13= (((mom_metal1 AND mom_metal2) AND mom_metal3) INTERACT mom13reg) ENCLOSE mom_m1_m3_via

momcap13rf_wips    = momcap13rf AND MOM_poly
momcap13rf_wops    = momcap13rf NOT MOM_poly
momcap13rf_3t_wips = momcap13rf_3t AND MOM_poly
momcap13rf_3t_wops = momcap13rf_3t NOT MOM_poly
momcap13_3t_wips   = (momcap13_3t AND mom_gt) NOT INTERACT mom_wims
momcap13_3t_wops   = (momcap13_3t NOT mom_gt) NOT INTERACT mom_wims
momcap13_3t_wims   = (momcap13_3t NOT mom_gt) INTERACT mom_wims

mom24reg_1    = MOMDMY with text "momcap24"
mom24tt1       = (mom_metal2 AND mom_metal3) AND mom_metal4
mom24f1        = mom24tt1 NOT INTERACT (mom_v2 OR mom_v3)
mom24reg1      = EXTENTS (SIZE (mom24f1 AND mom24reg_1) BY 0.1 INSIDE OF MOMDMY)
mom24tt2       = ((mom_metal2 AND mom_metal3) AND mom_metal4) NOT INTERACT mom_metal1
mom24f2        = mom24tt2 NOT INTERACT (mom_v2 OR mom_v3)
mom24reg2      = (EXTENTS (SIZE mom24f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom24reg       = mom24reg1 OR mom24reg2
mom24f         = mom24f1 OR mom24f2
momcap24      = (((mom24reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap24_3t   = (((mom24reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal24= ((mom_metal2 AND mom_metal3) AND mom_metal4) ENCLOSE mom_m2_m4_via

momcap24_3t_wips   = (momcap24_3t AND mom_gt) NOT INTERACT mom_wims
momcap24_3t_wops   = (momcap24_3t NOT mom_gt) NOT INTERACT mom_wims
momcap24_3t_wims   = (momcap24_3t NOT mom_gt) INTERACT mom_wims

//mom24tt_rf       = (mom_metal2 AND mom_metal3) AND mom_metal4
//mom24f_rf        = mom24tt_rf NOT INTERACT (mom_v2 OR mom_v3)
mom24reg_rf2      = EXTENTS (SIZE mom24f1 BY 0.1 INSIDE OF MOMDMY)
mom24reg_rf       = mom24reg1 OR mom24reg_rf2
mom24f_rf         = copy mom24f1 
momcap24rf       = (((mom24reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap24rf_3t    = ((mom24reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal24rf = (((mom_metal2 AND mom_metal3) AND mom_metal4) INTERACT mom24reg_rf) ENCLOSE mom_m2_m4_via
mom_terminal24rf_m = ((((mom_metal2 AND mom_metal3) AND mom_metal4) INTERACT mom24reg_rf) ENCLOSE mom_m2_m4_via) NOT INTERACT mom_v1

momcap24rf_wips    = momcap24rf AND MOM_poly
momcap24rf_wops    = momcap24rf NOT MOM_poly
momcap24rf_3t_wips = ((momcap24rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal24rf
momcap24rf_3t_wops = ((momcap24rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal24rf
momcap24rf_3t_wim  = ((momcap24rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal24rf_m

mom14reg_1    = MOMDMY with text "momcap14"
mom14tt       = ((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4
mom14f        = mom14tt NOT INTERACT ((mom_v1 OR mom_v2) OR mom_v3)
mom14reg1      = EXTENTS (SIZE (mom14f AND mom14reg_1) BY 0.1 INSIDE OF MOMDMY)
mom14reg2      = (EXTENTS (SIZE mom14f BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom14reg       = mom14reg1 OR mom14reg2
momcap14      = (((mom14reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap14_3t   = (((mom14reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap14rf    = (((mom14reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap14rf_3t = (((mom14reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal14
mom_terminal14= ((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) INTERACT mom14reg) ENCLOSE mom_m1_m4_via

momcap14rf_wips    = momcap14rf AND MOM_poly
momcap14rf_wops    = momcap14rf NOT MOM_poly
momcap14rf_3t_wips = momcap14rf_3t AND MOM_poly
momcap14rf_3t_wops = momcap14rf_3t NOT MOM_poly
momcap14_3t_wips   = (momcap14_3t AND mom_gt) NOT INTERACT mom_wims
momcap14_3t_wops   = (momcap14_3t NOT mom_gt) NOT INTERACT mom_wims
momcap14_3t_wims   = (momcap14_3t NOT mom_gt) INTERACT mom_wims
#ENDIF
#ENDIF

#IFDEF TOPMETAL 6
#IFDEF TOP_METAL_NUM double

mom_metal1         = metal1a AND MOMDMY
mom_v1             = Via1 AND MOMDMY
V1                 = copy Via1 
metal1b            = copy metal1a 
mom_metal2         = metal2a AND MOMDMY
mom_v2             = Via2 AND MOMDMY
V2                 = copy Via2 
metal2b            = copy metal2a
mom_metal3         = metal3a AND MOMDMY
mom_v3             = Via3 AND MOMDMY
V3                 = copy Via3 
metal3b            = copy metal3a 
mom_metal4         = metal4a AND MOMDMY
metal4b            = copy metal4a 

mom_m1_m3_via = mom_v1 AND mom_v2
mom_m2_m4_via = mom_v2 AND mom_v3
mom_m1_m4_via = (mom_v1 AND mom_v2) AND mom_v3

mom_text = ((((mom12reg_1 or mom13reg_1) or mom14reg_1) or mom23reg_1) or mom24reg_1) or mom34reg_1 


mom12reg_1    = MOMDMY with text "momcap12"
mom12tt1       = mom_metal1 AND mom_metal2
mom12f1        = mom12tt1 NOT INTERACT mom_v1
mom12reg1      = EXTENTS (SIZE (mom12f1 AND mom12reg_1) BY 0.1 INSIDE OF MOMDMY)
mom12tt2       = ((mom_metal1 AND mom_metal2) NOT INTERACT mom_metal3) NOT INTERACT mom_metal4
mom12f2        = mom12tt2 NOT INTERACT mom_v1
mom12reg2      = (EXTENTS (SIZE mom12f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom12reg       = mom12reg1 OR mom12reg2
mom12f         = mom12f1 OR mom12f2
momcap12      = (((mom12reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap12_3t   = (((mom12reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap12rf    = (((mom12reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap12rf_3t = (((mom12reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal12
mom_terminal12= ((mom_metal1 AND mom_metal2) INTERACT mom12reg) ENCLOSE mom_v1

momcap12rf_wips    = momcap12rf AND MOM_poly
momcap12rf_wops    = momcap12rf NOT MOM_poly
momcap12rf_3t_wips = momcap12rf_3t AND MOM_poly
momcap12rf_3t_wops = momcap12rf_3t NOT MOM_poly
momcap12_3t_wips   = (momcap12_3t AND mom_gt) NOT INTERACT mom_wims
momcap12_3t_wops   = (momcap12_3t NOT mom_gt) NOT INTERACT mom_wims
momcap12_3t_wims   = (momcap12_3t NOT mom_gt) INTERACT mom_wims

mom23reg_1     = MOMDMY with text "momcap23"
mom23tt1       = mom_metal2 AND mom_metal3
mom23f1        = mom23tt1 NOT INTERACT mom_v2
mom23reg1      = EXTENTS (SIZE (mom23f1 AND mom23reg_1) BY 0.1 INSIDE OF MOMDMY)
mom23tt2       = ((mom_metal2 AND mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal1
mom23f2        = mom23tt2 NOT INTERACT mom_v2
mom23reg2      = (EXTENTS (SIZE mom23f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom23reg       = mom23reg1 OR mom23reg2
mom23f         = mom23f1 OR mom23f2
momcap23      = (((mom23reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap23_3t   = (((mom23reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal23= (mom_metal2 AND mom_metal3) ENCLOSE mom_v2

momcap23_3t_wips   = (momcap23_3t AND mom_gt) NOT INTERACT mom_wims
momcap23_3t_wops   = (momcap23_3t NOT mom_gt) NOT INTERACT mom_wims
momcap23_3t_wims   = (momcap23_3t NOT mom_gt) INTERACT mom_wims

mom23tt_rf2       = (mom_metal2 AND mom_metal3) NOT INTERACT mom_metal4
mom23f_rf2        = mom23tt_rf2 NOT INTERACT mom_v2
mom23reg_rf2      = EXTENTS (SIZE mom23f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom23reg_rf       = mom23reg1 OR mom23reg_rf2
mom23f_rf         = mom23f1 OR mom23f_rf2
momcap23rf       = (((mom23reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap23rf_3t    = ((mom23reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal23rf = ((mom_metal2 AND mom_metal3) INTERACT mom23reg_rf) ENCLOSE mom_v2
mom_terminal23rf_m = (((mom_metal2 AND mom_metal3) INTERACT mom23reg_rf) ENCLOSE mom_v2) NOT INTERACT mom_v1

momcap23rf_wips    = momcap23rf AND MOM_poly
momcap23rf_wops    = momcap23rf NOT MOM_poly
momcap23rf_3t_wips = ((momcap23rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal23rf 
momcap23rf_3t_wops = ((momcap23rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal23rf
momcap23rf_3t_wim  = ((momcap23rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal23rf_m

mom34reg_1    = MOMDMY with text "momcap34"
mom34tt1       = mom_metal3 AND mom_metal4
mom34f1        = mom34tt1 NOT INTERACT mom_v3
mom34reg1      = EXTENTS (SIZE (mom34f1 AND mom34reg_1) BY 0.1 INSIDE OF MOMDMY)
mom34tt2       = ((mom_metal3 AND mom_metal4) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2
mom34f2        = mom34tt2 NOT INTERACT mom_v3
mom34reg2      = (EXTENTS (SIZE mom34f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom34reg       = mom34reg1 OR mom34reg2
mom34f         = mom34f1 OR mom34f2
momcap34      = (((mom34reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap34_3t   = (((mom34reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal34= (mom_metal3 AND mom_metal4) ENCLOSE mom_v3

momcap34_3t_wips   = (momcap34_3t AND mom_gt) NOT INTERACT mom_wims
momcap34_3t_wops   = (momcap34_3t NOT mom_gt) NOT INTERACT mom_wims
momcap34_3t_wims   = (momcap34_3t NOT mom_gt) INTERACT mom_wims

mom34tt_rf2       = (mom_metal3 AND mom_metal4) NOT INTERACT mom_metal1
mom34f_rf2        = mom34tt_rf2 NOT INTERACT mom_v3
mom34reg_rf2      = EXTENTS (SIZE mom34f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom34reg_rf       = mom34reg1 OR mom34reg_rf2
mom34f_rf         = mom34f1 OR mom34f_rf2
momcap34rf       = (((mom34reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap34rf_3t    = ((mom34reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal34rf = (((mom_metal3 AND mom_metal4) INTERACT mom34reg_rf) ENCLOSE mom_v3) INTERACT momcap34rf_3t
mom_terminal34rf_m = (((mom_metal3 AND mom_metal4) INTERACT mom34reg_rf) ENCLOSE mom_v3) NOT INTERACT mom_v2

momcap34rf_wips    = momcap34rf AND MOM_poly
momcap34rf_wops    = momcap34rf NOT MOM_poly
momcap34rf_3t_wips = ((momcap34rf_3t AND MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal34rf
momcap34rf_3t_wops = ((momcap34rf_3t NOT MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal34rf
momcap34rf_3t_wim  = ((momcap34rf_3t NOT MOM_poly) INTERACT mom_metal2) INTERACT mom_terminal34rf_m

mom13reg_1    = MOMDMY with text "momcap13"
mom13tt1       = (mom_metal1 AND mom_metal2) AND mom_metal3
mom13f1        = mom13tt1 NOT INTERACT (mom_v1 OR mom_v2)
mom13reg1      = EXTENTS (SIZE (mom13f1 AND mom13reg_1) BY 0.1 INSIDE OF MOMDMY)
mom13tt2       = ((mom_metal1 AND mom_metal2) AND mom_metal3) NOT INTERACT mom_metal4
mom13f2        = mom13tt2 NOT INTERACT (mom_v1 OR mom_v2)
mom13reg2      = (EXTENTS (SIZE mom13f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom13reg       = mom13reg1 OR mom13reg2
mom13f         = mom13f1 OR mom13f2
momcap13      = (((mom13reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap13_3t   = (((mom13reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap13rf    = (((mom13reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap13rf_3t = (((mom13reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal13
mom_terminal13= (((mom_metal1 AND mom_metal2) AND mom_metal3) INTERACT mom13reg) ENCLOSE mom_m1_m3_via

momcap13rf_wips    = momcap13rf AND MOM_poly
momcap13rf_wops    = momcap13rf NOT MOM_poly
momcap13rf_3t_wips = momcap13rf_3t AND MOM_poly
momcap13rf_3t_wops = momcap13rf_3t NOT MOM_poly
momcap13_3t_wips   = (momcap13_3t AND mom_gt) NOT INTERACT mom_wims
momcap13_3t_wops   = (momcap13_3t NOT mom_gt) NOT INTERACT mom_wims
momcap13_3t_wims   = (momcap13_3t NOT mom_gt) INTERACT mom_wims

mom24reg_1    = MOMDMY with text "momcap24"
mom24tt1       = (mom_metal2 AND mom_metal3) AND mom_metal4
mom24f1        = mom24tt1 NOT INTERACT (mom_v2 OR mom_v3)
mom24reg1      = EXTENTS (SIZE (mom24f1 AND mom24reg_1) BY 0.1 INSIDE OF MOMDMY)
mom24tt2       = ((mom_metal2 AND mom_metal3) AND mom_metal4) NOT INTERACT mom_metal1
mom24f2        = mom24tt2 NOT INTERACT (mom_v2 OR mom_v3)
mom24reg2      = (EXTENTS (SIZE mom24f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom24reg       = mom24reg1 OR mom24reg2
mom24f         = mom24f1 OR mom24f2
momcap24      = (((mom24reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES 
momcap24_3t   = (((mom24reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal24= ((mom_metal2 AND mom_metal3) AND mom_metal4) ENCLOSE mom_m2_m4_via

momcap24_3t_wips   = (momcap24_3t AND mom_gt) NOT INTERACT mom_wims
momcap24_3t_wops   = (momcap24_3t NOT mom_gt) NOT INTERACT mom_wims
momcap24_3t_wims   = (momcap24_3t NOT mom_gt) INTERACT mom_wims

//mom24tt_rf       = (mom_metal2 AND mom_metal3) AND mom_metal4
//mom24f_rf        = mom24tt_rf NOT INTERACT (mom_v2 OR mom_v3)
mom24reg_rf2      = EXTENTS (SIZE mom24f1 BY 0.1 INSIDE OF MOMDMY)
mom24reg_rf       = mom24reg1 OR mom24reg_rf2
mom24f_rf         = copy mom24f1 
momcap24rf       = (((mom24reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap24rf_3t    = ((mom24reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal24rf = (((mom_metal2 AND mom_metal3) AND mom_metal4) INTERACT mom24reg_rf) ENCLOSE mom_m2_m4_via
mom_terminal24rf_m = ((((mom_metal2 AND mom_metal3) AND mom_metal4) INTERACT mom24reg_rf) ENCLOSE mom_m2_m4_via) NOT INTERACT mom_v1

momcap24rf_wips    = momcap24rf AND MOM_poly
momcap24rf_wops    = momcap24rf NOT MOM_poly
momcap24rf_3t_wips = ((momcap24rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal24rf
momcap24rf_3t_wops = ((momcap24rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal24rf
momcap24rf_3t_wim  = ((momcap24rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal24rf_m

mom14reg_1    = MOMDMY with text "momcap14"
mom14tt       = ((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4
mom14f        = mom14tt NOT INTERACT ((mom_v1 OR mom_v2) OR mom_v3)
mom14reg1      = EXTENTS (SIZE (mom14f AND mom14reg_1) BY 0.1 INSIDE OF MOMDMY)
mom14reg2      = (EXTENTS (SIZE mom14f BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom14reg       = mom14reg1 OR mom14reg2
momcap14      = (((mom14reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap14_3t   = (((mom14reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap14rf    = (((mom14reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap14rf_3t = (((mom14reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal14
mom_terminal14= ((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) INTERACT mom14reg) ENCLOSE mom_m1_m4_via

momcap14rf_wips    = momcap14rf AND MOM_poly
momcap14rf_wops    = momcap14rf NOT MOM_poly
momcap14rf_3t_wips = momcap14rf_3t AND MOM_poly
momcap14rf_3t_wops = momcap14rf_3t NOT MOM_poly
momcap14_3t_wips   = (momcap14_3t AND mom_gt) NOT INTERACT mom_wims
momcap14_3t_wops   = (momcap14_3t NOT mom_gt) NOT INTERACT mom_wims
momcap14_3t_wims   = (momcap14_3t NOT mom_gt) INTERACT mom_wims

#ENDIF
#ENDIF

#IFDEF TOPMETAL 6
#IFDEF TOP_METAL_NUM single

mom_metal1         = metal1a AND MOMDMY
mom_v1             = Via1 AND MOMDMY
V1                 = copy Via1 
metal1b            = copy metal1a 
mom_metal2         = metal2a AND MOMDMY
mom_v2             = Via2 AND MOMDMY
V2                 = copy Via2 
metal2b            = copy metal2a 
mom_metal3         = metal3a AND MOMDMY
mom_v3             = Via3 AND MOMDMY
V3                 = copy Via3 
metal3b            = copy metal3a 
mom_metal4         = metal4a AND MOMDMY
metal4b            = copy metal4a
mom_metal5         = metal5a AND MOMDMY
metal5b            = copy metal5a 
mom_v4             = Via4 AND MOMDMY
V4                 = copy Via4 

mom_m1_m3_via = mom_v1 AND mom_v2
mom_m2_m4_via = mom_v2 AND mom_v3
mom_m1_m4_via = (mom_v1 AND mom_v2) AND mom_v3
mom_m1_m5_via = ((mom_v1 AND mom_v2) AND mom_v3) AND mom_v4
mom_m2_m5_via = (mom_v2 AND mom_v3) AND mom_v4
mom_m3_m5_via = mom_v3 AND mom_v4

mom_text = ((((((((mom12reg_1 or mom13reg_1) or mom14reg_1) or mom15reg_1) or mom23reg_1) or mom24reg_1) or mom25reg_1) or mom34reg_1) or mom35reg_1) or mom45reg_1


mom12reg_1    = MOMDMY with text "momcap12"
mom12tt1       = mom_metal1 AND mom_metal2
mom12f1        = mom12tt1 NOT INTERACT mom_v1
mom12reg1      = EXTENTS (SIZE (mom12f1 AND mom12reg_1) BY 0.1 INSIDE OF MOMDMY)
mom12tt2       = (((mom_metal1 AND mom_metal2) NOT INTERACT mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal5
mom12f2        = mom12tt2 NOT INTERACT mom_v1
mom12reg2      = (EXTENTS (SIZE mom12f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom12reg       = mom12reg1 OR mom12reg2
mom12f         = mom12f1 OR mom12f2
momcap12      = (((mom12reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap12_3t   = (((mom12reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap12rf    = (((mom12reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap12rf_3t = (((mom12reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal12
mom_terminal12= ((mom_metal1 AND mom_metal2) INTERACT mom12reg) ENCLOSE mom_v1

momcap12rf_wips    = momcap12rf AND MOM_poly
momcap12rf_wops    = momcap12rf NOT MOM_poly
momcap12rf_3t_wips = momcap12rf_3t AND MOM_poly
momcap12rf_3t_wops = momcap12rf_3t NOT MOM_poly
momcap12_3t_wips   = (momcap12_3t AND mom_gt) NOT INTERACT mom_wims
momcap12_3t_wops   = (momcap12_3t NOT mom_gt) NOT INTERACT mom_wims
momcap12_3t_wims   = (momcap12_3t NOT mom_gt) INTERACT mom_wims

mom23reg_1     = MOMDMY with text "momcap23"
mom23tt1       = mom_metal2 AND mom_metal3
mom23f1        = mom23tt1 NOT INTERACT mom_v2
mom23reg1      = EXTENTS (SIZE (mom23f1 AND mom23reg_1) BY 0.1 INSIDE OF MOMDMY)
mom23tt2       = (((mom_metal2 AND mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal1) NOT INTERACT mom_metal5
mom23f2        = mom23tt2 NOT INTERACT mom_v2
mom23reg2      = (EXTENTS (SIZE mom23f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom23reg       = mom23reg1 OR mom23reg2
mom23f         = mom23f1 OR mom23f2
momcap23      = (((mom23reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap23_3t   = (((mom23reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal23= (mom_metal2 AND mom_metal3) ENCLOSE mom_v2

momcap23_3t_wips   = (momcap23_3t AND mom_gt) NOT INTERACT mom_wims
momcap23_3t_wops   = (momcap23_3t NOT mom_gt) NOT INTERACT mom_wims
momcap23_3t_wims   = (momcap23_3t NOT mom_gt) INTERACT mom_wims

mom23tt_rf2       = ((mom_metal2 AND mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal5
mom23f_rf2        = mom23tt_rf2 NOT INTERACT mom_v2
mom23reg_rf2      = EXTENTS (SIZE mom23f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom23reg_rf       = mom23reg1 OR mom23reg_rf2
mom23f_rf         = mom23f1 OR mom23f_rf2
momcap23rf       = (((mom23reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap23rf_3t    = ((mom23reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal23rf = ((mom_metal2 AND mom_metal3) INTERACT mom23reg_rf) ENCLOSE mom_v2
mom_terminal23rf_m = (((mom_metal2 AND mom_metal3) INTERACT mom23reg_rf) ENCLOSE mom_v2) NOT INTERACT mom_v1

momcap23rf_wips    = momcap23rf AND MOM_poly
momcap23rf_wops    = momcap23rf NOT MOM_poly
momcap23rf_3t_wips = ((momcap23rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal23rf 
momcap23rf_3t_wops = ((momcap23rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal23rf
momcap23rf_3t_wim  = ((momcap23rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal23rf_m

mom34reg_1    = MOMDMY with text "momcap34"
mom34tt1       = mom_metal3 AND mom_metal4
mom34f1        = mom34tt1 NOT INTERACT mom_v3
mom34reg1      = EXTENTS (SIZE (mom34f1 AND mom34reg_1) BY 0.1 INSIDE OF MOMDMY)
mom34tt2       = (((mom_metal3 AND mom_metal4) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal5
mom34f2        = mom34tt2 NOT INTERACT mom_v3
mom34reg2      = (EXTENTS (SIZE mom34f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom34reg       = mom34reg1 OR mom34reg2
mom34f         = mom34f1 OR mom34f2
momcap34      = (((mom34reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap34_3t   = (((mom34reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal34= (mom_metal3 AND mom_metal4) ENCLOSE mom_v3

momcap34_3t_wips   = (momcap34_3t AND mom_gt) NOT INTERACT mom_wims
momcap34_3t_wops   = (momcap34_3t NOT mom_gt) NOT INTERACT mom_wims
momcap34_3t_wims   = (momcap34_3t NOT mom_gt) INTERACT mom_wims

mom34tt_rf2       = ((mom_metal3 AND mom_metal4) NOT INTERACT mom_metal1) NOT INTERACT mom_metal5
mom34f_rf2        = mom34tt_rf2 NOT INTERACT mom_v3
mom34reg_rf2      = EXTENTS (SIZE mom34f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom34reg_rf       = mom34reg1 OR mom34reg_rf2
mom34f_rf         = mom34f1 OR mom34f_rf2
momcap34rf       = (((mom34reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap34rf_3t    = ((mom34reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal34rf = (((mom_metal3 AND mom_metal4) INTERACT mom34reg_rf) ENCLOSE mom_v3) INTERACT momcap34rf_3t
mom_terminal34rf_m = (((mom_metal3 AND mom_metal4) INTERACT mom34reg_rf) ENCLOSE mom_v3) NOT INTERACT mom_v2

momcap34rf_wips    = momcap34rf AND MOM_poly
momcap34rf_wops    = momcap34rf NOT MOM_poly
momcap34rf_3t_wips = ((momcap34rf_3t AND MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal34rf
momcap34rf_3t_wops = ((momcap34rf_3t NOT MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal34rf
momcap34rf_3t_wim  = ((momcap34rf_3t NOT MOM_poly) INTERACT mom_metal2) INTERACT mom_terminal34rf_m

mom45reg_1    = MOMDMY with text "momcap45"
mom45tt1       = mom_metal4 AND mom_metal5
mom45f1        = mom45tt1 NOT INTERACT mom_v4
mom45reg1      = EXTENTS (SIZE (mom45f1 AND mom45reg_1) BY 0.1 INSIDE OF MOMDMY)
mom45tt2       = (((mom_metal4 AND mom_metal5) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal3
mom45f2        = mom45tt2 NOT INTERACT mom_v4
mom45reg2      = (EXTENTS (SIZE mom45f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom45reg       = mom45reg1 OR mom45reg2
mom45f         = mom45f1 OR mom45f2
momcap45      = (((mom45reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap45_3t   = (((mom45reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal45= (mom_metal4 AND mom_metal5) ENCLOSE mom_v4

momcap45_3t_wips   = (momcap45_3t AND mom_gt) NOT INTERACT mom_wims
momcap45_3t_wops   = (momcap45_3t NOT mom_gt) NOT INTERACT mom_wims
momcap45_3t_wims   = (momcap45_3t NOT mom_gt) INTERACT mom_wims

mom45tt_rf2       = ((mom_metal4 AND mom_metal5) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2
mom45f_rf2        = mom45tt_rf2 NOT INTERACT mom_v4
mom45reg_rf2      = EXTENTS (SIZE mom45f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom45reg_rf       = mom45reg1 OR mom45reg_rf2
mom45f_rf         = mom45f1 OR mom45f_rf2
momcap45rf       = (((mom45reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap45rf_3t    = ((mom45reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal45rf = (((mom_metal4 AND mom_metal5) INTERACT mom45reg_rf) ENCLOSE mom_v4) INTERACT momcap45rf_3t
mom_terminal45rf_m = (((mom_metal4 AND mom_metal5) INTERACT mom45reg_rf) ENCLOSE mom_v4) NOT INTERACT mom_v3

momcap45rf_wips    = momcap45rf AND MOM_poly
momcap45rf_wops    = momcap45rf NOT MOM_poly
momcap45rf_3t_wips = ((momcap45rf_3t AND MOM_poly) NOT INTERACT mom_metal3) INTERACT mom_terminal45rf
momcap45rf_3t_wops = ((momcap45rf_3t NOT MOM_poly) NOT INTERACT mom_metal3) INTERACT mom_terminal45rf
momcap45rf_3t_wim  = ((momcap45rf_3t NOT MOM_poly) INTERACT mom_metal3) INTERACT mom_terminal45rf_m

mom13reg_1    = MOMDMY with text "momcap13"
mom13tt1       = (mom_metal1 AND mom_metal2) AND mom_metal3
mom13f1        = mom13tt1 NOT INTERACT (mom_v1 OR mom_v2)
mom13reg1      = EXTENTS (SIZE (mom13f1 AND mom13reg_1) BY 0.1 INSIDE OF MOMDMY)
mom13tt2       = (((mom_metal1 AND mom_metal2) AND mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal5
mom13f2        = mom13tt2 NOT INTERACT (mom_v1 OR mom_v2)
mom13reg2      = (EXTENTS (SIZE mom13f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom13reg       = mom13reg1 OR mom13reg2
mom13f         = mom13f1 OR mom13f2
momcap13      = (((mom13reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap13_3t   = (((mom13reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap13rf    = (((mom13reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap13rf_3t = (((mom13reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal13
mom_terminal13= (((mom_metal1 AND mom_metal2) AND mom_metal3) INTERACT mom13reg) ENCLOSE mom_m1_m3_via

momcap13rf_wips    = momcap13rf AND MOM_poly
momcap13rf_wops    = momcap13rf NOT MOM_poly
momcap13rf_3t_wips = momcap13rf_3t AND MOM_poly
momcap13rf_3t_wops = momcap13rf_3t NOT MOM_poly
momcap13_3t_wips   = (momcap13_3t AND mom_gt) NOT INTERACT mom_wims
momcap13_3t_wops   = (momcap13_3t NOT mom_gt) NOT INTERACT mom_wims
momcap13_3t_wims   = (momcap13_3t NOT mom_gt) INTERACT mom_wims

mom24reg_1    = MOMDMY with text "momcap24"
mom24tt1       = (mom_metal2 AND mom_metal3) AND mom_metal4
mom24f1        = mom24tt1 NOT INTERACT (mom_v2 OR mom_v3)
mom24reg1      = EXTENTS (SIZE (mom24f1 AND mom24reg_1) BY 0.1 INSIDE OF MOMDMY)
mom24tt2       = (((mom_metal2 AND mom_metal3) AND mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal1
mom24f2        = mom24tt2 NOT INTERACT (mom_v2 OR mom_v3)
mom24reg2      = (EXTENTS (SIZE mom24f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom24reg       = mom24reg1 OR mom24reg2
mom24f         = mom24f1 OR mom24f2
momcap24      = (((mom24reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap24_3t   = (((mom24reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal24= ((mom_metal2 AND mom_metal3) AND mom_metal4) ENCLOSE mom_m2_m4_via

momcap24_3t_wips   = (momcap24_3t AND mom_gt) NOT INTERACT mom_wims
momcap24_3t_wops   = (momcap24_3t NOT mom_gt) NOT INTERACT mom_wims
momcap24_3t_wims   = (momcap24_3t NOT mom_gt) INTERACT mom_wims

mom24tt_rf2       = ((mom_metal2 AND mom_metal3) AND mom_metal4) NOT INTERACT mom_metal5
mom24f_rf2        = mom24tt_rf2 NOT INTERACT (mom_v2 OR mom_v3)
mom24reg_rf2      = EXTENTS (SIZE mom24f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom24reg_rf       = mom24reg1 OR mom24reg_rf2
mom24f_rf         = mom24f1 OR mom24f_rf2
momcap24rf       = (((mom24reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap24rf_3t    = ((mom24reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal24rf = (((mom_metal2 AND mom_metal3) AND mom_metal4) INTERACT mom24reg_rf) ENCLOSE mom_m2_m4_via
mom_terminal24rf_m = ((((mom_metal2 AND mom_metal3) AND mom_metal4) INTERACT mom24reg_rf) ENCLOSE mom_m2_m4_via) NOT INTERACT mom_v1

momcap24rf_wips    = momcap24rf AND MOM_poly
momcap24rf_wops    = momcap24rf NOT MOM_poly
momcap24rf_3t_wips = ((momcap24rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal24rf
momcap24rf_3t_wops = ((momcap24rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal24rf
momcap24rf_3t_wim  = ((momcap24rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal24rf_m

mom14reg_1    = MOMDMY with text "momcap14"
mom14tt1       = ((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4
mom14f1        = mom14tt1 NOT INTERACT ((mom_v1 OR mom_v2) OR mom_v3)
mom14reg1      = EXTENTS (SIZE (mom14f1 AND mom14reg_1) BY 0.1 INSIDE OF MOMDMY)
mom14tt2       = (((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) NOT INTERACT mom_metal5
mom14f2        = mom14tt2 NOT INTERACT ((mom_v1 OR mom_v2) OR mom_v3)
mom14reg2      = (EXTENTS (SIZE mom14f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom14reg       = mom14reg1 OR mom14reg2
mom14f         = mom14f1 OR mom14f2
momcap14      = (((mom14reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap14_3t   = (((mom14reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap14rf    = (((mom14reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap14rf_3t = (((mom14reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal14
mom_terminal14= ((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) INTERACT mom14reg) ENCLOSE mom_m1_m4_via

momcap14rf_wips    = momcap14rf AND MOM_poly
momcap14rf_wops    = momcap14rf NOT MOM_poly
momcap14rf_3t_wips = momcap14rf_3t AND MOM_poly
momcap14rf_3t_wops = momcap14rf_3t NOT MOM_poly
momcap14_3t_wips   = (momcap14_3t AND mom_gt) NOT INTERACT mom_wims
momcap14_3t_wops   = (momcap14_3t NOT mom_gt) NOT INTERACT mom_wims
momcap14_3t_wims   = (momcap14_3t NOT mom_gt) INTERACT mom_wims

mom15reg_1    = MOMDMY with text "momcap15"
mom15tt       = (((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5
mom15f        = mom15tt NOT INTERACT (((mom_v1 OR mom_v2) OR mom_v3) OR mom_v4)
mom15reg1      = EXTENTS (SIZE (mom15f AND mom15reg_1) BY 0.1 INSIDE OF MOMDMY)
mom15reg2      = (EXTENTS (SIZE mom15f BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom15reg       = mom15reg1 OR mom15reg2
momcap15      = (((mom15reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap15_3t   = (((mom15reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap15rf    = (((mom15reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap15rf_3t = (((mom15reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal15
mom_terminal15= (((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5) INTERACT mom15reg) ENCLOSE mom_m1_m5_via

momcap15rf_wips    = momcap15rf AND MOM_poly
momcap15rf_wops    = momcap15rf NOT MOM_poly
momcap15rf_3t_wips = momcap15rf_3t AND MOM_poly
momcap15rf_3t_wops = momcap15rf_3t NOT MOM_poly
momcap15_3t_wips   = (momcap15_3t AND mom_gt) NOT INTERACT mom_wims
momcap15_3t_wops   = (momcap15_3t NOT mom_gt) NOT INTERACT mom_wims
momcap15_3t_wims   = (momcap15_3t NOT mom_gt) INTERACT mom_wims

mom25reg_1    = MOMDMY with text "momcap25"
mom25tt1       = ((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5
mom25f1        = mom25tt1 NOT INTERACT ((mom_v2 OR mom_v3) OR mom_v4)
mom25reg1      = EXTENTS (SIZE (mom25f1 AND mom25reg_1) BY 0.1 INSIDE OF MOMDMY)
mom25tt2       = (((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5 ) NOT INTERACT mom_metal1
mom25f2        = mom25tt2 NOT INTERACT ((mom_v2 OR mom_v3) OR mom_v4)
mom25reg2      = (EXTENTS (SIZE mom25f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom25reg       = mom25reg1 OR mom25reg2
mom25f         = mom25f1 OR mom25f2
momcap25      = (((mom25reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap25_3t   = (((mom25reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal25= (((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) ENCLOSE mom_m2_m5_via

momcap25_3t_wips   = (momcap25_3t AND mom_gt) NOT INTERACT mom_wims
momcap25_3t_wops   = (momcap25_3t NOT mom_gt) NOT INTERACT mom_wims
momcap25_3t_wims   = (momcap25_3t NOT mom_gt) INTERACT mom_wims

//mom25tt_rf       = ((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5
//mom25f_rf        = mom25tt_rf NOT INTERACT ((mom_v2 OR mom_v3) OR mom_v4)
mom25reg_rf2      = EXTENTS (SIZE mom25f1 BY 0.1 INSIDE OF MOMDMY)
mom25reg_rf       = mom25reg1 OR mom25reg_rf2
mom25f_rf         = copy mom25f1
momcap25rf       = (((mom25reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap25rf_3t    = ((mom25reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal25rf = ((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) INTERACT mom25reg_rf) ENCLOSE mom_m2_m5_via
mom_terminal25rf_m = (((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) INTERACT mom25reg_rf) ENCLOSE mom_m2_m5_via) NOT INTERACT mom_v1

momcap25rf_wips    = momcap25rf AND MOM_poly
momcap25rf_wops    = momcap25rf NOT MOM_poly
momcap25rf_3t_wips = ((momcap25rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal25rf
momcap25rf_3t_wops = ((momcap25rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal25rf
momcap25rf_3t_wim  = ((momcap25rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal25rf_m

mom35reg_1    = MOMDMY with text "momcap35"
mom35tt1       = (mom_metal3 AND mom_metal4) AND mom_metal5
mom35f1        = mom35tt1 NOT INTERACT (mom_v3 OR mom_v4 )
mom35reg1      = EXTENTS (SIZE (mom35f1 AND mom35reg_1) BY 0.1 INSIDE OF MOMDMY)
mom35tt2       = (((mom_metal3 AND mom_metal4) AND mom_metal5) NOT interact mom_metal1) NOT INTERACT  mom_metal2
mom35f2        = mom35tt2 NOT INTERACT (mom_v3 OR mom_v4 )
mom35reg2      = (EXTENTS (SIZE mom35f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom35reg       = mom35reg1 OR mom35reg2
mom35f         = mom35f1 OR mom35f2
momcap35      = (((mom35reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap35_3t   = (((mom35reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal35= ((mom_metal3 AND mom_metal4) AND mom_metal5) ENCLOSE mom_m3_m5_via

momcap35_3t_wips   = (momcap35_3t AND mom_gt) NOT INTERACT mom_wims
momcap35_3t_wops   = (momcap35_3t NOT mom_gt) NOT INTERACT mom_wims
momcap35_3t_wims   = (momcap35_3t NOT mom_gt) INTERACT mom_wims

mom35tt_rf2       = ((mom_metal3 AND mom_metal4) AND mom_metal5) NOT mom_metal1
mom35f_rf2        = mom35tt_rf2 NOT INTERACT (mom_v3 OR mom_v4 )
mom35reg_rf2      = EXTENTS (SIZE mom35f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom35reg_rf       = mom35reg1 OR mom35reg_rf2
mom35f_rf         = mom35f1 OR mom35f_rf2
momcap35rf       = (((mom35reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap35rf_3t    = ((mom35reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal35rf = (((mom_metal3 AND mom_metal4) AND mom_metal5) INTERACT mom35reg_rf) ENCLOSE mom_m3_m5_via
mom_terminal35rf_m = ((((mom_metal3 AND mom_metal4) AND mom_metal5) INTERACT mom35reg_rf) ENCLOSE mom_m3_m5_via) NOT INTERACT mom_v2

momcap35rf_wips    = momcap35rf AND MOM_poly
momcap35rf_wops    = momcap35rf NOT MOM_poly
momcap35rf_3t_wips = ((momcap35rf_3t AND MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal35rf
momcap35rf_3t_wops = ((momcap35rf_3t NOT MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal35rf
momcap35rf_3t_wim  = ((momcap35rf_3t NOT MOM_poly) INTERACT mom_metal2) INTERACT mom_terminal35rf_m

#ENDIF
#ENDIF

#IFDEF TOPMETAL 7
#IFDEF TOP_METAL_NUM double
mom_metal1         = metal1a AND MOMDMY
mom_v1             = Via1 AND MOMDMY
V1                 = copy Via1 
metal1b            = copy metal1a 
mom_metal2         = metal2a AND MOMDMY
mom_v2             = Via2 AND MOMDMY
V2                 = copy Via2 
metal2b            = copy metal2a 
mom_metal3         = metal3a AND MOMDMY
mom_v3             = Via3 AND MOMDMY
V3                 = copy Via3 
metal3b            = copy metal3a
mom_metal4         = metal4a AND MOMDMY
metal4b            = copy metal4a 
mom_metal5         = metal5a AND MOMDMY
metal5b            = copy metal5a
mom_v4             = Via4 AND MOMDMY
V4                 = copy Via4 

mom_m1_m3_via = mom_v1 AND mom_v2
mom_m2_m4_via = mom_v2 AND mom_v3
mom_m1_m4_via = (mom_v1 AND mom_v2) AND mom_v3
mom_m1_m5_via = ((mom_v1 AND mom_v2) AND mom_v3) AND mom_v4
mom_m2_m5_via = (mom_v2 AND mom_v3) AND mom_v4
mom_m3_m5_via = mom_v3 AND mom_v4

mom_text = ((((((((mom12reg_1 or mom13reg_1) or mom14reg_1) or mom15reg_1) or mom23reg_1) or mom24reg_1) or mom25reg_1) or mom34reg_1) or mom35reg_1) or mom45reg_1 

mom12reg_1    = MOMDMY with text "momcap12"
mom12tt1       = mom_metal1 AND mom_metal2
mom12f1        = mom12tt1 NOT INTERACT mom_v1
mom12reg1      = EXTENTS (SIZE (mom12f1 AND mom12reg_1) BY 0.1 INSIDE OF MOMDMY)
mom12tt2       = (((mom_metal1 AND mom_metal2) NOT INTERACT mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal5
mom12f2        = mom12tt2 NOT INTERACT mom_v1
mom12reg2      = (EXTENTS (SIZE mom12f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom12reg       = mom12reg1 OR mom12reg2
mom12f         = mom12f1 OR mom12f2
momcap12      = (((mom12reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap12_3t   = (((mom12reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap12rf    = (((mom12reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap12rf_3t = (((mom12reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal12
mom_terminal12= ((mom_metal1 AND mom_metal2) INTERACT mom12reg) ENCLOSE mom_v1

momcap12rf_wips    = momcap12rf AND MOM_poly
momcap12rf_wops    = momcap12rf NOT MOM_poly
momcap12rf_3t_wips = momcap12rf_3t AND MOM_poly
momcap12rf_3t_wops = momcap12rf_3t NOT MOM_poly
momcap12_3t_wips   = (momcap12_3t AND mom_gt) NOT INTERACT mom_wims
momcap12_3t_wops   = (momcap12_3t NOT mom_gt) NOT INTERACT mom_wims
momcap12_3t_wims   = (momcap12_3t NOT mom_gt) INTERACT mom_wims

mom23reg_1     = MOMDMY with text "momcap23"
mom23tt1       = mom_metal2 AND mom_metal3
mom23f1        = mom23tt1 NOT INTERACT mom_v2
mom23reg1      = EXTENTS (SIZE (mom23f1 AND mom23reg_1) BY 0.1 INSIDE OF MOMDMY)
mom23tt2       = (((mom_metal2 AND mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal1) NOT INTERACT mom_metal5
mom23f2        = mom23tt2 NOT INTERACT mom_v2
mom23reg2      = (EXTENTS (SIZE mom23f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom23reg       = mom23reg1 OR mom23reg2
mom23f         = mom23f1 OR mom23f2
momcap23      = (((mom23reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap23_3t   = (((mom23reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal23= (mom_metal2 AND mom_metal3) ENCLOSE mom_v2

momcap23_3t_wips   = (momcap23_3t AND mom_gt) NOT INTERACT mom_wims
momcap23_3t_wops   = (momcap23_3t NOT mom_gt) NOT INTERACT mom_wims
momcap23_3t_wims   = (momcap23_3t NOT mom_gt) INTERACT mom_wims

mom23tt_rf2       = ((mom_metal2 AND mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal5
mom23f_rf2        = mom23tt_rf2 NOT INTERACT mom_v2
mom23reg_rf2      = EXTENTS (SIZE mom23f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom23reg_rf       = mom23reg1 OR mom23reg_rf2
mom23f_rf         = mom23f1 OR mom23f_rf2
momcap23rf       = (((mom23reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap23rf_3t    = ((mom23reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal23rf = ((mom_metal2 AND mom_metal3) INTERACT mom23reg_rf) ENCLOSE mom_v2
mom_terminal23rf_m = (((mom_metal2 AND mom_metal3) INTERACT mom23reg_rf) ENCLOSE mom_v2) NOT INTERACT mom_v1

momcap23rf_wips    = momcap23rf AND MOM_poly
momcap23rf_wops    = momcap23rf NOT MOM_poly
momcap23rf_3t_wips = ((momcap23rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal23rf 
momcap23rf_3t_wops = ((momcap23rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal23rf
momcap23rf_3t_wim  = ((momcap23rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal23rf_m

mom34reg_1    = MOMDMY with text "momcap34"
mom34tt1       = mom_metal3 AND mom_metal4
mom34f1        = mom34tt1 NOT INTERACT mom_v3
mom34reg1      = EXTENTS (SIZE (mom34f1 AND mom34reg_1) BY 0.1 INSIDE OF MOMDMY)
mom34tt2       = (((mom_metal3 AND mom_metal4) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal5
mom34f2        = mom34tt2 NOT INTERACT mom_v3
mom34reg2      = (EXTENTS (SIZE mom34f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom34reg       = mom34reg1 OR mom34reg2
mom34f         = mom34f1 OR mom34f2
momcap34      = (((mom34reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap34_3t   = (((mom34reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal34= (mom_metal3 AND mom_metal4) ENCLOSE mom_v3

momcap34_3t_wips   = (momcap34_3t AND mom_gt) NOT INTERACT mom_wims
momcap34_3t_wops   = (momcap34_3t NOT mom_gt) NOT INTERACT mom_wims
momcap34_3t_wims   = (momcap34_3t NOT mom_gt) INTERACT mom_wims

mom34tt_rf2       = ((mom_metal3 AND mom_metal4) NOT INTERACT mom_metal1) NOT INTERACT mom_metal5
mom34f_rf2        = mom34tt_rf2 NOT INTERACT mom_v3
mom34reg_rf2      = EXTENTS (SIZE mom34f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom34reg_rf       = mom34reg1 OR mom34reg_rf2
mom34f_rf         = mom34f1 OR mom34f_rf2
momcap34rf       = (((mom34reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap34rf_3t    = ((mom34reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal34rf = (((mom_metal3 AND mom_metal4) INTERACT mom34reg_rf) ENCLOSE mom_v3) INTERACT momcap34rf_3t
mom_terminal34rf_m = (((mom_metal3 AND mom_metal4) INTERACT mom34reg_rf) ENCLOSE mom_v3) NOT INTERACT mom_v2

momcap34rf_wips    = momcap34rf AND MOM_poly
momcap34rf_wops    = momcap34rf NOT MOM_poly
momcap34rf_3t_wips = ((momcap34rf_3t AND MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal34rf
momcap34rf_3t_wops = ((momcap34rf_3t NOT MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal34rf
momcap34rf_3t_wim  = ((momcap34rf_3t NOT MOM_poly) INTERACT mom_metal2) INTERACT mom_terminal34rf_m

mom45reg_1    = MOMDMY with text "momcap45"
mom45tt1       = mom_metal4 AND mom_metal5
mom45f1        = mom45tt1 NOT INTERACT mom_v4
mom45reg1      = EXTENTS (SIZE (mom45f1 AND mom45reg_1) BY 0.1 INSIDE OF MOMDMY)
mom45tt2       = (((mom_metal4 AND mom_metal5) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal3
mom45f2        = mom45tt2 NOT INTERACT mom_v4
mom45reg2      = (EXTENTS (SIZE mom45f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom45reg       = mom45reg1 OR mom45reg2
mom45f         = mom45f1 OR mom45f2
momcap45      = (((mom45reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap45_3t   = (((mom45reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal45= (mom_metal4 AND mom_metal5) ENCLOSE mom_v4

momcap45_3t_wips   = (momcap45_3t AND mom_gt) NOT INTERACT mom_wims
momcap45_3t_wops   = (momcap45_3t NOT mom_gt) NOT INTERACT mom_wims
momcap45_3t_wims   = (momcap45_3t NOT mom_gt) INTERACT mom_wims

mom45tt_rf2       = ((mom_metal4 AND mom_metal5) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2
mom45f_rf2        = mom45tt_rf2 NOT INTERACT mom_v4
mom45reg_rf2      = EXTENTS (SIZE mom45f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom45reg_rf       = mom45reg1 OR mom45reg_rf2
mom45f_rf         = mom45f1 OR mom45f_rf2
momcap45rf       = (((mom45reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap45rf_3t    = ((mom45reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal45rf = (((mom_metal4 AND mom_metal5) INTERACT mom45reg_rf) ENCLOSE mom_v4) INTERACT momcap45rf_3t
mom_terminal45rf_m = (((mom_metal4 AND mom_metal5) INTERACT mom45reg_rf) ENCLOSE mom_v4) NOT INTERACT mom_v3

momcap45rf_wips    = momcap45rf AND MOM_poly
momcap45rf_wops    = momcap45rf NOT MOM_poly
momcap45rf_3t_wips = ((momcap45rf_3t AND MOM_poly) NOT INTERACT mom_metal3) INTERACT mom_terminal45rf
momcap45rf_3t_wops = ((momcap45rf_3t NOT MOM_poly) NOT INTERACT mom_metal3) INTERACT mom_terminal45rf
momcap45rf_3t_wim  = ((momcap45rf_3t NOT MOM_poly) INTERACT mom_metal3) INTERACT mom_terminal45rf_m

mom13reg_1    = MOMDMY with text "momcap13"
mom13tt1       = (mom_metal1 AND mom_metal2) AND mom_metal3
mom13f1        = mom13tt1 NOT INTERACT (mom_v1 OR mom_v2)
mom13reg1      = EXTENTS (SIZE (mom13f1 AND mom13reg_1) BY 0.1 INSIDE OF MOMDMY)
mom13tt2       = (((mom_metal1 AND mom_metal2) AND mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal5
mom13f2        = mom13tt2 NOT INTERACT (mom_v1 OR mom_v2)
mom13reg2      = (EXTENTS (SIZE mom13f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom13reg       = mom13reg1 OR mom13reg2
mom13f         = mom13f1 OR mom13f2
momcap13      = (((mom13reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap13_3t   = (((mom13reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap13rf    = (((mom13reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap13rf_3t = (((mom13reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal13
mom_terminal13= (((mom_metal1 AND mom_metal2) AND mom_metal3) INTERACT mom13reg) ENCLOSE mom_m1_m3_via

momcap13rf_wips    = momcap13rf AND MOM_poly
momcap13rf_wops    = momcap13rf NOT MOM_poly
momcap13rf_3t_wips = momcap13rf_3t AND MOM_poly
momcap13rf_3t_wops = momcap13rf_3t NOT MOM_poly
momcap13_3t_wips   = (momcap13_3t AND mom_gt) NOT INTERACT mom_wims
momcap13_3t_wops   = (momcap13_3t NOT mom_gt) NOT INTERACT mom_wims
momcap13_3t_wims   = (momcap13_3t NOT mom_gt) INTERACT mom_wims

mom24reg_1    = MOMDMY with text "momcap24"
mom24tt1       = (mom_metal2 AND mom_metal3) AND mom_metal4
mom24f1        = mom24tt1 NOT INTERACT (mom_v2 OR mom_v3)
mom24reg1      = EXTENTS (SIZE (mom24f1 AND mom24reg_1) BY 0.1 INSIDE OF MOMDMY)
mom24tt2       = (((mom_metal2 AND mom_metal3) AND mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal1
mom24f2        = mom24tt2 NOT INTERACT (mom_v2 OR mom_v3)
mom24reg2      = (EXTENTS (SIZE mom24f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom24reg       = mom24reg1 OR mom24reg2
mom24f         = mom24f1 OR mom24f2
momcap24      = (((mom24reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap24_3t   = (((mom24reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal24= ((mom_metal2 AND mom_metal3) AND mom_metal4) ENCLOSE mom_m2_m4_via

momcap24_3t_wips   = (momcap24_3t AND mom_gt) NOT INTERACT mom_wims
momcap24_3t_wops   = (momcap24_3t NOT mom_gt) NOT INTERACT mom_wims
momcap24_3t_wims   = (momcap24_3t NOT mom_gt) INTERACT mom_wims

mom24tt_rf2       = ((mom_metal2 AND mom_metal3) AND mom_metal4) NOT INTERACT mom_metal5
mom24f_rf2        = mom24tt_rf2 NOT INTERACT (mom_v2 OR mom_v3)
mom24reg_rf2      = EXTENTS (SIZE mom24f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom24reg_rf       = mom24reg1 OR mom24reg_rf2
mom24f_rf         = mom24f1 OR mom24f_rf2
momcap24rf       = (((mom24reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap24rf_3t    = ((mom24reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal24rf = (((mom_metal2 AND mom_metal3) AND mom_metal4) INTERACT mom24reg_rf) ENCLOSE mom_m2_m4_via
mom_terminal24rf_m = ((((mom_metal2 AND mom_metal3) AND mom_metal4) INTERACT mom24reg_rf) ENCLOSE mom_m2_m4_via) NOT INTERACT mom_v1

momcap24rf_wips    = momcap24rf AND MOM_poly
momcap24rf_wops    = momcap24rf NOT MOM_poly
momcap24rf_3t_wips = ((momcap24rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal24rf
momcap24rf_3t_wops = ((momcap24rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal24rf
momcap24rf_3t_wim  = ((momcap24rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal24rf_m

mom14reg_1    = MOMDMY with text "momcap14"
mom14tt1       = ((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4
mom14f1        = mom14tt1 NOT INTERACT ((mom_v1 OR mom_v2) OR mom_v3)
mom14reg1      = EXTENTS (SIZE (mom14f1 AND mom14reg_1) BY 0.1 INSIDE OF MOMDMY)
mom14tt2       = (((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) NOT INTERACT mom_metal5
mom14f2        = mom14tt2 NOT INTERACT ((mom_v1 OR mom_v2) OR mom_v3)
mom14reg2      = (EXTENTS (SIZE mom14f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom14reg       = mom14reg1 OR mom14reg2
mom14f         = mom14f1 OR mom14f2
momcap14      = (((mom14reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap14_3t   = (((mom14reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap14rf    = (((mom14reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap14rf_3t = (((mom14reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal14
mom_terminal14= ((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) INTERACT mom14reg) ENCLOSE mom_m1_m4_via

momcap14rf_wips    = momcap14rf AND MOM_poly
momcap14rf_wops    = momcap14rf NOT MOM_poly
momcap14rf_3t_wips = momcap14rf_3t AND MOM_poly
momcap14rf_3t_wops = momcap14rf_3t NOT MOM_poly
momcap14_3t_wips   = (momcap14_3t AND mom_gt) NOT INTERACT mom_wims
momcap14_3t_wops   = (momcap14_3t NOT mom_gt) NOT INTERACT mom_wims
momcap14_3t_wims   = (momcap14_3t NOT mom_gt) INTERACT mom_wims

mom15reg_1    = MOMDMY with text "momcap15"
mom15tt       = (((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5
mom15f        = mom15tt NOT INTERACT (((mom_v1 OR mom_v2) OR mom_v3) OR mom_v4)
mom15reg1     = EXTENTS (SIZE (mom15f AND mom15reg_1) BY 0.1 INSIDE OF MOMDMY)
mom15reg2     = (EXTENTS (SIZE mom15f BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom15reg      = mom15reg1 OR mom15reg2
momcap15      = (((mom15reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap15_3t   = (((mom15reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap15rf    = (((mom15reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap15rf_3t = (((mom15reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal15
mom_terminal15= (((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5) INTERACT mom15reg) ENCLOSE mom_m1_m5_via

momcap15rf_wips    = momcap15rf AND MOM_poly
momcap15rf_wops    = momcap15rf NOT MOM_poly
momcap15rf_3t_wips = momcap15rf_3t AND MOM_poly
momcap15rf_3t_wops = momcap15rf_3t NOT MOM_poly
momcap15_3t_wips   = (momcap15_3t AND mom_gt) NOT INTERACT mom_wims
momcap15_3t_wops   = (momcap15_3t NOT mom_gt) NOT INTERACT mom_wims
momcap15_3t_wims   = (momcap15_3t NOT mom_gt) INTERACT mom_wims

mom25reg_1    = MOMDMY with text "momcap25"
mom25tt1       = ((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5
mom25f1        = mom25tt1 NOT INTERACT ((mom_v2 OR mom_v3) OR mom_v4)
mom25reg1      = EXTENTS (SIZE (mom25f1 AND mom25reg_1) BY 0.1 INSIDE OF MOMDMY)
mom25tt2       = (((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5 ) NOT INTERACT mom_metal1
mom25f2        = mom25tt2 NOT INTERACT ((mom_v2 OR mom_v3) OR mom_v4)
mom25reg2      = (EXTENTS (SIZE mom25f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom25reg       = mom25reg1 OR mom25reg2
mom25f         = mom25f1 OR mom25f2
momcap25      = (((mom25reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap25_3t   = (((mom25reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal25= (((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) ENCLOSE mom_m2_m5_via

momcap25_3t_wips   = (momcap25_3t AND mom_gt) NOT INTERACT mom_wims
momcap25_3t_wops   = (momcap25_3t NOT mom_gt) NOT INTERACT mom_wims
momcap25_3t_wims   = (momcap25_3t NOT mom_gt) INTERACT mom_wims

//mom25tt_rf       = ((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5
//mom25f_rf        = mom25tt_rf NOT INTERACT ((mom_v2 OR mom_v3) OR mom_v4)
mom25reg_rf2      = EXTENTS (SIZE mom25f1 BY 0.1 INSIDE OF MOMDMY)
mom25reg_rf       = mom25reg1 OR mom25reg_rf2
mom25f_rf         = copy mom25f1 
momcap25rf       = (((mom25reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap25rf_3t    = ((mom25reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal25rf = ((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) INTERACT mom25reg_rf) ENCLOSE mom_m2_m5_via
mom_terminal25rf_m = (((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) INTERACT mom25reg_rf) ENCLOSE mom_m2_m5_via) NOT INTERACT mom_v1

momcap25rf_wips    = momcap25rf AND MOM_poly
momcap25rf_wops    = momcap25rf NOT MOM_poly
momcap25rf_3t_wips = ((momcap25rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal25rf
momcap25rf_3t_wops = ((momcap25rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal25rf
momcap25rf_3t_wim  = ((momcap25rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal25rf_m

mom35reg_1    = MOMDMY with text "momcap35"
mom35tt1       = (mom_metal3 AND mom_metal4) AND mom_metal5
mom35f1        = mom35tt1 NOT INTERACT (mom_v3 OR mom_v4 )
mom35reg1      = EXTENTS (SIZE (mom35f1 AND mom35reg_1) BY 0.1 INSIDE OF MOMDMY)
mom35tt2       = (((mom_metal3 AND mom_metal4) AND mom_metal5) NOT interact mom_metal1) NOT INTERACT  mom_metal2
mom35f2        = mom35tt2 NOT INTERACT (mom_v3 OR mom_v4 )
mom35reg2      = (EXTENTS (SIZE mom35f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom35reg       = mom35reg1 OR mom35reg2
mom35f         = mom35f1 OR mom35f2
momcap35      = (((mom35reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap35_3t   = (((mom35reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal35= ((mom_metal3 AND mom_metal4) AND mom_metal5) ENCLOSE mom_m3_m5_via

momcap35_3t_wips   = (momcap35_3t AND mom_gt) NOT INTERACT mom_wims
momcap35_3t_wops   = (momcap35_3t NOT mom_gt) NOT INTERACT mom_wims
momcap35_3t_wims   = (momcap35_3t NOT mom_gt) INTERACT mom_wims

mom35tt_rf2       = ((mom_metal3 AND mom_metal4) AND mom_metal5) NOT mom_metal1
mom35f_rf2        = mom35tt_rf2 NOT INTERACT (mom_v3 OR mom_v4 )
mom35reg_rf2      = EXTENTS (SIZE mom35f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom35reg_rf       = mom35reg1 OR mom35reg_rf2
mom35f_rf         = mom35f1 OR mom35f_rf2
momcap35rf       = (((mom35reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap35rf_3t    = ((mom35reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal35rf = (((mom_metal3 AND mom_metal4) AND mom_metal5) INTERACT mom35reg_rf) ENCLOSE mom_m3_m5_via
mom_terminal35rf_m = ((((mom_metal3 AND mom_metal4) AND mom_metal5) INTERACT mom35reg_rf) ENCLOSE mom_m3_m5_via) NOT INTERACT mom_v2

momcap35rf_wips    = momcap35rf AND MOM_poly
momcap35rf_wops    = momcap35rf NOT MOM_poly
momcap35rf_3t_wips = ((momcap35rf_3t AND MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal35rf
momcap35rf_3t_wops = ((momcap35rf_3t NOT MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal35rf
momcap35rf_3t_wim  = ((momcap35rf_3t NOT MOM_poly) INTERACT mom_metal2) INTERACT mom_terminal35rf_m

#ENDIF
#ENDIF

#IFDEF TOPMETAL 7
#IFDEF TOP_METAL_NUM single

mom_metal1         = metal1a AND MOMDMY
mom_v1             = Via1 AND MOMDMY
V1                 = copy Via1 
metal1b            = copy metal1a 
mom_metal2         = metal2a AND MOMDMY
mom_v2             = Via2 AND MOMDMY
V2                 = copy Via2 
metal2b            = copy metal2a 
mom_metal3         = metal3a AND MOMDMY
mom_v3             = Via3 AND MOMDMY
V3                 = copy Via3 
metal3b            = copy metal3a 
mom_metal4         = metal4a AND MOMDMY
metal4b            = copy metal4a
mom_metal5         = metal5a AND MOMDMY
metal5b            = copy metal5a 
mom_v4             = Via4 AND MOMDMY
V4                 = copy Via4 
mom_metal6         = metal6a AND MOMDMY
metal6b            = copy metal6a 
mom_v5             = Via5 AND MOMDMY
V5                 = copy Via5 

mom_m1_m3_via = mom_v1 AND mom_v2
mom_m2_m4_via = mom_v2 AND mom_v3
mom_m1_m4_via = (mom_v1 AND mom_v2) AND mom_v3
mom_m1_m5_via = ((mom_v1 AND mom_v2) AND mom_v3) AND mom_v4
mom_m2_m5_via = (mom_v2 AND mom_v3) AND mom_v4
mom_m3_m5_via = mom_v3 AND mom_v4
mom_m1_m6_via = (((mom_v1 AND mom_v2) AND mom_v3) AND mom_v4) AND mom_v5
mom_m2_m6_via = ((mom_v2 AND mom_v3) AND mom_v4) AND mom_v5
mom_m3_m6_via = (mom_v3 AND mom_v4) AND mom_v5
mom_m4_m6_via =  mom_v4 AND mom_v5

mom_text = (((((((((((((mom12reg_1 or mom13reg_1) or mom14reg_1) or mom15reg_1) or mom16reg_1) or mom23reg_1) or mom24reg_1) or mom25reg_1) or mom26reg_1) or mom34reg_1) or mom35reg_1) or mom36reg_1) or mom45reg_1) or mom46reg_1) or mom56reg_1

mom12reg_1    = MOMDMY with text "momcap12"
mom12tt1       = mom_metal1 AND mom_metal2
mom12f1        = mom12tt1 NOT INTERACT mom_v1
mom12reg1      = EXTENTS (SIZE (mom12f1 AND mom12reg_1) BY 0.1 INSIDE OF MOMDMY)
mom12tt2       = ((((mom_metal1 AND mom_metal2) NOT INTERACT mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom12f2        = mom12tt2 NOT INTERACT mom_v1
mom12reg2      = (EXTENTS (SIZE mom12f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom12reg       = mom12reg1 OR mom12reg2
mom12f         = mom12f1 OR mom12f2
momcap12      = (((mom12reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap12_3t   = (((mom12reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap12rf    = (((mom12reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap12rf_3t = (((mom12reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal12
mom_terminal12= ((mom_metal1 AND mom_metal2) INTERACT mom12reg) ENCLOSE mom_v1

momcap12rf_wips    = momcap12rf AND MOM_poly
momcap12rf_wops    = momcap12rf NOT MOM_poly
momcap12rf_3t_wips = momcap12rf_3t AND MOM_poly
momcap12rf_3t_wops = momcap12rf_3t NOT MOM_poly
momcap12_3t_wips   = (momcap12_3t AND mom_gt) NOT INTERACT mom_wims
momcap12_3t_wops   = (momcap12_3t NOT mom_gt) NOT INTERACT mom_wims
momcap12_3t_wims   = (momcap12_3t NOT mom_gt) INTERACT mom_wims

mom23reg_1     = MOMDMY with text "momcap23"
mom23tt1       = mom_metal2 AND mom_metal3
mom23f1        = mom23tt1 NOT INTERACT mom_v2
mom23reg1      = EXTENTS (SIZE (mom23f1 AND mom23reg_1) BY 0.1 INSIDE OF MOMDMY)
mom23tt2       = ((((mom_metal2 AND mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal1) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom23f2        = mom23tt2 NOT INTERACT mom_v2
mom23reg2      = (EXTENTS (SIZE mom23f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom23reg       = mom23reg1 OR mom23reg2
mom23f         = mom23f1 OR mom23f2
momcap23      = (((mom23reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap23_3t   = (((mom23reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal23= (mom_metal2 AND mom_metal3) ENCLOSE mom_v2

momcap23_3t_wips   = (momcap23_3t AND mom_gt) NOT INTERACT mom_wims
momcap23_3t_wops   = (momcap23_3t NOT mom_gt) NOT INTERACT mom_wims
momcap23_3t_wims   = (momcap23_3t NOT mom_gt) INTERACT mom_wims

mom23tt_rf2       = (((mom_metal2 AND mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom23f_rf2        = mom23tt_rf2 NOT INTERACT mom_v2
mom23reg_rf2      = EXTENTS (SIZE mom23f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom23reg_rf       = mom23reg1 OR mom23reg_rf2
mom23f_rf         = mom23f1 OR mom23f_rf2
momcap23rf       = (((mom23reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap23rf_3t    = ((mom23reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal23rf = ((mom_metal2 AND mom_metal3) INTERACT mom23reg_rf) ENCLOSE mom_v2
mom_terminal23rf_m = (((mom_metal2 AND mom_metal3) INTERACT mom23reg_rf) ENCLOSE mom_v2) NOT INTERACT mom_v1

momcap23rf_wips    = momcap23rf AND MOM_poly
momcap23rf_wops    = momcap23rf NOT MOM_poly
momcap23rf_3t_wips = ((momcap23rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal23rf 
momcap23rf_3t_wops = ((momcap23rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal23rf
momcap23rf_3t_wim  = ((momcap23rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal23rf_m

mom34reg_1    = MOMDMY with text "momcap34"
mom34tt1       = mom_metal3 AND mom_metal4
mom34f1        = mom34tt1 NOT INTERACT mom_v3
mom34reg1      = EXTENTS (SIZE (mom34f1 AND mom34reg_1) BY 0.1 INSIDE OF MOMDMY)
mom34tt2       = ((((mom_metal3 AND mom_metal4) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom34f2        = mom34tt2 NOT INTERACT mom_v3
mom34reg2      = (EXTENTS (SIZE mom34f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom34reg       = mom34reg1 OR mom34reg2
mom34f         = mom34f1 OR mom34f2
momcap34      = (((mom34reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap34_3t   = (((mom34reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal34= (mom_metal3 AND mom_metal4) ENCLOSE mom_v3

momcap34_3t_wips   = (momcap34_3t AND mom_gt) NOT INTERACT mom_wims
momcap34_3t_wops   = (momcap34_3t NOT mom_gt) NOT INTERACT mom_wims
momcap34_3t_wims   = (momcap34_3t NOT mom_gt) INTERACT mom_wims

mom34tt_rf2       = (((mom_metal3 AND mom_metal4) NOT INTERACT mom_metal1) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom34f_rf2        = mom34tt_rf2 NOT INTERACT mom_v3
mom34reg_rf2      = EXTENTS (SIZE mom34f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom34reg_rf       = mom34reg1 OR mom34reg_rf2
mom34f_rf         = mom34f1 OR mom34f_rf2
momcap34rf       = (((mom34reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap34rf_3t    = ((mom34reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal34rf = (((mom_metal3 AND mom_metal4) INTERACT mom34reg_rf) ENCLOSE mom_v3) INTERACT momcap34rf_3t
mom_terminal34rf_m = (((mom_metal3 AND mom_metal4) INTERACT mom34reg_rf) ENCLOSE mom_v3) NOT INTERACT mom_v2

momcap34rf_wips    = momcap34rf AND MOM_poly
momcap34rf_wops    = momcap34rf NOT MOM_poly
momcap34rf_3t_wips = ((momcap34rf_3t AND MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal34rf
momcap34rf_3t_wops = ((momcap34rf_3t NOT MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal34rf
momcap34rf_3t_wim  = ((momcap34rf_3t NOT MOM_poly) INTERACT mom_metal2) INTERACT mom_terminal34rf_m

mom45reg_1    = MOMDMY with text "momcap45"
mom45tt1       = mom_metal4 AND mom_metal5
mom45f1        = mom45tt1 NOT INTERACT mom_v4
mom45reg1      = EXTENTS (SIZE (mom45f1 AND mom45reg_1) BY 0.1 INSIDE OF MOMDMY)
mom45tt2       = ((((mom_metal4 AND mom_metal5) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal3) NOT INTERACT mom_metal6
mom45f2        = mom45tt2 NOT INTERACT mom_v4
mom45reg2      = (EXTENTS (SIZE mom45f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom45reg       = mom45reg1 OR mom45reg2
mom45f         = mom45f1 OR mom45f2
momcap45      = (((mom45reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap45_3t   = (((mom45reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal45= (mom_metal4 AND mom_metal5) ENCLOSE mom_v4

momcap45_3t_wips   = (momcap45_3t AND mom_gt) NOT INTERACT mom_wims
momcap45_3t_wops   = (momcap45_3t NOT mom_gt) NOT INTERACT mom_wims
momcap45_3t_wims   = (momcap45_3t NOT mom_gt) INTERACT mom_wims

mom45tt_rf2       = (((mom_metal4 AND mom_metal5) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal6
mom45f_rf2        = mom45tt_rf2 NOT INTERACT mom_v4
mom45reg_rf2      = EXTENTS (SIZE mom45f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom45reg_rf       = mom45reg1 OR mom45reg_rf2
mom45f_rf         = mom45f1 OR mom45f_rf2
momcap45rf       = (((mom45reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap45rf_3t    = ((mom45reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal45rf = (((mom_metal4 AND mom_metal5) INTERACT mom45reg_rf) ENCLOSE mom_v4) INTERACT momcap45rf_3t
mom_terminal45rf_m = (((mom_metal4 AND mom_metal5) INTERACT mom45reg_rf) ENCLOSE mom_v4) NOT INTERACT mom_v3

momcap45rf_wips    = momcap45rf AND MOM_poly
momcap45rf_wops    = momcap45rf NOT MOM_poly
momcap45rf_3t_wips = ((momcap45rf_3t AND MOM_poly) NOT INTERACT mom_metal3) INTERACT mom_terminal45rf
momcap45rf_3t_wops = ((momcap45rf_3t NOT MOM_poly) NOT INTERACT mom_metal3) INTERACT mom_terminal45rf
momcap45rf_3t_wim  = ((momcap45rf_3t NOT MOM_poly) INTERACT mom_metal3) INTERACT mom_terminal45rf_m

mom56reg_1    = MOMDMY with text "momcap56"
mom56tt1       = mom_metal5 AND mom_metal6
mom56f1        = mom56tt1 NOT INTERACT mom_v5
mom56reg1      = EXTENTS (SIZE (mom56f1 AND mom56reg_1) BY 0.1 INSIDE OF MOMDMY)
mom56tt2       = ((((mom_metal5 AND mom_metal6) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal3) NOT INTERACT mom_metal4
mom56f2        = mom56tt2 NOT INTERACT mom_v5
mom56reg2      = (EXTENTS (SIZE mom56f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom56reg       = mom56reg1 OR mom56reg2
mom56f         = mom56f1 OR mom56f2
momcap56      = (((mom56reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap56_3t   = (((mom56reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal56= (mom_metal5 AND mom_metal6) ENCLOSE mom_v5

momcap56_3t_wips   = (momcap56_3t AND mom_gt) NOT INTERACT mom_wims
momcap56_3t_wops   = (momcap56_3t NOT mom_gt) NOT INTERACT mom_wims
momcap56_3t_wims   = (momcap56_3t NOT mom_gt) INTERACT mom_wims

mom56tt_rf2       = (((mom_metal5 AND mom_metal6) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal3
mom56f_rf2        = mom56tt_rf2 NOT INTERACT mom_v5
mom56reg_rf2      = EXTENTS (SIZE mom56f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom56reg_rf       = mom56reg1 OR mom56reg_rf2
mom56f_rf         = mom56f1 OR mom56f_rf2
momcap56rf       = (((mom56reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM 
momcap56rf_3t    = ((mom56reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal56rf = ((mom_metal5 AND mom_metal6) INTERACT mom56reg_rf) ENCLOSE mom_v5 
mom_terminal56rf_m = (((mom_metal5 AND mom_metal6) INTERACT mom56reg_rf) ENCLOSE mom_v5) NOT INTERACT mom_v4

momcap56rf_wips    = momcap56rf AND MOM_poly
momcap56rf_wops    = momcap56rf NOT MOM_poly
momcap56rf_3t_wips = ((momcap56rf_3t AND MOM_poly) NOT INTERACT mom_metal4) INTERACT mom_terminal56rf
momcap56rf_3t_wops = ((momcap56rf_3t NOT MOM_poly) NOT INTERACT mom_metal4) INTERACT mom_terminal56rf
momcap56rf_3t_wim  = ((momcap56rf_3t NOT MOM_poly) INTERACT mom_metal4) INTERACT mom_terminal56rf_m

mom13reg_1    = MOMDMY with text "momcap13"
mom13tt1       = (mom_metal1 AND mom_metal2) AND mom_metal3
mom13f1        = mom13tt1 NOT INTERACT (mom_v1 OR mom_v2)
mom13reg1      = EXTENTS (SIZE (mom13f1 AND mom13reg_1) BY 0.1 INSIDE OF MOMDMY)
mom13tt2       = ((((mom_metal1 AND mom_metal2) AND mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom13f2        = mom13tt2 NOT INTERACT (mom_v1 OR mom_v2)
mom13reg2      = (EXTENTS (SIZE mom13f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom13reg       = mom13reg1 OR mom13reg2
mom13f         = mom13f1 OR mom13f2
momcap13      = (((mom13reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap13_3t   = (((mom13reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap13rf    = (((mom13reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap13rf_3t = (((mom13reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal13
mom_terminal13= (((mom_metal1 AND mom_metal2) AND mom_metal3) INTERACT mom13reg) ENCLOSE mom_m1_m3_via

momcap13rf_wips    = momcap13rf AND MOM_poly
momcap13rf_wops    = momcap13rf NOT MOM_poly
momcap13rf_3t_wips = momcap13rf_3t AND MOM_poly
momcap13rf_3t_wops = momcap13rf_3t NOT MOM_poly
momcap13_3t_wips   = (momcap13_3t AND mom_gt) NOT INTERACT mom_wims
momcap13_3t_wops   = (momcap13_3t NOT mom_gt) NOT INTERACT mom_wims
momcap13_3t_wims   = (momcap13_3t NOT mom_gt) INTERACT mom_wims

mom24reg_1    = MOMDMY with text "momcap24"
mom24tt1       = (mom_metal2 AND mom_metal3) AND mom_metal4
mom24f1        = mom24tt1 NOT INTERACT (mom_v2 OR mom_v3)
mom24reg1      = EXTENTS (SIZE (mom24f1 AND mom24reg_1) BY 0.1 INSIDE OF MOMDMY)
mom24tt2       = ((((mom_metal2 AND mom_metal3) AND mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6) NOT INTERACT mom_metal1
mom24f2        = mom24tt2 NOT INTERACT (mom_v2 OR mom_v3)
mom24reg2      = (EXTENTS (SIZE mom24f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom24reg       = mom24reg1 OR mom24reg2
mom24f         = mom24f1 OR mom24f2
momcap24      = (((mom24reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap24_3t   = (((mom24reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal24= ((mom_metal2 AND mom_metal3) AND mom_metal4) ENCLOSE mom_m2_m4_via

momcap24_3t_wips   = (momcap24_3t AND mom_gt) NOT INTERACT mom_wims
momcap24_3t_wops   = (momcap24_3t NOT mom_gt) NOT INTERACT mom_wims
momcap24_3t_wims   = (momcap24_3t NOT mom_gt) INTERACT mom_wims

mom24tt_rf2       = (((mom_metal2 AND mom_metal3) AND mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom24f_rf2        = mom24tt_rf2 NOT INTERACT (mom_v2 OR mom_v3)
mom24reg_rf2      = EXTENTS (SIZE mom24f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom24reg_rf       = mom24reg1 OR mom24reg_rf2
mom24f_rf         = mom24f1 OR mom24f_rf2
momcap24rf       = (((mom24reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap24rf_3t    = ((mom24reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal24rf = (((mom_metal2 AND mom_metal3) AND mom_metal4) INTERACT mom24reg_rf) ENCLOSE mom_m2_m4_via
mom_terminal24rf_m = ((((mom_metal2 AND mom_metal3) AND mom_metal4) INTERACT mom24reg_rf) ENCLOSE mom_m2_m4_via) NOT INTERACT mom_v1

momcap24rf_wips    = momcap24rf AND MOM_poly
momcap24rf_wops    = momcap24rf NOT MOM_poly
momcap24rf_3t_wips = ((momcap24rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal24rf
momcap24rf_3t_wops = ((momcap24rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal24rf
momcap24rf_3t_wim  = ((momcap24rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal24rf_m

mom14reg_1    = MOMDMY with text "momcap14"
mom14tt1       = ((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4
mom14f1        = mom14tt1 NOT INTERACT ((mom_v1 OR mom_v2) OR mom_v3)
mom14reg1      = EXTENTS (SIZE (mom14f1 AND mom14reg_1) BY 0.1 INSIDE OF MOMDMY)
mom14tt2       = ((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT  mom_metal6
mom14f2        = mom14tt2 NOT INTERACT ((mom_v1 OR mom_v2) OR mom_v3)
mom14reg2      = (EXTENTS (SIZE mom14f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom14reg       = mom14reg1 OR mom14reg2
mom14f         = mom14f1 OR mom14f2
momcap14      = (((mom14reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap14_3t   = (((mom14reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap14rf    = (((mom14reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap14rf_3t = (((mom14reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal14
mom_terminal14= ((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) INTERACT mom14reg) ENCLOSE mom_m1_m4_via

momcap14rf_wips    = momcap14rf AND MOM_poly
momcap14rf_wops    = momcap14rf NOT MOM_poly
momcap14rf_3t_wips = momcap14rf_3t AND MOM_poly
momcap14rf_3t_wops = momcap14rf_3t NOT MOM_poly
momcap14_3t_wips   = (momcap14_3t AND mom_gt) NOT INTERACT mom_wims
momcap14_3t_wops   = (momcap14_3t NOT mom_gt) NOT INTERACT mom_wims
momcap14_3t_wims   = (momcap14_3t NOT mom_gt) INTERACT mom_wims

mom15reg_1    = MOMDMY with text "momcap15"
mom15tt1       = (((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5
mom15f1        = mom15tt1 NOT INTERACT (((mom_v1 OR mom_v2) OR mom_v3) OR mom_v4)
mom15reg1      = EXTENTS (SIZE (mom15f1 AND mom15reg_1) BY 0.1 INSIDE OF MOMDMY)
mom15tt2       = ((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5) NOT INTERACT  mom_metal6
mom15f2        = mom15tt2 NOT INTERACT (((mom_v1 OR mom_v2) OR mom_v3) OR mom_v4)
mom15reg2      = (EXTENTS (SIZE mom15f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom15reg       = mom15reg1 OR mom15reg2
mom15f         = mom15f1 OR mom15f2
momcap15      = (((mom15reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap15_3t   = (((mom15reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap15rf    = (((mom15reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap15rf_3t = (((mom15reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal15
mom_terminal15= (((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5) INTERACT mom15reg) ENCLOSE mom_m1_m5_via

momcap15rf_wips    = momcap15rf AND MOM_poly
momcap15rf_wops    = momcap15rf NOT MOM_poly
momcap15rf_3t_wips = momcap15rf_3t AND MOM_poly
momcap15rf_3t_wops = momcap15rf_3t NOT MOM_poly
momcap15_3t_wips   = (momcap15_3t AND mom_gt) NOT INTERACT mom_wims
momcap15_3t_wops   = (momcap15_3t NOT mom_gt) NOT INTERACT mom_wims
momcap15_3t_wims   = (momcap15_3t NOT mom_gt) INTERACT mom_wims

mom25reg_1    = MOMDMY with text "momcap25"
mom25tt1       = ((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5
mom25f1        = mom25tt1 NOT INTERACT ((mom_v2 OR mom_v3) OR mom_v4)
mom25reg1      = EXTENTS (SIZE (mom25f1 AND mom25reg_1) BY 0.1 INSIDE OF MOMDMY)
mom25tt2       = ((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5 ) NOT INTERACT mom_metal1) NOT INTERACT mom_metal6
mom25f2        = mom25tt2 NOT INTERACT ((mom_v2 OR mom_v3) OR mom_v4)
mom25reg2      = (EXTENTS (SIZE mom25f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom25reg       = mom25reg1 OR mom25reg2
mom25f         = mom25f1 OR mom25f2
momcap25      = (((mom25reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap25_3t   = (((mom25reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal25= (((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) ENCLOSE mom_m2_m5_via

momcap25_3t_wips   = (momcap25_3t AND mom_gt) NOT INTERACT mom_wims
momcap25_3t_wops   = (momcap25_3t NOT mom_gt) NOT INTERACT mom_wims
momcap25_3t_wims   = (momcap25_3t NOT mom_gt) INTERACT mom_wims

mom25tt_rf2       = (((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) NOT INTERACT mom_metal6
mom25f_rf2        = mom25tt_rf2 NOT INTERACT ((mom_v2 OR mom_v3) OR mom_v4)
mom25reg_rf2      = EXTENTS (SIZE mom25f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom25reg_rf       = mom25reg1 OR mom25reg_rf2
mom25f_rf         = mom25f1 OR mom25f_rf2
momcap25rf       = (((mom25reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap25rf_3t    = ((mom25reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal25rf = ((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) INTERACT mom25reg_rf) ENCLOSE mom_m2_m5_via
mom_terminal25rf_m = (((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) INTERACT mom25reg_rf) ENCLOSE mom_m2_m5_via) NOT INTERACT mom_v1

momcap25rf_wips    = momcap25rf AND MOM_poly
momcap25rf_wops    = momcap25rf NOT MOM_poly
momcap25rf_3t_wips = ((momcap25rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal25rf
momcap25rf_3t_wops = ((momcap25rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal25rf
momcap25rf_3t_wim  = ((momcap25rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal25rf_m

mom35reg_1    = MOMDMY with text "momcap35"
mom35tt1       = (mom_metal3 AND mom_metal4) AND mom_metal5
mom35f1        = mom35tt1 NOT INTERACT (mom_v3 OR mom_v4 )
mom35reg1      = EXTENTS (SIZE (mom35f1 AND mom35reg_1) BY 0.1 INSIDE OF MOMDMY)
mom35tt2       = ((((mom_metal3 AND mom_metal4) AND mom_metal5) NOT interact mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal6
mom35f2        = mom35tt2 NOT INTERACT (mom_v3 OR mom_v4)
mom35reg2      = (EXTENTS (SIZE mom35f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom35reg       = mom35reg1 OR mom35reg2
mom35f         = mom35f1 OR mom35f2
momcap35      = (((mom35reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap35_3t   = (((mom35reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal35= ((mom_metal3 AND mom_metal4) AND mom_metal5) ENCLOSE mom_m3_m5_via

momcap35_3t_wips   = (momcap35_3t AND mom_gt) NOT INTERACT mom_wims
momcap35_3t_wops   = (momcap35_3t NOT mom_gt) NOT INTERACT mom_wims
momcap35_3t_wims   = (momcap35_3t NOT mom_gt) INTERACT mom_wims

mom35tt_rf2       = (((mom_metal3 AND mom_metal4) AND mom_metal5) NOT mom_metal1) NOT INTERACT mom_metal6
mom35f_rf2        = mom35tt_rf2 NOT INTERACT (mom_v3 OR mom_v4 )
mom35reg_rf2      = EXTENTS (SIZE mom35f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom35reg_rf       = mom35reg1 OR mom35reg_rf2
mom35f_rf         = mom35f1 OR mom35f_rf2
momcap35rf       = (((mom35reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap35rf_3t    = ((mom35reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal35rf = (((mom_metal3 AND mom_metal4) AND mom_metal5) INTERACT mom35reg_rf) ENCLOSE mom_m3_m5_via
mom_terminal35rf_m = ((((mom_metal3 AND mom_metal4) AND mom_metal5) INTERACT mom35reg_rf) ENCLOSE mom_m3_m5_via) NOT INTERACT mom_v2

momcap35rf_wips    = momcap35rf AND MOM_poly
momcap35rf_wops    = momcap35rf NOT MOM_poly
momcap35rf_3t_wips = ((momcap35rf_3t AND MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal35rf
momcap35rf_3t_wops = ((momcap35rf_3t NOT MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal35rf
momcap35rf_3t_wim  = ((momcap35rf_3t NOT MOM_poly) INTERACT mom_metal2) INTERACT mom_terminal35rf_m

mom16reg_1    = MOMDMY with text "momcap16"
mom16tt       = ((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6
mom16f        = mom16tt NOT INTERACT ((((mom_v1 OR mom_v2) OR mom_v3) OR mom_v4) OR mom_v5)
mom16reg1     = EXTENTS (SIZE (mom16f AND mom16reg_1) BY 0.1 INSIDE OF MOMDMY)
mom16reg2     = (EXTENTS (SIZE mom16f BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom16reg      = mom16reg1 OR mom16reg2
momcap16      = (((mom16reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap16_3t   = (((mom16reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap16rf    = (((mom16reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap16rf_3t = (((mom16reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal16
mom_terminal16= ((((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) INTERACT mom16reg) ENCLOSE mom_m1_m6_via

momcap16rf_wips    = momcap16rf AND MOM_poly
momcap16rf_wops    = momcap16rf NOT MOM_poly
momcap16rf_3t_wips = momcap16rf_3t AND MOM_poly
momcap16rf_3t_wops = momcap16rf_3t NOT MOM_poly
momcap16_3t_wips   = (momcap16_3t AND mom_gt) NOT INTERACT mom_wims
momcap16_3t_wops   = (momcap16_3t NOT mom_gt) NOT INTERACT mom_wims
momcap16_3t_wims   = (momcap16_3t NOT mom_gt) INTERACT mom_wims

mom26reg_1    = MOMDMY with text "momcap26"
mom26tt1       = (((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6
mom26f1        = mom26tt1 NOT INTERACT (((mom_v2 OR mom_v3) OR mom_v4) OR mom_v5)
mom26reg1      = EXTENTS (SIZE (mom26f1 AND mom26reg_1) BY 0.1 INSIDE OF MOMDMY)
mom26tt2       = ((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) NOT INTERACT mom_metal1
mom26f2        = mom26tt2 NOT INTERACT (((mom_v2 OR mom_v3) OR mom_v4) OR mom_v5)
mom26reg2      = (EXTENTS (SIZE mom26f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom26reg       = mom26reg1 OR mom26reg2
mom26f         = mom26f1 OR mom26f2
momcap26      = (((mom26reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap26_3t   = (((mom26reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal26= ((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) ENCLOSE mom_m2_m6_via

momcap26_3t_wips   = (momcap26_3t AND mom_gt) NOT INTERACT mom_wims
momcap26_3t_wops   = (momcap26_3t NOT mom_gt) NOT INTERACT mom_wims
momcap26_3t_wims   = (momcap26_3t NOT mom_gt) INTERACT mom_wims

//mom26tt_rf       = (((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6
//mom26f_rf        = mom26tt_rf NOT INTERACT (((mom_v2 OR mom_v3) OR mom_v4) OR mom_v5)
mom26reg_rf2      = EXTENTS (SIZE mom26f1 BY 0.1 INSIDE OF MOMDMY)
mom26reg_rf       = mom26reg1 OR mom26reg_rf2
mom26f_rf         = copy mom26f1 
momcap26rf       = (((mom26reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap26rf_3t    = ((mom26reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal26rf = (((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) INTERACT mom26reg_rf) ENCLOSE mom_m2_m6_via
mom_terminal26rf_m = ((((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) INTERACT mom26reg_rf) ENCLOSE mom_m2_m6_via) NOT INTERACT mom_v1

momcap26rf_wips    = momcap26rf AND MOM_poly
momcap26rf_wops    = momcap26rf NOT MOM_poly
momcap26rf_3t_wips = ((momcap26rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal26rf
momcap26rf_3t_wops = ((momcap26rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal26rf
momcap26rf_3t_wim  = ((momcap26rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal26rf_m

mom36reg_1    = MOMDMY with text "momcap36"
mom36tt1       = ((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6
mom36f1        = mom36tt1 NOT INTERACT ((mom_v3 OR mom_v4) OR mom_v5)
mom36reg1      = EXTENTS (SIZE (mom36f1 AND mom36reg_1) BY 0.1 INSIDE OF MOMDMY)
mom36tt2       = ((((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) NOT INTERACT  mom_metal1) NOT INTERACT mom_metal2
mom36f2        = mom36tt2 NOT INTERACT ((mom_v3 OR mom_v4) OR mom_v5)
mom36reg2      = (EXTENTS (SIZE mom36f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom36reg       = mom36reg1 OR mom36reg2
mom36f         = mom36f1 OR mom36f2
momcap36      = (((mom36reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap36_3t   = (((mom36reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal36= (((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) ENCLOSE mom_m3_m6_via

momcap36_3t_wips   = (momcap36_3t AND mom_gt) NOT INTERACT mom_wims
momcap36_3t_wops   = (momcap36_3t NOT mom_gt) NOT INTERACT mom_wims
momcap36_3t_wims   = (momcap36_3t NOT mom_gt) INTERACT mom_wims

mom36tt_rf2       = (((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) NOT INTERACT mom_metal1
mom36f_rf2        = mom36tt_rf2 NOT INTERACT ((mom_v3 OR mom_v4) OR mom_v5)
mom36reg_rf2      = EXTENTS (SIZE mom36f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom36reg_rf       = mom36reg1 OR mom36reg_rf2
mom36f_rf         = mom36f1 OR mom36f_rf2
momcap36rf       = (((mom36reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap36rf_3t    = (((mom36reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal36rf
mom_terminal36rf = ((((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) INTERACT mom36reg_rf) ENCLOSE mom_m3_m6_via
mom_terminal36rf_m = (((((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) INTERACT mom36reg_rf) ENCLOSE mom_m3_m6_via) NOT INTERACT mom_v2

momcap36rf_wips    = momcap36rf AND MOM_poly
momcap36rf_wops    = momcap36rf NOT MOM_poly
momcap36rf_3t_wips = ((momcap36rf_3t AND MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal36rf
momcap36rf_3t_wops = ((momcap36rf_3t NOT MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal36rf
momcap36rf_3t_wim  = ((momcap36rf_3t NOT MOM_poly) INTERACT mom_metal2) INTERACT mom_terminal36rf_m

mom46reg_1    = MOMDMY with text "momcap46"
mom46tt1       = (mom_metal4 AND mom_metal5) AND mom_metal6
mom46f1        = mom46tt1 NOT INTERACT (mom_v4 OR mom_v5)
mom46reg1      = EXTENTS (SIZE (mom46f1 AND mom46reg_1) BY 0.1 INSIDE OF MOMDMY)
mom46tt2       = ((((mom_metal4 AND mom_metal5) AND mom_metal6) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT interact mom_metal3
mom46f2        = mom46tt2 NOT INTERACT (mom_v4 OR mom_v5)
mom46reg2      = (EXTENTS (SIZE mom46f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom46reg       = mom46reg1 OR mom46reg2
mom46f         = mom46f1 OR mom46f2
momcap46      = (((mom46reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap46_3t   = (((mom46reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal46= ((mom_metal4 AND mom_metal5) AND mom_metal6) ENCLOSE mom_m4_m6_via

momcap46_3t_wips   = (momcap46_3t AND mom_gt) NOT INTERACT mom_wims
momcap46_3t_wops   = (momcap46_3t NOT mom_gt) NOT INTERACT mom_wims
momcap46_3t_wims   = (momcap46_3t NOT mom_gt) INTERACT mom_wims

mom46tt_rf2       = (((mom_metal4 AND mom_metal5) AND mom_metal6) NOT INTERACT  mom_metal1) NOT INTERACT  mom_metal2
mom46f_rf2        = mom46tt_rf2 NOT INTERACT (mom_v4 OR mom_v5)
mom46reg_rf2      = EXTENTS (SIZE mom46f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom46reg_rf       = mom46reg1 OR mom46reg_rf2
mom46f_rf         = mom46f1 OR mom46f_rf2
momcap46rf       = (((mom46reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap46rf_3t    = ((mom46reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal46rf = (((mom_metal4 AND mom_metal5) AND mom_metal6) INTERACT mom46reg_rf) ENCLOSE mom_m4_m6_via
mom_terminal46rf_m = ((((mom_metal4 AND mom_metal5) AND mom_metal6) INTERACT mom46reg_rf) ENCLOSE mom_m4_m6_via) NOT INTERACT mom_v3

momcap46rf_wips    = momcap46rf AND MOM_poly
momcap46rf_wops    = momcap46rf NOT MOM_poly
momcap46rf_3t_wips = ((momcap46rf_3t AND MOM_poly) NOT INTERACT mom_metal3) INTERACT mom_terminal46rf
momcap46rf_3t_wops = ((momcap46rf_3t NOT MOM_poly) NOT INTERACT mom_metal3) INTERACT mom_terminal46rf
momcap46rf_3t_wim  = ((momcap46rf_3t NOT MOM_poly) INTERACT mom_metal3) INTERACT mom_terminal46rf_m

#ENDIF
#ENDIF

mom_gt = (GT ENCLOSE MOMDMY) OR (GT INTERACT (MOMDMY with text "mom_wips"))
//mom_gt = GT INTERACT MOMDMY
mom_nw = nwell ENCLOSE MOMDMY
mom_pw = pwell NOT (pwell INSIDE MOMDMY)
mom_wims = MOMDMY with text "mom_wims"
mom_row = MOMDMY INSIDE MOMROW
mom_col = MOMDMY INSIDE MOMCOL

#IFDEF TOPMETAL 8
#IFDEF TOP_METAL_NUM single

mom_metal1         = metal1a AND MOMDMY
mom_v1             = Via1 AND MOMDMY
V1                 = copy Via1
metal1b            = copy metal1a 
mom_metal2         = metal2a AND MOMDMY
mom_v2             = Via2 AND MOMDMY
V2                 = copy Via2
metal2b            = copy metal2a 
mom_metal3         = metal3a AND MOMDMY
mom_v3             = Via3 AND MOMDMY
V3                 = copy Via3
metal3b            = copy metal3a 
mom_metal4         = metal4a AND MOMDMY
metal4b            = copy metal4a 
mom_metal5         = metal5a AND MOMDMY
metal5b            = copy metal5a 
mom_v4             = Via4 AND MOMDMY
V4                 = copy Via4 
mom_metal6         = metal6a AND MOMDMY
metal6b            = copy metal6a 
mom_v5             = Via5 AND MOMDMY
V5                 = copy Via5 

mom_m1_m3_via = mom_v1 AND mom_v2
mom_m2_m4_via = mom_v2 AND mom_v3
mom_m1_m4_via = (mom_v1 AND mom_v2) AND mom_v3
mom_m1_m5_via = ((mom_v1 AND mom_v2) AND mom_v3) AND mom_v4
mom_m2_m5_via = (mom_v2 AND mom_v3) AND mom_v4
mom_m3_m5_via = mom_v3 AND mom_v4
mom_m1_m6_via = (((mom_v1 AND mom_v2) AND mom_v3) AND mom_v4) AND mom_v5
mom_m2_m6_via = ((mom_v2 AND mom_v3) AND mom_v4) AND mom_v5
mom_m3_m6_via = (mom_v3 AND mom_v4) AND mom_v5
mom_m4_m6_via =  mom_v4 AND mom_v5

mom_text = (((((((((((((mom12reg_1 or mom13reg_1) or mom14reg_1) or mom15reg_1) or mom16reg_1) or mom23reg_1) or mom24reg_1) or mom25reg_1) or mom26reg_1) or mom34reg_1) or mom35reg_1) or mom36reg_1) or mom45reg_1) or mom46reg_1) or mom56reg_1

mom12reg_1    = MOMDMY with text "momcap12"
mom12tt1       = mom_metal1 AND mom_metal2
mom12f1        = mom12tt1 NOT INTERACT mom_v1
mom12reg1      = EXTENTS (SIZE (mom12f1 AND mom12reg_1) BY 0.1 INSIDE OF MOMDMY)
mom12tt2       = ((((mom_metal1 AND mom_metal2) NOT INTERACT mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom12f2        = mom12tt2 NOT INTERACT mom_v1
mom12reg2      = (EXTENTS (SIZE mom12f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom12reg       = mom12reg1 OR mom12reg2
mom12f         = mom12f1 OR mom12f2
momcap12      = (((mom12reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap12_3t   = (((mom12reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap12rf    = (((mom12reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap12rf_3t = (((mom12reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal12
mom_terminal12= ((mom_metal1 AND mom_metal2) INTERACT mom12reg) ENCLOSE mom_v1

momcap12rf_wips    = momcap12rf AND MOM_poly
momcap12rf_wops    = momcap12rf NOT MOM_poly
momcap12rf_3t_wips = momcap12rf_3t AND MOM_poly
momcap12rf_3t_wops = momcap12rf_3t NOT MOM_poly
momcap12_3t_wips   = (momcap12_3t AND mom_gt) NOT INTERACT mom_wims
momcap12_3t_wops   = (momcap12_3t NOT mom_gt) NOT INTERACT mom_wims
momcap12_3t_wims   = (momcap12_3t NOT mom_gt) INTERACT mom_wims

mom23reg_1     = MOMDMY with text "momcap23"
mom23tt1       = mom_metal2 AND mom_metal3
mom23f1        = mom23tt1 NOT INTERACT mom_v2
mom23reg1      = EXTENTS (SIZE (mom23f1 AND mom23reg_1) BY 0.1 INSIDE OF MOMDMY)
mom23tt2       = ((((mom_metal2 AND mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal1) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom23f2        = mom23tt2 NOT INTERACT mom_v2
mom23reg2      = (EXTENTS (SIZE mom23f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom23reg       = mom23reg1 OR mom23reg2
mom23f         = mom23f1 OR mom23f2
momcap23      = (((mom23reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap23_3t   = (((mom23reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal23= (mom_metal2 AND mom_metal3) ENCLOSE mom_v2

momcap23_3t_wips   = (momcap23_3t AND mom_gt) NOT INTERACT mom_wims
momcap23_3t_wops   = (momcap23_3t NOT mom_gt) NOT INTERACT mom_wims
momcap23_3t_wims   = (momcap23_3t NOT mom_gt) INTERACT mom_wims

mom23tt_rf2       = (((mom_metal2 AND mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom23f_rf2        = mom23tt_rf2 NOT INTERACT mom_v2
mom23reg_rf2      = EXTENTS (SIZE mom23f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom23reg_rf       = mom23reg1 OR mom23reg_rf2
mom23f_rf         = mom23f1 OR mom23f_rf2
momcap23rf       = (((mom23reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap23rf_3t    = ((mom23reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal23rf = ((mom_metal2 AND mom_metal3) INTERACT mom23reg_rf) ENCLOSE mom_v2
mom_terminal23rf_m = (((mom_metal2 AND mom_metal3) INTERACT mom23reg_rf) ENCLOSE mom_v2) NOT INTERACT mom_v1

momcap23rf_wips    = momcap23rf AND MOM_poly
momcap23rf_wops    = momcap23rf NOT MOM_poly
momcap23rf_3t_wips = ((momcap23rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal23rf 
momcap23rf_3t_wops = ((momcap23rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal23rf
momcap23rf_3t_wim  = ((momcap23rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal23rf_m

mom34reg_1    = MOMDMY with text "momcap34"
mom34tt1       = mom_metal3 AND mom_metal4
mom34f1        = mom34tt1 NOT INTERACT mom_v3
mom34reg1      = EXTENTS (SIZE (mom34f1 AND mom34reg_1) BY 0.1 INSIDE OF MOMDMY)
mom34tt2       = ((((mom_metal3 AND mom_metal4) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom34f2        = mom34tt2 NOT INTERACT mom_v3
mom34reg2      = (EXTENTS (SIZE mom34f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom34reg       = mom34reg1 OR mom34reg2
mom34f         = mom34f1 OR mom34f2
momcap34      = (((mom34reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap34_3t   = (((mom34reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal34= (mom_metal3 AND mom_metal4) ENCLOSE mom_v3

momcap34_3t_wips   = (momcap34_3t AND mom_gt) NOT INTERACT mom_wims
momcap34_3t_wops   = (momcap34_3t NOT mom_gt) NOT INTERACT mom_wims
momcap34_3t_wims   = (momcap34_3t NOT mom_gt) INTERACT mom_wims

mom34tt_rf2       = (((mom_metal3 AND mom_metal4) NOT INTERACT mom_metal1) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom34f_rf2        = mom34tt_rf2 NOT INTERACT mom_v3
mom34reg_rf2      = EXTENTS (SIZE mom34f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom34reg_rf       = mom34reg1 OR mom34reg_rf2
mom34f_rf         = mom34f1 OR mom34f_rf2
momcap34rf       = (((mom34reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap34rf_3t    = ((mom34reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal34rf = (((mom_metal3 AND mom_metal4) INTERACT mom34reg_rf) ENCLOSE mom_v3) INTERACT momcap34rf_3t
mom_terminal34rf_m = (((mom_metal3 AND mom_metal4) INTERACT mom34reg_rf) ENCLOSE mom_v3) NOT INTERACT mom_v2

momcap34rf_wips    = momcap34rf AND MOM_poly
momcap34rf_wops    = momcap34rf NOT MOM_poly
momcap34rf_3t_wips = ((momcap34rf_3t AND MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal34rf
momcap34rf_3t_wops = ((momcap34rf_3t NOT MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal34rf
momcap34rf_3t_wim  = ((momcap34rf_3t NOT MOM_poly) INTERACT mom_metal2) INTERACT mom_terminal34rf_m

mom45reg_1    = MOMDMY with text "momcap45"
mom45tt1       = mom_metal4 AND mom_metal5
mom45f1        = mom45tt1 NOT INTERACT mom_v4
mom45reg1      = EXTENTS (SIZE (mom45f1 AND mom45reg_1) BY 0.1 INSIDE OF MOMDMY)
mom45tt2       = ((((mom_metal4 AND mom_metal5) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal3) NOT INTERACT mom_metal6
mom45f2        = mom45tt2 NOT INTERACT mom_v4
mom45reg2      = (EXTENTS (SIZE mom45f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom45reg       = mom45reg1 OR mom45reg2
mom45f         = mom45f1 OR mom45f2
momcap45      = (((mom45reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap45_3t   = (((mom45reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal45= (mom_metal4 AND mom_metal5) ENCLOSE mom_v4

momcap45_3t_wips   = (momcap45_3t AND mom_gt) NOT INTERACT mom_wims
momcap45_3t_wops   = (momcap45_3t NOT mom_gt) NOT INTERACT mom_wims
momcap45_3t_wims   = (momcap45_3t NOT mom_gt) INTERACT mom_wims

mom45tt_rf2       = (((mom_metal4 AND mom_metal5) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal6
mom45f_rf2        = mom45tt_rf2 NOT INTERACT mom_v4
mom45reg_rf2      = EXTENTS (SIZE mom45f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom45reg_rf       = mom45reg1 OR mom45reg_rf2
mom45f_rf         = mom45f1 OR mom45f_rf2
momcap45rf       = (((mom45reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap45rf_3t    = ((mom45reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal45rf = (((mom_metal4 AND mom_metal5) INTERACT mom45reg_rf) ENCLOSE mom_v4) INTERACT momcap45rf_3t
mom_terminal45rf_m = (((mom_metal4 AND mom_metal5) INTERACT mom45reg_rf) ENCLOSE mom_v4) NOT INTERACT mom_v3

momcap45rf_wips    = momcap45rf AND MOM_poly
momcap45rf_wops    = momcap45rf NOT MOM_poly
momcap45rf_3t_wips = ((momcap45rf_3t AND MOM_poly) NOT INTERACT mom_metal3) INTERACT mom_terminal45rf
momcap45rf_3t_wops = ((momcap45rf_3t NOT MOM_poly) NOT INTERACT mom_metal3) INTERACT mom_terminal45rf
momcap45rf_3t_wim  = ((momcap45rf_3t NOT MOM_poly) INTERACT mom_metal3) INTERACT mom_terminal45rf_m

mom56reg_1    = MOMDMY with text "momcap56"
mom56tt1       = mom_metal5 AND mom_metal6
mom56f1        = mom56tt1 NOT INTERACT mom_v5
mom56reg1      = EXTENTS (SIZE (mom56f1 AND mom56reg_1) BY 0.1 INSIDE OF MOMDMY)
mom56tt2       = ((((mom_metal5 AND mom_metal6) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal3) NOT INTERACT mom_metal4
mom56f2        = mom56tt2 NOT INTERACT mom_v5
mom56reg2      = (EXTENTS (SIZE mom56f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom56reg       = mom56reg1 OR mom56reg2
mom56f         = mom56f1 OR mom56f2
momcap56      = (((mom56reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap56_3t   = (((mom56reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal56= (mom_metal5 AND mom_metal6) ENCLOSE mom_v5

momcap56_3t_wips   = (momcap56_3t AND mom_gt) NOT INTERACT mom_wims
momcap56_3t_wops   = (momcap56_3t NOT mom_gt) NOT INTERACT mom_wims
momcap56_3t_wims   = (momcap56_3t NOT mom_gt) INTERACT mom_wims

mom56tt_rf2       = (((mom_metal5 AND mom_metal6) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal3
mom56f_rf2        = mom56tt_rf2 NOT INTERACT mom_v5
mom56reg_rf2      = EXTENTS (SIZE mom56f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom56reg_rf       = mom56reg1 OR mom56reg_rf2
mom56f_rf         = mom56f1 OR mom56f_rf2
momcap56rf       = (((mom56reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM 
momcap56rf_3t    = ((mom56reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal56rf = ((mom_metal5 AND mom_metal6) INTERACT mom56reg_rf) ENCLOSE mom_v5 
mom_terminal56rf_m = (((mom_metal5 AND mom_metal6) INTERACT mom56reg_rf) ENCLOSE mom_v5) NOT INTERACT mom_v4

momcap56rf_wips    = momcap56rf AND MOM_poly
momcap56rf_wops    = momcap56rf NOT MOM_poly
momcap56rf_3t_wips = ((momcap56rf_3t AND MOM_poly) NOT INTERACT mom_metal4) INTERACT mom_terminal56rf
momcap56rf_3t_wops = ((momcap56rf_3t NOT MOM_poly) NOT INTERACT mom_metal4) INTERACT mom_terminal56rf
momcap56rf_3t_wim  = ((momcap56rf_3t NOT MOM_poly) INTERACT mom_metal4) INTERACT mom_terminal56rf_m

mom13reg_1    = MOMDMY with text "momcap13"
mom13tt1       = (mom_metal1 AND mom_metal2) AND mom_metal3
mom13f1        = mom13tt1 NOT INTERACT (mom_v1 OR mom_v2)
mom13reg1      = EXTENTS (SIZE (mom13f1 AND mom13reg_1) BY 0.1 INSIDE OF MOMDMY)
mom13tt2       = ((((mom_metal1 AND mom_metal2) AND mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom13f2        = mom13tt2 NOT INTERACT (mom_v1 OR mom_v2)
mom13reg2      = (EXTENTS (SIZE mom13f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom13reg       = mom13reg1 OR mom13reg2
mom13f         = mom13f1 OR mom13f2
momcap13      = (((mom13reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap13_3t   = (((mom13reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap13rf    = (((mom13reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap13rf_3t = (((mom13reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal13
mom_terminal13= (((mom_metal1 AND mom_metal2) AND mom_metal3) INTERACT mom13reg) ENCLOSE mom_m1_m3_via

momcap13rf_wips    = momcap13rf AND MOM_poly
momcap13rf_wops    = momcap13rf NOT MOM_poly
momcap13rf_3t_wips = momcap13rf_3t AND MOM_poly
momcap13rf_3t_wops = momcap13rf_3t NOT MOM_poly
momcap13_3t_wips   = (momcap13_3t AND mom_gt) NOT INTERACT mom_wims
momcap13_3t_wops   = (momcap13_3t NOT mom_gt) NOT INTERACT mom_wims
momcap13_3t_wims   = (momcap13_3t NOT mom_gt) INTERACT mom_wims

mom24reg_1    = MOMDMY with text "momcap24"
mom24tt1       = (mom_metal2 AND mom_metal3) AND mom_metal4
mom24f1        = mom24tt1 NOT INTERACT (mom_v2 OR mom_v3)
mom24reg1      = EXTENTS (SIZE (mom24f1 AND mom24reg_1) BY 0.1 INSIDE OF MOMDMY)
mom24tt2       = ((((mom_metal2 AND mom_metal3) AND mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6) NOT INTERACT mom_metal1
mom24f2        = mom24tt2 NOT INTERACT (mom_v2 OR mom_v3)
mom24reg2      = (EXTENTS (SIZE mom24f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom24reg       = mom24reg1 OR mom24reg2
mom24f         = mom24f1 OR mom24f2
momcap24      = (((mom24reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap24_3t   = (((mom24reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal24= ((mom_metal2 AND mom_metal3) AND mom_metal4) ENCLOSE mom_m2_m4_via

momcap24_3t_wips   = (momcap24_3t AND mom_gt) NOT INTERACT mom_wims
momcap24_3t_wops   = (momcap24_3t NOT mom_gt) NOT INTERACT mom_wims
momcap24_3t_wims   = (momcap24_3t NOT mom_gt) INTERACT mom_wims

mom24tt_rf2       = (((mom_metal2 AND mom_metal3) AND mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom24f_rf2        = mom24tt_rf2 NOT INTERACT (mom_v2 OR mom_v3)
mom24reg_rf2      = EXTENTS (SIZE mom24f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom24reg_rf       = mom24reg1 OR mom24reg_rf2
mom24f_rf         = mom24f1 OR mom24f_rf2
momcap24rf       = (((mom24reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap24rf_3t    = ((mom24reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal24rf = (((mom_metal2 AND mom_metal3) AND mom_metal4) INTERACT mom24reg_rf) ENCLOSE mom_m2_m4_via
mom_terminal24rf_m = ((((mom_metal2 AND mom_metal3) AND mom_metal4) INTERACT mom24reg_rf) ENCLOSE mom_m2_m4_via) NOT INTERACT mom_v1

momcap24rf_wips    = momcap24rf AND MOM_poly
momcap24rf_wops    = momcap24rf NOT MOM_poly
momcap24rf_3t_wips = ((momcap24rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal24rf
momcap24rf_3t_wops = ((momcap24rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal24rf
momcap24rf_3t_wim  = ((momcap24rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal24rf_m

mom14reg_1    = MOMDMY with text "momcap14"
mom14tt1       = ((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4
mom14f1        = mom14tt1 NOT INTERACT ((mom_v1 OR mom_v2) OR mom_v3)
mom14reg1      = EXTENTS (SIZE (mom14f1 AND mom14reg_1) BY 0.1 INSIDE OF MOMDMY)
mom14tt2       = ((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom14f2        = mom14tt2 NOT INTERACT ((mom_v1 OR mom_v2) OR mom_v3)
mom14reg2      = (EXTENTS (SIZE mom14f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom14reg       = mom14reg1 OR mom14reg2
mom14f         = mom14f1 OR mom14f2
momcap14      = (((mom14reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap14_3t   = (((mom14reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap14rf    = (((mom14reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap14rf_3t = (((mom14reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal14
mom_terminal14= ((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) INTERACT mom14reg) ENCLOSE mom_m1_m4_via

momcap14rf_wips    = momcap14rf AND MOM_poly
momcap14rf_wops    = momcap14rf NOT MOM_poly
momcap14rf_3t_wips = momcap14rf_3t AND MOM_poly
momcap14rf_3t_wops = momcap14rf_3t NOT MOM_poly
momcap14_3t_wips   = (momcap14_3t AND mom_gt) NOT INTERACT mom_wims
momcap14_3t_wops   = (momcap14_3t NOT mom_gt) NOT INTERACT mom_wims
momcap14_3t_wims   = (momcap14_3t NOT mom_gt) INTERACT mom_wims

mom15reg_1    = MOMDMY with text "momcap15"
mom15tt1       = (((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5
mom15f1        = mom15tt1 NOT INTERACT (((mom_v1 OR mom_v2) OR mom_v3) OR mom_v4)
mom15reg1      = EXTENTS (SIZE (mom15f1 AND mom15reg_1) BY 0.1 INSIDE OF MOMDMY)
mom15tt2       = ((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5) NOT INTERACT mom_metal6
mom15f2        = mom15tt2 NOT INTERACT (((mom_v1 OR mom_v2) OR mom_v3) OR mom_v4)
mom15reg2      = (EXTENTS (SIZE mom15f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom15reg       = mom15reg1 OR mom15reg2
mom15f         = mom15f1 OR mom15f2
momcap15      = (((mom15reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap15_3t   = (((mom15reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap15rf    = (((mom15reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap15rf_3t = (((mom15reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal15
mom_terminal15= (((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5) INTERACT mom15reg) ENCLOSE mom_m1_m5_via

momcap15rf_wips    = momcap15rf AND MOM_poly
momcap15rf_wops    = momcap15rf NOT MOM_poly
momcap15rf_3t_wips = momcap15rf_3t AND MOM_poly
momcap15rf_3t_wops = momcap15rf_3t NOT MOM_poly
momcap15_3t_wips   = (momcap15_3t AND mom_gt) NOT INTERACT mom_wims
momcap15_3t_wops   = (momcap15_3t NOT mom_gt) NOT INTERACT mom_wims
momcap15_3t_wims   = (momcap15_3t NOT mom_gt) INTERACT mom_wims

mom25reg_1    = MOMDMY with text "momcap25"
mom25tt1       = ((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5 
mom25f1        = mom25tt1 NOT INTERACT ((mom_v2 OR mom_v3) OR mom_v4)
mom25reg1      = EXTENTS (SIZE (mom25f1 AND mom25reg_1) BY 0.1 INSIDE OF MOMDMY)
mom25tt2       = ((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5 ) NOT INTERACT mom_metal1) NOT INTERACT mom_metal6
mom25f2        = mom25tt2 NOT INTERACT ((mom_v2 OR mom_v3) OR mom_v4)
mom25reg2      = (EXTENTS (SIZE mom25f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom25reg       = mom25reg1 OR mom25reg2
mom25f         = mom25f1 OR mom25f2
momcap25      = (((mom25reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap25_3t   = (((mom25reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal25= (((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) ENCLOSE mom_m2_m5_via

momcap25_3t_wips   = (momcap25_3t AND mom_gt) NOT INTERACT mom_wims
momcap25_3t_wops   = (momcap25_3t NOT mom_gt) NOT INTERACT mom_wims
momcap25_3t_wims   = (momcap25_3t NOT mom_gt) INTERACT mom_wims

mom25tt_rf2       = (((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) NOT INTERACT mom_metal6
mom25f_rf2        = mom25tt_rf2 NOT INTERACT ((mom_v2 OR mom_v3) OR mom_v4)
mom25reg_rf2      = EXTENTS (SIZE mom25f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom25reg_rf       = mom25reg1 OR mom25reg_rf2
mom25f_rf         = mom25f1 OR mom25f_rf2
momcap25rf       = (((mom25reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap25rf_3t    = ((mom25reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal25rf = ((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) INTERACT mom25reg_rf) ENCLOSE mom_m2_m5_via
mom_terminal25rf_m = (((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) INTERACT mom25reg_rf) ENCLOSE mom_m2_m5_via) NOT INTERACT mom_v1

momcap25rf_wips    = momcap25rf AND MOM_poly
momcap25rf_wops    = momcap25rf NOT MOM_poly
momcap25rf_3t_wips = ((momcap25rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal25rf
momcap25rf_3t_wops = ((momcap25rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal25rf
momcap25rf_3t_wim  = ((momcap25rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal25rf_m

mom35reg_1    = MOMDMY with text "momcap35"
mom35tt1       = (mom_metal3 AND mom_metal4) AND mom_metal5
mom35f1        = mom35tt1 NOT INTERACT (mom_v3 OR mom_v4 )
mom35reg1      = EXTENTS (SIZE (mom35f1 AND mom35reg_1) BY 0.1 INSIDE OF MOMDMY)
mom35tt2       = ((((mom_metal3 AND mom_metal4) AND mom_metal5) NOT interact mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal6
mom35f2        = mom35tt2 NOT INTERACT (mom_v3 OR mom_v4 )
mom35reg2      = (EXTENTS (SIZE mom35f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom35reg       = mom35reg1 OR mom35reg2
mom35f         = mom35f1 OR mom35f2
momcap35      = (((mom35reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap35_3t   = (((mom35reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal35= ((mom_metal3 AND mom_metal4) AND mom_metal5) ENCLOSE mom_m3_m5_via

momcap35_3t_wips   = (momcap35_3t AND mom_gt) NOT INTERACT mom_wims
momcap35_3t_wops   = (momcap35_3t NOT mom_gt) NOT INTERACT mom_wims
momcap35_3t_wims   = (momcap35_3t NOT mom_gt) INTERACT mom_wims

mom35tt_rf2       = (((mom_metal3 AND mom_metal4) AND mom_metal5) NOT mom_metal1) NOT INTERACT mom_metal6
mom35f_rf2        = mom35tt_rf2 NOT INTERACT (mom_v3 OR mom_v4 )
mom35reg_rf2      = EXTENTS (SIZE mom35f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom35reg_rf       = mom35reg1 OR mom35reg_rf2
mom35f_rf         = mom35f1 OR mom35f_rf2
momcap35rf       = (((mom35reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap35rf_3t    = ((mom35reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal35rf = (((mom_metal3 AND mom_metal4) AND mom_metal5) INTERACT mom35reg_rf) ENCLOSE mom_m3_m5_via
mom_terminal35rf_m = ((((mom_metal3 AND mom_metal4) AND mom_metal5) INTERACT mom35reg_rf) ENCLOSE mom_m3_m5_via) NOT INTERACT mom_v2

momcap35rf_wips    = momcap35rf AND MOM_poly
momcap35rf_wops    = momcap35rf NOT MOM_poly
momcap35rf_3t_wips = ((momcap35rf_3t AND MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal35rf
momcap35rf_3t_wops = ((momcap35rf_3t NOT MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal35rf
momcap35rf_3t_wim  = ((momcap35rf_3t NOT MOM_poly) INTERACT mom_metal2) INTERACT mom_terminal35rf_m

mom16reg_1    = MOMDMY with text "momcap16"
mom16tt       = ((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6
mom16f        = mom16tt NOT INTERACT ((((mom_v1 OR mom_v2) OR mom_v3) OR mom_v4) OR mom_v5)
mom16reg1     = EXTENTS (SIZE (mom16f AND mom16reg_1) BY 0.1 INSIDE OF MOMDMY)
mom16reg2     = (EXTENTS (SIZE mom16f BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom16reg       = mom16reg1 OR mom16reg2
momcap16      = (((mom16reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap16_3t   = (((mom16reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap16rf    = (((mom16reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap16rf_3t = (((mom16reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal16
mom_terminal16= ((((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) INTERACT mom16reg) ENCLOSE mom_m1_m6_via

momcap16rf_wips    = momcap16rf AND MOM_poly
momcap16rf_wops    = momcap16rf NOT MOM_poly
momcap16rf_3t_wips = momcap16rf_3t AND MOM_poly
momcap16rf_3t_wops = momcap16rf_3t NOT MOM_poly
momcap16_3t_wips   = (momcap16_3t AND mom_gt) NOT INTERACT mom_wims
momcap16_3t_wops   = (momcap16_3t NOT mom_gt) NOT INTERACT mom_wims
momcap16_3t_wims   = (momcap16_3t NOT mom_gt) INTERACT mom_wims

mom26reg_1    = MOMDMY with text "momcap26"
mom26tt1       = (((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6
mom26f1        = mom26tt1 NOT INTERACT (((mom_v2 OR mom_v3) OR mom_v4) OR mom_v5)
mom26reg1      = EXTENTS (SIZE (mom26f1 AND mom26reg_1) BY 0.1 INSIDE OF MOMDMY)
mom26tt2       = ((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) NOT INTERACT mom_metal1
mom26f2        = mom26tt2 NOT INTERACT (((mom_v2 OR mom_v3) OR mom_v4) OR mom_v5)
mom26reg2      = (EXTENTS (SIZE mom26f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom26reg       = mom26reg1 OR mom26reg2
mom26f         = mom26f1 OR mom26f2
momcap26      = (((mom26reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap26_3t   = (((mom26reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal26= ((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) ENCLOSE mom_m2_m6_via

momcap26_3t_wips   = (momcap26_3t AND mom_gt) NOT INTERACT mom_wims
momcap26_3t_wops   = (momcap26_3t NOT mom_gt) NOT INTERACT mom_wims
momcap26_3t_wims   = (momcap26_3t NOT mom_gt) INTERACT mom_wims

//mom26tt_rf       = (((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6
//mom26f_rf        = mom26tt_rf NOT INTERACT (((mom_v2 OR mom_v3) OR mom_v4) OR mom_v5)
mom26reg_rf2      = EXTENTS (SIZE mom26f1 BY 0.1 INSIDE OF MOMDMY)
mom26reg_rf       = mom26reg1 OR mom26reg_rf2
mom26f_rf         = copy mom26f1 
momcap26rf       = (((mom26reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap26rf_3t    = ((mom26reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal26rf = (((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) INTERACT mom26reg_rf) ENCLOSE mom_m2_m6_via
mom_terminal26rf_m = ((((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) INTERACT mom26reg_rf) ENCLOSE mom_m2_m6_via) NOT INTERACT mom_v1

momcap26rf_wips    = momcap26rf AND MOM_poly
momcap26rf_wops    = momcap26rf NOT MOM_poly
momcap26rf_3t_wips = ((momcap26rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal26rf
momcap26rf_3t_wops = ((momcap26rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal26rf
momcap26rf_3t_wim  = ((momcap26rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal26rf_m

mom36reg_1    = MOMDMY with text "momcap36"
mom36tt1       = ((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6
mom36f1        = mom36tt1 NOT INTERACT ((mom_v3 OR mom_v4) OR mom_v5)
mom36reg1      = EXTENTS (SIZE (mom36f1 AND mom36reg_1) BY 0.1 INSIDE OF MOMDMY)
mom36tt2       = ((((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2
mom36f2        = mom36tt2 NOT INTERACT ((mom_v3 OR mom_v4) OR mom_v5)
mom36reg2      = (EXTENTS (SIZE mom36f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom36reg       = mom36reg1 OR mom36reg2
mom36f         = mom36f1 OR mom36f2
momcap36      = (((mom36reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap36_3t   = (((mom36reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal36= (((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) ENCLOSE mom_m3_m6_via

momcap36_3t_wips   = (momcap36_3t AND mom_gt) NOT INTERACT mom_wims
momcap36_3t_wops   = (momcap36_3t NOT mom_gt) NOT INTERACT mom_wims
momcap36_3t_wims   = (momcap36_3t NOT mom_gt) INTERACT mom_wims

mom36tt_rf2       = (((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) NOT INTERACT mom_metal1
mom36f_rf2        = mom36tt_rf2 NOT INTERACT ((mom_v3 OR mom_v4) OR mom_v5)
mom36reg_rf2      = EXTENTS (SIZE mom36f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom36reg_rf       = mom36reg1 OR mom36reg_rf2
mom36f_rf         = mom36f1 OR mom36f_rf2
momcap36rf       = (((mom36reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap36rf_3t    = (((mom36reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal36rf
mom_terminal36rf = ((((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) INTERACT mom36reg_rf) ENCLOSE mom_m3_m6_via
mom_terminal36rf_m = (((((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) INTERACT mom36reg_rf) ENCLOSE mom_m3_m6_via) NOT INTERACT mom_v2

momcap36rf_wips    = momcap36rf AND MOM_poly
momcap36rf_wops    = momcap36rf NOT MOM_poly
momcap36rf_3t_wips = ((momcap36rf_3t AND MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal36rf
momcap36rf_3t_wops = ((momcap36rf_3t NOT MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal36rf
momcap36rf_3t_wim  = ((momcap36rf_3t NOT MOM_poly) INTERACT mom_metal2) INTERACT mom_terminal36rf_m

mom46reg_1    = MOMDMY with text "momcap46"
mom46tt1       = (mom_metal4 AND mom_metal5) AND mom_metal6
mom46f1        = mom46tt1 NOT INTERACT (mom_v4 OR mom_v5)
mom46reg1      = EXTENTS (SIZE (mom46f1 AND mom46reg_1) BY 0.1 INSIDE OF MOMDMY)
mom46tt2       = ((((mom_metal4 AND mom_metal5) AND mom_metal6) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT interact mom_metal3
mom46f2        = mom46tt2 NOT INTERACT (mom_v4 OR mom_v5)
mom46reg2      = (EXTENTS (SIZE mom46f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom46reg       = mom46reg1 OR mom46reg2
mom46f         = mom46f1 OR mom46f2
momcap46      = (((mom46reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap46_3t   = (((mom46reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal46= ((mom_metal4 AND mom_metal5) AND mom_metal6) ENCLOSE mom_m4_m6_via

momcap46_3t_wips   = (momcap46_3t AND mom_gt) NOT INTERACT mom_wims
momcap46_3t_wops   = (momcap46_3t NOT mom_gt) NOT INTERACT mom_wims
momcap46_3t_wims   = (momcap46_3t NOT mom_gt) INTERACT mom_wims

mom46tt_rf2       = (((mom_metal4 AND mom_metal5) AND mom_metal6) NOT INTERACT  mom_metal1) NOT INTERACT  mom_metal2
mom46f_rf2        = mom46tt_rf2 NOT INTERACT (mom_v4 OR mom_v5)
mom46reg_rf2      = EXTENTS (SIZE mom46f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom46reg_rf       = mom46reg1 OR mom46reg_rf2
mom46f_rf         = mom46f1 OR mom46f_rf2
momcap46rf       = (((mom46reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap46rf_3t    = ((mom46reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal46rf = (((mom_metal4 AND mom_metal5) AND mom_metal6) INTERACT mom46reg_rf) ENCLOSE mom_m4_m6_via
mom_terminal46rf_m = ((((mom_metal4 AND mom_metal5) AND mom_metal6) INTERACT mom46reg_rf) ENCLOSE mom_m4_m6_via) NOT INTERACT mom_v3

momcap46rf_wips    = momcap46rf AND MOM_poly
momcap46rf_wops    = momcap46rf NOT MOM_poly
momcap46rf_3t_wips = ((momcap46rf_3t AND MOM_poly) NOT INTERACT mom_metal3) INTERACT mom_terminal46rf
momcap46rf_3t_wops = ((momcap46rf_3t NOT MOM_poly) NOT INTERACT mom_metal3) INTERACT mom_terminal46rf
momcap46rf_3t_wim  = ((momcap46rf_3t NOT MOM_poly) INTERACT mom_metal3) INTERACT mom_terminal46rf_m

#ENDIF
#ENDIF

#IFDEF TOPMETAL 8
#IFDEF TOP_METAL_NUM double

mom_metal1         = metal1a AND MOMDMY
mom_v1             = Via1 AND MOMDMY
V1                 = copy Via1 
metal1b            = copy metal1a 
mom_metal2         = metal2a AND MOMDMY
mom_v2             = Via2 AND MOMDMY
V2                 = copy Via2 
metal2b            = copy metal2a 
mom_metal3         = metal3a AND MOMDMY
mom_v3             = Via3 AND MOMDMY
V3                 = copy Via3 
metal3b            = copy metal3a 
mom_metal4         = metal4a AND MOMDMY
metal4b            = copy metal4a 
mom_metal5         = metal5a AND MOMDMY
metal5b            = copy metal5a 
mom_v4             = Via4 AND MOMDMY
V4                 = copy Via4 
mom_metal6         = metal6a AND MOMDMY
metal6b            = copy metal6a 
mom_v5             = Via5 AND MOMDMY
V5                 = copy Via5 

mom_m1_m3_via = mom_v1 AND mom_v2
mom_m2_m4_via = mom_v2 AND mom_v3
mom_m1_m4_via = (mom_v1 AND mom_v2) AND mom_v3
mom_m1_m5_via = ((mom_v1 AND mom_v2) AND mom_v3) AND mom_v4
mom_m2_m5_via = (mom_v2 AND mom_v3) AND mom_v4
mom_m3_m5_via = mom_v3 AND mom_v4
mom_m1_m6_via = (((mom_v1 AND mom_v2) AND mom_v3) AND mom_v4) AND mom_v5
mom_m2_m6_via = ((mom_v2 AND mom_v3) AND mom_v4) AND mom_v5
mom_m3_m6_via = (mom_v3 AND mom_v4) AND mom_v5
mom_m4_m6_via =  mom_v4 AND mom_v5

mom_text = (((((((((((((mom12reg_1 or mom13reg_1) or mom14reg_1) or mom15reg_1) or mom16reg_1) or mom23reg_1) or mom24reg_1) or mom25reg_1) or mom26reg_1) or mom34reg_1) or mom35reg_1) or mom36reg_1) or mom45reg_1) or mom46reg_1) or mom56reg_1

mom12reg_1    = MOMDMY with text "momcap12"
mom12tt1       = mom_metal1 AND mom_metal2
mom12f1        = mom12tt1 NOT INTERACT mom_v1
mom12reg1      = EXTENTS (SIZE (mom12f1 AND mom12reg_1) BY 0.1 INSIDE OF MOMDMY)
mom12tt2       = ((((mom_metal1 AND mom_metal2) NOT INTERACT mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom12f2        = mom12tt2 NOT INTERACT mom_v1
mom12reg2      = (EXTENTS (SIZE mom12f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom12reg       = mom12reg1 OR mom12reg2
mom12f         = mom12f1 OR mom12f2
momcap12      = (((mom12reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap12_3t   = (((mom12reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap12rf    = (((mom12reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap12rf_3t = (((mom12reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal12
mom_terminal12= ((mom_metal1 AND mom_metal2) INTERACT mom12reg) ENCLOSE mom_v1

momcap12rf_wips    = momcap12rf AND MOM_poly
momcap12rf_wops    = momcap12rf NOT MOM_poly
momcap12rf_3t_wips = momcap12rf_3t AND MOM_poly
momcap12rf_3t_wops = momcap12rf_3t NOT MOM_poly
momcap12_3t_wips   = (momcap12_3t AND mom_gt) NOT INTERACT mom_wims
momcap12_3t_wops   = (momcap12_3t NOT mom_gt) NOT INTERACT mom_wims
momcap12_3t_wims   = (momcap12_3t NOT mom_gt) INTERACT mom_wims

mom23reg_1     = MOMDMY with text "momcap23"
mom23tt1       = mom_metal2 AND mom_metal3
mom23f1        = mom23tt1 NOT INTERACT mom_v2
mom23reg1      = EXTENTS (SIZE (mom23f1 AND mom23reg_1) BY 0.1 INSIDE OF MOMDMY)
mom23tt2       = ((((mom_metal2 AND mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal1) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom23f2        = mom23tt2 NOT INTERACT mom_v2
mom23reg2      = (EXTENTS (SIZE mom23f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom23reg       = mom23reg1 OR mom23reg2
mom23f         = mom23f1 OR mom23f2
momcap23      = (((mom23reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap23_3t   = (((mom23reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal23= (mom_metal2 AND mom_metal3) ENCLOSE mom_v2

momcap23_3t_wips   = (momcap23_3t AND mom_gt) NOT INTERACT mom_wims
momcap23_3t_wops   = (momcap23_3t NOT mom_gt) NOT INTERACT mom_wims
momcap23_3t_wims   = (momcap23_3t NOT mom_gt) INTERACT mom_wims

mom23tt_rf2       = (((mom_metal2 AND mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom23f_rf2        = mom23tt_rf2 NOT INTERACT mom_v2
mom23reg_rf2      = EXTENTS (SIZE mom23f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom23reg_rf       = mom23reg1 OR mom23reg_rf2
mom23f_rf         = mom23f1 OR mom23f_rf2
momcap23rf       = (((mom23reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap23rf_3t    = ((mom23reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal23rf = ((mom_metal2 AND mom_metal3) INTERACT mom23reg_rf) ENCLOSE mom_v2
mom_terminal23rf_m = (((mom_metal2 AND mom_metal3) INTERACT mom23reg_rf) ENCLOSE mom_v2) NOT INTERACT mom_v1

momcap23rf_wips    = momcap23rf AND MOM_poly
momcap23rf_wops    = momcap23rf NOT MOM_poly
momcap23rf_3t_wips = ((momcap23rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal23rf 
momcap23rf_3t_wops = ((momcap23rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal23rf
momcap23rf_3t_wim  = ((momcap23rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal23rf_m

mom34reg_1    = MOMDMY with text "momcap34"
mom34tt1       = mom_metal3 AND mom_metal4
mom34f1        = mom34tt1 NOT INTERACT mom_v3
mom34reg1      = EXTENTS (SIZE (mom34f1 AND mom34reg_1) BY 0.1 INSIDE OF MOMDMY)
mom34tt2       = ((((mom_metal3 AND mom_metal4) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom34f2        = mom34tt2 NOT INTERACT mom_v3
mom34reg2      = (EXTENTS (SIZE mom34f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom34reg       = mom34reg1 OR mom34reg2
mom34f         = mom34f1 OR mom34f2
momcap34      = (((mom34reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap34_3t   = (((mom34reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal34= (mom_metal3 AND mom_metal4) ENCLOSE mom_v3

momcap34_3t_wips   = (momcap34_3t AND mom_gt) NOT INTERACT mom_wims
momcap34_3t_wops   = (momcap34_3t NOT mom_gt) NOT INTERACT mom_wims
momcap34_3t_wims   = (momcap34_3t NOT mom_gt) INTERACT mom_wims

mom34tt_rf2       = (((mom_metal3 AND mom_metal4) NOT INTERACT mom_metal1) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom34f_rf2        = mom34tt_rf2 NOT INTERACT mom_v3
mom34reg_rf2      = EXTENTS (SIZE mom34f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom34reg_rf       = mom34reg1 OR mom34reg_rf2
mom34f_rf         = mom34f1 OR mom34f_rf2
momcap34rf       = (((mom34reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap34rf_3t    = ((mom34reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal34rf = (((mom_metal3 AND mom_metal4) INTERACT mom34reg_rf) ENCLOSE mom_v3) INTERACT momcap34rf_3t
mom_terminal34rf_m = (((mom_metal3 AND mom_metal4) INTERACT mom34reg_rf) ENCLOSE mom_v3) NOT INTERACT mom_v2

momcap34rf_wips    = momcap34rf AND MOM_poly
momcap34rf_wops    = momcap34rf NOT MOM_poly
momcap34rf_3t_wips = ((momcap34rf_3t AND MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal34rf
momcap34rf_3t_wops = ((momcap34rf_3t NOT MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal34rf
momcap34rf_3t_wim  = ((momcap34rf_3t NOT MOM_poly) INTERACT mom_metal2) INTERACT mom_terminal34rf_m

mom45reg_1    = MOMDMY with text "momcap45"
mom45tt1       = mom_metal4 AND mom_metal5
mom45f1        = mom45tt1 NOT INTERACT mom_v4
mom45reg1      = EXTENTS (SIZE (mom45f1 AND mom45reg_1) BY 0.1 INSIDE OF MOMDMY)
mom45tt2       = ((((mom_metal4 AND mom_metal5) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal3) NOT INTERACT mom_metal6
mom45f2        = mom45tt2 NOT INTERACT mom_v4
mom45reg2      = (EXTENTS (SIZE mom45f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom45reg       = mom45reg1 OR mom45reg2
mom45f         = mom45f1 OR mom45f2
momcap45      = (((mom45reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap45_3t   = (((mom45reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal45= (mom_metal4 AND mom_metal5) ENCLOSE mom_v4

momcap45_3t_wips   = (momcap45_3t AND mom_gt) NOT INTERACT mom_wims
momcap45_3t_wops   = (momcap45_3t NOT mom_gt) NOT INTERACT mom_wims
momcap45_3t_wims   = (momcap45_3t NOT mom_gt) INTERACT mom_wims

mom45tt_rf2       = (((mom_metal4 AND mom_metal5) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal6
mom45f_rf2        = mom45tt_rf2 NOT INTERACT mom_v4
mom45reg_rf2      = EXTENTS (SIZE mom45f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom45reg_rf       = mom45reg1 OR mom45reg_rf2
mom45f_rf         = mom45f1 OR mom45f_rf2
momcap45rf       = (((mom45reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap45rf_3t    = ((mom45reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal45rf = (((mom_metal4 AND mom_metal5) INTERACT mom45reg_rf) ENCLOSE mom_v4) INTERACT momcap45rf_3t
mom_terminal45rf_m = (((mom_metal4 AND mom_metal5) INTERACT mom45reg_rf) ENCLOSE mom_v4) NOT INTERACT mom_v3

momcap45rf_wips    = momcap45rf AND MOM_poly
momcap45rf_wops    = momcap45rf NOT MOM_poly
momcap45rf_3t_wips = ((momcap45rf_3t AND MOM_poly) NOT INTERACT mom_metal3) INTERACT mom_terminal45rf
momcap45rf_3t_wops = ((momcap45rf_3t NOT MOM_poly) NOT INTERACT mom_metal3) INTERACT mom_terminal45rf
momcap45rf_3t_wim  = ((momcap45rf_3t NOT MOM_poly) INTERACT mom_metal3) INTERACT mom_terminal45rf_m

mom56reg_1    = MOMDMY with text "momcap56"
mom56tt1       = mom_metal5 AND mom_metal6
mom56f1        = mom56tt1 NOT INTERACT mom_v5
mom56reg1      = EXTENTS (SIZE (mom56f1 AND mom56reg_1) BY 0.1 INSIDE OF MOMDMY)
mom56tt2       = ((((mom_metal5 AND mom_metal6) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal3) NOT INTERACT mom_metal4
mom56f2        = mom56tt2 NOT INTERACT mom_v5
mom56reg2      = (EXTENTS (SIZE mom56f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom56reg       = mom56reg1 OR mom56reg2
mom56f         = mom56f1 OR mom56f2
momcap56      = (((mom56reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap56_3t   = (((mom56reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal56= (mom_metal5 AND mom_metal6) ENCLOSE mom_v5

momcap56_3t_wips   = (momcap56_3t AND mom_gt) NOT INTERACT mom_wims
momcap56_3t_wops   = (momcap56_3t NOT mom_gt) NOT INTERACT mom_wims
momcap56_3t_wims   = (momcap56_3t NOT mom_gt) INTERACT mom_wims

mom56tt_rf2       = (((mom_metal5 AND mom_metal6) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal3
mom56f_rf2        = mom56tt_rf2 NOT INTERACT mom_v5
mom56reg_rf2      = EXTENTS (SIZE mom56f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom56reg_rf       = mom56reg1 OR mom56reg_rf2
mom56f_rf         = mom56f1 OR mom56f_rf2
momcap56rf       = (((mom56reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM 
momcap56rf_3t    = ((mom56reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal56rf = ((mom_metal5 AND mom_metal6) INTERACT mom56reg_rf) ENCLOSE mom_v5 
mom_terminal56rf_m = (((mom_metal5 AND mom_metal6) INTERACT mom56reg_rf) ENCLOSE mom_v5) NOT INTERACT mom_v4

momcap56rf_wips    = momcap56rf AND MOM_poly
momcap56rf_wops    = momcap56rf NOT MOM_poly
momcap56rf_3t_wips = ((momcap56rf_3t AND MOM_poly) NOT INTERACT mom_metal4) INTERACT mom_terminal56rf
momcap56rf_3t_wops = ((momcap56rf_3t NOT MOM_poly) NOT INTERACT mom_metal4) INTERACT mom_terminal56rf
momcap56rf_3t_wim  = ((momcap56rf_3t NOT MOM_poly) INTERACT mom_metal4) INTERACT mom_terminal56rf_m

mom13reg_1    = MOMDMY with text "momcap13"
mom13tt1       = (mom_metal1 AND mom_metal2) AND mom_metal3
mom13f1        = mom13tt1 NOT INTERACT (mom_v1 OR mom_v2)
mom13reg1      = EXTENTS (SIZE (mom13f1 AND mom13reg_1) BY 0.1 INSIDE OF MOMDMY)
mom13tt2       = ((((mom_metal1 AND mom_metal2) AND mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom13f2        = mom13tt2 NOT INTERACT (mom_v1 OR mom_v2)
mom13reg2      = (EXTENTS (SIZE mom13f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom13reg       = mom13reg1 OR mom13reg2
mom13f         = mom13f1 OR mom13f2
momcap13      = (((mom13reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap13_3t   = (((mom13reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap13rf    = (((mom13reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap13rf_3t = (((mom13reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal13
mom_terminal13= (((mom_metal1 AND mom_metal2) AND mom_metal3) INTERACT mom13reg) ENCLOSE mom_m1_m3_via

momcap13rf_wips    = momcap13rf AND MOM_poly
momcap13rf_wops    = momcap13rf NOT MOM_poly
momcap13rf_3t_wips = momcap13rf_3t AND MOM_poly
momcap13rf_3t_wops = momcap13rf_3t NOT MOM_poly
momcap13_3t_wips   = (momcap13_3t AND mom_gt) NOT INTERACT mom_wims
momcap13_3t_wops   = (momcap13_3t NOT mom_gt) NOT INTERACT mom_wims
momcap13_3t_wims   = (momcap13_3t NOT mom_gt) INTERACT mom_wims

mom24reg_1    = MOMDMY with text "momcap24"
mom24tt1       = (mom_metal2 AND mom_metal3) AND mom_metal4
mom24f1        = mom24tt1 NOT INTERACT (mom_v2 OR mom_v3)
mom24reg1      = EXTENTS (SIZE (mom24f1 AND mom24reg_1) BY 0.1 INSIDE OF MOMDMY)
mom24tt2       = ((((mom_metal2 AND mom_metal3) AND mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6) NOT INTERACT mom_metal1
mom24f2        = mom24tt2 NOT INTERACT (mom_v2 OR mom_v3)
mom24reg2      = (EXTENTS (SIZE mom24f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom24reg       = mom24reg1 OR mom24reg2
mom24f         = mom24f1 OR mom24f2
momcap24      = (((mom24reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap24_3t   = (((mom24reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal24= ((mom_metal2 AND mom_metal3) AND mom_metal4) ENCLOSE mom_m2_m4_via

momcap24_3t_wips   = (momcap24_3t AND mom_gt) NOT INTERACT mom_wims
momcap24_3t_wops   = (momcap24_3t NOT mom_gt) NOT INTERACT mom_wims
momcap24_3t_wims   = (momcap24_3t NOT mom_gt) INTERACT mom_wims

mom24tt_rf2       = (((mom_metal2 AND mom_metal3) AND mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom24f_rf2        = mom24tt_rf2 NOT INTERACT (mom_v2 OR mom_v3)
mom24reg_rf2      = EXTENTS (SIZE mom24f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom24reg_rf       = mom24reg1 OR mom24reg_rf2
mom24f_rf         = mom24f1 OR mom24f_rf2
momcap24rf       = (((mom24reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap24rf_3t    = ((mom24reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal24rf = (((mom_metal2 AND mom_metal3) AND mom_metal4) INTERACT mom24reg_rf) ENCLOSE mom_m2_m4_via
mom_terminal24rf_m = ((((mom_metal2 AND mom_metal3) AND mom_metal4) INTERACT mom24reg_rf) ENCLOSE mom_m2_m4_via) NOT INTERACT mom_v1

momcap24rf_wips    = momcap24rf AND MOM_poly
momcap24rf_wops    = momcap24rf NOT MOM_poly
momcap24rf_3t_wips = ((momcap24rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal24rf
momcap24rf_3t_wops = ((momcap24rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal24rf
momcap24rf_3t_wim  = ((momcap24rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal24rf_m

mom14reg_1    = MOMDMY with text "momcap14"
mom14tt1       = ((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4
mom14f1        = mom14tt1 NOT INTERACT ((mom_v1 OR mom_v2) OR mom_v3)
mom14reg1      = EXTENTS (SIZE (mom14f1 AND mom14reg_1) BY 0.1 INSIDE OF MOMDMY)
mom14tt2       = ((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT  mom_metal6
mom14f2        = mom14tt2 NOT INTERACT ((mom_v1 OR mom_v2) OR mom_v3)
mom14reg2      = (EXTENTS (SIZE mom14f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom14reg       = mom14reg1 OR mom14reg2
mom14f         = mom14f1 OR mom14f2
momcap14      = (((mom14reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap14_3t   = (((mom14reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap14rf    = (((mom14reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap14rf_3t = (((mom14reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal14
mom_terminal14= ((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) INTERACT mom14reg) ENCLOSE mom_m1_m4_via

momcap14rf_wips    = momcap14rf AND MOM_poly
momcap14rf_wops    = momcap14rf NOT MOM_poly
momcap14rf_3t_wips = momcap14rf_3t AND MOM_poly
momcap14rf_3t_wops = momcap14rf_3t NOT MOM_poly
momcap14_3t_wips   = (momcap14_3t AND mom_gt) NOT INTERACT mom_wims
momcap14_3t_wops   = (momcap14_3t NOT mom_gt) NOT INTERACT mom_wims
momcap14_3t_wims   = (momcap14_3t NOT mom_gt) INTERACT mom_wims

mom15reg_1    = MOMDMY with text "momcap15"
mom15tt1       = (((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5
mom15f1        = mom15tt1 NOT INTERACT (((mom_v1 OR mom_v2) OR mom_v3) OR mom_v4)
mom15reg1      = EXTENTS (SIZE (mom15f1 AND mom15reg_1) BY 0.1 INSIDE OF MOMDMY)
mom15tt2       = ((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5) NOT INTERACT  mom_metal6
mom15f2        = mom15tt2 NOT INTERACT (((mom_v1 OR mom_v2) OR mom_v3) OR mom_v4)
mom15reg2      = (EXTENTS (SIZE mom15f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom15reg       = mom15reg1 OR mom15reg2
mom15f         = mom15f1 OR mom15f2
momcap15      = (((mom15reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap15_3t   = (((mom15reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap15rf    = (((mom15reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap15rf_3t = (((mom15reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal15
mom_terminal15= (((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5) INTERACT mom15reg) ENCLOSE mom_m1_m5_via

momcap15rf_wips    = momcap15rf AND MOM_poly
momcap15rf_wops    = momcap15rf NOT MOM_poly
momcap15rf_3t_wips = momcap15rf_3t AND MOM_poly
momcap15rf_3t_wops = momcap15rf_3t NOT MOM_poly
momcap15_3t_wips   = (momcap15_3t AND mom_gt) NOT INTERACT mom_wims
momcap15_3t_wops   = (momcap15_3t NOT mom_gt) NOT INTERACT mom_wims
momcap15_3t_wims   = (momcap15_3t NOT mom_gt) INTERACT mom_wims

mom25reg_1    = MOMDMY with text "momcap25"
mom25tt1       = ((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5
mom25f1        = mom25tt1 NOT INTERACT ((mom_v2 OR mom_v3) OR mom_v4)
mom25reg1      = EXTENTS (SIZE (mom25f1 AND mom25reg_1) BY 0.1 INSIDE OF MOMDMY)
mom25tt2       = ((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5 ) NOT INTERACT mom_metal1) NOT INTERACT mom_metal6
mom25f2        = mom25tt2 NOT INTERACT ((mom_v2 OR mom_v3) OR mom_v4)
mom25reg2      = (EXTENTS (SIZE mom25f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom25reg       = mom25reg1 OR mom25reg2
mom25f         = mom25f1 OR mom25f2
momcap25      = (((mom25reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap25_3t   = (((mom25reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal25= (((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) ENCLOSE mom_m2_m5_via

momcap25_3t_wips   = (momcap25_3t AND mom_gt) NOT INTERACT mom_wims
momcap25_3t_wops   = (momcap25_3t NOT mom_gt) NOT INTERACT mom_wims
momcap25_3t_wims   = (momcap25_3t NOT mom_gt) INTERACT mom_wims

mom25tt_rf2       = (((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) NOT INTERACT mom_metal6
mom25f_rf2        = mom25tt_rf2 NOT INTERACT ((mom_v2 OR mom_v3) OR mom_v4)
mom25reg_rf2      = EXTENTS (SIZE mom25f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom25reg_rf       = mom25reg1 OR mom25reg_rf2
mom25f_rf         = mom25f1 OR mom25f_rf2
momcap25rf       = (((mom25reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap25rf_3t    = ((mom25reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal25rf = ((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) INTERACT mom25reg_rf) ENCLOSE mom_m2_m5_via
mom_terminal25rf_m = (((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) INTERACT mom25reg_rf) ENCLOSE mom_m2_m5_via) NOT INTERACT mom_v1

momcap25rf_wips    = momcap25rf AND MOM_poly
momcap25rf_wops    = momcap25rf NOT MOM_poly
momcap25rf_3t_wips = ((momcap25rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal25rf
momcap25rf_3t_wops = ((momcap25rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal25rf
momcap25rf_3t_wim  = ((momcap25rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal25rf_m

mom35reg_1    = MOMDMY with text "momcap35"
mom35tt1       = (mom_metal3 AND mom_metal4) AND mom_metal5
mom35f1        = mom35tt1 NOT INTERACT (mom_v3 OR mom_v4 )
mom35reg1      = EXTENTS (SIZE (mom35f1 AND mom35reg_1) BY 0.1 INSIDE OF MOMDMY)
mom35tt2       = ((((mom_metal3 AND mom_metal4) AND mom_metal5) NOT interact mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal6
mom35f2        = mom35tt2 NOT INTERACT (mom_v3 OR mom_v4 )
mom35reg2      = (EXTENTS (SIZE mom35f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom35reg       = mom35reg1 OR mom35reg2
mom35f         = mom35f1 OR mom35f2
momcap35      = (((mom35reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap35_3t   = (((mom35reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal35= ((mom_metal3 AND mom_metal4) AND mom_metal5) ENCLOSE mom_m3_m5_via

momcap35_3t_wips   = (momcap35_3t AND mom_gt) NOT INTERACT mom_wims
momcap35_3t_wops   = (momcap35_3t NOT mom_gt) NOT INTERACT mom_wims
momcap35_3t_wims   = (momcap35_3t NOT mom_gt) INTERACT mom_wims

mom35tt_rf2       = (((mom_metal3 AND mom_metal4) AND mom_metal5) NOT mom_metal1) NOT INTERACT mom_metal6
mom35f_rf2        = mom35tt_rf2 NOT INTERACT (mom_v3 OR mom_v4 )
mom35reg_rf2      = EXTENTS (SIZE mom35f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom35reg_rf       = mom35reg1 OR mom35reg_rf2
mom35f_rf         = mom35f1 OR mom35f_rf2
momcap35rf       = (((mom35reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap35rf_3t    = ((mom35reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal35rf = (((mom_metal3 AND mom_metal4) AND mom_metal5) INTERACT mom35reg_rf) ENCLOSE mom_m3_m5_via
mom_terminal35rf_m = ((((mom_metal3 AND mom_metal4) AND mom_metal5) INTERACT mom35reg_rf) ENCLOSE mom_m3_m5_via) NOT INTERACT mom_v2

momcap35rf_wips    = momcap35rf AND MOM_poly
momcap35rf_wops    = momcap35rf NOT MOM_poly
momcap35rf_3t_wips = ((momcap35rf_3t AND MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal35rf
momcap35rf_3t_wops = ((momcap35rf_3t NOT MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal35rf
momcap35rf_3t_wim  = ((momcap35rf_3t NOT MOM_poly) INTERACT mom_metal2) INTERACT mom_terminal35rf_m

mom16reg_1    = MOMDMY with text "momcap16"
mom16tt       = ((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6
mom16f        = mom16tt NOT INTERACT ((((mom_v1 OR mom_v2) OR mom_v3) OR mom_v4) OR mom_v5)
mom16reg1     = EXTENTS (SIZE (mom16f AND mom16reg_1) BY 0.1 INSIDE OF MOMDMY)
mom16reg2     = (EXTENTS (SIZE mom16f BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom16reg       = mom16reg1 OR mom16reg2
momcap16      = (((mom16reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap16_3t   = (((mom16reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap16rf    = (((mom16reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap16rf_3t = (((mom16reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal16
mom_terminal16= ((((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) INTERACT mom16reg) ENCLOSE mom_m1_m6_via

momcap16rf_wips    = momcap16rf AND MOM_poly
momcap16rf_wops    = momcap16rf NOT MOM_poly
momcap16rf_3t_wips = momcap16rf_3t AND MOM_poly
momcap16rf_3t_wops = momcap16rf_3t NOT MOM_poly
momcap16_3t_wips   = (momcap16_3t AND mom_gt) NOT INTERACT mom_wims
momcap16_3t_wops   = (momcap16_3t NOT mom_gt) NOT INTERACT mom_wims
momcap16_3t_wims   = (momcap16_3t NOT mom_gt) INTERACT mom_wims

mom26reg_1    = MOMDMY with text "momcap26"
mom26tt1       = (((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6
mom26f1        = mom26tt1 NOT INTERACT (((mom_v2 OR mom_v3) OR mom_v4) OR mom_v5)
mom26reg1      = EXTENTS (SIZE (mom26f1 AND mom26reg_1) BY 0.1 INSIDE OF MOMDMY)
mom26tt2       = ((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) NOT INTERACT mom_metal1
mom26f2        = mom26tt2 NOT INTERACT (((mom_v2 OR mom_v3) OR mom_v4) OR mom_v5)
mom26reg2      = (EXTENTS (SIZE mom26f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom26reg       = mom26reg1 OR mom26reg2
mom26f         = mom26f1 OR mom26f2
momcap26      = (((mom26reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap26_3t   = (((mom26reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal26= ((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) ENCLOSE mom_m2_m6_via

momcap26_3t_wips   = (momcap26_3t AND mom_gt) NOT INTERACT mom_wims
momcap26_3t_wops   = (momcap26_3t NOT mom_gt) NOT INTERACT mom_wims
momcap26_3t_wims   = (momcap26_3t NOT mom_gt) INTERACT mom_wims

//mom26tt_rf       = (((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6
//mom26f_rf        = mom26tt_rf NOT INTERACT (((mom_v2 OR mom_v3) OR mom_v4) OR mom_v5)
mom26reg_rf2      = EXTENTS (SIZE mom26f1 BY 0.1 INSIDE OF MOMDMY)
mom26reg_rf       = mom26reg1 OR mom26reg_rf2
mom26f_rf         = copy mom26f1 
momcap26rf       = (((mom26reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap26rf_3t    = ((mom26reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal26rf = (((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) INTERACT mom26reg_rf) ENCLOSE mom_m2_m6_via
mom_terminal26rf_m = ((((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) INTERACT mom26reg_rf) ENCLOSE mom_m2_m6_via) NOT INTERACT mom_v1

momcap26rf_wips    = momcap26rf AND MOM_poly
momcap26rf_wops    = momcap26rf NOT MOM_poly
momcap26rf_3t_wips = ((momcap26rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal26rf
momcap26rf_3t_wops = ((momcap26rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal26rf
momcap26rf_3t_wim  = ((momcap26rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal26rf_m

mom36reg_1    = MOMDMY with text "momcap36"
mom36tt1       = ((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6
mom36f1        = mom36tt1 NOT INTERACT ((mom_v3 OR mom_v4) OR mom_v5)
mom36reg1      = EXTENTS (SIZE (mom36f1 AND mom36reg_1) BY 0.1 INSIDE OF MOMDMY)
mom36tt2       = ((((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) NOT INTERACT  mom_metal1) NOT INTERACT mom_metal2
mom36f2        = mom36tt2 NOT INTERACT ((mom_v3 OR mom_v4) OR mom_v5)
mom36reg2      = (EXTENTS (SIZE mom36f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom36reg       = mom36reg1 OR mom36reg2
mom36f         = mom36f1 OR mom36f2
momcap36      = (((mom36reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap36_3t   = (((mom36reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal36= (((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) ENCLOSE mom_m3_m6_via

momcap36_3t_wips   = (momcap36_3t AND mom_gt) NOT INTERACT mom_wims
momcap36_3t_wops   = (momcap36_3t NOT mom_gt) NOT INTERACT mom_wims
momcap36_3t_wims   = (momcap36_3t NOT mom_gt) INTERACT mom_wims

mom36tt_rf2       = (((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) NOT INTERACT mom_metal1
mom36f_rf2        = mom36tt_rf2 NOT INTERACT ((mom_v3 OR mom_v4) OR mom_v5)
mom36reg_rf2      = EXTENTS (SIZE mom36f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom36reg_rf       = mom36reg1 OR mom36reg_rf2
mom36f_rf         = mom36f1 OR mom36f_rf2
momcap36rf       = (((mom36reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap36rf_3t    = (((mom36reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal36rf
mom_terminal36rf = ((((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) INTERACT mom36reg_rf) ENCLOSE mom_m3_m6_via
mom_terminal36rf_m = (((((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) INTERACT mom36reg_rf) ENCLOSE mom_m3_m6_via) NOT INTERACT mom_v2

momcap36rf_wips    = momcap36rf AND MOM_poly
momcap36rf_wops    = momcap36rf NOT MOM_poly
momcap36rf_3t_wips = ((momcap36rf_3t AND MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal36rf
momcap36rf_3t_wops = ((momcap36rf_3t NOT MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal36rf
momcap36rf_3t_wim  = ((momcap36rf_3t NOT MOM_poly) INTERACT mom_metal2) INTERACT mom_terminal36rf_m

mom46reg_1    = MOMDMY with text "momcap46"
mom46tt1       = (mom_metal4 AND mom_metal5) AND mom_metal6
mom46f1        = mom46tt1 NOT INTERACT (mom_v4 OR mom_v5)
mom46reg1      = EXTENTS (SIZE (mom46f1 AND mom46reg_1) BY 0.1 INSIDE OF MOMDMY)
mom46tt2       = ((((mom_metal4 AND mom_metal5) AND mom_metal6) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT interact mom_metal3
mom46f2        = mom46tt2 NOT INTERACT (mom_v4 OR mom_v5)
mom46reg2      = (EXTENTS (SIZE mom46f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom46reg       = mom46reg1 OR mom46reg2
mom46f         = mom46f1 OR mom46f2
momcap46      = (((mom46reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap46_3t   = (((mom46reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal46= ((mom_metal4 AND mom_metal5) AND mom_metal6) ENCLOSE mom_m4_m6_via

momcap46_3t_wips   = (momcap46_3t AND mom_gt) NOT INTERACT mom_wims
momcap46_3t_wops   = (momcap46_3t NOT mom_gt) NOT INTERACT mom_wims
momcap46_3t_wims   = (momcap46_3t NOT mom_gt) INTERACT mom_wims

mom46tt_rf2       = (((mom_metal4 AND mom_metal5) AND mom_metal6) NOT INTERACT  mom_metal1) NOT INTERACT  mom_metal2
mom46f_rf2        = mom46tt_rf2 NOT INTERACT (mom_v4 OR mom_v5)
mom46reg_rf2      = EXTENTS (SIZE mom46f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom46reg_rf       = mom46reg1 OR mom46reg_rf2
mom46f_rf         = mom46f1 OR mom46f_rf2
momcap46rf       = (((mom46reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap46rf_3t    = ((mom46reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal46rf = (((mom_metal4 AND mom_metal5) AND mom_metal6) INTERACT mom46reg_rf) ENCLOSE mom_m4_m6_via
mom_terminal46rf_m = ((((mom_metal4 AND mom_metal5) AND mom_metal6) INTERACT mom46reg_rf) ENCLOSE mom_m4_m6_via) NOT INTERACT mom_v3

momcap46rf_wips    = momcap46rf AND MOM_poly
momcap46rf_wops    = momcap46rf NOT MOM_poly
momcap46rf_3t_wips = ((momcap46rf_3t AND MOM_poly) NOT INTERACT mom_metal3) INTERACT mom_terminal46rf
momcap46rf_3t_wops = ((momcap46rf_3t NOT MOM_poly) NOT INTERACT mom_metal3) INTERACT mom_terminal46rf
momcap46rf_3t_wim  = ((momcap46rf_3t NOT MOM_poly) INTERACT mom_metal3) INTERACT mom_terminal46rf_m

#ENDIF
#ENDIF

#IFDEF TOPMETAL 9
#IFDEF TOP_METAL_NUM single

mom_metal1         = metal1a AND MOMDMY
mom_v1             = Via1 AND MOMDMY
V1                 = copy Via1 
metal1b            = copy metal1a 
mom_metal2         = metal2a AND MOMDMY
mom_v2             = Via2 AND MOMDMY
V2                 = copy Via2 
metal2b            = copy metal2a 
mom_metal3         = metal3a AND MOMDMY
mom_v3             = Via3 AND MOMDMY
V3                 = copy Via3 
metal3b            = copy metal3a 
mom_metal4         = metal4a AND MOMDMY
metal4b            = copy metal4a 
mom_metal5         = metal5a AND MOMDMY
metal5b            = copy metal5a 
mom_v4             = Via4 AND MOMDMY
V4                 = copy Via4
mom_metal6         = metal6a AND MOMDMY
metal6b            = copy metal6a 
mom_v5             = Via5 AND MOMDMY
V5                 = copy Via5 

mom_m1_m3_via = mom_v1 AND mom_v2
mom_m2_m4_via = mom_v2 AND mom_v3
mom_m1_m4_via = (mom_v1 AND mom_v2) AND mom_v3
mom_m1_m5_via = ((mom_v1 AND mom_v2) AND mom_v3) AND mom_v4
mom_m2_m5_via = (mom_v2 AND mom_v3) AND mom_v4
mom_m3_m5_via = mom_v3 AND mom_v4
mom_m1_m6_via = (((mom_v1 AND mom_v2) AND mom_v3) AND mom_v4) AND mom_v5
mom_m2_m6_via = ((mom_v2 AND mom_v3) AND mom_v4) AND mom_v5
mom_m3_m6_via = (mom_v3 AND mom_v4) AND mom_v5
mom_m4_m6_via =  mom_v4 AND mom_v5

mom_text = (((((((((((((mom12reg_1 or mom13reg_1) or mom14reg_1) or mom15reg_1) or mom16reg_1) or mom23reg_1) or mom24reg_1) or mom25reg_1) or mom26reg_1) or mom34reg_1) or mom35reg_1) or mom36reg_1) or mom45reg_1) or mom46reg_1) or mom56reg_1


mom12reg_1    = MOMDMY with text "momcap12"
mom12tt1       = mom_metal1 AND mom_metal2
mom12f1        = mom12tt1 NOT INTERACT mom_v1
mom12reg1      = EXTENTS (SIZE (mom12f1 AND mom12reg_1) BY 0.1 INSIDE OF MOMDMY)
mom12tt2       = ((((mom_metal1 AND mom_metal2) NOT INTERACT mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom12f2        = mom12tt2 NOT INTERACT mom_v1
mom12reg2      = (EXTENTS (SIZE mom12f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom12reg       = mom12reg1 OR mom12reg2
mom12f         = mom12f1 OR mom12f2
momcap12      = (((mom12reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap12_3t   = (((mom12reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap12rf    = (((mom12reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap12rf_3t = (((mom12reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal12
mom_terminal12= ((mom_metal1 AND mom_metal2) INTERACT mom12reg) ENCLOSE mom_v1

momcap12rf_wips    = momcap12rf AND MOM_poly
momcap12rf_wops    = momcap12rf NOT MOM_poly
momcap12rf_3t_wips = momcap12rf_3t AND MOM_poly
momcap12rf_3t_wops = momcap12rf_3t NOT MOM_poly
momcap12_3t_wips   = (momcap12_3t AND mom_gt) NOT INTERACT mom_wims
momcap12_3t_wops   = (momcap12_3t NOT mom_gt) NOT INTERACT mom_wims
momcap12_3t_wims   = (momcap12_3t NOT mom_gt) INTERACT mom_wims

mom23reg_1     = MOMDMY with text "momcap23"
mom23tt1       = mom_metal2 AND mom_metal3
mom23f1        = mom23tt1 NOT INTERACT mom_v2
mom23reg1      = EXTENTS (SIZE (mom23f1 AND mom23reg_1) BY 0.1 INSIDE OF MOMDMY)
mom23tt2       = ((((mom_metal2 AND mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal1) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom23f2        = mom23tt2 NOT INTERACT mom_v2
mom23reg2      = (EXTENTS (SIZE mom23f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom23reg       = mom23reg1 OR mom23reg2
mom23f         = mom23f1 OR mom23f2
momcap23      = (((mom23reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap23_3t   = (((mom23reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal23= (mom_metal2 AND mom_metal3) ENCLOSE mom_v2

momcap23_3t_wips   = (momcap23_3t AND mom_gt) NOT INTERACT mom_wims
momcap23_3t_wops   = (momcap23_3t NOT mom_gt) NOT INTERACT mom_wims
momcap23_3t_wims   = (momcap23_3t NOT mom_gt) INTERACT mom_wims

mom23tt_rf2       = (((mom_metal2 AND mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom23f_rf2        = mom23tt_rf2 NOT INTERACT mom_v2
mom23reg_rf2      = EXTENTS (SIZE mom23f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom23reg_rf       = mom23reg1 OR mom23reg_rf2
mom23f_rf         = mom23f1 OR mom23f_rf2
momcap23rf       = (((mom23reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap23rf_3t    = ((mom23reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal23rf = ((mom_metal2 AND mom_metal3) INTERACT mom23reg_rf) ENCLOSE mom_v2
mom_terminal23rf_m = (((mom_metal2 AND mom_metal3) INTERACT mom23reg_rf) ENCLOSE mom_v2) NOT INTERACT mom_v1

momcap23rf_wips    = momcap23rf AND MOM_poly
momcap23rf_wops    = momcap23rf NOT MOM_poly
momcap23rf_3t_wips = ((momcap23rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal23rf 
momcap23rf_3t_wops = ((momcap23rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal23rf
momcap23rf_3t_wim  = ((momcap23rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal23rf_m

mom34reg_1    = MOMDMY with text "momcap34"
mom34tt1       = mom_metal3 AND mom_metal4
mom34f1        = mom34tt1 NOT INTERACT mom_v3
mom34reg1      = EXTENTS (SIZE (mom34f1 AND mom34reg_1) BY 0.1 INSIDE OF MOMDMY)
mom34tt2       = ((((mom_metal3 AND mom_metal4) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom34f2        = mom34tt2 NOT INTERACT mom_v3
mom34reg2      = (EXTENTS (SIZE mom34f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom34reg       = mom34reg1 OR mom34reg2
mom34f         = mom34f1 OR mom34f2
momcap34      = (((mom34reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap34_3t   = (((mom34reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal34= (mom_metal3 AND mom_metal4) ENCLOSE mom_v3

momcap34_3t_wips   = (momcap34_3t AND mom_gt) NOT INTERACT mom_wims
momcap34_3t_wops   = (momcap34_3t NOT mom_gt) NOT INTERACT mom_wims
momcap34_3t_wims   = (momcap34_3t NOT mom_gt) INTERACT mom_wims

mom34tt_rf2       = (((mom_metal3 AND mom_metal4) NOT INTERACT mom_metal1) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom34f_rf2        = mom34tt_rf2 NOT INTERACT mom_v3
mom34reg_rf2      = EXTENTS (SIZE mom34f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom34reg_rf       = mom34reg1 OR mom34reg_rf2
mom34f_rf         = mom34f1 OR mom34f_rf2
momcap34rf       = (((mom34reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap34rf_3t    = ((mom34reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal34rf = (((mom_metal3 AND mom_metal4) INTERACT mom34reg_rf) ENCLOSE mom_v3) INTERACT momcap34rf_3t
mom_terminal34rf_m = (((mom_metal3 AND mom_metal4) INTERACT mom34reg_rf) ENCLOSE mom_v3) NOT INTERACT mom_v2

momcap34rf_wips    = momcap34rf AND MOM_poly
momcap34rf_wops    = momcap34rf NOT MOM_poly
momcap34rf_3t_wips = ((momcap34rf_3t AND MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal34rf
momcap34rf_3t_wops = ((momcap34rf_3t NOT MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal34rf
momcap34rf_3t_wim  = ((momcap34rf_3t NOT MOM_poly) INTERACT mom_metal2) INTERACT mom_terminal34rf_m

mom45reg_1    = MOMDMY with text "momcap45"
mom45tt1       = mom_metal4 AND mom_metal5
mom45f1        = mom45tt1 NOT INTERACT mom_v4
mom45reg1      = EXTENTS (SIZE (mom45f1 AND mom45reg_1) BY 0.1 INSIDE OF MOMDMY)
mom45tt2       = ((((mom_metal4 AND mom_metal5) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal3) NOT INTERACT mom_metal6
mom45f2        = mom45tt2 NOT INTERACT mom_v4
mom45reg2      = (EXTENTS (SIZE mom45f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom45reg       = mom45reg1 OR mom45reg2
mom45f         = mom45f1 OR mom45f2
momcap45      = (((mom45reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap45_3t   = (((mom45reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal45= (mom_metal4 AND mom_metal5) ENCLOSE mom_v4

momcap45_3t_wips   = (momcap45_3t AND mom_gt) NOT INTERACT mom_wims
momcap45_3t_wops   = (momcap45_3t NOT mom_gt) NOT INTERACT mom_wims
momcap45_3t_wims   = (momcap45_3t NOT mom_gt) INTERACT mom_wims

mom45tt_rf2       = (((mom_metal4 AND mom_metal5) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal6
mom45f_rf2        = mom45tt_rf2 NOT INTERACT mom_v4
mom45reg_rf2      = EXTENTS (SIZE mom45f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom45reg_rf       = mom45reg1 OR mom45reg_rf2
mom45f_rf         = mom45f1 OR mom45f_rf2
momcap45rf       = (((mom45reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap45rf_3t    = ((mom45reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal45rf = (((mom_metal4 AND mom_metal5) INTERACT mom45reg_rf) ENCLOSE mom_v4) INTERACT momcap45rf_3t
mom_terminal45rf_m = (((mom_metal4 AND mom_metal5) INTERACT mom45reg_rf) ENCLOSE mom_v4) NOT INTERACT mom_v3

momcap45rf_wips    = momcap45rf AND MOM_poly
momcap45rf_wops    = momcap45rf NOT MOM_poly
momcap45rf_3t_wips = ((momcap45rf_3t AND MOM_poly) NOT INTERACT mom_metal3) INTERACT mom_terminal45rf
momcap45rf_3t_wops = ((momcap45rf_3t NOT MOM_poly) NOT INTERACT mom_metal3) INTERACT mom_terminal45rf
momcap45rf_3t_wim  = ((momcap45rf_3t NOT MOM_poly) INTERACT mom_metal3) INTERACT mom_terminal45rf_m

mom56reg_1    = MOMDMY with text "momcap56"
mom56tt1       = mom_metal5 AND mom_metal6
mom56f1        = mom56tt1 NOT INTERACT mom_v5
mom56reg1      = EXTENTS (SIZE (mom56f1 AND mom56reg_1) BY 0.1 INSIDE OF MOMDMY)
mom56tt2       = ((((mom_metal5 AND mom_metal6) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal3) NOT INTERACT mom_metal4
mom56f2        = mom56tt2 NOT INTERACT mom_v5
mom56reg2      = (EXTENTS (SIZE mom56f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom56reg       = mom56reg1 OR mom56reg2
mom56f         = mom56f1 OR mom56f2
momcap56      = (((mom56reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap56_3t   = (((mom56reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal56= (mom_metal5 AND mom_metal6) ENCLOSE mom_v5

momcap56_3t_wips   = (momcap56_3t AND mom_gt) NOT INTERACT mom_wims
momcap56_3t_wops   = (momcap56_3t NOT mom_gt) NOT INTERACT mom_wims
momcap56_3t_wims   = (momcap56_3t NOT mom_gt) INTERACT mom_wims

mom56tt_rf2       = (((mom_metal5 AND mom_metal6) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal3
mom56f_rf2        = mom56tt_rf2 NOT INTERACT mom_v5
mom56reg_rf2      = EXTENTS (SIZE mom56f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom56reg_rf       = mom56reg1 OR mom56reg_rf2
mom56f_rf         = mom56f1 OR mom56f_rf2
momcap56rf       = (((mom56reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM 
momcap56rf_3t    = ((mom56reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal56rf = ((mom_metal5 AND mom_metal6) INTERACT mom56reg_rf) ENCLOSE mom_v5 
mom_terminal56rf_m = (((mom_metal5 AND mom_metal6) INTERACT mom56reg_rf) ENCLOSE mom_v5) NOT INTERACT mom_v4

momcap56rf_wips    = momcap56rf AND MOM_poly
momcap56rf_wops    = momcap56rf NOT MOM_poly
momcap56rf_3t_wips = ((momcap56rf_3t AND MOM_poly) NOT INTERACT mom_metal4) INTERACT mom_terminal56rf
momcap56rf_3t_wops = ((momcap56rf_3t NOT MOM_poly) NOT INTERACT mom_metal4) INTERACT mom_terminal56rf
momcap56rf_3t_wim  = ((momcap56rf_3t NOT MOM_poly) INTERACT mom_metal4) INTERACT mom_terminal56rf_m

mom13reg_1    = MOMDMY with text "momcap13"
mom13tt1       = (mom_metal1 AND mom_metal2) AND mom_metal3
mom13f1        = mom13tt1 NOT INTERACT (mom_v1 OR mom_v2)
mom13reg1      = EXTENTS (SIZE (mom13f1 AND mom13reg_1) BY 0.1 INSIDE OF MOMDMY)
mom13tt2       = ((((mom_metal1 AND mom_metal2) AND mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom13f2        = mom13tt2 NOT INTERACT (mom_v1 OR mom_v2)
mom13reg2      = (EXTENTS (SIZE mom13f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom13reg       = mom13reg1 OR mom13reg2
mom13f         = mom13f1 OR mom13f2
momcap13      = (((mom13reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap13_3t   = (((mom13reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap13rf    = (((mom13reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap13rf_3t = (((mom13reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal13
mom_terminal13= (((mom_metal1 AND mom_metal2) AND mom_metal3) INTERACT mom13reg) ENCLOSE mom_m1_m3_via

momcap13rf_wips    = momcap13rf AND MOM_poly
momcap13rf_wops    = momcap13rf NOT MOM_poly
momcap13rf_3t_wips = momcap13rf_3t AND MOM_poly
momcap13rf_3t_wops = momcap13rf_3t NOT MOM_poly
momcap13_3t_wips   = (momcap13_3t AND mom_gt) NOT INTERACT mom_wims
momcap13_3t_wops   = (momcap13_3t NOT mom_gt) NOT INTERACT mom_wims
momcap13_3t_wims   = (momcap13_3t NOT mom_gt) INTERACT mom_wims

mom24reg_1    = MOMDMY with text "momcap24"
mom24tt1       = (mom_metal2 AND mom_metal3) AND mom_metal4
mom24f1        = mom24tt1 NOT INTERACT (mom_v2 OR mom_v3)
mom24reg1      = EXTENTS (SIZE (mom24f1 AND mom24reg_1) BY 0.1 INSIDE OF MOMDMY)
mom24tt2       = ((((mom_metal2 AND mom_metal3) AND mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6) NOT INTERACT mom_metal1
mom24f2        = mom24tt2 NOT INTERACT (mom_v2 OR mom_v3)
mom24reg2      = (EXTENTS (SIZE mom24f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom24reg       = mom24reg1 OR mom24reg2
mom24f         = mom24f1 OR mom24f2
momcap24      = (((mom24reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap24_3t   = (((mom24reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal24= ((mom_metal2 AND mom_metal3) AND mom_metal4) ENCLOSE mom_m2_m4_via

momcap24_3t_wips   = (momcap24_3t AND mom_gt) NOT INTERACT mom_wims
momcap24_3t_wops   = (momcap24_3t NOT mom_gt) NOT INTERACT mom_wims
momcap24_3t_wims   = (momcap24_3t NOT mom_gt) INTERACT mom_wims

mom24tt_rf2       = (((mom_metal2 AND mom_metal3) AND mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom24f_rf2        = mom24tt_rf2 NOT INTERACT (mom_v2 OR mom_v3)
mom24reg_rf2      = EXTENTS (SIZE mom24f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom24reg_rf       = mom24reg1 OR mom24reg_rf2
mom24f_rf         = mom24f1 OR mom24f_rf2
momcap24rf       = (((mom24reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap24rf_3t    = ((mom24reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal24rf = (((mom_metal2 AND mom_metal3) AND mom_metal4) INTERACT mom24reg_rf) ENCLOSE mom_m2_m4_via
mom_terminal24rf_m = ((((mom_metal2 AND mom_metal3) AND mom_metal4) INTERACT mom24reg_rf) ENCLOSE mom_m2_m4_via) NOT INTERACT mom_v1

momcap24rf_wips    = momcap24rf AND MOM_poly
momcap24rf_wops    = momcap24rf NOT MOM_poly
momcap24rf_3t_wips = ((momcap24rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal24rf
momcap24rf_3t_wops = ((momcap24rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal24rf
momcap24rf_3t_wim  = ((momcap24rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal24rf_m

mom14reg_1    = MOMDMY with text "momcap14"
mom14tt1       = ((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4
mom14f1        = mom14tt1 NOT INTERACT ((mom_v1 OR mom_v2) OR mom_v3)
mom14reg1      = EXTENTS (SIZE (mom14f1 AND mom14reg_1) BY 0.1 INSIDE OF MOMDMY)
mom14tt2       = ((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT  mom_metal6
mom14f2        = mom14tt2 NOT INTERACT ((mom_v1 OR mom_v2) OR mom_v3)
mom14reg2      = (EXTENTS (SIZE mom14f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom14reg       = mom14reg1 OR mom14reg2
mom14f         = mom14f1 OR mom14f2
momcap14      = (((mom14reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap14_3t   = (((mom14reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap14rf    = (((mom14reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap14rf_3t = (((mom14reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal14
mom_terminal14= ((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) INTERACT mom14reg) ENCLOSE mom_m1_m4_via

momcap14rf_wips    = momcap14rf AND MOM_poly
momcap14rf_wops    = momcap14rf NOT MOM_poly
momcap14rf_3t_wips = momcap14rf_3t AND MOM_poly
momcap14rf_3t_wops = momcap14rf_3t NOT MOM_poly
momcap14_3t_wips   = (momcap14_3t AND mom_gt) NOT INTERACT mom_wims
momcap14_3t_wops   = (momcap14_3t NOT mom_gt) NOT INTERACT mom_wims
momcap14_3t_wims   = (momcap14_3t NOT mom_gt) INTERACT mom_wims

mom15reg_1    = MOMDMY with text "momcap15"
mom15tt1       = (((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5
mom15f1        = mom15tt1 NOT INTERACT (((mom_v1 OR mom_v2) OR mom_v3) OR mom_v4)
mom15reg1      = EXTENTS (SIZE (mom15f1 AND mom15reg_1) BY 0.1 INSIDE OF MOMDMY)
mom15tt2       = ((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5) NOT INTERACT  mom_metal6
mom15f2        = mom15tt2 NOT INTERACT (((mom_v1 OR mom_v2) OR mom_v3) OR mom_v4)
mom15reg2      = (EXTENTS (SIZE mom15f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom15reg       = mom15reg1 OR mom15reg2
mom15f         = mom15f1 OR mom15f2
momcap15      = (((mom15reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap15_3t   = (((mom15reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap15rf    = (((mom15reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap15rf_3t = (((mom15reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal15
mom_terminal15= (((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5) INTERACT mom15reg) ENCLOSE mom_m1_m5_via

momcap15rf_wips    = momcap15rf AND MOM_poly
momcap15rf_wops    = momcap15rf NOT MOM_poly
momcap15rf_3t_wips = momcap15rf_3t AND MOM_poly
momcap15rf_3t_wops = momcap15rf_3t NOT MOM_poly
momcap15_3t_wips   = (momcap15_3t AND mom_gt) NOT INTERACT mom_wims
momcap15_3t_wops   = (momcap15_3t NOT mom_gt) NOT INTERACT mom_wims
momcap15_3t_wims   = (momcap15_3t NOT mom_gt) INTERACT mom_wims

mom25reg_1    = MOMDMY with text "momcap25"
mom25tt1       = ((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5
mom25f1        = mom25tt1 NOT INTERACT ((mom_v2 OR mom_v3) OR mom_v4)
mom25reg1      = EXTENTS (SIZE (mom25f1 AND mom25reg_1) BY 0.1 INSIDE OF MOMDMY)
mom25tt2       = ((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5 ) NOT INTERACT mom_metal1) NOT INTERACT mom_metal6
mom25f2        = mom25tt2 NOT INTERACT ((mom_v2 OR mom_v3) OR mom_v4)
mom25reg2      = (EXTENTS (SIZE mom25f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom25reg       = mom25reg1 OR mom25reg2
mom25f         = mom25f1 OR mom25f2
momcap25      = (((mom25reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap25_3t   = (((mom25reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal25= (((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) ENCLOSE mom_m2_m5_via

momcap25_3t_wips   = (momcap25_3t AND mom_gt) NOT INTERACT mom_wims
momcap25_3t_wops   = (momcap25_3t NOT mom_gt) NOT INTERACT mom_wims
momcap25_3t_wims   = (momcap25_3t NOT mom_gt) INTERACT mom_wims

mom25tt_rf2       = (((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) NOT INTERACT mom_metal6
mom25f_rf2        = mom25tt_rf2 NOT INTERACT ((mom_v2 OR mom_v3) OR mom_v4)
mom25reg_rf2      = EXTENTS (SIZE mom25f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom25reg_rf       = mom25reg1 OR mom25reg_rf2
mom25f_rf         = mom25f1 OR mom25f_rf2
momcap25rf       = (((mom25reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap25rf_3t    = ((mom25reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal25rf = ((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) INTERACT mom25reg_rf) ENCLOSE mom_m2_m5_via
mom_terminal25rf_m = (((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) INTERACT mom25reg_rf) ENCLOSE mom_m2_m5_via) NOT INTERACT mom_v1

momcap25rf_wips    = momcap25rf AND MOM_poly
momcap25rf_wops    = momcap25rf NOT MOM_poly
momcap25rf_3t_wips = ((momcap25rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal25rf
momcap25rf_3t_wops = ((momcap25rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal25rf
momcap25rf_3t_wim  = ((momcap25rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal25rf_m

mom35reg_1    = MOMDMY with text "momcap35"
mom35tt1       = (mom_metal3 AND mom_metal4) AND mom_metal5
mom35f1        = mom35tt1 NOT INTERACT (mom_v3 OR mom_v4 )
mom35reg1      = EXTENTS (SIZE (mom35f1 AND mom35reg_1) BY 0.1 INSIDE OF MOMDMY)
mom35tt2       = ((((mom_metal3 AND mom_metal4) AND mom_metal5) NOT interact mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal6
mom35f2        = mom35tt2 NOT INTERACT (mom_v3 OR mom_v4 )
mom35reg2      = (EXTENTS (SIZE mom35f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom35reg       = mom35reg1 OR mom35reg2
mom35f         = mom35f1 OR mom35f2
momcap35      = (((mom35reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap35_3t   = (((mom35reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal35= ((mom_metal3 AND mom_metal4) AND mom_metal5) ENCLOSE mom_m3_m5_via

momcap35_3t_wips   = (momcap35_3t AND mom_gt) NOT INTERACT mom_wims
momcap35_3t_wops   = (momcap35_3t NOT mom_gt) NOT INTERACT mom_wims
momcap35_3t_wims   = (momcap35_3t NOT mom_gt) INTERACT mom_wims

mom35tt_rf2       = (((mom_metal3 AND mom_metal4) AND mom_metal5) NOT mom_metal1) NOT INTERACT mom_metal6
mom35f_rf2        = mom35tt_rf2 NOT INTERACT (mom_v3 OR mom_v4 )
mom35reg_rf2      = EXTENTS (SIZE mom35f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom35reg_rf       = mom35reg1 OR mom35reg_rf2
mom35f_rf         = mom35f1 OR mom35f_rf2
momcap35rf       = (((mom35reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap35rf_3t    = ((mom35reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal35rf = (((mom_metal3 AND mom_metal4) AND mom_metal5) INTERACT mom35reg_rf) ENCLOSE mom_m3_m5_via
mom_terminal35rf_m = ((((mom_metal3 AND mom_metal4) AND mom_metal5) INTERACT mom35reg_rf) ENCLOSE mom_m3_m5_via) NOT INTERACT mom_v2

momcap35rf_wips    = momcap35rf AND MOM_poly
momcap35rf_wops    = momcap35rf NOT MOM_poly
momcap35rf_3t_wips = ((momcap35rf_3t AND MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal35rf
momcap35rf_3t_wops = ((momcap35rf_3t NOT MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal35rf
momcap35rf_3t_wim  = ((momcap35rf_3t NOT MOM_poly) INTERACT mom_metal2) INTERACT mom_terminal35rf_m

mom16reg_1    = MOMDMY with text "momcap16"
mom16tt       = ((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6
mom16f        = mom16tt NOT INTERACT ((((mom_v1 OR mom_v2) OR mom_v3) OR mom_v4) OR mom_v5)
mom16reg1     = EXTENTS (SIZE (mom16f AND mom16reg_1) BY 0.1 INSIDE OF MOMDMY)
mom16reg2     = (EXTENTS (SIZE mom16f BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom16reg      = mom16reg1 OR mom16reg2
momcap16      = (((mom16reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap16_3t   = (((mom16reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap16rf    = (((mom16reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap16rf_3t = (((mom16reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal16
mom_terminal16= ((((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) INTERACT mom16reg) ENCLOSE mom_m1_m6_via

momcap16rf_wips    = momcap16rf AND MOM_poly
momcap16rf_wops    = momcap16rf NOT MOM_poly
momcap16rf_3t_wips = momcap16rf_3t AND MOM_poly
momcap16rf_3t_wops = momcap16rf_3t NOT MOM_poly
momcap16_3t_wips   = (momcap16_3t AND mom_gt) NOT INTERACT mom_wims
momcap16_3t_wops   = (momcap16_3t NOT mom_gt) NOT INTERACT mom_wims
momcap16_3t_wims   = (momcap16_3t NOT mom_gt) INTERACT mom_wims

mom26reg_1    = MOMDMY with text "momcap26"
mom26tt1       = (((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6
mom26f1        = mom26tt1 NOT INTERACT (((mom_v2 OR mom_v3) OR mom_v4) OR mom_v5)
mom26reg1      = EXTENTS (SIZE (mom26f1 AND mom26reg_1) BY 0.1 INSIDE OF MOMDMY)
mom26tt2       = ((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) NOT INTERACT mom_metal1
mom26f2        = mom26tt2 NOT INTERACT (((mom_v2 OR mom_v3) OR mom_v4) OR mom_v5)
mom26reg2      = (EXTENTS (SIZE mom26f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom26reg       = mom26reg1 OR mom26reg2
mom26f         = mom26f1 OR mom26f2
momcap26      = (((mom26reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap26_3t   = (((mom26reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal26= ((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) ENCLOSE mom_m2_m6_via

momcap26_3t_wips   = (momcap26_3t AND mom_gt) NOT INTERACT mom_wims
momcap26_3t_wops   = (momcap26_3t NOT mom_gt) NOT INTERACT mom_wims
momcap26_3t_wims   = (momcap26_3t NOT mom_gt) INTERACT mom_wims

//mom26tt_rf       = (((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6
//mom26f_rf        = mom26tt_rf NOT INTERACT (((mom_v2 OR mom_v3) OR mom_v4) OR mom_v5)
mom26reg_rf2      = EXTENTS (SIZE mom26f1 BY 0.1 INSIDE OF MOMDMY)
mom26reg_rf       = mom26reg1 OR mom26reg_rf2
mom26f_rf         = copy mom26f1 
momcap26rf       = (((mom26reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap26rf_3t    = ((mom26reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal26rf = (((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) INTERACT mom26reg_rf) ENCLOSE mom_m2_m6_via
mom_terminal26rf_m = ((((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) INTERACT mom26reg_rf) ENCLOSE mom_m2_m6_via) NOT INTERACT mom_v1

momcap26rf_wips    = momcap26rf AND MOM_poly
momcap26rf_wops    = momcap26rf NOT MOM_poly
momcap26rf_3t_wips = ((momcap26rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal26rf
momcap26rf_3t_wops = ((momcap26rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal26rf
momcap26rf_3t_wim  = ((momcap26rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal26rf_m

mom36reg_1    = MOMDMY with text "momcap36"
mom36tt1       = ((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6
mom36f1        = mom36tt1 NOT INTERACT ((mom_v3 OR mom_v4) OR mom_v5)
mom36reg1      = EXTENTS (SIZE (mom36f1 AND mom36reg_1) BY 0.1 INSIDE OF MOMDMY)
mom36tt2       = ((((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) NOT INTERACT  mom_metal1) NOT INTERACT mom_metal2
mom36f2        = mom36tt2 NOT INTERACT ((mom_v3 OR mom_v4) OR mom_v5)
mom36reg2      = (EXTENTS (SIZE mom36f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom36reg       = mom36reg1 OR mom36reg2
mom36f         = mom36f1 OR mom36f2
momcap36      = (((mom36reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap36_3t   = (((mom36reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal36= (((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) ENCLOSE mom_m3_m6_via

momcap36_3t_wips   = (momcap36_3t AND mom_gt) NOT INTERACT mom_wims
momcap36_3t_wops   = (momcap36_3t NOT mom_gt) NOT INTERACT mom_wims
momcap36_3t_wims   = (momcap36_3t NOT mom_gt) INTERACT mom_wims

mom36tt_rf2       = (((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) NOT INTERACT mom_metal1
mom36f_rf2        = mom36tt_rf2 NOT INTERACT ((mom_v3 OR mom_v4) OR mom_v5)
mom36reg_rf2      = EXTENTS (SIZE mom36f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom36reg_rf       = mom36reg1 OR mom36reg_rf2
mom36f_rf         = mom36f1 OR mom36f_rf2
momcap36rf       = (((mom36reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap36rf_3t    = (((mom36reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal36rf
mom_terminal36rf = ((((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) INTERACT mom36reg_rf) ENCLOSE mom_m3_m6_via
mom_terminal36rf_m = (((((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) INTERACT mom36reg_rf) ENCLOSE mom_m3_m6_via) NOT INTERACT mom_v2

momcap36rf_wips    = momcap36rf AND MOM_poly
momcap36rf_wops    = momcap36rf NOT MOM_poly
momcap36rf_3t_wips = ((momcap36rf_3t AND MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal36rf
momcap36rf_3t_wops = ((momcap36rf_3t NOT MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal36rf
momcap36rf_3t_wim  = ((momcap36rf_3t NOT MOM_poly) INTERACT mom_metal2) INTERACT mom_terminal36rf_m

mom46reg_1    = MOMDMY with text "momcap46"
mom46tt1       = (mom_metal4 AND mom_metal5) AND mom_metal6
mom46f1        = mom46tt1 NOT INTERACT (mom_v4 OR mom_v5)
mom46reg1      = EXTENTS (SIZE (mom46f1 AND mom46reg_1) BY 0.1 INSIDE OF MOMDMY)
mom46tt2       = ((((mom_metal4 AND mom_metal5) AND mom_metal6) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT interact mom_metal3
mom46f2        = mom46tt2 NOT INTERACT (mom_v4 OR mom_v5)
mom46reg2      = (EXTENTS (SIZE mom46f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom46reg       = mom46reg1 OR mom46reg2
mom46f         = mom46f1 OR mom46f2
momcap46      = (((mom46reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap46_3t   = (((mom46reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal46= ((mom_metal4 AND mom_metal5) AND mom_metal6) ENCLOSE mom_m4_m6_via

momcap46_3t_wips   = (momcap46_3t AND mom_gt) NOT INTERACT mom_wims
momcap46_3t_wops   = (momcap46_3t NOT mom_gt) NOT INTERACT mom_wims
momcap46_3t_wims   = (momcap46_3t NOT mom_gt) INTERACT mom_wims

mom46tt_rf2       = (((mom_metal4 AND mom_metal5) AND mom_metal6) NOT INTERACT  mom_metal1) NOT INTERACT  mom_metal2
mom46f_rf2        = mom46tt_rf2 NOT INTERACT (mom_v4 OR mom_v5)
mom46reg_rf2      = EXTENTS (SIZE mom46f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom46reg_rf       = mom46reg1 OR mom46reg_rf2
mom46f_rf         = mom46f1 OR mom46f_rf2
momcap46rf       = (((mom46reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap46rf_3t    = ((mom46reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal46rf = (((mom_metal4 AND mom_metal5) AND mom_metal6) INTERACT mom46reg_rf) ENCLOSE mom_m4_m6_via
mom_terminal46rf_m = ((((mom_metal4 AND mom_metal5) AND mom_metal6) INTERACT mom46reg_rf) ENCLOSE mom_m4_m6_via) NOT INTERACT mom_v3

momcap46rf_wips    = momcap46rf AND MOM_poly
momcap46rf_wops    = momcap46rf NOT MOM_poly
momcap46rf_3t_wips = ((momcap46rf_3t AND MOM_poly) NOT INTERACT mom_metal3) INTERACT mom_terminal46rf
momcap46rf_3t_wops = ((momcap46rf_3t NOT MOM_poly) NOT INTERACT mom_metal3) INTERACT mom_terminal46rf
momcap46rf_3t_wim  = ((momcap46rf_3t NOT MOM_poly) INTERACT mom_metal3) INTERACT mom_terminal46rf_m

#ENDIF
#ENDIF

#IFDEF TOPMETAL 9
#IFDEF TOP_METAL_NUM double

mom_metal1         = metal1a AND MOMDMY
mom_v1             = Via1 AND MOMDMY
V1                 = copy Via1
metal1b            = copy metal1a 
mom_metal2         = metal2a AND MOMDMY
mom_v2             = Via2 AND MOMDMY
V2                 = copy Via2 
metal2b            = copy metal2a 
mom_metal3         = metal3a AND MOMDMY
mom_v3             = Via3 AND MOMDMY
V3                 = copy Via3
metal3b            = copy metal3a
mom_metal4         = metal4a AND MOMDMY
metal4b            = copy metal4a 
mom_metal5         = metal5a AND MOMDMY
metal5b            = copy metal5a 
mom_v4             = Via4 AND MOMDMY
V4                 = copy Via4 
mom_metal6         = metal6a AND MOMDMY
metal6b            = copy metal6a 
mom_v5             = Via5 AND MOMDMY
V5                 = copy Via5 

mom_m1_m3_via = mom_v1 AND mom_v2
mom_m2_m4_via = mom_v2 AND mom_v3
mom_m1_m4_via = (mom_v1 AND mom_v2) AND mom_v3
mom_m1_m5_via = ((mom_v1 AND mom_v2) AND mom_v3) AND mom_v4
mom_m2_m5_via = (mom_v2 AND mom_v3) AND mom_v4
mom_m3_m5_via = mom_v3 AND mom_v4
mom_m1_m6_via = (((mom_v1 AND mom_v2) AND mom_v3) AND mom_v4) AND mom_v5
mom_m2_m6_via = ((mom_v2 AND mom_v3) AND mom_v4) AND mom_v5
mom_m3_m6_via = (mom_v3 AND mom_v4) AND mom_v5
mom_m4_m6_via =  mom_v4 AND mom_v5

mom_text = (((((((((((((mom12reg_1 or mom13reg_1) or mom14reg_1) or mom15reg_1) or mom16reg_1) or mom23reg_1) or mom24reg_1) or mom25reg_1) or mom26reg_1) or mom34reg_1) or mom35reg_1) or mom36reg_1) or mom45reg_1) or mom46reg_1) or mom56reg_1

mom12reg_1    = MOMDMY with text "momcap12"
mom12tt1       = mom_metal1 AND mom_metal2
mom12f1        = mom12tt1 NOT INTERACT mom_v1
mom12reg1      = EXTENTS (SIZE (mom12f1 AND mom12reg_1) BY 0.1 INSIDE OF MOMDMY)
mom12tt2       = ((((mom_metal1 AND mom_metal2) NOT INTERACT mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom12f2        = mom12tt2 NOT INTERACT mom_v1
mom12reg2      = (EXTENTS (SIZE mom12f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom12reg       = mom12reg1 OR mom12reg2
mom12f         = mom12f1 OR mom12f2
momcap12      = (((mom12reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap12_3t   = (((mom12reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap12rf    = (((mom12reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap12rf_3t = (((mom12reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal12
mom_terminal12= ((mom_metal1 AND mom_metal2) INTERACT mom12reg) ENCLOSE mom_v1

momcap12rf_wips    = momcap12rf AND MOM_poly
momcap12rf_wops    = momcap12rf NOT MOM_poly
momcap12rf_3t_wips = momcap12rf_3t AND MOM_poly
momcap12rf_3t_wops = momcap12rf_3t NOT MOM_poly
momcap12_3t_wips   = (momcap12_3t AND mom_gt) NOT INTERACT mom_wims
momcap12_3t_wops   = (momcap12_3t NOT mom_gt) NOT INTERACT mom_wims
momcap12_3t_wims   = (momcap12_3t NOT mom_gt) INTERACT mom_wims

mom23reg_1     = MOMDMY with text "momcap23"
mom23tt1       = mom_metal2 AND mom_metal3
mom23f1        = mom23tt1 NOT INTERACT mom_v2
mom23reg1      = EXTENTS (SIZE (mom23f1 AND mom23reg_1) BY 0.1 INSIDE OF MOMDMY)
mom23tt2       = ((((mom_metal2 AND mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal1) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom23f2        = mom23tt2 NOT INTERACT mom_v2
mom23reg2      = (EXTENTS (SIZE mom23f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom23reg       = mom23reg1 OR mom23reg2
mom23f         = mom23f1 OR mom23f2
momcap23      = (((mom23reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap23_3t   = (((mom23reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal23= (mom_metal2 AND mom_metal3) ENCLOSE mom_v2

momcap23_3t_wips   = (momcap23_3t AND mom_gt) NOT INTERACT mom_wims
momcap23_3t_wops   = (momcap23_3t NOT mom_gt) NOT INTERACT mom_wims
momcap23_3t_wims   = (momcap23_3t NOT mom_gt) INTERACT mom_wims

mom23tt_rf2       = (((mom_metal2 AND mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom23f_rf2        = mom23tt_rf2 NOT INTERACT mom_v2
mom23reg_rf2      = EXTENTS (SIZE mom23f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom23reg_rf       = mom23reg1 OR mom23reg_rf2
mom23f_rf         = mom23f1 OR mom23f_rf2
momcap23rf       = (((mom23reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap23rf_3t    = ((mom23reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal23rf = ((mom_metal2 AND mom_metal3) INTERACT mom23reg_rf) ENCLOSE mom_v2
mom_terminal23rf_m = (((mom_metal2 AND mom_metal3) INTERACT mom23reg_rf) ENCLOSE mom_v2) NOT INTERACT mom_v1

momcap23rf_wips    = momcap23rf AND MOM_poly
momcap23rf_wops    = momcap23rf NOT MOM_poly
momcap23rf_3t_wips = ((momcap23rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal23rf 
momcap23rf_3t_wops = ((momcap23rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal23rf
momcap23rf_3t_wim  = ((momcap23rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal23rf_m

mom34reg_1    = MOMDMY with text "momcap34"
mom34tt1       = mom_metal3 AND mom_metal4
mom34f1        = mom34tt1 NOT INTERACT mom_v3
mom34reg1      = EXTENTS (SIZE (mom34f1 AND mom34reg_1) BY 0.1 INSIDE OF MOMDMY)
mom34tt2       = ((((mom_metal3 AND mom_metal4) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom34f2        = mom34tt2 NOT INTERACT mom_v3
mom34reg2      = (EXTENTS (SIZE mom34f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom34reg       = mom34reg1 OR mom34reg2
mom34f         = mom34f1 OR mom34f2
momcap34      = (((mom34reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap34_3t   = (((mom34reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal34= (mom_metal3 AND mom_metal4) ENCLOSE mom_v3

momcap34_3t_wips   = (momcap34_3t AND mom_gt) NOT INTERACT mom_wims
momcap34_3t_wops   = (momcap34_3t NOT mom_gt) NOT INTERACT mom_wims
momcap34_3t_wims   = (momcap34_3t NOT mom_gt) INTERACT mom_wims

mom34tt_rf2       = (((mom_metal3 AND mom_metal4) NOT INTERACT mom_metal1) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom34f_rf2        = mom34tt_rf2 NOT INTERACT mom_v3
mom34reg_rf2      = EXTENTS (SIZE mom34f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom34reg_rf       = mom34reg1 OR mom34reg_rf2
mom34f_rf         = mom34f1 OR mom34f_rf2
momcap34rf       = (((mom34reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap34rf_3t    = ((mom34reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal34rf = (((mom_metal3 AND mom_metal4) INTERACT mom34reg_rf) ENCLOSE mom_v3) INTERACT momcap34rf_3t
mom_terminal34rf_m = (((mom_metal3 AND mom_metal4) INTERACT mom34reg_rf) ENCLOSE mom_v3) NOT INTERACT mom_v2

momcap34rf_wips    = momcap34rf AND MOM_poly
momcap34rf_wops    = momcap34rf NOT MOM_poly
momcap34rf_3t_wips = ((momcap34rf_3t AND MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal34rf
momcap34rf_3t_wops = ((momcap34rf_3t NOT MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal34rf
momcap34rf_3t_wim  = ((momcap34rf_3t NOT MOM_poly) INTERACT mom_metal2) INTERACT mom_terminal34rf_m

mom45reg_1    = MOMDMY with text "momcap45"
mom45tt1       = mom_metal4 AND mom_metal5
mom45f1        = mom45tt1 NOT INTERACT mom_v4
mom45reg1      = EXTENTS (SIZE (mom45f1 AND mom45reg_1) BY 0.1 INSIDE OF MOMDMY)
mom45tt2       = ((((mom_metal4 AND mom_metal5) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal3) NOT INTERACT mom_metal6
mom45f2        = mom45tt2 NOT INTERACT mom_v4
mom45reg2      = (EXTENTS (SIZE mom45f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom45reg       = mom45reg1 OR mom45reg2
mom45f         = mom45f1 OR mom45f2
momcap45      = (((mom45reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap45_3t   = (((mom45reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal45= (mom_metal4 AND mom_metal5) ENCLOSE mom_v4

momcap45_3t_wips   = (momcap45_3t AND mom_gt) NOT INTERACT mom_wims
momcap45_3t_wops   = (momcap45_3t NOT mom_gt) NOT INTERACT mom_wims
momcap45_3t_wims   = (momcap45_3t NOT mom_gt) INTERACT mom_wims

mom45tt_rf2       = (((mom_metal4 AND mom_metal5) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal6
mom45f_rf2        = mom45tt_rf2 NOT INTERACT mom_v4
mom45reg_rf2      = EXTENTS (SIZE mom45f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom45reg_rf       = mom45reg1 OR mom45reg_rf2
mom45f_rf         = mom45f1 OR mom45f_rf2
momcap45rf       = (((mom45reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap45rf_3t    = ((mom45reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal45rf = (((mom_metal4 AND mom_metal5) INTERACT mom45reg_rf) ENCLOSE mom_v4) INTERACT momcap45rf_3t
mom_terminal45rf_m = (((mom_metal4 AND mom_metal5) INTERACT mom45reg_rf) ENCLOSE mom_v4) NOT INTERACT mom_v3

momcap45rf_wips    = momcap45rf AND MOM_poly
momcap45rf_wops    = momcap45rf NOT MOM_poly
momcap45rf_3t_wips = ((momcap45rf_3t AND MOM_poly) NOT INTERACT mom_metal3) INTERACT mom_terminal45rf
momcap45rf_3t_wops = ((momcap45rf_3t NOT MOM_poly) NOT INTERACT mom_metal3) INTERACT mom_terminal45rf
momcap45rf_3t_wim  = ((momcap45rf_3t NOT MOM_poly) INTERACT mom_metal3) INTERACT mom_terminal45rf_m

mom56reg_1    = MOMDMY with text "momcap56"
mom56tt1       = mom_metal5 AND mom_metal6
mom56f1        = mom56tt1 NOT INTERACT mom_v5
mom56reg1      = EXTENTS (SIZE (mom56f1 AND mom56reg_1) BY 0.1 INSIDE OF MOMDMY)
mom56tt2       = ((((mom_metal5 AND mom_metal6) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal3) NOT INTERACT mom_metal4
mom56f2        = mom56tt2 NOT INTERACT mom_v5
mom56reg2      = (EXTENTS (SIZE mom56f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom56reg       = mom56reg1 OR mom56reg2
mom56f         = mom56f1 OR mom56f2
momcap56      = (((mom56reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap56_3t   = (((mom56reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal56= (mom_metal5 AND mom_metal6) ENCLOSE mom_v5

momcap56_3t_wips   = (momcap56_3t AND mom_gt) NOT INTERACT mom_wims
momcap56_3t_wops   = (momcap56_3t NOT mom_gt) NOT INTERACT mom_wims
momcap56_3t_wims   = (momcap56_3t NOT mom_gt) INTERACT mom_wims

mom56tt_rf2       = (((mom_metal5 AND mom_metal6) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal3
mom56f_rf2        = mom56tt_rf2 NOT INTERACT mom_v5
mom56reg_rf2      = EXTENTS (SIZE mom56f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom56reg_rf       = mom56reg1 OR mom56reg_rf2
mom56f_rf         = mom56f1 OR mom56f_rf2
momcap56rf       = (((mom56reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM 
momcap56rf_3t    = ((mom56reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal56rf = ((mom_metal5 AND mom_metal6) INTERACT mom56reg_rf) ENCLOSE mom_v5 
mom_terminal56rf_m = (((mom_metal5 AND mom_metal6) INTERACT mom56reg_rf) ENCLOSE mom_v5) NOT INTERACT mom_v4

momcap56rf_wips    = momcap56rf AND MOM_poly
momcap56rf_wops    = momcap56rf NOT MOM_poly
momcap56rf_3t_wips = ((momcap56rf_3t AND MOM_poly) NOT INTERACT mom_metal4) INTERACT mom_terminal56rf
momcap56rf_3t_wops = ((momcap56rf_3t NOT MOM_poly) NOT INTERACT mom_metal4) INTERACT mom_terminal56rf
momcap56rf_3t_wim  = ((momcap56rf_3t NOT MOM_poly) INTERACT mom_metal4) INTERACT mom_terminal56rf_m

mom13reg_1    = MOMDMY with text "momcap13"
mom13tt1       = (mom_metal1 AND mom_metal2) AND mom_metal3
mom13f1        = mom13tt1 NOT INTERACT (mom_v1 OR mom_v2)
mom13reg1      = EXTENTS (SIZE (mom13f1 AND mom13reg_1) BY 0.1 INSIDE OF MOMDMY)
mom13tt2       = ((((mom_metal1 AND mom_metal2) AND mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom13f2        = mom13tt2 NOT INTERACT (mom_v1 OR mom_v2)
mom13reg2      = (EXTENTS (SIZE mom13f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom13reg       = mom13reg1 OR mom13reg2
mom13f         = mom13f1 OR mom13f2
momcap13      = (((mom13reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap13_3t   = (((mom13reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap13rf    = (((mom13reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap13rf_3t = (((mom13reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal13
mom_terminal13= (((mom_metal1 AND mom_metal2) AND mom_metal3) INTERACT mom13reg) ENCLOSE mom_m1_m3_via

momcap13rf_wips    = momcap13rf AND MOM_poly
momcap13rf_wops    = momcap13rf NOT MOM_poly
momcap13rf_3t_wips = momcap13rf_3t AND MOM_poly
momcap13rf_3t_wops = momcap13rf_3t NOT MOM_poly
momcap13_3t_wips   = (momcap13_3t AND mom_gt) NOT INTERACT mom_wims
momcap13_3t_wops   = (momcap13_3t NOT mom_gt) NOT INTERACT mom_wims
momcap13_3t_wims   = (momcap13_3t NOT mom_gt) INTERACT mom_wims

mom24reg_1    = MOMDMY with text "momcap24"
mom24tt1       = (mom_metal2 AND mom_metal3) AND mom_metal4
mom24f1        = mom24tt1 NOT INTERACT (mom_v2 OR mom_v3)
mom24reg1      = EXTENTS (SIZE (mom24f1 AND mom24reg_1) BY 0.1 INSIDE OF MOMDMY)
mom24tt2       = ((((mom_metal2 AND mom_metal3) AND mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6) NOT INTERACT mom_metal1
mom24f2        = mom24tt2 NOT INTERACT (mom_v2 OR mom_v3)
mom24reg2      = (EXTENTS (SIZE mom24f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom24reg       = mom24reg1 OR mom24reg2
mom24f         = mom24f1 OR mom24f2
momcap24      = (((mom24reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap24_3t   = (((mom24reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal24= ((mom_metal2 AND mom_metal3) AND mom_metal4) ENCLOSE mom_m2_m4_via

momcap24_3t_wips   = (momcap24_3t AND mom_gt) NOT INTERACT mom_wims
momcap24_3t_wops   = (momcap24_3t NOT mom_gt) NOT INTERACT mom_wims
momcap24_3t_wims   = (momcap24_3t NOT mom_gt) INTERACT mom_wims

mom24tt_rf2       = (((mom_metal2 AND mom_metal3) AND mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom24f_rf2        = mom24tt_rf2 NOT INTERACT (mom_v2 OR mom_v3)
mom24reg_rf2      = EXTENTS (SIZE mom24f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom24reg_rf       = mom24reg1 OR mom24reg_rf2
mom24f_rf         = mom24f1 OR mom24f_rf2
momcap24rf       = (((mom24reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap24rf_3t    = ((mom24reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal24rf = (((mom_metal2 AND mom_metal3) AND mom_metal4) INTERACT mom24reg_rf) ENCLOSE mom_m2_m4_via
mom_terminal24rf_m = ((((mom_metal2 AND mom_metal3) AND mom_metal4) INTERACT mom24reg_rf) ENCLOSE mom_m2_m4_via) NOT INTERACT mom_v1

momcap24rf_wips    = momcap24rf AND MOM_poly
momcap24rf_wops    = momcap24rf NOT MOM_poly
momcap24rf_3t_wips = ((momcap24rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal24rf
momcap24rf_3t_wops = ((momcap24rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal24rf
momcap24rf_3t_wim  = ((momcap24rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal24rf_m

mom14reg_1    = MOMDMY with text "momcap14"
mom14tt1       = ((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4
mom14f1        = mom14tt1 NOT INTERACT ((mom_v1 OR mom_v2) OR mom_v3)
mom14reg1      = EXTENTS (SIZE (mom14f1 AND mom14reg_1) BY 0.1 INSIDE OF MOMDMY)
mom14tt2       = ((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT  mom_metal6
mom14f2        = mom14tt2 NOT INTERACT ((mom_v1 OR mom_v2) OR mom_v3)
mom14reg2      = (EXTENTS (SIZE mom14f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom14reg       = mom14reg1 OR mom14reg2
mom14f         = mom14f1 OR mom14f2
momcap14      = (((mom14reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap14_3t   = (((mom14reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap14rf    = (((mom14reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap14rf_3t = (((mom14reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal14
mom_terminal14= ((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) INTERACT mom14reg) ENCLOSE mom_m1_m4_via

momcap14rf_wips    = momcap14rf AND MOM_poly
momcap14rf_wops    = momcap14rf NOT MOM_poly
momcap14rf_3t_wips = momcap14rf_3t AND MOM_poly
momcap14rf_3t_wops = momcap14rf_3t NOT MOM_poly
momcap14_3t_wips   = (momcap14_3t AND mom_gt) NOT INTERACT mom_wims
momcap14_3t_wops   = (momcap14_3t NOT mom_gt) NOT INTERACT mom_wims
momcap14_3t_wims   = (momcap14_3t NOT mom_gt) INTERACT mom_wims

mom15reg_1    = MOMDMY with text "momcap15"
mom15tt1       = (((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5
mom15f1        = mom15tt1 NOT INTERACT (((mom_v1 OR mom_v2) OR mom_v3) OR mom_v4)
mom15reg1      = EXTENTS (SIZE (mom15f1 AND mom15reg_1) BY 0.1 INSIDE OF MOMDMY)
mom15tt2       = ((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5) NOT INTERACT  mom_metal6
mom15f2        = mom15tt2 NOT INTERACT (((mom_v1 OR mom_v2) OR mom_v3) OR mom_v4)
mom15reg2      = (EXTENTS (SIZE mom15f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom15reg       = mom15reg1 OR mom15reg2
mom15f         = mom15f1 OR mom15f2
momcap15      = (((mom15reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap15_3t   = (((mom15reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap15rf    = (((mom15reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap15rf_3t = (((mom15reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal15
mom_terminal15= (((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5) INTERACT mom15reg) ENCLOSE mom_m1_m5_via

momcap15rf_wips    = momcap15rf AND MOM_poly
momcap15rf_wops    = momcap15rf NOT MOM_poly
momcap15rf_3t_wips = momcap15rf_3t AND MOM_poly
momcap15rf_3t_wops = momcap15rf_3t NOT MOM_poly
momcap15_3t_wips   = (momcap15_3t AND mom_gt) NOT INTERACT mom_wims
momcap15_3t_wops   = (momcap15_3t NOT mom_gt) NOT INTERACT mom_wims
momcap15_3t_wims   = (momcap15_3t NOT mom_gt) INTERACT mom_wims

mom25reg_1    = MOMDMY with text "momcap25"
mom25tt1       = ((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5
mom25f1        = mom25tt1 NOT INTERACT ((mom_v2 OR mom_v3) OR mom_v4)
mom25reg1      = EXTENTS (SIZE (mom25f1 AND mom25reg_1) BY 0.1 INSIDE OF MOMDMY)
mom25tt2       = ((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5 ) NOT INTERACT mom_metal1) NOT INTERACT mom_metal6
mom25f2        = mom25tt2 NOT INTERACT ((mom_v2 OR mom_v3) OR mom_v4)
mom25reg2      = (EXTENTS (SIZE mom25f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom25reg       = mom25reg1 OR mom25reg2
mom25f         = mom25f1 OR mom25f2
momcap25      = (((mom25reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap25_3t   = (((mom25reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal25= (((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) ENCLOSE mom_m2_m5_via

momcap25_3t_wips   = (momcap25_3t AND mom_gt) NOT INTERACT mom_wims
momcap25_3t_wops   = (momcap25_3t NOT mom_gt) NOT INTERACT mom_wims
momcap25_3t_wims   = (momcap25_3t NOT mom_gt) INTERACT mom_wims

mom25tt_rf2       = (((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) NOT INTERACT mom_metal6
mom25f_rf2        = mom25tt_rf2 NOT INTERACT ((mom_v2 OR mom_v3) OR mom_v4)
mom25reg_rf2      = EXTENTS (SIZE mom25f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom25reg_rf       = mom25reg1 OR mom25reg_rf2
mom25f_rf         = mom25f1 OR mom25f_rf2
momcap25rf       = (((mom25reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap25rf_3t    = ((mom25reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal25rf = ((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) INTERACT mom25reg_rf) ENCLOSE mom_m2_m5_via
mom_terminal25rf_m = (((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) INTERACT mom25reg_rf) ENCLOSE mom_m2_m5_via) NOT INTERACT mom_v1

momcap25rf_wips    = momcap25rf AND MOM_poly
momcap25rf_wops    = momcap25rf NOT MOM_poly
momcap25rf_3t_wips = ((momcap25rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal25rf
momcap25rf_3t_wops = ((momcap25rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal25rf
momcap25rf_3t_wim  = ((momcap25rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal25rf_m

mom35reg_1    = MOMDMY with text "momcap35"
mom35tt1       = (mom_metal3 AND mom_metal4) AND mom_metal5
mom35f1        = mom35tt1 NOT INTERACT (mom_v3 OR mom_v4 )
mom35reg1      = EXTENTS (SIZE (mom35f1 AND mom35reg_1) BY 0.1 INSIDE OF MOMDMY)
mom35tt2       = ((((mom_metal3 AND mom_metal4) AND mom_metal5) NOT interact mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal6
mom35f2        = mom35tt2 NOT INTERACT (mom_v3 OR mom_v4 )
mom35reg2      = (EXTENTS (SIZE mom35f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom35reg       = mom35reg1 OR mom35reg2
mom35f         = mom35f1 OR mom35f2
momcap35      = (((mom35reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap35_3t   = (((mom35reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal35= ((mom_metal3 AND mom_metal4) AND mom_metal5) ENCLOSE mom_m3_m5_via

momcap35_3t_wips   = (momcap35_3t AND mom_gt) NOT INTERACT mom_wims
momcap35_3t_wops   = (momcap35_3t NOT mom_gt) NOT INTERACT mom_wims
momcap35_3t_wims   = (momcap35_3t NOT mom_gt) INTERACT mom_wims

mom35tt_rf2       = (((mom_metal3 AND mom_metal4) AND mom_metal5) NOT mom_metal1) NOT INTERACT mom_metal6
mom35f_rf2        = mom35tt_rf2 NOT INTERACT (mom_v3 OR mom_v4 )
mom35reg_rf2      = EXTENTS (SIZE mom35f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom35reg_rf       = mom35reg1 OR mom35reg_rf2
mom35f_rf         = mom35f1 OR mom35f_rf2
momcap35rf       = (((mom35reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap35rf_3t    = ((mom35reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal35rf = (((mom_metal3 AND mom_metal4) AND mom_metal5) INTERACT mom35reg_rf) ENCLOSE mom_m3_m5_via
mom_terminal35rf_m = ((((mom_metal3 AND mom_metal4) AND mom_metal5) INTERACT mom35reg_rf) ENCLOSE mom_m3_m5_via) NOT INTERACT mom_v2

momcap35rf_wips    = momcap35rf AND MOM_poly
momcap35rf_wops    = momcap35rf NOT MOM_poly
momcap35rf_3t_wips = ((momcap35rf_3t AND MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal35rf
momcap35rf_3t_wops = ((momcap35rf_3t NOT MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal35rf
momcap35rf_3t_wim  = ((momcap35rf_3t NOT MOM_poly) INTERACT mom_metal2) INTERACT mom_terminal35rf_m

mom16reg_1    = MOMDMY with text "momcap16"
mom16tt       = ((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6
mom16f        = mom16tt NOT INTERACT ((((mom_v1 OR mom_v2) OR mom_v3) OR mom_v4) OR mom_v5)
mom16reg1     = EXTENTS (SIZE (mom16f AND mom16reg_1) BY 0.1 INSIDE OF MOMDMY)
mom16reg2     = (EXTENTS (SIZE mom16f BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom16reg       = mom16reg1 OR mom16reg2
momcap16      = (((mom16reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap16_3t   = (((mom16reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap16rf    = (((mom16reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap16rf_3t = (((mom16reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal16
mom_terminal16= ((((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) INTERACT mom16reg) ENCLOSE mom_m1_m6_via

momcap16rf_wips    = momcap16rf AND MOM_poly
momcap16rf_wops    = momcap16rf NOT MOM_poly
momcap16rf_3t_wips = momcap16rf_3t AND MOM_poly
momcap16rf_3t_wops = momcap16rf_3t NOT MOM_poly
momcap16_3t_wips   = (momcap16_3t AND mom_gt) NOT INTERACT mom_wims
momcap16_3t_wops   = (momcap16_3t NOT mom_gt) NOT INTERACT mom_wims
momcap16_3t_wims   = (momcap16_3t NOT mom_gt) INTERACT mom_wims

mom26reg_1    = MOMDMY with text "momcap26"
mom26tt1       = (((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6
mom26f1        = mom26tt1 NOT INTERACT (((mom_v2 OR mom_v3) OR mom_v4) OR mom_v5)
mom26reg1      = EXTENTS (SIZE (mom26f1 AND mom26reg_1) BY 0.1 INSIDE OF MOMDMY)
mom26tt2       = ((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) NOT INTERACT mom_metal1
mom26f2        = mom26tt2 NOT INTERACT (((mom_v2 OR mom_v3) OR mom_v4) OR mom_v5)
mom26reg2      = (EXTENTS (SIZE mom26f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom26reg       = mom26reg1 OR mom26reg2
mom26f         = mom26f1 OR mom26f2
momcap26      = (((mom26reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap26_3t   = (((mom26reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal26= ((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) ENCLOSE mom_m2_m6_via

momcap26_3t_wips   = (momcap26_3t AND mom_gt) NOT INTERACT mom_wims
momcap26_3t_wops   = (momcap26_3t NOT mom_gt) NOT INTERACT mom_wims
momcap26_3t_wims   = (momcap26_3t NOT mom_gt) INTERACT mom_wims

//mom26tt_rf       = (((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6
//mom26f_rf        = mom26tt_rf NOT INTERACT (((mom_v2 OR mom_v3) OR mom_v4) OR mom_v5)
mom26reg_rf2      = EXTENTS (SIZE mom26f1 BY 0.1 INSIDE OF MOMDMY)
mom26reg_rf       = mom26reg1 OR mom26reg_rf2
mom26f_rf         = copy mom26f1 
momcap26rf       = (((mom26reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap26rf_3t    = ((mom26reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal26rf = (((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) INTERACT mom26reg_rf) ENCLOSE mom_m2_m6_via
mom_terminal26rf_m = ((((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) INTERACT mom26reg_rf) ENCLOSE mom_m2_m6_via) NOT INTERACT mom_v1

momcap26rf_wips    = momcap26rf AND MOM_poly
momcap26rf_wops    = momcap26rf NOT MOM_poly
momcap26rf_3t_wips = ((momcap26rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal26rf
momcap26rf_3t_wops = ((momcap26rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal26rf
momcap26rf_3t_wim  = ((momcap26rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal26rf_m

mom36reg_1    = MOMDMY with text "momcap36"
mom36tt1       = ((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6
mom36f1        = mom36tt1 NOT INTERACT ((mom_v3 OR mom_v4) OR mom_v5)
mom36reg1      = EXTENTS (SIZE (mom36f1 AND mom36reg_1) BY 0.1 INSIDE OF MOMDMY)
mom36tt2       = ((((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) NOT INTERACT  mom_metal1) NOT INTERACT mom_metal2
mom36f2        = mom36tt2 NOT INTERACT ((mom_v3 OR mom_v4) OR mom_v5)
mom36reg2      = (EXTENTS (SIZE mom36f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom36reg       = mom36reg1 OR mom36reg2
mom36f         = mom36f1 OR mom36f2
momcap36      = (((mom36reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap36_3t   = (((mom36reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal36= (((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) ENCLOSE mom_m3_m6_via

momcap36_3t_wips   = (momcap36_3t AND mom_gt) NOT INTERACT mom_wims
momcap36_3t_wops   = (momcap36_3t NOT mom_gt) NOT INTERACT mom_wims
momcap36_3t_wims   = (momcap36_3t NOT mom_gt) INTERACT mom_wims

mom36tt_rf2       = (((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) NOT INTERACT mom_metal1
mom36f_rf2        = mom36tt_rf2 NOT INTERACT ((mom_v3 OR mom_v4) OR mom_v5)
mom36reg_rf2      = EXTENTS (SIZE mom36f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom36reg_rf       = mom36reg1 OR mom36reg_rf2
mom36f_rf         = mom36f1 OR mom36f_rf2
momcap36rf       = (((mom36reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap36rf_3t    = (((mom36reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal36rf
mom_terminal36rf = ((((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) INTERACT mom36reg_rf) ENCLOSE mom_m3_m6_via
mom_terminal36rf_m = (((((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) INTERACT mom36reg_rf) ENCLOSE mom_m3_m6_via) NOT INTERACT mom_v2

momcap36rf_wips    = momcap36rf AND MOM_poly
momcap36rf_wops    = momcap36rf NOT MOM_poly
momcap36rf_3t_wips = ((momcap36rf_3t AND MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal36rf
momcap36rf_3t_wops = ((momcap36rf_3t NOT MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal36rf
momcap36rf_3t_wim  = ((momcap36rf_3t NOT MOM_poly) INTERACT mom_metal2) INTERACT mom_terminal36rf_m

mom46reg_1    = MOMDMY with text "momcap46"
mom46tt1       = (mom_metal4 AND mom_metal5) AND mom_metal6
mom46f1        = mom46tt1 NOT INTERACT (mom_v4 OR mom_v5)
mom46reg1      = EXTENTS (SIZE (mom46f1 AND mom46reg_1) BY 0.1 INSIDE OF MOMDMY)
mom46tt2       = ((((mom_metal4 AND mom_metal5) AND mom_metal6) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT interact mom_metal3
mom46f2        = mom46tt2 NOT INTERACT (mom_v4 OR mom_v5)
mom46reg2      = (EXTENTS (SIZE mom46f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom46reg       = mom46reg1 OR mom46reg2
mom46f         = mom46f1 OR mom46f2
momcap46      = (((mom46reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap46_3t   = (((mom46reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal46= ((mom_metal4 AND mom_metal5) AND mom_metal6) ENCLOSE mom_m4_m6_via

momcap46_3t_wips   = (momcap46_3t AND mom_gt) NOT INTERACT mom_wims
momcap46_3t_wops   = (momcap46_3t NOT mom_gt) NOT INTERACT mom_wims
momcap46_3t_wims   = (momcap46_3t NOT mom_gt) INTERACT mom_wims

mom46tt_rf2       = (((mom_metal4 AND mom_metal5) AND mom_metal6) NOT INTERACT  mom_metal1) NOT INTERACT  mom_metal2
mom46f_rf2        = mom46tt_rf2 NOT INTERACT (mom_v4 OR mom_v5)
mom46reg_rf2      = EXTENTS (SIZE mom46f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom46reg_rf       = mom46reg1 OR mom46reg_rf2
mom46f_rf         = mom46f1 OR mom46f_rf2
momcap46rf       = (((mom46reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap46rf_3t    = ((mom46reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal46rf = (((mom_metal4 AND mom_metal5) AND mom_metal6) INTERACT mom46reg_rf) ENCLOSE mom_m4_m6_via
mom_terminal46rf_m = ((((mom_metal4 AND mom_metal5) AND mom_metal6) INTERACT mom46reg_rf) ENCLOSE mom_m4_m6_via) NOT INTERACT mom_v3

momcap46rf_wips    = momcap46rf AND MOM_poly
momcap46rf_wops    = momcap46rf NOT MOM_poly
momcap46rf_3t_wips = ((momcap46rf_3t AND MOM_poly) NOT INTERACT mom_metal3) INTERACT mom_terminal46rf
momcap46rf_3t_wops = ((momcap46rf_3t NOT MOM_poly) NOT INTERACT mom_metal3) INTERACT mom_terminal46rf
momcap46rf_3t_wim  = ((momcap46rf_3t NOT MOM_poly) INTERACT mom_metal3) INTERACT mom_terminal46rf_m

#ENDIF
#ENDIF

#IFDEF TOPMETAL 10
#IFDEF TOP_METAL_NUM double

mom_metal1         = metal1a AND MOMDMY
mom_v1             = Via1 AND MOMDMY
V1                 = copy Via1 
metal1b            = copy metal1a 
mom_metal2         = metal2a AND MOMDMY
mom_v2             = Via2 AND MOMDMY
V2                 = copy Via2 
metal2b            = copy metal2a
mom_metal3         = metal3a AND MOMDMY
mom_v3             = Via3 AND MOMDMY
V3                 = copy Via3 
metal3b            = copy metal3a 
mom_metal4         = metal4a AND MOMDMY
metal4b            = copy metal4a 
mom_metal5         = metal5a AND MOMDMY
metal5b            = copy metal5a 
mom_v4             = Via4 AND MOMDMY
V4                 = copy Via4 
mom_metal6         = metal6a AND MOMDMY
metal6b            = copy metal6a 
mom_v5             = Via5 AND MOMDMY
V5                 = copy Via5 

mom_m1_m3_via = mom_v1 AND mom_v2
mom_m2_m4_via = mom_v2 AND mom_v3
mom_m1_m4_via = (mom_v1 AND mom_v2) AND mom_v3
mom_m1_m5_via = ((mom_v1 AND mom_v2) AND mom_v3) AND mom_v4
mom_m2_m5_via = (mom_v2 AND mom_v3) AND mom_v4
mom_m3_m5_via = mom_v3 AND mom_v4
mom_m1_m6_via = (((mom_v1 AND mom_v2) AND mom_v3) AND mom_v4) AND mom_v5
mom_m2_m6_via = ((mom_v2 AND mom_v3) AND mom_v4) AND mom_v5
mom_m3_m6_via = (mom_v3 AND mom_v4) AND mom_v5
mom_m4_m6_via =  mom_v4 AND mom_v5

mom_text = (((((((((((((mom12reg_1 or mom13reg_1) or mom14reg_1) or mom15reg_1) or mom16reg_1) or mom23reg_1) or mom24reg_1) or mom25reg_1) or mom26reg_1) or mom34reg_1) or mom35reg_1) or mom36reg_1) or mom45reg_1) or mom46reg_1) or mom56reg_1

mom12reg_1    = MOMDMY with text "momcap12"
mom12tt1       = mom_metal1 AND mom_metal2
mom12f1        = mom12tt1 NOT INTERACT mom_v1
mom12reg1      = EXTENTS (SIZE (mom12f1 AND mom12reg_1) BY 0.1 INSIDE OF MOMDMY)
mom12tt2       = ((((mom_metal1 AND mom_metal2) NOT INTERACT mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom12f2        = mom12tt2 NOT INTERACT mom_v1
mom12reg2      = (EXTENTS (SIZE mom12f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom12reg       = mom12reg1 OR mom12reg2
mom12f         = mom12f1 OR mom12f2
momcap12      = (((mom12reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap12_3t   = (((mom12reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap12rf    = (((mom12reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap12rf_3t = (((mom12reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal12
mom_terminal12= ((mom_metal1 AND mom_metal2) INTERACT mom12reg) ENCLOSE mom_v1

momcap12rf_wips    = momcap12rf AND MOM_poly
momcap12rf_wops    = momcap12rf NOT MOM_poly
momcap12rf_3t_wips = momcap12rf_3t AND MOM_poly
momcap12rf_3t_wops = momcap12rf_3t NOT MOM_poly
momcap12_3t_wips   = (momcap12_3t AND mom_gt) NOT INTERACT mom_wims
momcap12_3t_wops   = (momcap12_3t NOT mom_gt) NOT INTERACT mom_wims
momcap12_3t_wims   = (momcap12_3t NOT mom_gt) INTERACT mom_wims

mom23reg_1     = MOMDMY with text "momcap23"
mom23tt1       = mom_metal2 AND mom_metal3
mom23f1        = mom23tt1 NOT INTERACT mom_v2
mom23reg1      = EXTENTS (SIZE (mom23f1 AND mom23reg_1) BY 0.1 INSIDE OF MOMDMY)
mom23tt2       = ((((mom_metal2 AND mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal1) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom23f2        = mom23tt2 NOT INTERACT mom_v2
mom23reg2      = (EXTENTS (SIZE mom23f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom23reg       = mom23reg1 OR mom23reg2
mom23f         = mom23f1 OR mom23f2
momcap23      = (((mom23reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap23_3t   = (((mom23reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal23= (mom_metal2 AND mom_metal3) ENCLOSE mom_v2

momcap23_3t_wips   = (momcap23_3t AND mom_gt) NOT INTERACT mom_wims
momcap23_3t_wops   = (momcap23_3t NOT mom_gt) NOT INTERACT mom_wims
momcap23_3t_wims   = (momcap23_3t NOT mom_gt) INTERACT mom_wims

mom23tt_rf2       = (((mom_metal2 AND mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom23f_rf2        = mom23tt_rf2 NOT INTERACT mom_v2
mom23reg_rf2      = EXTENTS (SIZE mom23f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom23reg_rf       = mom23reg1 OR mom23reg_rf2
mom23f_rf         = mom23f1 OR mom23f_rf2
momcap23rf       = (((mom23reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap23rf_3t    = ((mom23reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal23rf = ((mom_metal2 AND mom_metal3) INTERACT mom23reg_rf) ENCLOSE mom_v2
mom_terminal23rf_m = (((mom_metal2 AND mom_metal3) INTERACT mom23reg_rf) ENCLOSE mom_v2) NOT INTERACT mom_v1

momcap23rf_wips    = momcap23rf AND MOM_poly
momcap23rf_wops    = momcap23rf NOT MOM_poly
momcap23rf_3t_wips = ((momcap23rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal23rf 
momcap23rf_3t_wops = ((momcap23rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal23rf
momcap23rf_3t_wim  = ((momcap23rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal23rf_m

mom34reg_1    = MOMDMY with text "momcap34"
mom34tt1       = mom_metal3 AND mom_metal4
mom34f1        = mom34tt1 NOT INTERACT mom_v3
mom34reg1      = EXTENTS (SIZE (mom34f1 AND mom34reg_1) BY 0.1 INSIDE OF MOMDMY)
mom34tt2       = ((((mom_metal3 AND mom_metal4) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom34f2        = mom34tt2 NOT INTERACT mom_v3
mom34reg2      = (EXTENTS (SIZE mom34f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom34reg       = mom34reg1 OR mom34reg2
mom34f         = mom34f1 OR mom34f2
momcap34      = (((mom34reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap34_3t   = (((mom34reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal34= (mom_metal3 AND mom_metal4) ENCLOSE mom_v3

momcap34_3t_wips   = (momcap34_3t AND mom_gt) NOT INTERACT mom_wims
momcap34_3t_wops   = (momcap34_3t NOT mom_gt) NOT INTERACT mom_wims
momcap34_3t_wims   = (momcap34_3t NOT mom_gt) INTERACT mom_wims

mom34tt_rf2       = (((mom_metal3 AND mom_metal4) NOT INTERACT mom_metal1) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom34f_rf2        = mom34tt_rf2 NOT INTERACT mom_v3
mom34reg_rf2      = EXTENTS (SIZE mom34f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom34reg_rf       = mom34reg1 OR mom34reg_rf2
mom34f_rf         = mom34f1 OR mom34f_rf2
momcap34rf       = (((mom34reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap34rf_3t    = ((mom34reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal34rf = (((mom_metal3 AND mom_metal4) INTERACT mom34reg_rf) ENCLOSE mom_v3) INTERACT momcap34rf_3t
mom_terminal34rf_m = (((mom_metal3 AND mom_metal4) INTERACT mom34reg_rf) ENCLOSE mom_v3) NOT INTERACT mom_v2

momcap34rf_wips    = momcap34rf AND MOM_poly
momcap34rf_wops    = momcap34rf NOT MOM_poly
momcap34rf_3t_wips = ((momcap34rf_3t AND MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal34rf
momcap34rf_3t_wops = ((momcap34rf_3t NOT MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal34rf
momcap34rf_3t_wim  = ((momcap34rf_3t NOT MOM_poly) INTERACT mom_metal2) INTERACT mom_terminal34rf_m

mom45reg_1    = MOMDMY with text "momcap45"
mom45tt1       = mom_metal4 AND mom_metal5
mom45f1        = mom45tt1 NOT INTERACT mom_v4
mom45reg1      = EXTENTS (SIZE (mom45f1 AND mom45reg_1) BY 0.1 INSIDE OF MOMDMY)
mom45tt2       = ((((mom_metal4 AND mom_metal5) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal3) NOT INTERACT mom_metal6
mom45f2        = mom45tt2 NOT INTERACT mom_v4
mom45reg2      = (EXTENTS (SIZE mom45f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom45reg       = mom45reg1 OR mom45reg2
mom45f         = mom45f1 OR mom45f2
momcap45      = (((mom45reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap45_3t   = (((mom45reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal45= (mom_metal4 AND mom_metal5) ENCLOSE mom_v4

momcap45_3t_wips   = (momcap45_3t AND mom_gt) NOT INTERACT mom_wims
momcap45_3t_wops   = (momcap45_3t NOT mom_gt) NOT INTERACT mom_wims
momcap45_3t_wims   = (momcap45_3t NOT mom_gt) INTERACT mom_wims

mom45tt_rf2       = (((mom_metal4 AND mom_metal5) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal6
mom45f_rf2        = mom45tt_rf2 NOT INTERACT mom_v4
mom45reg_rf2      = EXTENTS (SIZE mom45f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom45reg_rf       = mom45reg1 OR mom45reg_rf2
mom45f_rf         = mom45f1 OR mom45f_rf2
momcap45rf       = (((mom45reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap45rf_3t    = ((mom45reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal45rf = (((mom_metal4 AND mom_metal5) INTERACT mom45reg_rf) ENCLOSE mom_v4) INTERACT momcap45rf_3t
mom_terminal45rf_m = (((mom_metal4 AND mom_metal5) INTERACT mom45reg_rf) ENCLOSE mom_v4) NOT INTERACT mom_v3

momcap45rf_wips    = momcap45rf AND MOM_poly
momcap45rf_wops    = momcap45rf NOT MOM_poly
momcap45rf_3t_wips = ((momcap45rf_3t AND MOM_poly) NOT INTERACT mom_metal3) INTERACT mom_terminal45rf
momcap45rf_3t_wops = ((momcap45rf_3t NOT MOM_poly) NOT INTERACT mom_metal3) INTERACT mom_terminal45rf
momcap45rf_3t_wim  = ((momcap45rf_3t NOT MOM_poly) INTERACT mom_metal3) INTERACT mom_terminal45rf_m

mom56reg_1    = MOMDMY with text "momcap56"
mom56tt1       = mom_metal5 AND mom_metal6
mom56f1        = mom56tt1 NOT INTERACT mom_v5
mom56reg1      = EXTENTS (SIZE (mom56f1 AND mom56reg_1) BY 0.1 INSIDE OF MOMDMY)
mom56tt2       = ((((mom_metal5 AND mom_metal6) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal3) NOT INTERACT mom_metal4
mom56f2        = mom56tt2 NOT INTERACT mom_v5
mom56reg2      = (EXTENTS (SIZE mom56f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom56reg       = mom56reg1 OR mom56reg2
mom56f         = mom56f1 OR mom56f2
momcap56      = (((mom56reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap56_3t   = (((mom56reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal56= (mom_metal5 AND mom_metal6) ENCLOSE mom_v5

momcap56_3t_wips   = (momcap56_3t AND mom_gt) NOT INTERACT mom_wims
momcap56_3t_wops   = (momcap56_3t NOT mom_gt) NOT INTERACT mom_wims
momcap56_3t_wims   = (momcap56_3t NOT mom_gt) INTERACT mom_wims

mom56tt_rf2       = (((mom_metal5 AND mom_metal6) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal3
mom56f_rf2        = mom56tt_rf2 NOT INTERACT mom_v5
mom56reg_rf2      = EXTENTS (SIZE mom56f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom56reg_rf       = mom56reg1 OR mom56reg_rf2
mom56f_rf         = mom56f1 OR mom56f_rf2
momcap56rf       = (((mom56reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM 
momcap56rf_3t    = ((mom56reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal56rf = ((mom_metal5 AND mom_metal6) INTERACT mom56reg_rf) ENCLOSE mom_v5 
mom_terminal56rf_m = (((mom_metal5 AND mom_metal6) INTERACT mom56reg_rf) ENCLOSE mom_v5) NOT INTERACT mom_v4

momcap56rf_wips    = momcap56rf AND MOM_poly
momcap56rf_wops    = momcap56rf NOT MOM_poly
momcap56rf_3t_wips = ((momcap56rf_3t AND MOM_poly) NOT INTERACT mom_metal4) INTERACT mom_terminal56rf
momcap56rf_3t_wops = ((momcap56rf_3t NOT MOM_poly) NOT INTERACT mom_metal4) INTERACT mom_terminal56rf
momcap56rf_3t_wim  = ((momcap56rf_3t NOT MOM_poly) INTERACT mom_metal4) INTERACT mom_terminal56rf_m

mom13reg_1    = MOMDMY with text "momcap13"
mom13tt1       = (mom_metal1 AND mom_metal2) AND mom_metal3
mom13f1        = mom13tt1 NOT INTERACT (mom_v1 OR mom_v2)
mom13reg1      = EXTENTS (SIZE (mom13f1 AND mom13reg_1) BY 0.1 INSIDE OF MOMDMY)
mom13tt2       = ((((mom_metal1 AND mom_metal2) AND mom_metal3) NOT INTERACT mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom13f2        = mom13tt2 NOT INTERACT (mom_v1 OR mom_v2)
mom13reg2      = (EXTENTS (SIZE mom13f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom13reg       = mom13reg1 OR mom13reg2
mom13f         = mom13f1 OR mom13f2
momcap13      = (((mom13reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap13_3t   = (((mom13reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap13rf    = (((mom13reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap13rf_3t = (((mom13reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal13
mom_terminal13= (((mom_metal1 AND mom_metal2) AND mom_metal3) INTERACT mom13reg) ENCLOSE mom_m1_m3_via

momcap13rf_wips    = momcap13rf AND MOM_poly
momcap13rf_wops    = momcap13rf NOT MOM_poly
momcap13rf_3t_wips = momcap13rf_3t AND MOM_poly
momcap13rf_3t_wops = momcap13rf_3t NOT MOM_poly
momcap13_3t_wips   = (momcap13_3t AND mom_gt) NOT INTERACT mom_wims
momcap13_3t_wops   = (momcap13_3t NOT mom_gt) NOT INTERACT mom_wims
momcap13_3t_wims   = (momcap13_3t NOT mom_gt) INTERACT mom_wims

mom24reg_1    = MOMDMY with text "momcap24"
mom24tt1       = (mom_metal2 AND mom_metal3) AND mom_metal4
mom24f1        = mom24tt1 NOT INTERACT (mom_v2 OR mom_v3)
mom24reg1      = EXTENTS (SIZE (mom24f1 AND mom24reg_1) BY 0.1 INSIDE OF MOMDMY)
mom24tt2       = ((((mom_metal2 AND mom_metal3) AND mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6) NOT INTERACT mom_metal1
mom24f2        = mom24tt2 NOT INTERACT (mom_v2 OR mom_v3)
mom24reg2      = (EXTENTS (SIZE mom24f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom24reg       = mom24reg1 OR mom24reg2
mom24f         = mom24f1 OR mom24f2
momcap24      = (((mom24reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap24_3t   = (((mom24reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal24= ((mom_metal2 AND mom_metal3) AND mom_metal4) ENCLOSE mom_m2_m4_via

momcap24_3t_wips   = (momcap24_3t AND mom_gt) NOT INTERACT mom_wims
momcap24_3t_wops   = (momcap24_3t NOT mom_gt) NOT INTERACT mom_wims
momcap24_3t_wims   = (momcap24_3t NOT mom_gt) INTERACT mom_wims

mom24tt_rf2       = (((mom_metal2 AND mom_metal3) AND mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT mom_metal6
mom24f_rf2        = mom24tt_rf2 NOT INTERACT (mom_v2 OR mom_v3)
mom24reg_rf2      = EXTENTS (SIZE mom24f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom24reg_rf       = mom24reg1 OR mom24reg_rf2
mom24f_rf         = mom24f1 OR mom24f_rf2
momcap24rf       = (((mom24reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap24rf_3t    = ((mom24reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal24rf = (((mom_metal2 AND mom_metal3) AND mom_metal4) INTERACT mom24reg_rf) ENCLOSE mom_m2_m4_via
mom_terminal24rf_m = ((((mom_metal2 AND mom_metal3) AND mom_metal4) INTERACT mom24reg_rf) ENCLOSE mom_m2_m4_via) NOT INTERACT mom_v1

momcap24rf_wips    = momcap24rf AND MOM_poly
momcap24rf_wops    = momcap24rf NOT MOM_poly
momcap24rf_3t_wips = ((momcap24rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal24rf
momcap24rf_3t_wops = ((momcap24rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal24rf
momcap24rf_3t_wim  = ((momcap24rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal24rf_m

mom14reg_1    = MOMDMY with text "momcap14"
mom14tt1       = ((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4
mom14f1        = mom14tt1 NOT INTERACT ((mom_v1 OR mom_v2) OR mom_v3)
mom14reg1      = EXTENTS (SIZE (mom14f1 AND mom14reg_1) BY 0.1 INSIDE OF MOMDMY)
mom14tt2       = ((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) NOT INTERACT mom_metal5) NOT INTERACT  mom_metal6
mom14f2        = mom14tt2 NOT INTERACT ((mom_v1 OR mom_v2) OR mom_v3)
mom14reg2      = (EXTENTS (SIZE mom14f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom14reg       = mom14reg1 OR mom14reg2
mom14f         = mom14f1 OR mom14f2
momcap14      = (((mom14reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap14_3t   = (((mom14reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap14rf    = (((mom14reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap14rf_3t = (((mom14reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal14
mom_terminal14= ((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) INTERACT mom14reg) ENCLOSE mom_m1_m4_via

momcap14rf_wips    = momcap14rf AND MOM_poly
momcap14rf_wops    = momcap14rf NOT MOM_poly
momcap14rf_3t_wips = momcap14rf_3t AND MOM_poly
momcap14rf_3t_wops = momcap14rf_3t NOT MOM_poly
momcap14_3t_wips   = (momcap14_3t AND mom_gt) NOT INTERACT mom_wims
momcap14_3t_wops   = (momcap14_3t NOT mom_gt) NOT INTERACT mom_wims
momcap14_3t_wims   = (momcap14_3t NOT mom_gt) INTERACT mom_wims

mom15reg_1    = MOMDMY with text "momcap15"
mom15tt1       = (((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5
mom15f1        = mom15tt1 NOT INTERACT (((mom_v1 OR mom_v2) OR mom_v3) OR mom_v4)
mom15reg1      = EXTENTS (SIZE (mom15f1 AND mom15reg_1) BY 0.1 INSIDE OF MOMDMY)
mom15tt2       = ((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5) NOT INTERACT  mom_metal6
mom15f2        = mom15tt2 NOT INTERACT (((mom_v1 OR mom_v2) OR mom_v3) OR mom_v4)
mom15reg2      = (EXTENTS (SIZE mom15f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom15reg       = mom15reg1 OR mom15reg2
mom15f         = mom15f1 OR mom15f2
momcap15      = (((mom15reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap15_3t   = (((mom15reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap15rf    = (((mom15reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap15rf_3t = (((mom15reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal15
mom_terminal15= (((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5) INTERACT mom15reg) ENCLOSE mom_m1_m5_via

momcap15rf_wips    = momcap15rf AND MOM_poly
momcap15rf_wops    = momcap15rf NOT MOM_poly
momcap15rf_3t_wips = momcap15rf_3t AND MOM_poly
momcap15rf_3t_wops = momcap15rf_3t NOT MOM_poly
momcap15_3t_wips   = (momcap15_3t AND mom_gt) NOT INTERACT mom_wims
momcap15_3t_wops   = (momcap15_3t NOT mom_gt) NOT INTERACT mom_wims
momcap15_3t_wims   = (momcap15_3t NOT mom_gt) INTERACT mom_wims

mom25reg_1    = MOMDMY with text "momcap25"
mom25tt1       = ((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5
mom25f1        = mom25tt1 NOT INTERACT ((mom_v2 OR mom_v3) OR mom_v4)
mom25reg1      = EXTENTS (SIZE (mom25f1 AND mom25reg_1) BY 0.1 INSIDE OF MOMDMY)
mom25tt2       = ((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5 ) NOT INTERACT mom_metal1) NOT INTERACT mom_metal6
mom25f2        = mom25tt2 NOT INTERACT ((mom_v2 OR mom_v3) OR mom_v4)
mom25reg2      = (EXTENTS (SIZE mom25f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom25reg       = mom25reg1 OR mom25reg2
mom25f         = mom25f1 OR mom25f2
momcap25      = (((mom25reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap25_3t   = (((mom25reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal25= (((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) ENCLOSE mom_m2_m5_via

momcap25_3t_wips   = (momcap25_3t AND mom_gt) NOT INTERACT mom_wims
momcap25_3t_wops   = (momcap25_3t NOT mom_gt) NOT INTERACT mom_wims
momcap25_3t_wims   = (momcap25_3t NOT mom_gt) INTERACT mom_wims

mom25tt_rf2       = (((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) NOT INTERACT mom_metal6
mom25f_rf2        = mom25tt_rf2 NOT INTERACT ((mom_v2 OR mom_v3) OR mom_v4)
mom25reg_rf2      = EXTENTS (SIZE mom25f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom25reg_rf       = mom25reg1 OR mom25reg_rf2
mom25f_rf         = mom25f1 OR mom25f_rf2
momcap25rf       = (((mom25reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap25rf_3t    = ((mom25reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal25rf = ((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) INTERACT mom25reg_rf) ENCLOSE mom_m2_m5_via
mom_terminal25rf_m = (((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) INTERACT mom25reg_rf) ENCLOSE mom_m2_m5_via) NOT INTERACT mom_v1

momcap25rf_wips    = momcap25rf AND MOM_poly
momcap25rf_wops    = momcap25rf NOT MOM_poly
momcap25rf_3t_wips = ((momcap25rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal25rf
momcap25rf_3t_wops = ((momcap25rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal25rf
momcap25rf_3t_wim  = ((momcap25rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal25rf_m

mom35reg_1    = MOMDMY with text "momcap35"
mom35tt1       = (mom_metal3 AND mom_metal4) AND mom_metal5
mom35f1        = mom35tt1 NOT INTERACT (mom_v3 OR mom_v4 )
mom35reg1      = EXTENTS (SIZE (mom35f1 AND mom35reg_1) BY 0.1 INSIDE OF MOMDMY)
mom35tt2       = ((((mom_metal3 AND mom_metal4) AND mom_metal5) NOT interact mom_metal1) NOT INTERACT mom_metal2) NOT INTERACT mom_metal6
mom35f2        = mom35tt2 NOT INTERACT (mom_v3 OR mom_v4)
mom35reg2      = (EXTENTS (SIZE mom35f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom35reg       = mom35reg1 OR mom35reg2
mom35f         = mom35f1 OR mom35f2
momcap35      = (((mom35reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap35_3t   = (((mom35reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal35= ((mom_metal3 AND mom_metal4) AND mom_metal5) ENCLOSE mom_m3_m5_via

momcap35_3t_wips   = (momcap35_3t AND mom_gt) NOT INTERACT mom_wims
momcap35_3t_wops   = (momcap35_3t NOT mom_gt) NOT INTERACT mom_wims
momcap35_3t_wims   = (momcap35_3t NOT mom_gt) INTERACT mom_wims

mom35tt_rf2       = (((mom_metal3 AND mom_metal4) AND mom_metal5) NOT mom_metal1) NOT INTERACT mom_metal6
mom35f_rf2        = mom35tt_rf2 NOT INTERACT (mom_v3 OR mom_v4 )
mom35reg_rf2      = EXTENTS (SIZE mom35f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom35reg_rf       = mom35reg1 OR mom35reg_rf2
mom35f_rf         = mom35f1 OR mom35f_rf2
momcap35rf       = (((mom35reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap35rf_3t    = ((mom35reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal35rf = (((mom_metal3 AND mom_metal4) AND mom_metal5) INTERACT mom35reg_rf) ENCLOSE mom_m3_m5_via
mom_terminal35rf_m = ((((mom_metal3 AND mom_metal4) AND mom_metal5) INTERACT mom35reg_rf) ENCLOSE mom_m3_m5_via) NOT INTERACT mom_v2

momcap35rf_wips    = momcap35rf AND MOM_poly
momcap35rf_wops    = momcap35rf NOT MOM_poly
momcap35rf_3t_wips = ((momcap35rf_3t AND MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal35rf
momcap35rf_3t_wops = ((momcap35rf_3t NOT MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal35rf
momcap35rf_3t_wim  = ((momcap35rf_3t NOT MOM_poly) INTERACT mom_metal2) INTERACT mom_terminal35rf_m

mom16reg_1    = MOMDMY with text "momcap16"
mom16tt       = ((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6
mom16f        = mom16tt NOT INTERACT ((((mom_v1 OR mom_v2) OR mom_v3) OR mom_v4) OR mom_v5)
mom16reg1     = EXTENTS (SIZE (mom16f AND mom16reg_1) BY 0.1 INSIDE OF MOMDMY)
mom16reg2     = (EXTENTS (SIZE mom16f BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom16reg       = mom16reg1 OR mom16reg2
momcap16      = (((mom16reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap16_3t   = (((mom16reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
momcap16rf    = (((mom16reg AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap16rf_3t = (((mom16reg AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal16
mom_terminal16= ((((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) INTERACT mom16reg) ENCLOSE mom_m1_m6_via

momcap16rf_wips    = momcap16rf AND MOM_poly
momcap16rf_wops    = momcap16rf NOT MOM_poly
momcap16rf_3t_wips = momcap16rf_3t AND MOM_poly
momcap16rf_3t_wops = momcap16rf_3t NOT MOM_poly
momcap16_3t_wips   = (momcap16_3t AND mom_gt) NOT INTERACT mom_wims
momcap16_3t_wops   = (momcap16_3t NOT mom_gt) NOT INTERACT mom_wims
momcap16_3t_wims   = (momcap16_3t NOT mom_gt) INTERACT mom_wims

mom26reg_1    = MOMDMY with text "momcap26"
mom26tt1       = (((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6
mom26f1        = mom26tt1 NOT INTERACT (((mom_v2 OR mom_v3) OR mom_v4) OR mom_v5)
mom26reg1      = EXTENTS (SIZE (mom26f1 AND mom26reg_1) BY 0.1 INSIDE OF MOMDMY)
mom26tt2       = ((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) NOT INTERACT mom_metal1
mom26f2        = mom26tt2 NOT INTERACT (((mom_v2 OR mom_v3) OR mom_v4) OR mom_v5)
mom26reg2      = (EXTENTS (SIZE mom26f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom26reg       = mom26reg1 OR mom26reg2
mom26f         = mom26f1 OR mom26f2
momcap26      = (((mom26reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap26_3t   = (((mom26reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal26= ((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) ENCLOSE mom_m2_m6_via

momcap26_3t_wips   = (momcap26_3t AND mom_gt) NOT INTERACT mom_wims
momcap26_3t_wops   = (momcap26_3t NOT mom_gt) NOT INTERACT mom_wims
momcap26_3t_wims   = (momcap26_3t NOT mom_gt) INTERACT mom_wims

//mom26tt_rf       = (((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6
//mom26f_rf        = mom26tt_rf NOT INTERACT (((mom_v2 OR mom_v3) OR mom_v4) OR mom_v5)
mom26reg_rf2      = EXTENTS (SIZE mom26f1 BY 0.1 INSIDE OF MOMDMY)
mom26reg_rf       = mom26reg1 OR mom26reg_rf2
mom26f_rf         = copy mom26f1 
momcap26rf       = (((mom26reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap26rf_3t    = ((mom26reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal26rf = (((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) INTERACT mom26reg_rf) ENCLOSE mom_m2_m6_via
mom_terminal26rf_m = ((((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) INTERACT mom26reg_rf) ENCLOSE mom_m2_m6_via) NOT INTERACT mom_v1

momcap26rf_wips    = momcap26rf AND MOM_poly
momcap26rf_wops    = momcap26rf NOT MOM_poly
momcap26rf_3t_wips = ((momcap26rf_3t AND MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal26rf
momcap26rf_3t_wops = ((momcap26rf_3t NOT MOM_poly) NOT INTERACT mom_metal1) INTERACT mom_terminal26rf
momcap26rf_3t_wim  = ((momcap26rf_3t NOT MOM_poly) INTERACT mom_metal1) INTERACT mom_terminal26rf_m

mom36reg_1    = MOMDMY with text "momcap36"
mom36tt1       = ((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6
mom36f1        = mom36tt1 NOT INTERACT ((mom_v3 OR mom_v4) OR mom_v5)
mom36reg1      = EXTENTS (SIZE (mom36f1 AND mom36reg_1) BY 0.1 INSIDE OF MOMDMY)
mom36tt2       = ((((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) NOT INTERACT  mom_metal1) NOT INTERACT mom_metal2
mom36f2        = mom36tt2 NOT INTERACT ((mom_v3 OR mom_v4) OR mom_v5)
mom36reg2      = (EXTENTS (SIZE mom36f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom36reg       = mom36reg1 OR mom36reg2
mom36f         = mom36f1 OR mom36f2
momcap36      = (((mom36reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap36_3t   = (((mom36reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal36= (((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) ENCLOSE mom_m3_m6_via

momcap36_3t_wips   = (momcap36_3t AND mom_gt) NOT INTERACT mom_wims
momcap36_3t_wops   = (momcap36_3t NOT mom_gt) NOT INTERACT mom_wims
momcap36_3t_wims   = (momcap36_3t NOT mom_gt) INTERACT mom_wims

mom36tt_rf2       = (((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) NOT INTERACT mom_metal1
mom36f_rf2        = mom36tt_rf2 NOT INTERACT ((mom_v3 OR mom_v4) OR mom_v5)
mom36reg_rf2      = EXTENTS (SIZE mom36f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom36reg_rf       = mom36reg1 OR mom36reg_rf2
mom36f_rf         = mom36f1 OR mom36f_rf2
momcap36rf       = (((mom36reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap36rf_3t    = (((mom36reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM) INTERACT mom_terminal36rf
mom_terminal36rf = ((((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) INTERACT mom36reg_rf) ENCLOSE mom_m3_m6_via
mom_terminal36rf_m = (((((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) INTERACT mom36reg_rf) ENCLOSE mom_m3_m6_via) NOT INTERACT mom_v2

momcap36rf_wips    = momcap36rf AND MOM_poly
momcap36rf_wops    = momcap36rf NOT MOM_poly
momcap36rf_3t_wips = ((momcap36rf_3t AND MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal36rf
momcap36rf_3t_wops = ((momcap36rf_3t NOT MOM_poly) NOT INTERACT mom_metal2) INTERACT mom_terminal36rf
momcap36rf_3t_wim  = ((momcap36rf_3t NOT MOM_poly) INTERACT mom_metal2) INTERACT mom_terminal36rf_m

mom46reg_1    = MOMDMY with text "momcap46"
mom46tt1       = (mom_metal4 AND mom_metal5) AND mom_metal6
mom46f1        = mom46tt1 NOT INTERACT (mom_v4 OR mom_v5)
mom46reg1      = EXTENTS (SIZE (mom46f1 AND mom46reg_1) BY 0.1 INSIDE OF MOMDMY)
mom46tt2       = ((((mom_metal4 AND mom_metal5) AND mom_metal6) NOT INTERACT mom_metal1) NOT INTERACT mom_metal2) NOT interact mom_metal3
mom46f2        = mom46tt2 NOT INTERACT (mom_v4 OR mom_v5)
mom46reg2      = (EXTENTS (SIZE mom46f2 BY 0.1 INSIDE OF MOMDMY)) not interact mom_text
mom46reg       = mom46reg1 OR mom46reg2
mom46f         = mom46f1 OR mom46f2
momcap46      = (((mom46reg NOT RFDEV) NOT RF3T) AND MOMDMY) NOT MOMMES
momcap46_3t   = (((mom46reg NOT RFDEV) AND RF3T) AND MOMDMY) NOT MOMMES
mom_terminal46= ((mom_metal4 AND mom_metal5) AND mom_metal6) ENCLOSE mom_m4_m6_via

momcap46_3t_wips   = (momcap46_3t AND mom_gt) NOT INTERACT mom_wims
momcap46_3t_wops   = (momcap46_3t NOT mom_gt) NOT INTERACT mom_wims
momcap46_3t_wims   = (momcap46_3t NOT mom_gt) INTERACT mom_wims

mom46tt_rf2       = (((mom_metal4 AND mom_metal5) AND mom_metal6) NOT INTERACT  mom_metal1) NOT INTERACT  mom_metal2
mom46f_rf2        = mom46tt_rf2 NOT INTERACT (mom_v4 OR mom_v5)
mom46reg_rf2      = EXTENTS (SIZE mom46f_rf2 BY 0.1 INSIDE OF MOMDMY)
mom46reg_rf       = mom46reg1 OR mom46reg_rf2
mom46f_rf         = mom46f1 OR mom46f_rf2
momcap46rf       = (((mom46reg_rf AND RFDEV) NOT RF3T) AND MOMDMY) INTERACT DUMBM
momcap46rf_3t    = ((mom46reg_rf AND RFDEV) AND MOMDMY) INTERACT DUMBM
mom_terminal46rf = (((mom_metal4 AND mom_metal5) AND mom_metal6) INTERACT mom46reg_rf) ENCLOSE mom_m4_m6_via
mom_terminal46rf_m = ((((mom_metal4 AND mom_metal5) AND mom_metal6) INTERACT mom46reg_rf) ENCLOSE mom_m4_m6_via) NOT INTERACT mom_v3

momcap46rf_wips    = momcap46rf AND MOM_poly
momcap46rf_wops    = momcap46rf NOT MOM_poly
momcap46rf_3t_wips = ((momcap46rf_3t AND MOM_poly) NOT INTERACT mom_metal3) INTERACT mom_terminal46rf
momcap46rf_3t_wops = ((momcap46rf_3t NOT MOM_poly) NOT INTERACT mom_metal3) INTERACT mom_terminal46rf
momcap46rf_3t_wim  = ((momcap46rf_3t NOT MOM_poly) INTERACT mom_metal3) INTERACT mom_terminal46rf_m
#ENDIF
#ENDIF


#IFDEF TOPMETAL 4
#IFDEF TOP_METAL_NUM single
#DEFINE MOM14 FALSE
#DEFINE MOM15 FALSE
#DEFINE MOM16 FALSE
#DEFINE MOM24 FALSE
#DEFINE MOM25 FALSE
#DEFINE MOM26 FALSE
#DEFINE MOM34 FALSE
#DEFINE MOM35 FALSE
#DEFINE MOM36 FALSE
#DEFINE MOM45 FALSE
#DEFINE MOM46 FALSE
#DEFINE MOM56 FALSE
#ENDIF
#ENDIF

#IFDEF TOPMETAL 5
#IFDEF TOP_METAL_NUM single
#DEFINE MOM14 TRUE
#DEFINE MOM15 FALSE
#DEFINE MOM16 FALSE
#DEFINE MOM24 TRUE
#DEFINE MOM25 FALSE
#DEFINE MOM26 FALSE
#DEFINE MOM34 TRUE
#DEFINE MOM35 FALSE
#DEFINE MOM36 FALSE
#DEFINE MOM45 FALSE
#DEFINE MOM46 FALSE
#DEFINE MOM56 FALSE
#ENDIF
#ENDIF

#IFDEF TOPMETAL 5
#IFDEF TOP_METAL_NUM double
#DEFINE MOM14 FALSE
#DEFINE MOM15 FALSE
#DEFINE MOM16 FALSE
#DEFINE MOM24 FALSE
#DEFINE MOM25 FALSE
#DEFINE MOM26 FALSE
#DEFINE MOM34 FALSE
#DEFINE MOM35 FALSE
#DEFINE MOM36 FALSE
#DEFINE MOM45 FALSE
#DEFINE MOM46 FALSE
#DEFINE MOM56 FALSE
#ENDIF
#ENDIF

#IFDEF TOPMETAL 6
#IFDEF TOP_METAL_NUM single
#DEFINE MOM14 TRUE
#DEFINE MOM15 TRUE
#DEFINE MOM16 FALSE
#DEFINE MOM24 TRUE
#DEFINE MOM25 TRUE
#DEFINE MOM26 FALSE
#DEFINE MOM34 TRUE
#DEFINE MOM35 TRUE
#DEFINE MOM36 FALSE
#DEFINE MOM45 TRUE
#DEFINE MOM46 FALSE
#DEFINE MOM56 FALSE
#ENDIF
#ENDIF

#IFDEF TOPMETAL 6
#IFDEF TOP_METAL_NUM double
#DEFINE MOM14 TRUE
#DEFINE MOM15 FALSE
#DEFINE MOM16 FALSE
#DEFINE MOM24 TRUE
#DEFINE MOM25 FALSE
#DEFINE MOM26 FALSE
#DEFINE MOM34 TRUE
#DEFINE MOM35 FALSE
#DEFINE MOM36 FALSE
#DEFINE MOM45 FALSE
#DEFINE MOM46 FALSE
#DEFINE MOM56 FALSE
#ENDIF
#ENDIF

#IFDEF TOPMETAL 7
#IFDEF TOP_METAL_NUM single
#DEFINE MOM14 TRUE
#DEFINE MOM15 TRUE
#DEFINE MOM16 TRUE
#DEFINE MOM24 TRUE
#DEFINE MOM25 TRUE
#DEFINE MOM26 TRUE
#DEFINE MOM34 TRUE
#DEFINE MOM35 TRUE
#DEFINE MOM36 TRUE
#DEFINE MOM45 TRUE
#DEFINE MOM46 TRUE
#DEFINE MOM56 TRUE
#ENDIF
#ENDIF

#IFDEF TOPMETAL 7
#IFDEF TOP_METAL_NUM double
#DEFINE MOM14 TRUE
#DEFINE MOM15 TRUE
#DEFINE MOM16 FALSE
#DEFINE MOM24 TRUE
#DEFINE MOM25 TRUE
#DEFINE MOM26 FALSE
#DEFINE MOM34 TRUE
#DEFINE MOM35 TRUE
#DEFINE MOM36 FALSE
#DEFINE MOM45 TRUE
#DEFINE MOM46 FALSE
#DEFINE MOM56 FALSE
#ENDIF
#ENDIF

#IFDEF TOPMETAL 8
#IFDEF TOP_METAL_NUM single
#DEFINE MOM14 TRUE
#DEFINE MOM15 TRUE
#DEFINE MOM16 TRUE
#DEFINE MOM24 TRUE
#DEFINE MOM25 TRUE
#DEFINE MOM26 TRUE
#DEFINE MOM34 TRUE
#DEFINE MOM35 TRUE
#DEFINE MOM36 TRUE
#DEFINE MOM45 TRUE
#DEFINE MOM46 TRUE
#DEFINE MOM56 TRUE
#ENDIF
#ENDIF

#IFDEF TOPMETAL 8
#IFDEF TOP_METAL_NUM double
#DEFINE MOM14 TRUE
#DEFINE MOM15 TRUE
#DEFINE MOM16 TRUE
#DEFINE MOM24 TRUE
#DEFINE MOM25 TRUE
#DEFINE MOM26 TRUE
#DEFINE MOM34 TRUE
#DEFINE MOM35 TRUE
#DEFINE MOM36 TRUE
#DEFINE MOM45 TRUE
#DEFINE MOM46 TRUE
#DEFINE MOM56 TRUE
#ENDIF
#ENDIF

#IFDEF TOPMETAL 9
#IFDEF TOP_METAL_NUM single
#DEFINE MOM14 TRUE
#DEFINE MOM15 TRUE
#DEFINE MOM16 TRUE
#DEFINE MOM24 TRUE
#DEFINE MOM25 TRUE
#DEFINE MOM26 TRUE
#DEFINE MOM34 TRUE
#DEFINE MOM35 TRUE
#DEFINE MOM36 TRUE
#DEFINE MOM45 TRUE
#DEFINE MOM46 TRUE
#DEFINE MOM56 TRUE
#ENDIF
#ENDIF

#IFDEF TOPMETAL 9
#IFDEF TOP_METAL_NUM double
#DEFINE MOM14 TRUE
#DEFINE MOM15 TRUE
#DEFINE MOM16 TRUE
#DEFINE MOM24 TRUE
#DEFINE MOM25 TRUE
#DEFINE MOM26 TRUE
#DEFINE MOM34 TRUE
#DEFINE MOM35 TRUE
#DEFINE MOM36 TRUE
#DEFINE MOM45 TRUE
#DEFINE MOM46 TRUE
#DEFINE MOM56 TRUE
#ENDIF
#ENDIF

#IFDEF TOPMETAL 10
#IFDEF TOP_METAL_NUM double
#DEFINE MOM14 TRUE
#DEFINE MOM15 TRUE
#DEFINE MOM16 TRUE
#DEFINE MOM24 TRUE
#DEFINE MOM25 TRUE
#DEFINE MOM26 TRUE
#DEFINE MOM34 TRUE
#DEFINE MOM35 TRUE
#DEFINE MOM36 TRUE
#DEFINE MOM45 TRUE
#DEFINE MOM46 TRUE
#DEFINE MOM56 TRUE
#ENDIF
#ENDIF

mom12reg_mes    = MOMMES ENCLOSE (MOMDMY interact mom12reg)
momcap12_4t = (mom12reg_mes NOT INTERACT RFDEV) NOT INTERACT RF3T
momcap12_5t = (mom12reg_mes NOT INTERACT RFDEV) INTERACT RF3T
momcap12_5t_wips   = (momcap12_5t INTERACT mom_gt) NOT INTERACT mom_wims
momcap12_5t_wops   = (momcap12_5t NOT INTERACT mom_gt) NOT INTERACT mom_wims
momcap12_5t_wops_nw   = momcap12_5t_wops INTERACT mom_nw
momcap12_5t_wops_pw   = momcap12_5t_wops NOT INTERACT mom_nw
momcap12_5t_wims   = (momcap12_5t NOT INTERACT mom_gt) INTERACT mom_wims
mom_terminal12_one = ((mom_metal1 AND mom_metal2) AND MOMP1) ENCLOSE mom_v1
mom_terminal12_two = ((mom_metal1 AND mom_metal2) AND MOMP2) ENCLOSE mom_v1

mom13reg_mes    = MOMMES ENCLOSE (MOMDMY interact mom13reg)
momcap13_4t = (mom13reg_mes NOT INTERACT RFDEV) NOT INTERACT RF3T
momcap13_5t = (mom13reg_mes NOT INTERACT RFDEV) INTERACT RF3T
momcap13_5t_wips   = (momcap13_5t INTERACT mom_gt) NOT INTERACT mom_wims
momcap13_5t_wops   = (momcap13_5t NOT INTERACT mom_gt) NOT INTERACT mom_wims
momcap13_5t_wops_nw = momcap13_5t_wops INTERACT mom_nw
momcap13_5t_wops_pw = momcap13_5t_wops NOT INTERACT mom_nw
momcap13_5t_wims   = (momcap13_5t NOT INTERACT mom_gt) INTERACT mom_wims
mom_terminal13_one = (((mom_metal1 AND mom_metal2) AND mom_metal3) AND MOMP1) ENCLOSE mom_m1_m3_via
mom_terminal13_two = (((mom_metal1 AND mom_metal2) AND mom_metal3) AND MOMP2) ENCLOSE mom_m1_m3_via

#IFDEF MOM14 TRUE
mom14reg_mes    = MOMMES ENCLOSE (MOMDMY interact mom14reg)
momcap14_4t = (mom14reg_mes NOT INTERACT RFDEV) NOT INTERACT RF3T
momcap14_5t = (mom14reg_mes NOT INTERACT RFDEV) INTERACT RF3T
momcap14_5t_wips   = (momcap14_5t INTERACT mom_gt) NOT INTERACT mom_wims
momcap14_5t_wops   = (momcap14_5t NOT INTERACT mom_gt) NOT INTERACT mom_wims
momcap14_5t_wops_nw = momcap14_5t_wops INTERACT mom_nw
momcap14_5t_wops_pw = momcap14_5t_wops NOT INTERACT mom_nw
momcap14_5t_wims   = (momcap14_5t NOT INTERACT mom_gt) INTERACT mom_wims
mom_terminal14_one = ((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND MOMP1) ENCLOSE mom_m1_m4_via
mom_terminal14_two = ((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND MOMP2) ENCLOSE mom_m1_m4_via
#ENDIF

#IFDEF MOM15 TRUE
mom15reg_mes    = MOMMES ENCLOSE (MOMDMY interact mom15reg)
momcap15_4t = (mom15reg_mes NOT INTERACT RFDEV) NOT INTERACT RF3T
momcap15_5t = (mom15reg_mes NOT INTERACT RFDEV) INTERACT RF3T
momcap15_5t_wips   = (momcap15_5t INTERACT mom_gt) NOT INTERACT mom_wims
momcap15_5t_wops   = (momcap15_5t NOT INTERACT mom_gt) NOT INTERACT mom_wims
momcap15_5t_wops_nw = momcap15_5t_wops INTERACT mom_nw
momcap15_5t_wops_pw = momcap15_5t_wops NOT INTERACT mom_nw
momcap15_5t_wims   = (momcap15_5t NOT INTERACT mom_gt) INTERACT mom_wims
mom_terminal15_one = (((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5) AND MOMP1) ENCLOSE mom_m1_m5_via
mom_terminal15_two = (((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5) AND MOMP2) ENCLOSE mom_m1_m5_via
#ENDIF

#IFDEF MOM16 TRUE
mom16reg_mes    = MOMMES ENCLOSE (MOMDMY interact mom16reg)
momcap16_4t = (mom16reg_mes NOT INTERACT RFDEV) NOT INTERACT RF3T
momcap16_5t = (mom16reg_mes NOT INTERACT RFDEV) INTERACT RF3T
momcap16_5t_wips   = (momcap16_5t INTERACT mom_gt) NOT INTERACT mom_wims
momcap16_5t_wops   = (momcap16_5t NOT INTERACT mom_gt) NOT INTERACT mom_wims
momcap16_5t_wops_nw = momcap16_5t_wops INTERACT mom_nw
momcap16_5t_wops_pw = momcap16_5t_wops NOT INTERACT mom_nw
momcap16_5t_wims   = (momcap16_5t NOT INTERACT mom_gt) INTERACT mom_wims
mom_terminal16_one = ((((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) AND MOMP1) ENCLOSE mom_m1_m6_via
mom_terminal16_two = ((((((mom_metal1 AND mom_metal2) AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) AND MOMP2) ENCLOSE mom_m1_m6_via
#ENDIF

mom23reg_mes    = MOMMES ENCLOSE (MOMDMY interact mom23reg)
momcap23_4t = (mom23reg_mes NOT INTERACT RFDEV) NOT INTERACT RF3T
momcap23_5t = (mom23reg_mes NOT INTERACT RFDEV) INTERACT RF3T
momcap23_5t_wips   = (momcap23_5t INTERACT mom_gt) NOT INTERACT mom_wims
momcap23_5t_wops   = (momcap23_5t NOT INTERACT mom_gt) NOT INTERACT mom_wims
momcap23_5t_wops_nw = momcap23_5t_wops INTERACT mom_nw
momcap23_5t_wops_pw = momcap23_5t_wops NOT INTERACT mom_nw
momcap23_5t_wims   = (momcap23_5t NOT INTERACT mom_gt) INTERACT mom_wims
mom_terminal23_one = ((mom_metal2 AND mom_metal3) AND MOMP1) ENCLOSE mom_v2
mom_terminal23_two = ((mom_metal2 AND mom_metal3) AND MOMP2) ENCLOSE mom_v2

#IFDEF MOM24 TRUE
mom24reg_mes    = MOMMES ENCLOSE (MOMDMY interact mom24reg)
momcap24_4t = (mom24reg_mes NOT INTERACT RFDEV) NOT INTERACT RF3T
momcap24_5t = (mom24reg_mes NOT INTERACT RFDEV) INTERACT RF3T
momcap24_5t_wips   = (momcap24_5t INTERACT mom_gt) NOT INTERACT mom_wims
momcap24_5t_wops   = (momcap24_5t NOT INTERACT mom_gt) NOT INTERACT mom_wims
momcap24_5t_wops_nw = momcap24_5t_wops INTERACT mom_nw
momcap24_5t_wops_pw = momcap24_5t_wops NOT INTERACT mom_nw
momcap24_5t_wims   = (momcap24_5t NOT INTERACT mom_gt) INTERACT mom_wims
mom_terminal24_one = (((mom_metal2 AND mom_metal3) AND mom_metal4) AND MOMP1) ENCLOSE mom_m2_m4_via
mom_terminal24_two = (((mom_metal2 AND mom_metal3) AND mom_metal4) AND MOMP2) ENCLOSE mom_m2_m4_via
#ENDIF

#IFDEF MOM25 TRUE
mom25reg_mes    = MOMMES ENCLOSE (MOMDMY interact mom25reg)
momcap25_4t = (mom25reg_mes NOT INTERACT RFDEV) NOT INTERACT RF3T
momcap25_5t = (mom25reg_mes NOT INTERACT RFDEV) INTERACT RF3T
momcap25_5t_wips   = (momcap25_5t INTERACT mom_gt) NOT INTERACT mom_wims
momcap25_5t_wops   = (momcap25_5t NOT INTERACT mom_gt) NOT INTERACT mom_wims
momcap25_5t_wops_nw = momcap25_5t_wops INTERACT mom_nw
momcap25_5t_wops_pw = momcap25_5t_wops NOT INTERACT mom_nw
momcap25_5t_wims   = (momcap25_5t NOT INTERACT mom_gt) INTERACT mom_wims
mom_terminal25_one = ((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND MOMP1) ENCLOSE mom_m2_m5_via
mom_terminal25_two = ((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND MOMP2) ENCLOSE mom_m2_m5_via
#ENDIF

#IFDEF MOM26 TRUE
mom26reg_mes    = MOMMES ENCLOSE (MOMDMY interact mom26reg)
momcap26_4t = (mom26reg_mes NOT INTERACT RFDEV) NOT INTERACT RF3T
momcap26_5t = (mom26reg_mes NOT INTERACT RFDEV) INTERACT RF3T
momcap26_5t_wips   = (momcap26_5t INTERACT mom_gt) NOT INTERACT mom_wims
momcap26_5t_wops   = (momcap26_5t NOT INTERACT mom_gt) NOT INTERACT mom_wims
momcap26_5t_wops_nw = momcap26_5t_wops INTERACT mom_nw
momcap26_5t_wops_pw = momcap26_5t_wops NOT INTERACT mom_nw
momcap26_5t_wims   = (momcap26_5t NOT INTERACT mom_gt) INTERACT mom_wims
mom_terminal26_one = (((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) AND MOMP1) ENCLOSE mom_m2_m6_via
mom_terminal26_two = (((((mom_metal2 AND mom_metal3) AND mom_metal4) AND mom_metal5) AND mom_metal6) AND MOMP2) ENCLOSE mom_m2_m6_via
#ENDIF

#IFDEF MOM34 TRUE
mom34reg_mes    = MOMMES ENCLOSE (MOMDMY interact mom34reg)
momcap34_4t = (mom34reg_mes NOT INTERACT RFDEV) NOT INTERACT RF3T
momcap34_5t = (mom34reg_mes NOT INTERACT RFDEV) INTERACT RF3T
momcap34_5t_wips   = (momcap34_5t INTERACT mom_gt) NOT INTERACT mom_wims
momcap34_5t_wops   = (momcap34_5t NOT INTERACT mom_gt) NOT INTERACT mom_wims
momcap34_5t_wops_nw = momcap34_5t_wops INTERACT mom_nw
momcap34_5t_wops_pw = momcap34_5t_wops NOT INTERACT mom_nw
momcap34_5t_wims   = (momcap34_5t NOT INTERACT mom_gt) INTERACT mom_wims
mom_terminal34_one = ((mom_metal3 AND mom_metal4) AND MOMP1) ENCLOSE mom_v3
mom_terminal34_two = ((mom_metal3 AND mom_metal4) AND MOMP2) ENCLOSE mom_v3
#ENDIF

#IFDEF MOM35 TRUE
mom35reg_mes    = MOMMES ENCLOSE (MOMDMY interact mom35reg)
momcap35_4t = (mom35reg_mes NOT INTERACT RFDEV) NOT INTERACT RF3T
momcap35_5t = (mom35reg_mes NOT INTERACT RFDEV) INTERACT RF3T
momcap35_5t_wips   = (momcap35_5t INTERACT mom_gt) NOT INTERACT mom_wims
momcap35_5t_wops   = (momcap35_5t NOT INTERACT mom_gt) NOT INTERACT mom_wims
momcap35_5t_wops_nw = momcap35_5t_wops INTERACT mom_nw
momcap35_5t_wops_pw = momcap35_5t_wops NOT INTERACT mom_nw
momcap35_5t_wims   = (momcap35_5t NOT INTERACT mom_gt) INTERACT mom_wims
mom_terminal35_one = (((mom_metal3 AND mom_metal4) AND mom_metal5) AND MOMP1) ENCLOSE mom_m3_m5_via
mom_terminal35_two = (((mom_metal3 AND mom_metal4) AND mom_metal5) AND MOMP2) ENCLOSE mom_m3_m5_via
#ENDIF

#IFDEF MOM36 TRUE
mom36reg_mes    = MOMMES ENCLOSE (MOMDMY interact mom36reg)
momcap36_4t = (mom36reg_mes NOT INTERACT RFDEV) NOT INTERACT RF3T
momcap36_5t = (mom36reg_mes NOT INTERACT RFDEV) INTERACT RF3T
momcap36_5t_wips   = (momcap36_5t INTERACT mom_gt) NOT INTERACT mom_wims
momcap36_5t_wops   = (momcap36_5t NOT INTERACT mom_gt) NOT INTERACT mom_wims
momcap36_5t_wops_nw = momcap36_5t_wops INTERACT mom_nw
momcap36_5t_wops_pw = momcap36_5t_wops NOT INTERACT mom_nw
momcap36_5t_wims   = (momcap36_5t NOT INTERACT mom_gt) INTERACT mom_wims
mom_terminal36_one = ((((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) AND MOMP1) ENCLOSE mom_m3_m6_via
mom_terminal36_two = ((((mom_metal3 AND mom_metal4) AND mom_metal5) AND mom_metal6) AND MOMP2) ENCLOSE mom_m3_m6_via
#ENDIF

#IFDEF MOM45 TRUE
mom45reg_mes    = MOMMES ENCLOSE (MOMDMY interact mom45reg)
momcap45_4t = (mom45reg_mes NOT INTERACT RFDEV) NOT INTERACT RF3T
momcap45_5t = (mom45reg_mes NOT INTERACT RFDEV) INTERACT RF3T
momcap45_5t_wips   = (momcap45_5t INTERACT mom_gt) NOT INTERACT mom_wims
momcap45_5t_wops   = (momcap45_5t NOT INTERACT mom_gt) NOT INTERACT mom_wims
momcap45_5t_wops_nw = momcap45_5t_wops INTERACT mom_nw
momcap45_5t_wops_pw = momcap45_5t_wops NOT INTERACT mom_nw
momcap45_5t_wims   = (momcap45_5t NOT INTERACT mom_gt) INTERACT mom_wims
mom_terminal45_one = ((mom_metal4 AND mom_metal5) AND MOMP1) ENCLOSE mom_v4
mom_terminal45_two = ((mom_metal4 AND mom_metal5) AND MOMP2) ENCLOSE mom_v4
#ENDIF

#IFDEF MOM46 TRUE
mom46reg_mes    = MOMMES ENCLOSE (MOMDMY interact mom46reg)
momcap46_4t = (mom46reg_mes NOT INTERACT RFDEV) NOT INTERACT RF3T
momcap46_5t = (mom46reg_mes NOT INTERACT RFDEV) INTERACT RF3T
momcap46_5t_wips   = (momcap46_5t INTERACT mom_gt) NOT INTERACT mom_wims
momcap46_5t_wops   = (momcap46_5t NOT INTERACT mom_gt) NOT INTERACT mom_wims
momcap46_5t_wops_nw = momcap46_5t_wops INTERACT mom_nw
momcap46_5t_wops_pw = momcap46_5t_wops NOT INTERACT mom_nw
momcap46_5t_wims   = (momcap46_5t NOT INTERACT mom_gt) INTERACT mom_wims
mom_terminal46_one = (((mom_metal4 AND mom_metal5) AND mom_metal6) AND MOMP1) ENCLOSE mom_m4_m6_via
mom_terminal46_two = (((mom_metal4 AND mom_metal5) AND mom_metal6) AND MOMP2) ENCLOSE mom_m4_m6_via
#ENDIF

#IFDEF MOM56 TRUE
mom56reg_mes    = MOMMES ENCLOSE (MOMDMY interact mom56reg)
momcap56_4t = (mom56reg_mes NOT INTERACT RFDEV) NOT INTERACT RF3T
momcap56_5t = (mom56reg_mes NOT INTERACT RFDEV) INTERACT RF3T
momcap56_5t_wips   = (momcap56_5t INTERACT mom_gt) NOT INTERACT mom_wims
momcap56_5t_wops   = (momcap56_5t NOT INTERACT mom_gt) NOT INTERACT mom_wims
momcap56_5t_wops_nw = momcap56_5t_wops INTERACT mom_nw
momcap56_5t_wops_pw = momcap56_5t_wops NOT INTERACT mom_nw
momcap56_5t_wims   = (momcap56_5t NOT INTERACT mom_gt) INTERACT mom_wims
mom_terminal56_one = ((mom_metal5 AND mom_metal6) AND MOMP1) ENCLOSE mom_v5
mom_terminal56_two = ((mom_metal5 AND mom_metal6) AND MOMP2) ENCLOSE mom_v5
#ENDIF


//*Define Inductors*
#IFDEF TOPMETAL 4
#ELSE
#IFDEF TOPMETAL 5
#ELSE
ind_rf_t2_old = INDMY with text "ind_rf_t2"
ind_rf_t3_old = INDMY with text "ind_rf_t3"
ind_rf_t4_old = INDMY with text "ind_rf_t4"
ind_rf_t5_old = INDMY with text "ind_rf_t5"
ind_rf_t6_old = INDMY with text "ind_rf_t6"

ind_rf_t2_psub_old = INDMY with text "ind_rf_t2_psub"
ind_rf_t3_psub_old = INDMY with text "ind_rf_t3_psub"
ind_rf_t4_psub_old = INDMY with text "ind_rf_t4_psub"
ind_rf_t5_psub_old = INDMY with text "ind_rf_t5_psub"
ind_rf_t6_psub_old = INDMY with text "ind_rf_t6_psub"

ind_diff_t2_old = INDMY with text "ind_diff_t2"
ind_diff_t3_old = INDMY with text "ind_diff_t3"
ind_diff_t4_old = INDMY with text "ind_diff_t4"
ind_diff_t5_old = INDMY with text "ind_diff_t5"
ind_diff_t6_old = INDMY with text "ind_diff_t6"

ind_diff_t2_psub_old = INDMY with text "ind_diff_t2_psub"
ind_diff_t3_psub_old = INDMY with text "ind_diff_t3_psub"
ind_diff_t4_psub_old = INDMY with text "ind_diff_t4_psub"
ind_diff_t5_psub_old = INDMY with text "ind_diff_t5_psub"
ind_diff_t6_psub_old = INDMY with text "ind_diff_t6_psub"

ind_rf_1tm_t2_old = ((INDMY with text "ind_rf_1tm_t2") INTERACT GT) INTERACT AA
ind_rf_1tm_t3_old = ((INDMY with text "ind_rf_1tm_t3") INTERACT GT) INTERACT AA
ind_rf_1tm_t4_old = ((INDMY with text "ind_rf_1tm_t4") INTERACT GT) INTERACT AA
ind_rf_1tm_t5_old = ((INDMY with text "ind_rf_1tm_t5") INTERACT GT) INTERACT AA
ind_rf_1tm_t6 = ((INDMY with text "ind_rf_1tm_t6") INTERACT GT) INTERACT AA

ind_rf_1tm_t2_psub_old = ((INDMY with text "ind_rf_1tm_t2_psub") INTERACT GT) INTERACT AA
ind_rf_1tm_t3_psub_old = ((INDMY with text "ind_rf_1tm_t3_psub") INTERACT GT) INTERACT AA
ind_rf_1tm_t4_psub_old = ((INDMY with text "ind_rf_1tm_t4_psub") INTERACT GT) INTERACT AA
ind_rf_1tm_t5_psub_old = ((INDMY with text "ind_rf_1tm_t5_psub") INTERACT GT) INTERACT AA
ind_rf_1tm_t6_psub = ((INDMY with text "ind_rf_1tm_t6_psub") INTERACT GT) INTERACT AA

ind_diff_1tm_t2_old = ((INDMY with text "ind_diff_1tm_t2") INTERACT GT) INTERACT AA
ind_diff_1tm_t3_old = ((INDMY with text "ind_diff_1tm_t3") INTERACT GT) INTERACT AA
ind_diff_1tm_t4_old = ((INDMY with text "ind_diff_1tm_t4") INTERACT GT) INTERACT AA
ind_diff_1tm_t5_old = ((INDMY with text "ind_diff_1tm_t5") INTERACT GT) INTERACT AA
ind_diff_1tm_t6 = ((INDMY with text "ind_diff_1tm_t6") INTERACT GT) INTERACT AA

ind_diff_1tm_t2_psub_old = ((INDMY with text "ind_diff_1tm_t2_psub") INTERACT GT) INTERACT AA
ind_diff_1tm_t3_psub_old = ((INDMY with text "ind_diff_1tm_t3_psub") INTERACT GT) INTERACT AA
ind_diff_1tm_t4_psub_old = ((INDMY with text "ind_diff_1tm_t4_psub") INTERACT GT) INTERACT AA
ind_diff_1tm_t5_psub_old = ((INDMY with text "ind_diff_1tm_t5_psub") INTERACT GT) INTERACT AA
ind_diff_1tm_t6_psub = ((INDMY with text "ind_diff_1tm_t6_psub") INTERACT GT) INTERACT AA

ind_rf_t1alpa_t1_old = INDMY with text "ind_rf_t1alpa_t1"
ind_rf_t1alpa_t2_old = INDMY with text "ind_rf_t1alpa_t2"
ind_rf_t1alpa_t3_old = INDMY with text "ind_rf_t1alpa_t3"
ind_rf_t1alpa_t4_old = INDMY with text "ind_rf_t1alpa_t4"
ind_rf_t1alpa_t5_old = INDMY with text "ind_rf_t1alpa_t5"

ind_rf_t1alpa_psub_t1_old = INDMY with text "ind_rf_t1alpa_psub_t1"
ind_rf_t1alpa_psub_t2_old = INDMY with text "ind_rf_t1alpa_psub_t2"
ind_rf_t1alpa_psub_t3_old = INDMY with text "ind_rf_t1alpa_psub_t3"
ind_rf_t1alpa_psub_t4_old = INDMY with text "ind_rf_t1alpa_psub_t4"
ind_rf_t1alpa_psub_t5_old = INDMY with text "ind_rf_t1alpa_psub_t5"

ind_rf_diff_t1alpa_t1_old = INDMY with text "ind_rf_diff_t1alpa_t1"
ind_rf_diff_t1alpa_t2_old = INDMY with text "ind_rf_diff_t1alpa_t2"
ind_rf_diff_t1alpa_t3_old = INDMY with text "ind_rf_diff_t1alpa_t3"
ind_rf_diff_t1alpa_t4_old = INDMY with text "ind_rf_diff_t1alpa_t4"
ind_rf_diff_t1alpa_t5_old = INDMY with text "ind_rf_diff_t1alpa_t5"

diff_t1alpa_psub_t1_old = INDMY with text "diff_t1alpa_psub_t1"
diff_t1alpa_psub_t2_old = INDMY with text "diff_t1alpa_psub_t2"
diff_t1alpa_psub_t3_old = INDMY with text "diff_t1alpa_psub_t3"
diff_t1alpa_psub_t4_old = INDMY with text "diff_t1alpa_psub_t4"
diff_t1alpa_psub_t5_old = INDMY with text "diff_t1alpa_psub_t5"


ind_3Tdiff_alutm_old = ((((((((INDMY with text "ind_3Tdiff_alutm") interact AA) interact GT) interact M1) interact PSUB) interact DUMBM) interact DUMBA) interact DUMBP) interact cross_no_via
ind_3Tdiff_alutm_psub_old = ((((((((INDMY with text "ind_3Tdiff_alutm_psub") interact AA) interact GT) interact M1) interact PSUB) interact DUMBM) interact DUMBA) interact DUMBP) interact cross_no_via
ind_3Tdiff_2d8alutm_psub_old = ((((((((INDMY with text "ind_3Tdiff_2d8alutm_psub") interact AA) interact GT) interact M1) interact PSUB) interact DUMBM) interact DUMBA) interact DUMBP) interact cross_no_via

ind_2Tdiff_alutm_old = ((((((((INDMY with text "ind_2Tdiff_alutm") interact AA) interact GT) interact M1) interact PSUB) interact DUMBM) interact DUMBA) interact DUMBP) interact cross_no_via
ind_2Tdiff_alutm_psub_old = ((((((((INDMY with text "ind_2Tdiff_alutm_psub") interact AA) interact GT) interact M1) interact PSUB) interact DUMBM) interact DUMBA) interact DUMBP) interact cross_no_via
ind_2Tdiff_2d8alutm_psub_old = ((((((((INDMY with text "ind_2Tdiff_2d8alutm_psub") interact AA) interact GT) interact M1) interact PSUB) interact DUMBM) interact DUMBA) interact DUMBP) interact cross_no_via
rf_ind_alutm_psub_old = ((((((((INDMY with text "rf_ind_alutm_psub") interact AA) interact GT) interact M1) interact PSUB) interact DUMBM) interact DUMBA) interact DUMBP) interact cross_no_via
rf_ind_2d8alutm_psub_old = ((((((((INDMY with text "rf_ind_2d8alutm_psub") interact AA) interact GT) interact M1) interact PSUB) interact DUMBM) interact DUMBA) interact DUMBP) interact cross_no_via

rdl_spi = rdl_ind with width > 3.5
tm2_spi = (TM2 AND indrfdumy) with width > 3.5
rdl_tm2_pa  = (rdl_spi AND tm2_spi) ENCLOSE BCB1

spi_ind_rf_1p1_old = (((((INDMY with text "spi_ind_rf_1p1") INTERACT DUMBM) INTERACT AA) INTERACT GT) INTERACT M1) INTERACT rdl_tm2_pa
spi_ind_rf_1p2_old = (((((INDMY with text "spi_ind_rf_1p2") INTERACT DUMBM) INTERACT AA) INTERACT GT) INTERACT M1) INTERACT rdl_tm2_pa
spi_ind_rf_1p3_old = (((((INDMY with text "spi_ind_rf_1p3") INTERACT DUMBM) INTERACT AA) INTERACT GT) INTERACT M1) INTERACT rdl_tm2_pa

spi_ind_rf_psub_1p1_old = (((((INDMY with text "spi_ind_rf_psub_1p1") INTERACT DUMBM) INTERACT AA) INTERACT GT) INTERACT M1) INTERACT rdl_tm2_pa
spi_ind_rf_psub_1p2_old = (((((INDMY with text "spi_ind_rf_psub_1p2") INTERACT DUMBM) INTERACT AA) INTERACT GT) INTERACT M1) INTERACT rdl_tm2_pa
spi_ind_rf_psub_1p3_old = (((((INDMY with text "spi_ind_rf_psub_1p3") INTERACT DUMBM) INTERACT AA) INTERACT GT) INTERACT M1) INTERACT rdl_tm2_pa

spi_ind_rf_RDL2d8_psub_1p1_old = (((((((INDMY with text "spi_ind_rf_RDL2d8_psub_1p1") INTERACT DUMBM) interact DUMBA) interact DUMBP) INTERACT AA) INTERACT GT) INTERACT M1) INTERACT rdl_tm2_pa
spi_ind_rf_RDL2d8_psub_1p2_old = (((((((INDMY with text "spi_ind_rf_RDL2d8_psub_1p2") INTERACT DUMBM) interact DUMBA) interact DUMBP) INTERACT AA) INTERACT GT) INTERACT M1) INTERACT rdl_tm2_pa
spi_ind_rf_RDL2d8_psub_1p3_old = (((((((INDMY with text "spi_ind_rf_RDL2d8_psub_1p3") INTERACT DUMBM) interact DUMBA) interact DUMBP) INTERACT AA) INTERACT GT) INTERACT M1) INTERACT rdl_tm2_pa
spi_ind_rf_RDL2d8_psub_2p3_old = (((((((INDMY with text "spi_ind_rf_RDL2d8_psub_2p3") INTERACT DUMBM) interact DUMBA) interact DUMBP) INTERACT AA) INTERACT GT) INTERACT M1) INTERACT rdl_tm2_pa

#ENDIF
#ENDIF

PSUB_OV   = SIZE PSUB  BY 13 /* the distance between indumy and PSUB is 20 micron */
indrfdumy = (((INDMY AND RFDEV) INTERACT PSUB_OV) INTERACT NOSHR) INTERACT DUMBM
indrfdumy_2d8 = (((INDMY interact RFDEV) interact PSUB_OV) INTERACT NOSHR) INTERACT DUMBM

//*Define special hole for alpa indutor when the turns == 1

metal_ind_hole_rdl_t1 = EXTENTS( (HOLES DUMBM) AND INDMY)

#IFDEF TOPMETAL 4
#IFDEF TOP_METAL_NUM single
metal1 = metal1b OR M1DUM
metal2 = metal2b OR M2DUM
metal3 = metal3b OR M3DUM
#IFDEF TM2_WIDTH 2
metal4 = metal4a OR STM2DUM
#ELSE
metal4 = metal4a OR TM2DUM
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOPMETAL 5
metal1 = metal1b OR M1DUM
metal2 = metal2b OR M2DUM
metal3 = metal3b OR M3DUM

#IFDEF TOP_METAL_NUM single
metal4 = metal4b OR M4DUM
#IFDEF TM2_WIDTH 2
metal5 = metal5a OR STM2DUM
#ELSE 
metal5 = metal5a OR TM2DUM
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 4
metal4 = metal4a OR TM1DUM
metal5 = metal5a OR TM2DUM
#ENDIF
#IFDEF TM1_WIDTH 2
metal4 = metal4a OR STM1DUM
#IFDEF TM2_WIDTH 2
metal5 = metal5a OR STM2DUM
#ELSE
metal5 = metal5a OR TM2DUM
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOPMETAL 6
#IFDEF TOP_METAL_NUM double
m1_ind    = metal1b AND indrfdumy
metal1_0  = metal1b NOT m1_ind
metal1    = metal1_0 OR M1DUM
m2_ind    = metal2b AND indrfdumy
metal2_0  = metal2b NOT m2_ind
metal2    = metal2_0 OR M2DUM
m3_ind    = metal3b AND indrfdumy
metal3_0  = metal3b NOT m3_ind
metal3    = metal3_0 OR M3DUM
m4_ind    = metal4b AND indrfdumy
metal4_0  = metal4b NOT m4_ind
metal4    = metal4_0 OR M4DUM
m5_ind    = metal5a AND indrfdumy
m5_ind_conn = m5_ind NOT PSUB
metal5_0  = metal5a NOT m5_ind
m6_ind         = metal6a AND indrfdumy
m6_ind_rc = m6_ind INTERACT ((ind_3Tdiff_alutm OR ind_3Tdiff_alutm_psub) OR ind_3Tdiff_2d8alutm_psub)
m6_ind_conn    = m6_ind NOT PSUB
m6_2d8ind      = metal6a and indrfdumy_2d8
m6_2d8ind_conn = m6_2d8ind NOT RFDEV
metal6_0  = metal6a NOT m6_ind
#IFDEF TM1_WIDTH 4
metal5    = metal5_0 OR TM1DUM
metal6    = metal6_0 OR TM2DUM
#ENDIF
#IFDEF TM1_WIDTH 2
metal5    = metal5_0 OR STM1DUM
#IFDEF TM2_WIDTH 2
metal6    = metal6_0 OR STM2DUM
#ELSE 
metal6    = metal6_0 OR TM2DUM
#ENDIF
#ENDIF

cross_no_via  = ((((INDTEM and m1_ind) and m2_ind) and m3_ind) interact V1) interact V2

topmetal_ind   = m6_ind OR m5_ind
inter_ind      = copy m4_ind
metal_ind      = topmetal_ind OR inter_ind

dind_pm =  (topmetal_ind AND TM2TXT) AND TM1TXT
dind_pm_PI = dind_pm NOT M4TXT
dind_pm_MI = dind_pm AND M4TXT
dind_B     = ((((m3_ind AND m2_ind) AND m1_ind) AND M3TXT) AND M2TXT) AND M1TXT

topmetal_ind_rdl = m6_ind and rdl_ind
dind_pm_rdl = topmetal_ind_rdl AND TM2TXT

IND_EDGE = CONVEX EDGE m6_ind ANGLE1 >180<270 ANGLE2 >180<270
IND_EXP  = EXPAND EDGE IND_EDGE INSIDE BY 0.001

topmetal_ind_SZ = SIZE topmetal_ind BY 1
indrfdumy_expand_1 = indrfdumy_expand interact topmetal_ind_SZ
indrfdumy_edge_1 = indrfdumy_expand_1 TOUCH EDGE indrfdumy
indrfdumy_edge_1_EXP = expand edge indrfdumy_edge_1 outside by  1
indrfdumy_edge = length indrfdumy > 0
indrfdumy_expand = expand edge indrfdumy_edge outside by 0.001
metal_ind_hole1= HOLES ( metal_ind OR indrfdumy_edge_1_EXP ) INNER EMPTY
metal_ind_hole2= (SIZE metal_ind_hole1 BY 15 UNDEROVER ) and metal_ind_hole1
metal_ind_hole = EXTENTS (size metal_ind_hole2 by 5 underover )
metal_ind_touch= topmetal_ind AND inter_ind

metal_ind_rdl_alutm = (m6_ind or m5_ind) or rdl_ind
metal_ind_hole1_rdl_alutm = holes metal_ind_rdl_alutm INNER EMPTY
metal_ind_hole2_rdl_alutm = size metal_ind_hole1_rdl_alutm BY 4.5 UNDEROVER
metal_ind_hole_rdl_alutm  = (EXTENTS metal_ind_hole2_rdl_alutm) or metal_ind_hole

tm2ind_hole1 = HOLES (m6_ind OR rdl_ind) INNER EMPTY
tm2ind_hole2 = SIZE tm2ind_hole1 BY 3.33 UNDEROVER
tm2ind_hole  = EXTENTS tm2ind_hole2

spi_pm_PI = ((((metal6a AND INDMY) NOT PSUB_OV) INTERACT rdl_ind) NOT INTERACT TM2TXT) not interact iAA
spi_pm_MI = (((metal6a AND INDMY) NOT PSUB_OV) INTERACT rdl_ind) INTERACT TM2TXT
dind_ALPA = ((rdl_ind and metal6a) NOT TM2TXT) NOT RFDEV
dind_2D8  = ((metal6a AND TM2TXT) NOT RFDEV) interact AA
dind_CEN  = ((metal2a and metal3a) and metal4a) and ALPATXT
spi_2d8_PI = ((((metal6a and INDMY) NOT RFDEV) INTERACT rdl_ind) NOT INTERACT TM2TXT) not interact AA
spi_2d8_MI = ((((metal6a and INDMY) NOT RFDEV) INTERACT rdl_ind) INTERACT TM2TXT) not interact AA

//layers for radius and turns calcu
INDR_Radius   = EXTENTS ((INDR AND INDMY) AND RFDEV)
rf_alpa_count = RDL AND NFDMK
rf_m6       = (metal6a OR TM2) AND RFDEV
rf_m6_count = (rf_m6 AND INDMY) AND NFDMK
#ENDIF

#IFDEF TOP_METAL_NUM single
m1_ind    = metal1b AND indrfdumy
metal1_0  = metal1b NOT m1_ind
metal1    = metal1_0 OR M1DUM
m2_ind    = metal2b AND indrfdumy
metal2_0  = metal2b NOT m2_ind
metal2    = metal2_0 OR M2DUM
m3_ind    = metal3b AND indrfdumy
metal3_0  = metal3b NOT m3_ind
metal3    = metal3_0 OR M3DUM
m4_ind    = metal4b AND indrfdumy
metal4_0  = metal4b NOT m4_ind
metal4    = metal4_0 OR M4DUM
m5_ind    = metal5b AND indrfdumy
m5_ind_conn = m5_ind NOT PSUB
metal5_0  = metal5b NOT m5_ind
metal5    = metal5_0 OR M5DUM
m6_ind         = metal6a AND indrfdumy
m6_ind_rc = m6_ind INTERACT ((ind_3Tdiff_alutm OR ind_3Tdiff_alutm_psub) OR ind_3Tdiff_2d8alutm_psub)
m6_ind_conn    = m6_ind NOT PSUB
m6_2d8ind      = metal6a AND indrfdumy_2d8
m6_2d8ind_conn = m6_2d8ind NOT RFDEV
metal6_0  = metal6a NOT m6_ind
#IFDEF TM2_WIDTH 2
metal6    = metal6_0 OR STM2DUM
#ELSE
metal6    = metal6_0 OR TM2DUM
#ENDIF

cross_no_via  = ((((((INDTEM and m1_ind) and m2_ind) and m3_ind) and m4_ind) interact V1) interact V2) interact V3

topmetal_ind   = copy m6_ind
inter_ind      = m4_ind AND m5_ind
metal_ind      = topmetal_ind OR inter_ind

dind_pm    =  topmetal_ind AND TM2TXT
dind_pm_PI = (dind_pm NOT M4TXT) NOT M5TXT
dind_pm_MI = (dind_pm AND M4TXT) AND M5TXT
dind_B     = ((((m3_ind AND m2_ind) AND m1_ind) AND M3TXT) AND M2TXT) AND M1TXT

IND_EDGE = CONVEX EDGE topmetal_ind ANGLE1 >180<270 ANGLE2 >180<270
IND_EXP  = EXPAND EDGE IND_EDGE INSIDE BY 0.001

topmetal_ind_rdl    = m6_ind AND rdl_ind
metal_ind_rdl       = topmetal_ind_rdl OR inter_ind
metal_ind_hole1_rdl = HOLES metal_ind_rdl INNER EMPTY
metal_ind_hole2_rdl = SIZE metal_ind_hole1_rdl BY 4.5 UNDEROVER
metal_ind_hole_rdl  = (EXTENTS metal_ind_hole2_rdl) or metal_ind_hole
metal_ind_touch_rdl = topmetal_ind_rdl AND inter_ind

topmetal_ind_SZ = SIZE topmetal_ind BY 1
indrfdumy_expand_1 = indrfdumy_expand interact topmetal_ind_SZ
indrfdumy_edge_1 = indrfdumy_expand_1 TOUCH EDGE indrfdumy
indrfdumy_edge_1_EXP = expand edge indrfdumy_edge_1 outside by  1
indrfdumy_edge = length indrfdumy > 0
indrfdumy_expand = expand edge indrfdumy_edge outside by 0.001
metal_ind_hole1= HOLES ( metal_ind OR indrfdumy_edge_1_EXP ) INNER EMPTY
metal_ind_hole2= (SIZE metal_ind_hole1 BY 15 UNDEROVER ) and metal_ind_hole1
metal_ind_hole = EXTENTS (size metal_ind_hole2 by 5 underover )
metal_ind_touch= topmetal_ind AND inter_ind

metal_ind_rdl_alutm = m6_ind or rdl_ind
metal_ind_hole1_rdl_alutm = holes metal_ind_rdl_alutm INNER EMPTY
metal_ind_hole2_rdl_alutm = size metal_ind_hole1_rdl_alutm BY 4.5 UNDEROVER
metal_ind_hole_rdl_alutm  = (EXTENTS metal_ind_hole2_rdl_alutm) or metal_ind_hole

dind_pm_rdl    = topmetal_ind_rdl AND TM2TXT
dind_pm_PI_rdl = (dind_pm_rdl NOT M5TXT) NOT M4TXT
dind_pm_MI_rdl = (dind_pm_rdl AND M5TXT) AND M4TXT

tm2ind_hole1 = HOLES (m6_ind OR rdl_ind) INNER EMPTY
tm2ind_hole2 = SIZE tm2ind_hole1 BY 3.33 UNDEROVER
tm2ind_hole  = EXTENTS tm2ind_hole2

spi_pm_PI = ((((metal6a and INDMY) NOT PSUB_OV) INTERACT rdl_ind) NOT INTERACT TM2TXT) not interact iAA
spi_pm_MI = (((metal6a and INDMY) NOT PSUB_OV) INTERACT rdl_ind) INTERACT TM2TXT
dind_2D8  = ((metal6a AND TM2TXT) NOT RFDEV) interact AA
dind_ALPA = ((rdl_ind and metal6a) NOT TM2TXT) NOT RFDEV
dind_CEN  = ((metal3a and metal4a) and metal5a) and ALPATXT
spi_2d8_PI = ((((metal6a and INDMY) NOT RFDEV) INTERACT rdl_ind) NOT INTERACT TM2TXT) not interact AA
spi_2d8_MI = ((((metal6a and INDMY) NOT RFDEV) INTERACT rdl_ind) INTERACT TM2TXT) not interact AA

//layers for radius and turns calcu
INDR_Radius   = EXTENTS ((INDR AND INDMY) AND RFDEV)
rf_alpa_count = RDL AND NFDMK
rf_m6       = (metal6a OR TM2) AND RFDEV
rf_m6_count = (rf_m6 AND INDMY) AND NFDMK
#ENDIF
#ENDIF

#IFDEF TOPMETAL 7
#IFDEF TOP_METAL_NUM double
m1_ind    = metal1b AND indrfdumy
metal1_0  = metal1b NOT m1_ind
metal1    = metal1_0 OR M1DUM
m2_ind    = metal2b AND indrfdumy
metal2_0  = metal2b NOT m2_ind
metal2    = metal2_0 OR M2DUM
m3_ind    = metal3b AND indrfdumy
metal3_0  = metal3b NOT m3_ind
metal3    = metal3_0 OR M3DUM
m4_ind    = metal4b AND indrfdumy
metal4_0  = metal4b NOT m4_ind
metal4    = metal4_0 OR M4DUM
m5_ind    = metal5b AND indrfdumy
metal5_0  = metal5b NOT m5_ind
metal5    = metal5_0 OR M5DUM
m6_ind    = metal6a AND indrfdumy
m6_ind_conn = m6_ind NOT PSUB
metal6_0  = metal6a NOT m6_ind
m7_ind         = metal7a AND indrfdumy
m7_ind_rc = m7_ind INTERACT ((ind_3Tdiff_alutm OR ind_3Tdiff_alutm_psub) OR ind_3Tdiff_2d8alutm_psub)
m7_ind_conn    = m7_ind NOT PSUB
m7_2d8ind      = metal7a AND indrfdumy_2d8
m7_2d8ind_conn = m7_2d8ind NOT RFDEV
metal7_0  = metal7a NOT m7_ind
#IFDEF TM1_WIDTH 4
metal6    = metal6_0 OR TM1DUM
metal7    = metal7_0 OR TM2DUM
#ENDIF
#IFDEF TM1_WIDTH 2
metal6    = metal6_0 OR STM1DUM
#IFDEF TM2_WIDTH 2
metal7    = metal7_0 OR STM2DUM
#ELSE
metal7    = metal7_0 OR TM2DUM
#ENDIF
#ENDIF

cross_no_via  = ((((((INDTEM and m1_ind) and m2_ind) and m3_ind) and m4_ind) interact V1) interact V2) interact V3

topmetal_ind   = m7_ind OR m6_ind
inter_ind      = m5_ind AND m4_ind
metal_ind      = topmetal_ind OR inter_ind

dind_pm =  (topmetal_ind AND TM2TXT) AND TM1TXT    
dind_pm_PI = (dind_pm NOT M5TXT) NOT M4TXT
dind_pm_MI = (dind_pm AND M5TXT) AND M4TXT 
dind_B     = ((((m3_ind AND m2_ind) AND m1_ind) AND M3TXT) AND M2TXT) AND M1TXT

topmetal_ind_rdl = m7_ind and rdl_ind
dind_pm_rdl = topmetal_ind_rdl AND TM2TXT

IND_EDGE = CONVEX EDGE m7_ind ANGLE1 >180<270 ANGLE2 >180<270
IND_EXP  = EXPAND EDGE IND_EDGE INSIDE BY 0.001

topmetal_ind_SZ = SIZE topmetal_ind BY 1
indrfdumy_expand_1 = indrfdumy_expand interact topmetal_ind_SZ
indrfdumy_edge_1 = indrfdumy_expand_1 TOUCH EDGE indrfdumy
indrfdumy_edge_1_EXP = expand edge indrfdumy_edge_1 outside by  1
indrfdumy_edge = length indrfdumy > 0
indrfdumy_expand = expand edge indrfdumy_edge outside by 0.001
metal_ind_hole1= HOLES ( metal_ind OR indrfdumy_edge_1_EXP ) INNER EMPTY
metal_ind_hole2= (SIZE metal_ind_hole1 BY 15 UNDEROVER ) and metal_ind_hole1
metal_ind_hole = EXTENTS (size metal_ind_hole2 by 5 underover )
metal_ind_touch= topmetal_ind AND inter_ind

metal_ind_rdl_alutm = (m7_ind or m6_ind) or rdl_ind
metal_ind_hole1_rdl_alutm = holes metal_ind_rdl_alutm INNER EMPTY
metal_ind_hole2_rdl_alutm = size metal_ind_hole1_rdl_alutm BY 4.5 UNDEROVER
metal_ind_hole_rdl_alutm  = (EXTENTS metal_ind_hole2_rdl_alutm) or metal_ind_hole

tm2ind_hole1 = HOLES (m7_ind OR rdl_ind) INNER EMPTY
tm2ind_hole2 = SIZE tm2ind_hole1 BY 3.33 UNDEROVER
tm2ind_hole  = EXTENTS tm2ind_hole2

spi_pm_PI = ((((metal7a and INDMY) NOT PSUB_OV) INTERACT rdl_ind) NOT INTERACT TM2TXT) not interact iAA
spi_pm_MI = (((metal7a and INDMY) NOT PSUB_OV) INTERACT rdl_ind) INTERACT TM2TXT
dind_2D8  = ((metal7a AND TM2TXT) NOT RFDEV) interact AA
dind_ALPA = ((rdl_ind and metal7a) NOT TM2TXT) NOT RFDEV
dind_CEN  = ((metal3a and metal4a) and metal5a) and ALPATXT
spi_2d8_PI = ((((metal7a and INDMY) NOT RFDEV) INTERACT rdl_ind) NOT INTERACT TM2TXT) not interact AA
spi_2d8_MI = ((((metal7a and INDMY) NOT RFDEV) INTERACT rdl_ind) INTERACT TM2TXT) not interact AA

//layers for radius and turns calcu
INDR_Radius   = EXTENTS ((INDR AND INDMY) AND RFDEV)
rf_alpa_count = RDL AND NFDMK
rf_m7       = (metal7a OR TM2) AND RFDEV
rf_m7_count = (rf_m7 AND INDMY) AND NFDMK
#ENDIF

#IFDEF TOP_METAL_NUM single
m1_ind    = metal1b AND indrfdumy
metal1_0  = metal1b NOT m1_ind
metal1    = metal1_0 OR M1DUM
m2_ind    = metal2b AND indrfdumy
metal2_0  = metal2b NOT m2_ind
metal2    = metal2_0 OR M2DUM
m3_ind    = metal3b AND indrfdumy
metal3_0  = metal3b NOT m3_ind
metal3    = metal3_0 OR M3DUM
m4_ind    = metal4b AND indrfdumy
metal4_0  = metal4b NOT m4_ind
metal4    = metal4_0 OR M4DUM
m5_ind    = metal5b AND indrfdumy
metal5_0  = metal5b NOT m5_ind
metal5    = metal5_0 OR M5DUM
m6_ind    = metal6b AND indrfdumy
m6_ind_conn = m6_ind NOT PSUB
metal6_0  = metal6b NOT m6_ind
metal6    = metal6_0 OR M6DUM
m7_ind         = metal7a AND indrfdumy
m7_ind_rc = m7_ind INTERACT ((ind_3Tdiff_alutm OR ind_3Tdiff_alutm_psub) OR ind_3Tdiff_2d8alutm_psub)
m7_ind_conn    = m7_ind NOT PSUB
m7_2d8ind      = metal7a AND indrfdumy_2d8
m7_2d8ind_conn = m7_2d8ind NOT RFDEV
metal7_0  = metal7a NOT m7_ind
#IFDEF TM2_WIDTH 2
metal7    = metal7_0 OR STM2DUM
#ELSE
metal7    = metal7_0 OR TM2DUM
#ENDIF

cross_no_via  = ((((((((INDTEM and m1_ind) and m2_ind) and m3_ind) and m4_ind) and m5_ind) interact V1) interact V2) interact V3) interact V4

topmetal_ind   = copy m7_ind 
inter_ind      = (m6_ind AND m5_ind) AND m4_ind
metal_ind      = topmetal_ind OR inter_ind

dind_pm    =  topmetal_ind AND TM2TXT
dind_pm_PI = ((dind_pm NOT M5TXT) NOT M4TXT) NOT M6TXT
dind_pm_MI = ((dind_pm AND M5TXT) AND M4TXT) AND M6TXT
dind_B     = ((((m3_ind AND m2_ind) AND m1_ind) AND M3TXT) AND M2TXT) AND M1TXT

IND_EDGE = CONVEX EDGE topmetal_ind ANGLE1 >180<270 ANGLE2 >180<270
IND_EXP  = EXPAND EDGE IND_EDGE INSIDE BY 0.001

topmetal_ind_rdl    = m7_ind AND rdl_ind
metal_ind_rdl       = topmetal_ind_rdl OR inter_ind
metal_ind_hole1_rdl = HOLES metal_ind_rdl INNER EMPTY
metal_ind_hole2_rdl = SIZE metal_ind_hole1_rdl BY 4.5 UNDEROVER
metal_ind_hole_rdl  = (EXTENTS metal_ind_hole2_rdl) or metal_ind_hole
metal_ind_touch_rdl = topmetal_ind_rdl AND inter_ind

topmetal_ind_SZ = SIZE topmetal_ind BY 1
indrfdumy_expand_1 = indrfdumy_expand interact topmetal_ind_SZ
indrfdumy_edge_1 = indrfdumy_expand_1 TOUCH EDGE indrfdumy
indrfdumy_edge_1_EXP = expand edge indrfdumy_edge_1 outside by  1
indrfdumy_edge = length indrfdumy > 0
indrfdumy_expand = expand edge indrfdumy_edge outside by 0.001
metal_ind_hole1= HOLES ( metal_ind OR indrfdumy_edge_1_EXP ) INNER EMPTY
metal_ind_hole2= (SIZE metal_ind_hole1 BY 15 UNDEROVER ) and metal_ind_hole1
metal_ind_hole = EXTENTS (size metal_ind_hole2 by 5 underover )
metal_ind_touch= topmetal_ind AND inter_ind

metal_ind_rdl_alutm = m7_ind or rdl_ind
metal_ind_hole1_rdl_alutm = holes metal_ind_rdl_alutm INNER EMPTY
metal_ind_hole2_rdl_alutm = size metal_ind_hole1_rdl_alutm BY 4.5 UNDEROVER
metal_ind_hole_rdl_alutm  = (EXTENTS metal_ind_hole2_rdl_alutm) or metal_ind_hole

dind_pm_rdl    = topmetal_ind_rdl AND TM2TXT
dind_pm_PI_rdl = ((dind_pm_rdl NOT M6TXT) NOT M5TXT) NOT M4TXT
dind_pm_MI_rdl = ((dind_pm_rdl AND M6TXT) AND M5TXT) AND M4TXT

tm2ind_hole1 = HOLES (m7_ind OR rdl_ind) INNER EMPTY
tm2ind_hole2 = SIZE tm2ind_hole1 BY 3.33 UNDEROVER
tm2ind_hole  = EXTENTS tm2ind_hole2

spi_pm_PI = ((((metal7a and INDMY) NOT PSUB_OV) INTERACT rdl_ind) NOT INTERACT TM2TXT) not interact iAA
spi_pm_MI = (((metal7a and INDMY) NOT PSUB_OV) INTERACT rdl_ind) INTERACT TM2TXT
dind_2D8  = ((metal7a AND TM2TXT) NOT RFDEV) interact AA
dind_ALPA = ((rdl_ind and metal7a) NOT TM2TXT) NOT RFDEV
dind_CEN  = ((metal4a and metal5a) and metal6a) and ALPATXT
spi_2d8_PI = ((((metal7a and INDMY) NOT RFDEV) INTERACT rdl_ind) NOT INTERACT TM2TXT) not interact AA
spi_2d8_MI = ((((metal7a and INDMY) NOT RFDEV) INTERACT rdl_ind) INTERACT TM2TXT) not interact AA

//layers for radius and turns calcu
INDR_Radius   = EXTENTS ((INDR AND INDMY) AND RFDEV)
rf_alpa_count = RDL AND NFDMK
rf_m7       = (metal7a OR TM2) AND RFDEV
rf_m7_count = (rf_m7 AND INDMY) AND NFDMK
#ENDIF
#ENDIF

#IFDEF TOPMETAL 8
#IFDEF TOP_METAL_NUM double
m1_ind    = metal1b AND indrfdumy
metal1_0  = metal1b NOT m1_ind
metal1    = metal1_0 OR M1DUM
m2_ind    = metal2b AND indrfdumy
metal2_0  = metal2b NOT m2_ind
metal2    = metal2_0 OR M2DUM
m3_ind    = metal3b AND indrfdumy
metal3_0  = metal3b NOT m3_ind
metal3    = metal3_0 OR M3DUM
m4_ind    = metal4b AND indrfdumy
metal4_0  = metal4b NOT m4_ind
metal4    = metal4_0 OR M4DUM
m5_ind    = metal5b AND indrfdumy
metal5_0  = metal5b NOT m5_ind
metal5    = metal5_0 OR M5DUM
m6_ind    = metal6b AND indrfdumy
metal6_0  = metal6b NOT m6_ind
metal6    = metal6_0 OR M6DUM
m7_ind    = metal7a AND indrfdumy
m7_ind_conn = m7_ind NOT PSUB
metal7_0  = metal7a NOT m7_ind
m8_ind         = metal8a AND indrfdumy
m8_ind_rc = m8_ind INTERACT ((ind_3Tdiff_alutm OR ind_3Tdiff_alutm_psub) OR ind_3Tdiff_2d8alutm_psub)
m8_ind_conn    = m8_ind NOT PSUB
m8_2d8ind      = metal8a AND indrfdumy_2d8
m8_2d8ind_conn = m8_2d8ind not RFDEV
metal8_0  = metal8a NOT m8_ind
#IFDEF TM1_WIDTH 4
metal7    = metal7_0 OR TM1DUM
metal8    = metal8_0 OR TM2DUM
#ENDIF
#IFDEF TM1_WIDTH 2
metal7    = metal7_0 OR STM1DUM
#IFDEF TM2_WIDTH 2
metal8    = metal8_0 OR STM2DUM
#ELSE
metal8    = metal8_0 OR TM2DUM
#ENDIF
#ENDIF

cross_no_via  = ((((((((INDTEM and m1_ind) and m2_ind) and m3_ind) and m4_ind) and m5_ind) interact V1) interact V2) interact V3) interact V4

topmetal_ind   = m8_ind OR m7_ind
inter_ind      = (m5_ind AND m6_ind) AND m4_ind
metal_ind      = topmetal_ind OR inter_ind

dind_pm =  (topmetal_ind AND TM2TXT) AND TM1TXT
dind_pm_PI = ((dind_pm NOT M6TXT) NOT M5TXT) NOT M4TXT
dind_pm_MI = ((dind_pm AND M6TXT) AND M5TXT) AND M4TXT
dind_B     = ((((m3_ind AND m2_ind) AND m1_ind) AND M3TXT) AND M2TXT) AND M1TXT

topmetal_ind_rdl = m8_ind and rdl_ind
dind_pm_rdl = topmetal_ind_rdl AND TM2TXT

IND_EDGE = CONVEX EDGE m8_ind ANGLE1 >180<270 ANGLE2 >180<270
IND_EXP  = EXPAND EDGE IND_EDGE INSIDE BY 0.001

topmetal_ind_SZ = SIZE topmetal_ind BY 1
indrfdumy_expand_1 = indrfdumy_expand interact topmetal_ind_SZ
indrfdumy_edge_1 = indrfdumy_expand_1 TOUCH EDGE indrfdumy
indrfdumy_edge_1_EXP = expand edge indrfdumy_edge_1 outside by  1
indrfdumy_edge = length indrfdumy > 0
indrfdumy_expand = expand edge indrfdumy_edge outside by 0.001
metal_ind_hole1= HOLES ( metal_ind OR indrfdumy_edge_1_EXP ) INNER EMPTY
metal_ind_hole2= (SIZE metal_ind_hole1 BY 15 UNDEROVER ) and metal_ind_hole1
metal_ind_hole = EXTENTS (size metal_ind_hole2 by 5 underover )
metal_ind_touch= topmetal_ind AND inter_ind

metal_ind_rdl_alutm = (m8_ind or m7_ind) or rdl_ind
metal_ind_hole1_rdl_alutm = holes metal_ind_rdl_alutm INNER EMPTY
metal_ind_hole2_rdl_alutm = size metal_ind_hole1_rdl_alutm BY 4.5 UNDEROVER
metal_ind_hole_rdl_alutm  = (EXTENTS metal_ind_hole2_rdl_alutm) or metal_ind_hole

tm2ind_hole1 = HOLES (m8_ind OR rdl_ind) INNER EMPTY
tm2ind_hole2 = SIZE tm2ind_hole1 BY 3.33 UNDEROVER
tm2ind_hole  = EXTENTS tm2ind_hole2

spi_pm_PI = ((((metal8a and INDMY) NOT PSUB_OV) INTERACT rdl_ind) NOT INTERACT TM2TXT) not interact iAA
spi_pm_MI = (((metal8a and INDMY) NOT PSUB_OV) INTERACT rdl_ind) INTERACT TM2TXT
dind_2D8  = ((metal8a AND TM2TXT) NOT RFDEV) interact AA
dind_ALPA = ((rdl_ind and metal8a) NOT TM2TXT) NOT RFDEV
dind_CEN  = ((metal4a and metal5a) and metal6a) and ALPATXT
spi_2d8_PI = ((((metal8a and INDMY) NOT RFDEV) INTERACT rdl_ind) NOT INTERACT TM2TXT) not interact AA
spi_2d8_MI = ((((metal8a and INDMY) NOT RFDEV) INTERACT rdl_ind) INTERACT TM2TXT) not interact AA

//layers for radius and turns calcu
INDR_Radius   = EXTENTS ((INDR AND INDMY) AND RFDEV)
rf_alpa_count = RDL AND NFDMK
rf_m8       = (metal8a OR TM2) AND RFDEV
rf_m8_count = (rf_m8 AND INDMY) AND NFDMK
#ENDIF

#IFDEF TOP_METAL_NUM single
m1_ind    = metal1b AND indrfdumy
metal1_0  = metal1b NOT m1_ind
metal1    = metal1_0 OR M1DUM
m2_ind    = metal2b AND indrfdumy
metal2_0  = metal2b NOT m2_ind
metal2    = metal2_0 OR M2DUM
m3_ind    = metal3b AND indrfdumy
metal3_0  = metal3b NOT m3_ind
metal3    = metal3_0 OR M3DUM
m4_ind    = metal4b AND indrfdumy
metal4_0  = metal4b NOT m4_ind
metal4    = metal4_0 OR M4DUM
m5_ind    = metal5b AND indrfdumy
metal5_0  = metal5b NOT m5_ind
metal5    = metal5_0 OR M5DUM
m6_ind    = metal6b AND indrfdumy
metal6_0  = metal6b NOT m6_ind
metal6    = metal6_0 OR M6DUM
m7_ind    = metal7a AND indrfdumy
m7_ind_conn = m7_ind NOT PSUB
metal7_0  = metal7a NOT m7_ind
metal7    = metal7_0 OR M7DUM
m8_ind         = metal8a AND indrfdumy
m8_ind_rc = m8_ind INTERACT ((ind_3Tdiff_alutm OR ind_3Tdiff_alutm_psub) OR ind_3Tdiff_2d8alutm_psub)
m8_ind_conn    = m8_ind NOT PSUB
m8_2d8ind      = metal8a AND indrfdumy_2d8
m8_2d8ind_conn = m8_2d8ind NOT RFDEV
metal8_0  = metal8a NOT m8_ind
#IFDEF TM2_WIDTH 2
metal8    = metal8_0 OR STM2DUM
#ELSE
metal8    = metal8_0 OR TM2DUM
#ENDIF

cross_no_via  = ((((((((((INDTEM and m1_ind) and m2_ind) and m3_ind) and m4_ind) and m5_ind) and m6_ind) interact V1) interact V2) interact V3) interact V4) interact V5

topmetal_ind   = copy m8_ind
inter_ind      = ((m7_ind AND m6_ind) AND m5_ind) AND m4_ind
metal_ind      = topmetal_ind OR inter_ind

dind_pm    = topmetal_ind AND TM2TXT
dind_pm_PI = (((dind_pm NOT M7TXT) NOT M6TXT) NOT M5TXT) NOT M4TXT
dind_pm_MI = (((dind_pm AND M7TXT) AND M6TXT) AND M5TXT) AND M4TXT
dind_B     = ((((m3_ind AND m2_ind) AND m1_ind) AND M3TXT) AND M2TXT) AND M1TXT

IND_EDGE = CONVEX EDGE topmetal_ind ANGLE1 >180<270 ANGLE2 >180<270
IND_EXP  = EXPAND EDGE IND_EDGE INSIDE BY 0.001

topmetal_ind_rdl    = m8_ind AND rdl_ind
metal_ind_rdl       = topmetal_ind_rdl OR inter_ind
metal_ind_hole1_rdl = HOLES metal_ind_rdl INNER EMPTY
metal_ind_hole2_rdl = SIZE metal_ind_hole1_rdl BY 4.5 UNDEROVER
metal_ind_hole_rdl  = (EXTENTS metal_ind_hole2_rdl) or metal_ind_hole
metal_ind_touch_rdl = topmetal_ind_rdl AND inter_ind

topmetal_ind_SZ = SIZE topmetal_ind BY 1
indrfdumy_expand_1 = indrfdumy_expand interact topmetal_ind_SZ
indrfdumy_edge_1 = indrfdumy_expand_1 TOUCH EDGE indrfdumy
indrfdumy_edge_1_EXP = expand edge indrfdumy_edge_1 outside by  1
indrfdumy_edge = length indrfdumy > 0
indrfdumy_expand = expand edge indrfdumy_edge outside by 0.001
metal_ind_hole1= HOLES ( metal_ind OR indrfdumy_edge_1_EXP ) INNER EMPTY
metal_ind_hole2= (SIZE metal_ind_hole1 BY 15 UNDEROVER ) and metal_ind_hole1
metal_ind_hole = EXTENTS (size metal_ind_hole2 by 5 underover )
metal_ind_touch= topmetal_ind AND inter_ind

metal_ind_rdl_alutm = m8_ind or rdl_ind
metal_ind_hole1_rdl_alutm = holes metal_ind_rdl_alutm INNER EMPTY
metal_ind_hole2_rdl_alutm = size metal_ind_hole1_rdl_alutm BY 4.5 UNDEROVER
metal_ind_hole_rdl_alutm  = (EXTENTS metal_ind_hole2_rdl_alutm) or metal_ind_hole

dind_pm_rdl    = topmetal_ind_rdl AND TM2TXT
dind_pm_PI_rdl = (((dind_pm_rdl NOT M7TXT) NOT M6TXT) NOT M5TXT) NOT M4TXT
dind_pm_MI_rdl = (((dind_pm_rdl AND M7TXT) AND M6TXT) AND M5TXT) AND M4TXT

tm2ind_hole1 = HOLES (m8_ind OR rdl_ind) INNER EMPTY
tm2ind_hole2 = SIZE tm2ind_hole1 BY 3.33 UNDEROVER
tm2ind_hole  = EXTENTS tm2ind_hole2

spi_pm_PI = ((((metal8a and INDMY) NOT PSUB_OV) INTERACT rdl_ind) NOT INTERACT TM2TXT) not interact iAA
spi_pm_MI = (((metal8a and INDMY) NOT PSUB_OV) INTERACT rdl_ind) INTERACT TM2TXT
dind_2D8  = ((metal8a AND TM2TXT) NOT RFDEV) interact AA
dind_ALPA = ((rdl_ind and metal8a) NOT TM2TXT) NOT RFDEV
dind_CEN  = ((metal5a and metal6a) and metal7a) and ALPATXT
spi_2d8_PI = ((((metal8a and INDMY) NOT RFDEV) INTERACT rdl_ind) NOT INTERACT TM2TXT) not interact AA
spi_2d8_MI = ((((metal8a and INDMY) NOT RFDEV) INTERACT rdl_ind) INTERACT TM2TXT) not interact AA

//layers for radius and turns calcu
INDR_Radius   = EXTENTS ((INDR AND INDMY) AND RFDEV)
rf_alpa_count = RDL AND NFDMK
rf_m8       = (metal8a OR TM2) AND RFDEV
rf_m8_count = (rf_m8 AND INDMY) AND NFDMK
#ENDIF
#ENDIF

#IFDEF TOPMETAL 9
#IFDEF TOP_METAL_NUM double
m1_ind    = metal1b AND indrfdumy
metal1_0  = metal1b NOT m1_ind
metal1    = metal1_0 OR M1DUM
m2_ind    = metal2b AND indrfdumy
metal2_0  = metal2b NOT m2_ind
metal2    = metal2_0 OR M2DUM
m3_ind    = metal3b AND indrfdumy
metal3_0  = metal3b NOT m3_ind
metal3    = metal3_0 OR M3DUM
m4_ind    = metal4b AND indrfdumy
metal4_0  = metal4b NOT m4_ind
metal4    = metal4_0 OR M4DUM
m5_ind    = metal5b AND indrfdumy
metal5_0  = metal5b NOT m5_ind
metal5    = metal5_0 OR M5DUM
m6_ind    = metal6b AND indrfdumy
metal6_0  = metal6b NOT m6_ind
metal6    = metal6_0 OR M6DUM
m7_ind    = metal7a AND indrfdumy
metal7_0  = metal7a NOT m7_ind
metal7    = metal7_0 OR M7DUM
m8_ind    = metal8a AND indrfdumy
m8_ind_conn = m8_ind NOT PSUB
metal8_0  = metal8a NOT m8_ind
m9_ind         = metal9a AND indrfdumy
m9_ind_rc = m9_ind INTERACT ((ind_3Tdiff_alutm OR ind_3Tdiff_alutm_psub) OR ind_3Tdiff_2d8alutm_psub)
m9_ind_conn    = m9_ind NOT PSUB
m9_2d8ind      = metal9a AND indrfdumy_2d8
m9_2d8ind_conn = m9_2d8ind NOT RFDEV
metal9_0  = metal9a NOT m9_ind
#IFDEF TM1_WIDTH 4
metal8    = metal8_0 OR TM1DUM
metal9    = metal9_0 OR TM2DUM
#ENDIF
#IFDEF TM1_WIDTH 2
metal8    = metal8_0 OR STM1DUM
#IFDEF TM2_WIDTH 2
metal9    = metal9_0 OR STM2DUM
#ELSE
metal9    = metal9_0 OR TM2DUM
#ENDIF
#ENDIF

cross_no_via  = ((((((((((INDTEM and m1_ind) and m2_ind) and m3_ind) and m4_ind) and m5_ind) and m6_ind) interact V1) interact V2) interact V3) interact V4) interact V5

topmetal_ind   = m8_ind OR m9_ind
inter_ind      = ((m7_ind AND m6_ind) AND m5_ind) AND m4_ind
metal_ind      = topmetal_ind OR inter_ind

dind_pm =  (topmetal_ind AND TM2TXT) AND TM1TXT
dind_pm_PI = (((dind_pm NOT M7TXT) NOT M6TXT) NOT M5TXT) NOT M4TXT
dind_pm_MI = (((dind_pm AND M7TXT) AND M6TXT) AND M5TXT) AND M4TXT
dind_B     = ((((m3_ind AND m2_ind) AND m1_ind) AND M3TXT) AND M2TXT) AND M1TXT

topmetal_ind_rdl = m9_ind and rdl_ind
dind_pm_rdl = topmetal_ind_rdl AND TM2TXT

IND_EDGE = CONVEX EDGE m9_ind ANGLE1 >180<270 ANGLE2 >180<270
IND_EXP  = EXPAND EDGE IND_EDGE INSIDE BY 0.001

topmetal_ind_SZ = SIZE topmetal_ind BY 1
indrfdumy_expand_1 = indrfdumy_expand interact topmetal_ind_SZ
indrfdumy_edge_1 = indrfdumy_expand_1 TOUCH EDGE indrfdumy
indrfdumy_edge_1_EXP = expand edge indrfdumy_edge_1 outside by  1
indrfdumy_edge = length indrfdumy > 0
indrfdumy_expand = expand edge indrfdumy_edge outside by 0.001
metal_ind_hole1= HOLES ( metal_ind OR indrfdumy_edge_1_EXP ) INNER EMPTY
metal_ind_hole2= (SIZE metal_ind_hole1 BY 15 UNDEROVER ) and metal_ind_hole1
metal_ind_hole = EXTENTS (size metal_ind_hole2 by 5 underover )
metal_ind_touch= topmetal_ind AND inter_ind

metal_ind_rdl_alutm = (m9_ind or m8_ind) or rdl_ind
metal_ind_hole1_rdl_alutm = holes metal_ind_rdl_alutm INNER EMPTY
metal_ind_hole2_rdl_alutm = size metal_ind_hole1_rdl_alutm BY 4.5 UNDEROVER
metal_ind_hole_rdl_alutm  = (EXTENTS metal_ind_hole2_rdl_alutm) or metal_ind_hole

tm2ind_hole1 = HOLES (m9_ind OR rdl_ind) INNER EMPTY
tm2ind_hole2 = SIZE tm2ind_hole1 BY 3.33 UNDEROVER
tm2ind_hole  = EXTENTS tm2ind_hole2

spi_pm_PI = ((((metal9a and INDMY) NOT PSUB_OV) INTERACT rdl_ind) NOT INTERACT TM2TXT) not interact iAA
spi_pm_MI = (((metal9a and INDMY) NOT PSUB_OV) INTERACT rdl_ind) INTERACT TM2TXT
dind_2D8  = ((metal9a AND TM2TXT) NOT RFDEV) interact AA
dind_ALPA = ((rdl_ind and metal9a) NOT TM2TXT) NOT RFDEV
dind_CEN  = ((metal5a and metal6a) and metal7a) and ALPATXT
spi_2d8_PI = ((((metal9a and INDMY) NOT RFDEV) INTERACT rdl_ind) NOT INTERACT TM2TXT) not interact AA
spi_2d8_MI = ((((metal9a and INDMY) NOT RFDEV) INTERACT rdl_ind) INTERACT TM2TXT) not interact AA

//layers for radius and turns calcu
INDR_Radius   = EXTENTS ((INDR AND INDMY) AND RFDEV)
rf_alpa_count = RDL AND NFDMK
rf_m9       = (metal9a OR TM2) AND RFDEV
rf_m9_count = (rf_m9 AND INDMY) AND NFDMK
#ENDIF

#IFDEF TOP_METAL_NUM single
m1_ind    = metal1b AND indrfdumy
metal1_0  = metal1b NOT m1_ind
metal1    = metal1_0 OR M1DUM
m2_ind    = metal2b AND indrfdumy
metal2_0  = metal2b NOT m2_ind
metal2    = metal2_0 OR M2DUM
m3_ind    = metal3b AND indrfdumy
metal3_0  = metal3b NOT m3_ind
metal3    = metal3_0 OR M3DUM
m4_ind    = metal4b AND indrfdumy
metal4_0  = metal4b NOT m4_ind
metal4    = metal4_0 OR M4DUM
m5_ind    = metal5b AND indrfdumy
metal5_0  = metal5b NOT m5_ind
metal5    = metal5_0 OR M5DUM
m6_ind    = metal6b AND indrfdumy
metal6_0  = metal6b NOT m6_ind
metal6    = metal6_0 OR M6DUM
m7_ind    = metal7a AND indrfdumy
metal7_0  = metal7a NOT m7_ind
metal7    = metal7_0 OR M7DUM
m8_ind    = metal8a AND indrfdumy
m8_ind_conn = m8_ind NOT PSUB
metal8_0  = metal8a NOT m8_ind
metal8    = metal8_0 OR M8DUM
m9_ind         = metal9a AND indrfdumy
m9_ind_rc = m9_ind INTERACT ((ind_3Tdiff_alutm OR ind_3Tdiff_alutm_psub) OR ind_3Tdiff_2d8alutm_psub)
m9_ind_conn    = m9_ind NOT PSUB
m9_2d8ind      = metal9a AND indrfdumy_2d8
m9_2d8ind_conn = m9_2d8ind NOT RFDEV
metal9_0  = metal9a NOT m9_ind
#IFDEF TM2_WIDTH 2
metal9    = metal9_0 OR STM2DUM
#ELSE
metal9    = metal9_0 OR TM2DUM
#ENDIF

cross_no_via  = ((((((((((((INDTEM and m1_ind) and m2_ind) and m3_ind) and m4_ind) and m5_ind) and m6_ind) and m7_ind) interact V1) interact V2) interact V3) interact V4) interact V5) interact V6

topmetal_ind   = copy m9_ind
inter_ind      = (((m8_ind AND m7_ind) AND m6_ind) AND m5_ind) AND m4_ind
metal_ind      = topmetal_ind OR inter_ind

dind_pm    = topmetal_ind AND TM2TXT
dind_pm_PI = ((((dind_pm NOT M8TXT) NOT M7TXT) NOT M6TXT) NOT M5TXT) NOT M4TXT
dind_pm_MI = ((((dind_pm AND M8TXT) AND M7TXT) AND M6TXT) AND M5TXT) AND M4TXT
dind_B     = ((((m3_ind AND m2_ind) AND m1_ind) AND M3TXT) AND M2TXT) AND M1TXT

IND_EDGE = CONVEX EDGE topmetal_ind ANGLE1 >180<270 ANGLE2 >180<270
IND_EXP  = EXPAND EDGE IND_EDGE INSIDE BY 0.001

topmetal_ind_rdl    = m9_ind AND rdl_ind
metal_ind_rdl       = topmetal_ind_rdl OR inter_ind
metal_ind_hole1_rdl = HOLES metal_ind_rdl INNER EMPTY
metal_ind_hole2_rdl = SIZE metal_ind_hole1_rdl BY 4.5 UNDEROVER
metal_ind_hole_rdl  = (EXTENTS metal_ind_hole2_rdl) or metal_ind_hole
metal_ind_touch_rdl = topmetal_ind_rdl AND inter_ind

topmetal_ind_SZ = SIZE topmetal_ind BY 1
indrfdumy_expand_1 = indrfdumy_expand interact topmetal_ind_SZ
indrfdumy_edge_1 = indrfdumy_expand_1 TOUCH EDGE indrfdumy
indrfdumy_edge_1_EXP = expand edge indrfdumy_edge_1 outside by  1
indrfdumy_edge = length indrfdumy > 0
indrfdumy_expand = expand edge indrfdumy_edge outside by 0.001
metal_ind_hole1= HOLES ( metal_ind OR indrfdumy_edge_1_EXP ) INNER EMPTY
metal_ind_hole2= (SIZE metal_ind_hole1 BY 15 UNDEROVER ) and metal_ind_hole1
metal_ind_hole = EXTENTS (size metal_ind_hole2 by 5 underover )
metal_ind_touch= topmetal_ind AND inter_ind

metal_ind_rdl_alutm = m9_ind or rdl_ind
metal_ind_hole1_rdl_alutm = holes metal_ind_rdl_alutm INNER EMPTY
metal_ind_hole2_rdl_alutm = size metal_ind_hole1_rdl_alutm BY 4.5 UNDEROVER
metal_ind_hole_rdl_alutm  = (EXTENTS metal_ind_hole2_rdl_alutm) or metal_ind_hole

dind_pm_rdl    = topmetal_ind_rdl AND TM2TXT
dind_pm_PI_rdl = ((((dind_pm_rdl NOT M8TXT) NOT M7TXT) NOT M6TXT) NOT M5TXT) NOT M4TXT
dind_pm_MI_rdl = ((((dind_pm_rdl AND M8TXT) AND M7TXT) AND M6TXT) AND M5TXT) AND M4TXT

tm2ind_hole1 = HOLES (m9_ind OR rdl_ind) INNER EMPTY
tm2ind_hole2 = SIZE tm2ind_hole1 BY 3.33 UNDEROVER
tm2ind_hole  = EXTENTS tm2ind_hole2

spi_pm_PI = ((((metal9a and INDMY) NOT PSUB_OV) INTERACT rdl_ind) NOT INTERACT TM2TXT) not interact iAA
spi_pm_MI = (((metal9a and INDMY) NOT PSUB_OV) INTERACT rdl_ind) INTERACT TM2TXT
dind_2D8  = ((metal9a AND TM2TXT) NOT RFDEV) interact AA
dind_ALPA = ((rdl_ind and metal9a) NOT TM2TXT) NOT RFDEV
dind_CEN  = ((metal6a and metal7a) and metal8a) and ALPATXT
spi_2d8_PI = ((((metal9a and INDMY) NOT RFDEV) INTERACT rdl_ind) NOT INTERACT TM2TXT) not interact AA
spi_2d8_MI = ((((metal9a and INDMY) NOT RFDEV) INTERACT rdl_ind) INTERACT TM2TXT) not interact AA

//layers for radius and turns calcu
INDR_Radius   = EXTENTS ((INDR AND INDMY) AND RFDEV)
rf_alpa_count = RDL AND NFDMK
rf_m9       = (metal9a OR TM2) AND RFDEV
rf_m9_count = (rf_m9 AND INDMY) AND NFDMK
#ENDIF
#ENDIF

#IFDEF TOPMETAL 10
#IFDEF TOP_METAL_NUM double
m1_ind    = metal1b AND indrfdumy
metal1_0  = metal1b NOT m1_ind
metal1    = metal1_0 OR M1DUM
m2_ind    = metal2b AND indrfdumy
metal2_0  = metal2b NOT m2_ind
metal2    = metal2_0 OR M2DUM
m3_ind    = metal3b AND indrfdumy
metal3_0  = metal3b NOT m3_ind
metal3    = metal3_0 OR M3DUM
m4_ind    = metal4b AND indrfdumy
metal4_0  = metal4b NOT m4_ind
metal4    = metal4_0 OR M4DUM
m5_ind    = metal5b AND indrfdumy
metal5_0  = metal5b NOT m5_ind
metal5    = metal5_0 OR M5DUM
m6_ind    = metal6b AND indrfdumy
metal6_0  = metal6b NOT m6_ind
metal6    = metal6_0 OR M6DUM
m7_ind    = metal7a AND indrfdumy
metal7_0  = metal7a NOT m7_ind
metal7    = metal7_0 OR M7DUM
m8_ind    = metal8a AND indrfdumy
metal8_0  = metal8a NOT m8_ind
metal8    = metal8_0 OR M8DUM
m9_ind    = metal9a AND indrfdumy
m9_ind_conn = m9_ind NOT PSUB
metal9_0  = metal9a NOT m9_ind
m10_ind         = metal10a AND indrfdumy
m10_ind_rc      = m10_ind INTERACT ((ind_3Tdiff_alutm OR ind_3Tdiff_alutm_psub) OR ind_3Tdiff_2d8alutm_psub)
m10_ind_conn    = m10_ind NOT PSUB
m10_2d8ind      = metal10a AND indrfdumy_2d8
m10_2d8ind_conn = m10_2d8ind NOT RFDEV
metal10_0 = metal10a NOT m10_ind
#IFDEF TM1_WIDTH 4
metal9    = metal9_0 OR TM1DUM
metal10   = metal10_0 OR TM2DUM
#ENDIF
#IFDEF TM1_WIDTH 2
metal9    = metal9_0 OR STM1DUM
#IFDEF TM2_WIDTH 2
metal10   = metal10_0 OR STM2DUM
#ELSE
metal10   = metal10_0 OR TM2DUM
#ENDIF
#ENDIF

cross_no_via  = ((((((((((((INDTEM and m1_ind) and m2_ind) and m3_ind) and m4_ind) and m5_ind) and m6_ind) and m7_ind) interact V1) interact V2) interact V3) interact V4) interact V5) interact V6

topmetal_ind   = m9_ind OR m10_ind
inter_ind      = (((m8_ind AND m7_ind) AND m6_ind) AND m5_ind) AND m4_ind
metal_ind      = topmetal_ind OR inter_ind

dind_pm =  (topmetal_ind AND TM2TXT) AND TM1TXT
dind_pm_PI = ((((dind_pm NOT M8TXT) NOT M7TXT) NOT M6TXT) NOT M5TXT) NOT M4TXT
dind_pm_MI = ((((dind_pm AND M8TXT) AND M7TXT) AND M6TXT) AND M5TXT) AND M4TXT
dind_B     = ((((m3_ind AND m2_ind) AND m1_ind) AND M3TXT) AND M2TXT) AND M1TXT

topmetal_ind_rdl = m10_ind and rdl_ind
dind_pm_rdl = topmetal_ind_rdl AND TM2TXT

IND_EDGE = CONVEX EDGE m10_ind ANGLE1 >180<270 ANGLE2 >180<270
IND_EXP  = EXPAND EDGE IND_EDGE INSIDE BY 0.001

topmetal_ind_SZ = SIZE topmetal_ind BY 1
indrfdumy_expand_1 = indrfdumy_expand interact topmetal_ind_SZ
indrfdumy_edge_1 = indrfdumy_expand_1 TOUCH EDGE indrfdumy
indrfdumy_edge_1_EXP = expand edge indrfdumy_edge_1 outside by  1
indrfdumy_edge = length indrfdumy > 0
indrfdumy_expand = expand edge indrfdumy_edge outside by 0.001
metal_ind_hole1= HOLES ( metal_ind OR indrfdumy_edge_1_EXP ) INNER EMPTY
metal_ind_hole2= (SIZE metal_ind_hole1 BY 15 UNDEROVER ) and metal_ind_hole1
metal_ind_hole = EXTENTS (size metal_ind_hole2 by 5 underover )
metal_ind_touch= topmetal_ind AND inter_ind

metal_ind_rdl_alutm = (m10_ind or m9_ind) or rdl_ind
metal_ind_hole1_rdl_alutm = holes metal_ind_rdl_alutm INNER EMPTY
metal_ind_hole2_rdl_alutm = size metal_ind_hole1_rdl_alutm BY 4.5 UNDEROVER
metal_ind_hole_rdl_alutm  = (EXTENTS metal_ind_hole2_rdl_alutm) or metal_ind_hole

tm2ind_hole1 = HOLES (m10_ind OR rdl_ind) INNER EMPTY
tm2ind_hole2 = SIZE tm2ind_hole1 BY 2.22 UNDEROVER
tm2ind_hole  = EXTENTS tm2ind_hole2

spi_pm_PI = ((((metal10a and INDMY) NOT PSUB_OV) INTERACT rdl_ind) NOT INTERACT TM2TXT) not interact iAA
spi_pm_MI = (((metal10a and INDMY) NOT PSUB_OV) INTERACT rdl_ind) INTERACT TM2TXT
dind_2D8  = ((metal10a AND TM2TXT) NOT RFDEV) interact AA
dind_ALPA = ((rdl_ind and metal10a) NOT TM2TXT) NOT RFDEV
dind_CEN  = ((metal6a and metal7a) and metal8a) and ALPATXT
spi_2d8_PI = ((((metal10a and INDMY) NOT RFDEV) INTERACT rdl_ind) NOT INTERACT TM2TXT) not interact AA
spi_2d8_MI = ((((metal10a and INDMY) NOT RFDEV) INTERACT rdl_ind) INTERACT TM2TXT) not interact AA

//layers for radius and turns calcu
INDR_Radius   = EXTENTS ((INDR AND INDMY) AND RFDEV)
rf_alpa_count = RDL AND NFDMK
rf_m10       = (metal10a OR TM2) AND RFDEV
rf_m10_count = (rf_m10 AND INDMY) AND NFDMK
#ENDIF
#ENDIF

ntd1      = ndif AND nwell
//ptd       = (((pdif AND pwell) NOT pld_gate) NOT AADUM) NOT GT
ptd       = (((pdif AND pwell) NOT pld_gate) NOT GT) NOT MARKS
ndiff   = ndif AND pwell
pdiff   = pdif AND nwell

TEMPA = ndifi AND GT
TEMP_SN = ndifi NOT TEMPA
TEMPB = pdifi AND GT
TEMP_SP = pdifi NOT TEMPB

ngate = (poly1 AND ndiff) touch TEMP_SN==2
pgate = (poly1 AND pdiff) touch TEMP_SP==2
cngate  = (poly1 AND ntd1) touch TEMP_SN==2

gate    = (((ngate OR pgate) OR cngate) OR nld_gate) OR pld_gate 
gate_core = (gate NOT DG) NOT TG

//gate of egl
ngate_egl4  = (poly1_egl4 AND ndiff) touch TEMP_SN==2
pgate_egl4  = (poly1_egl4 AND pdiff) touch TEMP_SP==2
cngate_egl4 = (poly1_egl4 AND ntd1) touch TEMP_SN==2
gate_egl4      = (ngate_egl4 OR pgate_egl4) OR cngate_egl4
gate_core_egl4 = (gate_egl4 NOT DG) NOT TG
ngate_egl4_box  = poly1_egl4_box AND ndiff
pgate_egl4_box  = poly1_egl4_box AND pdiff

ngate_egl1  = (poly1_egl1 AND ndiff) touch TEMP_SN==2
pgate_egl1  = (poly1_egl1 AND pdiff) touch TEMP_SP==2
cngate_egl1 = (poly1_egl1 AND ntd1) touch TEMP_SN==2
gate_egl1      = (ngate_egl1 OR pgate_egl1) OR cngate_egl1
gate_core_egl1 = (gate_egl1 NOT DG) NOT TG
ngate_egl1_box  = poly1_egl1_box AND ndiff
pgate_egl1_box  = poly1_egl1_box AND pdiff
//gate of egl 

#IFDEF RC_RUN FALSE
//poly_int  = copy poly1
poly_int_1  = copy poly1
poly_int_2  = poly1_egl4 OR poly1_egl1
poly_int    = poly_int_1 OR poly_int_2
#ENDIF

#IFDEF RC_RUN TRUE
//poly_int  = poly1 NOT gate 
poly_int_1  = poly1 NOT gate
poly_int_2  = (poly1_egl4 NOT gate_egl4) OR (poly1_egl1 NOT gate_egl1)
poly_int    = poly_int_1 OR poly_int_2
#ENDIF

npoly   = poly_int AND SN
ppoly   = poly_int NOT SN

//nsd1    = ndiff NOT ngate
//psd1    = pdiff NOT pgate
//ntd     = ((ntd1 NOT cngate) NOT AADUM) not GT
//ntd     = (ntd1 NOT cngate) NOT GT

nsd1    = ndiff NOT ((ngate OR ngate_egl4) OR ngate_egl1)
psd1    = pdiff NOT ((pgate OR pgate_egl4) OR pgate_egl1)
ntd     = (ntd1 NOT ((cngate OR cngate_egl4) OR cngate_egl1)) NOT GT


//*Diode
dio_np  = nsd1 INSIDE DSTR
dio_pn  = psd1 INSIDE DSTR

ND_core = (dio_np NOT DG) NOT TG  
ND_IO1  = (dio_np AND DG) NOT TG
ND_IO2  = (dio_np NOT DG) AND TG

PD_core = (dio_pn NOT DG) NOT TG
PD_IO1  = (dio_pn AND DG) NOT TG
PD_IO2  = (dio_pn NOT DG) AND TG

ntdio_core_old    = (((ND_core AND PSUB) NOT VTNH) NOT LVN) NOT UHVT
ntdio_IO1_old     = (((ND_IO1  AND PSUB) NOT VTNH) NOT LVN) NOT UHVT
ntdio_IO2_old     = ((((ND_IO2  AND PSUB) NOT VTNH) NOT LVN) NOT OVERPL) NOT UHVT
ntdio_IO2_over= ((((ND_IO2  AND PSUB) NOT VTNH) NOT LVN) AND OVERPL) NOT UHVT

ndio_core_old     = ((((ND_core NOT PSUB) NOT VTNH) NOT LVN) NOT DNW) NOT UHVT
ndio_core_hvt_old = (((ND_core NOT PSUB) AND VTNH) NOT LVN) NOT UHVT
ndio_core_lvt_old = (((ND_core NOT PSUB) NOT VTNH) AND LVN) NOT UHVT
ndio_core_ull_old = ((((ND_core NOT PSUB) AND VTNH) NOT LVN) AND UHVT) NOT VTPH
ndio_IO1_old      = (((ND_IO1  NOT PSUB) NOT VTNH) NOT LVN) NOT UHVT
ndio_IO2_old      = ((((ND_IO2  NOT PSUB) NOT VTNH) NOT LVN) NOT OVERPL) NOT UHVT
ndio_IO2_over = ((((ND_IO2  NOT PSUB) NOT VTNH) NOT LVN) AND OVERPL) NOT UHVT

pdio_core_old     = ((PD_core NOT VTPH) NOT LVP) NOT UHVT
pdio_core_hvt_old = ((PD_core AND VTPH) NOT LVP) NOT UHVT
pdio_core_lvt_old = ((PD_core NOT VTPH) AND LVP) NOT UHVT
pdio_core_ull_old = (((PD_core AND VTPH) NOT LVP) AND UHVT) NOT VTNH
pdio_IO1_old      = ((PD_IO1  NOT VTPH) NOT LVP) NOT UHVT
pdio_IO2_old      = (((PD_IO2  NOT VTPH) NOT LVP) NOT OVERPL) NOT UHVT
pdio_IO2_over = (((PD_IO2  NOT VTPH) NOT LVP) AND OVERPL) NOT UHVT

dio_nw    = nwell AND DSTR
//dionw   = dio_nw NOT INTERACT dio_pn
dionw_1   = dio_nw NOT INTERACT dio_pn 
dionw_2   = dionw_1 NOT INTERACT dio_np
dionw_old     = dionw_2 NOT INTERACT DNW

//define n+/rwell   rwell/dnw  dnw/psub    diode
dnd12_core_old    = ND_core INTERACT rwell  
rwd12_core_1  = (rwell AND DSTR) NOT INTERACT ND_core 
rwd12_core_old    = rwd12_core_1 INTERACT ptd
dnwd12_core_old   = (NW INTERACT (DNW INSIDE DSTR)) INTERACT dnwd_psub  

//nsd   = nsd1 NOT dio_np
nsd2    = nsd1 NOT dio_np
psd2    = psd1 NOT dio_pn


//*Parasitic Diode
parasitic_rwell1  = (((rwell NOT INTERACT DMPNP) NOT rwd12_core) NOT INTERACT pld50) NOT INTERACT RFDEV
parasitic_rwell2  = ((((rwell INTERACT RFDEV) NOT INTERACT ND_core) NOT INTERACT VARMOS) not interact RFDN6T) not interact RFDN5T
parasitic_rwell4  = ((((rwell INTERACT RFDEV) NOT INTERACT ND_core) NOT INTERACT RFDN6T) NOT INTERACT RFDN5T) not interact VARMOS
parasitic_rwell   = (parasitic_rwell1 OR parasitic_rwell2) OR parasitic_rwell4

/*parasitic_dnw1  = DNW INTERACT DNWTR
parasitic_dnw2  = DNW INTERACT ((RFDEV NOT INTERACT VARMOS) NOT INTERACT RFDN6T)
parasitic_dnw3  = DNW INTERACT (DMPNP NOT INTERACT RFDEV) 
parasitic_dnw   = (parasitic_dnw1 OR parasitic_dnw2) OR parasitic_dnw3
*/
parasitic_dnw1  = (DNW NOT INTERACT RFDEV) NOT INTERACT dnwd12_core
//parasitic_dnw1  = DNW INTERACT DNWTR
parasitic_dnw2  = DNW INTERACT (((RFDEV NOT INTERACT VARMOS) NOT INTERACT RFDN6T) NOT INTERACT RFDN5T)
//parasitic_dnw3  = DNW INTERACT (DMPNP NOT INTERACT RFDEV)
//parasitic_dnw4  = DNW INTERACT (nld_gate or pld_gate)
parasitic_dnw   = parasitic_dnw1 OR parasitic_dnw2

/*parasitic_nw1   = nwell NOT INTERACT DSTR
parasitic_nw2   = parasitic_nw1 NOT INTERACT dio_pn
parasitic_nw3   = parasitic_nw2 ENCLOSE pgate
parasitic_nw    = ((parasitic_nw3 NOT INTERACT DNW) NOT INTERACT VARMOS) interact dnwd_psub == 1
*/

parasitic_nw1  = nwell ENCLOSE ((pgate OR pgate_egl4) OR pgate_egl1)
parasitic_nw2  = ((((parasitic_nw1 NOT INTERACT DNW) NOT INTERACT VARMOS) NOT INTERACT RFDN5T) not interact RFDN6T) interact dnwd_psub == 1
parasitic_nw3  = (nwell INTERACT DSTR) INTERACT dio_pn
parasitic_nw   = (parasitic_nw2 OR parasitic_nw3) interact dnwd_psub ==1


//*BJT
pnpemit = psd2  AND DMPNP
pnpbase = nwell INTERACT pnpemit
collsur = pwell TOUCH pnpbase
pnpcoll    = collsur OR pnpbase
//pnpcoll = STAMP coll BY pwell

PNP_core_b    = ((pnpemit NOT DG) NOT TG ) AND NOSHR
PNP_core_b_sh = ((pnpemit NOT DG) NOT TG ) NOT NOSHR
PNP_IO1_b     = ((pnpemit AND DG) NOT TG ) AND NOSHR
PNP_IO1_b_sh  = ((pnpemit AND DG) NOT TG ) NOT NOSHR
PNP_IO2_b     = ((pnpemit NOT DG) AND TG ) AND NOSHR
PNP_IO2_b_sh  = ((pnpemit NOT DG) AND TG ) NOT NOSHR

PNPCOREA4_b   = AREA PNP_core_b >4.8 <5.0
PNPCOREA4_old     = PNPCOREA4_b NOT MOSCKT
PNPCOREA4_mis_old = PNPCOREA4_b AND MOSCKT
PNPCOREA25_b  = AREA PNP_core_b >30.25 <31.0
PNPCOREA25_old    = PNPCOREA25_b NOT MOSCKT
PNPCOREA25_mis_old= PNPCOREA25_b AND MOSCKT
PNPCOREA100_b = AREA PNP_core_b >123.2 <124.0
PNPCOREA100_old   = PNPCOREA100_b NOT MOSCKT
PNPCOREA100_mis_old=PNPCOREA100_b AND MOSCKT

PNPIO1A4_b    = AREA PNP_IO1_b >4.8 <5.0
PNPIO1A4_old      = PNPIO1A4_b NOT MOSCKT
PNPIO1A4_mis_old  = PNPIO1A4_b AND MOSCKT
PNPIO1A25_b   = AREA PNP_IO1_b >30.25 <31.0
PNPIO1A25_old     = PNPIO1A25_b NOT MOSCKT
PNPIO1A25_mis_old = PNPIO1A25_b AND MOSCKT
PNPIO1A100_b  = AREA PNP_IO1_b >123.2 <124.0
PNPIO1A100_old    = PNPIO1A100_b NOT MOSCKT
PNPIO1A100_mis_old= PNPIO1A100_b AND MOSCKT

PNPIO2A4_b    = AREA PNP_IO2_b >4.8 <5.0
PNPIO2A4_old      = PNPIO2A4_b NOT MOSCKT
PNPIO2A4_mis_old  = PNPIO2A4_b AND MOSCKT
PNPIO2A25_b   = AREA PNP_IO2_b >30.25 <31.0
PNPIO2A25_old     = PNPIO2A25_b NOT MOSCKT
PNPIO2A25_mis_old = PNPIO2A25_b AND MOSCKT
PNPIO2A100_b  = AREA PNP_IO2_b >123.2 <124.0
PNPIO2A100_old    = PNPIO2A100_b NOT MOSCKT
PNPIO2A100_mis_old= PNPIO2A100_b AND MOSCKT

PNPCOREA4_b_sh    = AREA PNP_core_b_sh >3.9 <4.1
PNPCOREA4_sh_old      = PNPCOREA4_b_sh NOT MOSCKT
PNPCOREA4_mis_sh_old  = PNPCOREA4_b_sh AND MOSCKT
PNPCOREA25_b_sh   = AREA PNP_core_b_sh >24.9 <25.1
PNPCOREA25_sh_old     = PNPCOREA25_b_sh NOT MOSCKT
PNPCOREA25_mis_sh_old = PNPCOREA25_b_sh AND MOSCKT
PNPCOREA100_b_sh  = AREA PNP_core_b_sh >99.9 <100.1
PNPCOREA100_sh_old    = PNPCOREA100_b_sh NOT MOSCKT
PNPCOREA100_mis_sh_old= PNPCOREA100_b_sh AND MOSCKT

PNPIO1A4_b_sh     = AREA PNP_IO1_b_sh >3.9 <4.1
PNPIO1A4_sh_old       = PNPIO1A4_b_sh NOT MOSCKT
PNPIO1A4_mis_sh_old   = PNPIO1A4_b_sh AND MOSCKT
PNPIO1A25_b_sh    = AREA PNP_IO1_b_sh >24.9 <25.1
PNPIO1A25_sh_old      = PNPIO1A25_b_sh NOT MOSCKT
PNPIO1A25_mis_sh_old  = PNPIO1A25_b_sh AND MOSCKT
PNPIO1A100_b_sh   = AREA PNP_IO1_b_sh >99.9 <100.1
PNPIO1A100_sh_old     = PNPIO1A100_b_sh NOT MOSCKT
PNPIO1A100_mis_sh_old = PNPIO1A100_b_sh AND MOSCKT

PNPIO2A4_b_sh     = AREA PNP_IO2_b_sh >3.9 <4.1
PNPIO2A4_sh_old       = PNPIO2A4_b_sh NOT MOSCKT
PNPIO2A4_mis_sh_old   = PNPIO2A4_b_sh AND MOSCKT
PNPIO2A25_b_sh    = AREA PNP_IO2_b_sh >24.9 <25.1
PNPIO2A25_sh_old      = PNPIO2A25_b_sh NOT MOSCKT
PNPIO2A25_mis_sh_old  = PNPIO2A25_b_sh AND MOSCKT
PNPIO2A100_b_sh   = AREA PNP_IO2_b_sh >99.9 <100.1
PNPIO2A100_sh_old     = PNPIO2A100_b_sh NOT MOSCKT
PNPIO2A100_mis_sh_old = PNPIO2A100_b_sh AND MOSCKT

dnwnpn      = DNW  AND DMPNP
npnemit     = nsd2 INTERACT dnwnpn
nwell1      = nwell INTERACT DNW 
dnwell      = DNW OR nwell1
//dnwell      = STAMP dnw1 BY nwell

NPN_core_b = ((npnemit NOT DG) NOT TG) AND NOSHR
NPN_core_b_sh = ((npnemit NOT DG) NOT TG) NOT NOSHR
NPN_IO1_b  = ((npnemit AND DG) NOT TG) AND NOSHR
NPN_IO1_b_sh  = ((npnemit AND DG) NOT TG) NOT NOSHR
NPN_IO2_b  = ((npnemit NOT DG) AND TG) AND NOSHR
NPN_IO2_b_sh  = ((npnemit NOT DG) AND TG) NOT NOSHR

NPNCOREA4_b   = AREA NPN_core_b >4.8 <5.0
NPNCOREA4_old     = NPNCOREA4_b NOT MOSCKT
NPNCOREA4_mis_old = NPNCOREA4_b AND MOSCKT
NPNCOREA25_b  = AREA NPN_core_b >30.25 <31.0
NPNCOREA25_old    = NPNCOREA25_b NOT MOSCKT
NPNCOREA25_mis_old= NPNCOREA25_b AND MOSCKT
NPNCOREA100_b = AREA NPN_core_b >123.2 <124.0
NPNCOREA100_old   = NPNCOREA100_b NOT MOSCKT
NPNCOREA100_mis_old=NPNCOREA100_b AND MOSCKT

NPNIO1A4_b    = AREA NPN_IO1_b >4.8 <5.0
NPNIO1A4_old      = NPNIO1A4_b NOT MOSCKT
NPNIO1A4_mis_old  = NPNIO1A4_b AND MOSCKT
NPNIO1A25_b   = AREA NPN_IO1_b >30.25 <31.0
NPNIO1A25_old     = NPNIO1A25_b NOT MOSCKT
NPNIO1A25_mis_old = NPNIO1A25_b AND MOSCKT
NPNIO1A100_b  = AREA NPN_IO1_b >123.2 <124.0
NPNIO1A100_old    = NPNIO1A100_b NOT MOSCKT
NPNIO1A100_mis_old= NPNIO1A100_b AND MOSCKT

NPNIO2A4_b    = AREA NPN_IO2_b >4.8 <5.0
NPNIO2A4_old      = NPNIO2A4_b NOT MOSCKT
NPNIO2A4_mis_old  = NPNIO2A4_b AND MOSCKT
NPNIO2A25_b   = AREA NPN_IO2_b >30.25 <31.0
NPNIO2A25_old     = NPNIO2A25_b NOT MOSCKT
NPNIO2A25_mis_old = NPNIO2A25_b AND MOSCKT
NPNIO2A100_b  = AREA NPN_IO2_b >123.2 <124.0
NPNIO2A100_old    = NPNIO2A100_b NOT MOSCKT
NPNIO2A100_mis_old= NPNIO2A100_b AND MOSCKT

NPNCOREA4_b_sh     = AREA NPN_core_b_sh >3.9 <4.1
NPNCOREA4_sh_old       = NPNCOREA4_b_sh NOT MOSCKT
NPNCOREA4_mis_sh_old   = NPNCOREA4_b_sh AND MOSCKT
NPNCOREA25_b_sh    = AREA NPN_core_b_sh >24.9 <25.1
NPNCOREA25_sh_old      = NPNCOREA25_b_sh NOT MOSCKT
NPNCOREA25_mis_sh_old  = NPNCOREA25_b_sh AND MOSCKT
NPNCOREA100_b_sh   = AREA NPN_core_b_sh >99.9 <100.1
NPNCOREA100_sh_old     = NPNCOREA100_b_sh NOT MOSCKT
NPNCOREA100_mis_sh_old = NPNCOREA100_b_sh AND MOSCKT

NPNIO1A4_b_sh      = AREA NPN_IO1_b_sh >3.9 <4.1
NPNIO1A4_sh_old        = NPNIO1A4_b_sh NOT MOSCKT
NPNIO1A4_mis_sh_old    = NPNIO1A4_b_sh AND MOSCKT
NPNIO1A25_b_sh     = AREA NPN_IO1_b_sh >24.9 <25.1
NPNIO1A25_sh_old       = NPNIO1A25_b_sh NOT MOSCKT
NPNIO1A25_mis_sh_old   = NPNIO1A25_b_sh AND MOSCKT
NPNIO1A100_b_sh    = AREA NPN_IO1_b_sh >99.9 <100.1
NPNIO1A100_sh_old      = NPNIO1A100_b_sh NOT MOSCKT
NPNIO1A100_mis_sh_old  = NPNIO1A100_b_sh AND MOSCKT

NPNIO2A4_b_sh      = AREA NPN_IO2_b_sh >3.9 <4.1
NPNIO2A4_sh_old        = NPNIO2A4_b_sh NOT MOSCKT
NPNIO2A4_mis_sh_old    = NPNIO2A4_b_sh AND MOSCKT
NPNIO2A25_b_sh     = AREA NPN_IO2_b_sh >24.9 <25.1
NPNIO2A25_sh_old       = NPNIO2A25_b_sh NOT MOSCKT
NPNIO2A25_mis_sh_old   = NPNIO2A25_b_sh AND MOSCKT
NPNIO2A100_b_sh    = AREA NPN_IO2_b_sh >99.9 <100.1
NPNIO2A100_sh_old      = NPNIO2A100_b_sh NOT MOSCKT
NPNIO2A100_mis_sh_old  = NPNIO2A100_b_sh AND MOSCKT

nsd3    = nsd2  NOT npnemit
nsdrf   = nsd3  AND RFDEV
nsdrfd  = nsdrf AND RFMOSD
nsd     = (nsd3  NOT nsdrfd) NOT nld50ll_s

//*Define Junction Varactor
psd3    = psd2  NOT pnpemit

pvardio_core_rf_aux = (((psd3 AND RFDEV) AND VARJUN) NOT DG) NOT TG
pvardio_core_rf     = nwell INTERACT pvardio_core_rf_aux
pvardio_IO1_rf_aux  = (((psd3 AND RFDEV) AND VARJUN) AND DG) NOT TG
pvardio_IO1_rf      = nwell INTERACT pvardio_IO1_rf_aux
pvardio_IO2_rf_aux  = (((psd3 AND RFDEV) AND VARJUN) NOT DG) AND TG
pvardio_IO2_rf      = nwell INTERACT pvardio_IO2_rf_aux

psd4   = ((psd3 NOT pvardio_core_rf_aux) NOT pvardio_IO1_rf_aux) NOT pvardio_IO2_rf_aux
psdrf   = psd4  AND RFDEV
psdrfd  = psdrf AND RFMOSD
psd     = (psd4  NOT psdrfd) NOT pld50ll_s

//*MOSFET
N_core  = (ngate NOT DG) NOT TG
N_IO1   = (ngate AND DG) NOT TG
N_IO2   = (ngate NOT DG) AND TG

P_core  = (pgate NOT DG) NOT TG
P_IO1   = (pgate AND DG) NOT TG
P_IO2   = (pgate NOT DG) AND TG

N_core_egl4  = (ngate_egl4 NOT DG) NOT TG
N_IO2_egl4   = (ngate_egl4 NOT DG) AND TG
P_core_egl4  = (pgate_egl4 NOT DG) NOT TG
P_IO2_egl4   = (pgate_egl4 NOT DG) AND TG 

N_core_egl1  = (ngate_egl1 NOT DG) NOT TG
N_IO2_egl1   = (ngate_egl1 NOT DG) AND TG
P_core_egl1  = (pgate_egl1 NOT DG) NOT TG
P_IO2_egl1   = (pgate_egl1 NOT DG) AND TG

OPC = (OPCBA OR OPCBP) OR OPCBM

//*Define MOS Gate
ntgate_core1    = ((((((((((((N_core AND PSUB) NOT VTNH) NOT LVN) NOT CL) NOT OPC) NOT INST) NOT STSRAM) NOT DNSRAM) NOT RFSRAM) NOT DPSRAM) NOT OVERPL) NOT UNDEPL) NOT UHVT 
ntgate_core2    = ntgate_core1 touch nsd == 2
ntgate_core_old     = (ntgate_core2 NOT MOSCKT) NOT INTERACT AADUM
ntgate_core_mis_old = (ntgate_core2 AND MOSCKT) NOT INTERACT AADUM
ntgate_IO1_1    = ((((((((((((N_IO1  AND PSUB) NOT VTNH) NOT LVN) NOT CL) NOT OPC) NOT INST) NOT STSRAM) NOT DNSRAM) NOT RFSRAM) NOT DPSRAM) NOT OVERPL) NOT UNDEPL) NOT UHVT
ntgate_IO1_2    = ntgate_IO1_1 touch nsd == 2
ntgate_IO1_old      = (ntgate_IO1_2 NOT MOSCKT) NOT INTERACT AADUM
ntgate_IO1_mis_old  = (ntgate_IO1_2 AND MOSCKT) NOT INTERACT AADUM 
ntgate_IO2_1    = ((((((((((((N_IO2  AND PSUB) NOT VTNH) NOT LVN) NOT CL) NOT OPC) NOT INST) NOT STSRAM) NOT DNSRAM) NOT RFSRAM) NOT DPSRAM) NOT OVERPL) NOT UNDEPL) NOT UHVT
ntgate_IO2_2    = ntgate_IO2_1 touch nsd == 2
ntgate_IO2_old      = (ntgate_IO2_2 NOT MOSCKT) NOT INTERACT AADUM
ntgate_IO2_mis_old  = (ntgate_IO2_2 AND MOSCKT) NOT INTERACT AADUM

ntgate_IO2_over_1 = ((((((((((((N_IO2  AND PSUB) NOT VTNH) NOT LVN) NOT CL) NOT OPC) NOT INST) NOT STSRAM) NOT DNSRAM) NOT RFSRAM) NOT DPSRAM) AND OVERPL) NOT UNDEPL) NOT UHVT
ntgate_IO2_over_2 = ntgate_IO2_over_1 touch nsd == 2
ntgate_IO2_over_old   = (ntgate_IO2_over_2 NOT MOSCKT) NOT INTERACT AADUM
ntgate_IO2_over_mis_old = (ntgate_IO2_over_2 AND MOSCKT) NOT INTERACT AADUM

ntgate_IO2_under_1   = ((((((((((((N_IO2  AND PSUB) NOT VTNH) NOT LVN) NOT CL) NOT OPC) NOT INST) NOT STSRAM) NOT DNSRAM) NOT RFSRAM) NOT DPSRAM) NOT OVERPL) AND UNDEPL) NOT UHVT
ntgate_IO2_under_2   = ntgate_IO2_under_1 touch nsd == 2
ntgate_IO2_under_old     = (ntgate_IO2_under_2 NOT MOSCKT) NOT INTERACT AADUM
ntgate_IO2_under_mis_old = (ntgate_IO2_under_2 AND MOSCKT) NOT INTERACT AADUM

ngate_core_1   = ((((((((((((N_core NOT PSUB) NOT VTNH) NOT LVN) NOT CL) NOT OPC) NOT INST) NOT STSRAM) NOT DNSRAM) NOT RFSRAM) NOT DPSRAM) NOT OVERPL) NOT UNDEPL) NOT UHVT
ngate_core_rf2    = (ngate_core_1 AND RFDEV) NOT DNW
ngate_core_rf_aux = ngate_core_rf2 INTERACT RFMOSD
ngate_core_rf_1   = ((GT ENCLOSE ngate_core_rf_aux) INTERACT CT) NOT RFSD
ngate_core_rf_old     = ngate_core_rf_1 NOT MOSCKT 
ngate_core_rf_mis_old = ngate_core_rf_1 AND MOSCKT 
ngate_core_rf_sdc_1   = ((GT ENCLOSE ngate_core_rf_aux) INTERACT CT) AND RFSD
ngate_core_rf_sdc_old     = ngate_core_rf_sdc_1 NOT MOSCKT
ngate_core_rf_sdc_mis_old = ngate_core_rf_sdc_1 AND MOSCKT
ngate_core2       = ngate_core_1 NOT RFDEV
ngate_core3       = (ngate_core2 NOT DNWTR) touch nsd == 2
ngate_core_old        = (ngate_core3 NOT MOSCKT) NOT INTERACT AADUM
ngate_core_mis_old    = (ngate_core3 AND MOSCKT) NOT INTERACT AADUM
dnwngate12_old        = ((ngate_core2 AND DNWTR) AND DNW) NOT INTERACT AADUM

// ngate_core_egl
ngate_core_egl4_1   = ((((((((((((N_core_egl4 NOT PSUB) NOT VTNH) NOT LVN) NOT CL) NOT OPC) NOT INST) NOT STSRAM) NOT DNSRAM) NOT RFSRAM) NOT DPSRAM) NOT OVERPL) NOT UNDEPL) NOT UHVT
ngate_core_egl4_rf2    = (ngate_core_egl4_1 AND RFDEV) NOT DNW
ngate_core_egl4_rf_aux = ngate_core_egl4_rf2 INTERACT RFMOSD
ngate_core_egl4_rf_1   = ((GT ENCLOSE ngate_core_egl4_rf_aux) INTERACT CT) NOT RFSD
ngate_core_egl4_rf_old     = ngate_core_egl4_rf_1 NOT MOSCKT 
ngate_core_egl4_rf_mis_old = ngate_core_egl4_rf_1 AND MOSCKT 
ngate_core_egl4_rf_sdc_1   = ((GT ENCLOSE ngate_core_egl4_rf_aux) INTERACT CT) AND RFSD
ngate_core_egl4_rf_sdc_old     = ngate_core_egl4_rf_sdc_1 NOT MOSCKT
ngate_core_egl4_rf_sdc_mis_old = ngate_core_egl4_rf_sdc_1 AND MOSCKT
ngate_core_egl42       = ngate_core_egl4_1 NOT RFDEV
ngate_core_egl43       = (ngate_core_egl42 NOT DNWTR) touch nsd == 2
ngate_core_egl4_old        = (ngate_core_egl43 NOT MOSCKT) NOT INTERACT AADUM
ngate_core_egl4_mis_old    = (ngate_core_egl43 AND MOSCKT) NOT INTERACT AADUM

ngate_core_egl1_1   = ((((((((((((N_core_egl1 NOT PSUB) NOT VTNH) NOT LVN) NOT CL) NOT OPC) NOT INST) NOT STSRAM) NOT DNSRAM) NOT RFSRAM) NOT DPSRAM) NOT OVERPL) NOT UNDEPL) NOT UHVT
ngate_core_egl1_rf2    = (ngate_core_egl1_1 AND RFDEV) NOT DNW
ngate_core_egl1_rf_aux = ngate_core_egl1_rf2 INTERACT RFMOSD
ngate_core_egl1_rf_1   = ((GT ENCLOSE ngate_core_egl1_rf_aux) INTERACT CT) NOT RFSD
ngate_core_egl1_rf_old     = ngate_core_egl1_rf_1 NOT MOSCKT 
ngate_core_egl1_rf_mis_old = ngate_core_egl1_rf_1 AND MOSCKT 
ngate_core_egl1_rf_sdc_1   = ((GT ENCLOSE ngate_core_egl1_rf_aux) INTERACT CT) AND RFSD
ngate_core_egl1_rf_sdc_old     = ngate_core_egl1_rf_sdc_1 NOT MOSCKT
ngate_core_egl1_rf_sdc_mis_old = ngate_core_egl1_rf_sdc_1 AND MOSCKT
ngate_core_egl12       = ngate_core_egl1_1 NOT RFDEV
ngate_core_egl13       = (ngate_core_egl12 NOT DNWTR) touch nsd == 2
ngate_core_egl1_old        = (ngate_core_egl13 NOT MOSCKT) NOT INTERACT AADUM
ngate_core_egl1_mis_old    = (ngate_core_egl13 AND MOSCKT) NOT INTERACT AADUM
// ngate_core_egl


dnw_core_rf1      = ngate_core_1 INTERACT DNW
dnw_core_rf_aux   = (dnw_core_rf1 INTERACT RFMOSD) AND RFDEV
dnw_core_rf_1     = ((((GT ENCLOSE dnw_core_rf_aux) INTERACT CT) NOT RFSD) NOT interact RFDN6T) NOT interact RFDN5T
dnw_core_rf_old       = dnw_core_rf_1 NOT MOSCKT
dnw_core_rf_mis_old   = dnw_core_rf_1 AND MOSCKT
dnw_core_rf_6t_aux     = (((dnw_core_rf_aux and RFDN6T) NOT RFSD) NOT interact RFDN5T) NOT MOSCKT
dnw_core_rf_6t_old         = RFDN6T enclose dnw_core_rf_6t_aux
dnw_core_rf_6t_mis_aux = (((dnw_core_rf_aux and RFDN6T) NOT RFSD) NOT interact RFDN5T) AND MOSCKT
dnw_core_rf_6t_mis_old     = RFDN6T enclose dnw_core_rf_6t_mis_aux
dnw_core_rf_sdc_1      = ((((GT ENCLOSE dnw_core_rf_aux) INTERACT CT) AND RFSD) NOT interact RFDN6T) NOT interact RFDN5T
dnw_core_rf_sdc_old        = dnw_core_rf_sdc_1 NOT MOSCKT
dnw_core_rf_sdc_mis_old    = dnw_core_rf_sdc_1 AND MOSCKT
dnw_core_rf_6t_sdc_aux = (((dnw_core_rf_aux and RFDN6T) AND RFSD) NOT interact RFDN5T) NOT MOSCKT
dnw_core_rf_6t_sdc_old     = RFDN6T enclose dnw_core_rf_6t_sdc_aux
dnw_core_rf_6t_sdc_mis_aux = (((dnw_core_rf_aux and RFDN6T) AND RFSD) NOT interact RFDN5T) AND MOSCKT
dnw_core_rf_6t_sdc_mis_old = RFDN6T enclose dnw_core_rf_6t_sdc_mis_aux

ngate_core_hvt1 = ((((((((((((N_core NOT PSUB) AND VTNH) NOT LVN) NOT CL) NOT OPC) NOT INST) NOT STSRAM) NOT DNSRAM) NOT RFSRAM) NOT DPSRAM) NOT OVERPL) NOT UNDEPL) NOT UHVT
ngate_core_hvt2   = (ngate_core_hvt1 NOT DNWTR) touch nsd == 2
ngate_core_hvt_old    = (ngate_core_hvt2 NOT MOSCKT) NOT INTERACT AADUM
ngate_core_hvt_mis_old= (ngate_core_hvt2 AND MOSCKT) NOT INTERACT AADUM
dnwhvtgate12_old    = ((ngate_core_hvt1 AND DNW) AND DNWTR) NOT INTERACT AADUM

ngate_core_lvt1 = ((((((((((((N_core NOT PSUB) NOT VTNH) AND LVN) NOT CL) NOT OPC) NOT INST) NOT STSRAM) NOT DNSRAM) NOT RFSRAM) NOT DPSRAM) NOT OVERPL) NOT UNDEPL) NOT UHVT
ngate_core_lvt_rf2    = (ngate_core_lvt1 AND RFDEV) NOT DNW
ngate_core_lvt_rf_aux = ngate_core_lvt_rf2 INTERACT RFMOSD
ngate_core_lvt_rf_1   = ((GT ENCLOSE ngate_core_lvt_rf_aux) INTERACT CT) NOT RFSD
ngate_core_lvt_rf_old     = ngate_core_lvt_rf_1 NOT MOSCKT
ngate_core_lvt_rf_mis_old = ngate_core_lvt_rf_1 AND MOSCKT
ngate_core_lvt_rf_sdc_1   = ((GT ENCLOSE ngate_core_lvt_rf_aux) INTERACT CT) AND RFSD
ngate_core_lvt_rf_sdc_old     = ngate_core_lvt_rf_sdc_1 NOT MOSCKT
ngate_core_lvt_rf_sdc_mis_old = ngate_core_lvt_rf_sdc_1 AND MOSCKT
ngate_core_lvt2       = ngate_core_lvt1 NOT RFDEV
ngate_core_lvt3       = (ngate_core_lvt2 NOT DNWTR) touch nsd == 2
ngate_core_lvt_old        = (ngate_core_lvt3 NOT MOSCKT) NOT INTERACT AADUM
ngate_core_lvt_mis_old    = (ngate_core_lvt3 AND MOSCKT) NOT INTERACT AADUM
dnwlvtgate12_old          = ((ngate_core_lvt1 AND DNW) AND DNWTR) NOT INTERACT AADUM

dnw_core_lvt_rf1      = ngate_core_lvt1 INTERACT DNW
dnw_core_lvt_rf_aux   = (dnw_core_lvt_rf1 INTERACT RFMOSD) AND RFDEV
dnw_core_lvt_rf_1     = ((((GT ENCLOSE dnw_core_lvt_rf_aux) INTERACT CT) NOT RFSD) NOT interact RFDN6T) NOT interact RFDN5T
dnw_core_lvt_rf_old       = dnw_core_lvt_rf_1 NOT MOSCKT
dnw_core_lvt_rf_mis_old   = dnw_core_lvt_rf_1 AND MOSCKT
dnw_core_lvt_rf_6t_aux     = (((dnw_core_lvt_rf_aux AND RFDN6T) NOT RFSD) NOT interact RFDN5T) NOT MOSCKT
dnw_core_lvt_rf_6t_old         = RFDN6T enclose dnw_core_lvt_rf_6t_aux
dnw_core_lvt_rf_6t_mis_aux = (((dnw_core_lvt_rf_aux AND RFDN6T) NOT RFSD) NOT interact RFDN5T) AND MOSCKT
dnw_core_lvt_rf_6t_mis_old     = RFDN6T enclose dnw_core_lvt_rf_6t_mis_aux
dnw_core_lvt_rf_sdc_1      = ((((GT ENCLOSE dnw_core_lvt_rf_aux) INTERACT CT) AND RFSD) NOT interact RFDN6T) NOT interact RFDN5T
dnw_core_lvt_rf_sdc_old        = dnw_core_lvt_rf_sdc_1 NOT MOSCKT
dnw_core_lvt_rf_sdc_mis_old    = dnw_core_lvt_rf_sdc_1 AND MOSCKT
dnw_core_lvt_rf_6t_sdc_aux = (((dnw_core_lvt_rf_aux AND RFDN6T) AND RFSD) NOT interact RFDN5T) NOT MOSCKT
dnw_core_lvt_rf_6t_sdc_old     = RFDN6T enclose dnw_core_lvt_rf_6t_sdc_aux
dnw_core_lvt_rf_6t_sdc_mis_aux = (((dnw_core_lvt_rf_aux AND RFDN6T) AND RFSD) NOT interact RFDN5T) AND MOSCKT
dnw_core_lvt_rf_6t_sdc_mis_old = RFDN6T enclose dnw_core_lvt_rf_6t_sdc_mis_aux

ngate_IO1_1    = ((((((((((((N_IO1  NOT PSUB) NOT VTNH) NOT LVN) NOT CL) NOT OPC) NOT INST) NOT STSRAM) NOT DNSRAM) NOT RFSRAM) NOT DPSRAM) NOT OVERPL) NOT UNDEPL) NOT UHVT
ngate_IO1_rf2     = (ngate_IO1_1 AND RFDEV) NOT DNW
ngate_IO1_rf_aux  = ngate_IO1_rf2 INTERACT RFMOSD
ngate_IO1_rf_old      = (GT ENCLOSE ngate_IO1_rf_aux) INTERACT CT
ngate_IO1_2       = ngate_IO1_1 NOT RFDEV
ngate_IO1_3       = (ngate_IO1_2 NOT DNWTR) touch nsd == 2
ngate_IO1_old         = (ngate_IO1_3 NOT MOSCKT) NOT INTERACT AADUM
ngate_IO1_mis_old     = (ngate_IO1_3 AND MOSCKT) NOT INTERACT AADUM
dnwngate18_old        = ((ngate_IO1_1 AND DNW) AND DNWTR) NOT INTERACT AADUM
dnw_IO1_rf1       = ngate_IO1_1 INTERACT DNW
dnw_IO1_rf_aux    = (dnw_IO1_rf1 INTERACT RFMOSD) AND RFDEV
dnw_IO1_rf_old        = ((((GT ENCLOSE dnw_IO1_rf_aux) INTERACT CT) NOT RFSD) NOT interact RFDN6T) NOT interact RFDN5T
dnw_IO1_rf_6t_aux = (((dnw_IO1_rf_aux AND RFDN6T) NOT RFSD) NOT interact RFDN5T) NOT MOSCKT 
dnw_IO1_rf_6t_old     = RFDN6T enclose dnw_IO1_rf_6t_aux

ngate_IO2_1    = ((((((((((((N_IO2  NOT PSUB) NOT VTNH) NOT LVN) NOT CL) NOT OPC) NOT INST) NOT STSRAM) NOT DNSRAM) NOT RFSRAM) NOT DPSRAM) NOT OVERPL) NOT UNDEPL) NOT UHVT
ngate_IO2_rf2    = (ngate_IO2_1 AND RFDEV) NOT DNW
ngate_IO2_rf_aux = ngate_IO2_rf2 INTERACT RFMOSD
ngate_IO2_rf_1   = ((GT ENCLOSE ngate_IO2_rf_aux) INTERACT CT) NOT RFSD
ngate_IO2_rf_old     = ngate_IO2_rf_1 NOT MOSCKT
ngate_IO2_rf_mis_old = ngate_IO2_rf_1 AND MOSCKT
ngate_IO2_rf_sdc_1   = ((GT ENCLOSE ngate_IO2_rf_aux) INTERACT CT) AND RFSD
ngate_IO2_rf_sdc_old     = ngate_IO2_rf_sdc_1 NOT MOSCKT
ngate_IO2_rf_sdc_mis_old = ngate_IO2_rf_sdc_1 AND MOSCKT
ngate_IO2_2      = ngate_IO2_1 NOT RFDEV
ngate_IO2_3      = (ngate_IO2_2 NOT DNWTR) touch nsd == 2
ngate_IO2_old        = (ngate_IO2_3 NOT MOSCKT) NOT INTERACT AADUM
ngate_IO2_mis_old    = (ngate_IO2_3 AND MOSCKT) NOT INTERACT AADUM
dnwngate25_old       = ((ngate_IO2_1 AND DNW) AND DNWTR) NOT INTERACT AADUM
dnw_IO2_rf1      = ngate_IO2_1 INTERACT DNW
dnw_IO2_rf_aux   = (dnw_IO2_rf1 INTERACT RFMOSD) AND RFDEV
dnw_IO2_rf_1       = ((((GT ENCLOSE dnw_IO2_rf_aux) INTERACT CT) NOT RFSD) NOT interact RFDN6T) NOT interact RFDN5T
dnw_IO2_rf_old         = dnw_IO2_rf_1 NOT MOSCKT
dnw_IO2_rf_mis_old     = dnw_IO2_rf_1 AND MOSCKT
dnw_IO2_rf_6t_aux     = (((dnw_IO2_rf_aux AND RFDN6T) NOT RFSD) NOT interact RFDN5T) NOT MOSCKT
dnw_IO2_rf_6t_old         = RFDN6T enclose dnw_IO2_rf_6t_aux
dnw_IO2_rf_6t_mis_aux = (((dnw_IO2_rf_aux AND RFDN6T) NOT RFSD) NOT interact RFDN5T) AND MOSCKT
dnw_IO2_rf_6t_mis_old     = RFDN6T enclose dnw_IO2_rf_6t_mis_aux
dnw_IO2_rf_sdc_1      = ((((GT ENCLOSE dnw_IO2_rf_aux) INTERACT CT) AND RFSD) NOT interact RFDN6T) NOT interact RFDN5T
dnw_IO2_rf_sdc_old        = dnw_IO2_rf_sdc_1 NOT MOSCKT
dnw_IO2_rf_sdc_mis_old    = dnw_IO2_rf_sdc_1 AND MOSCKT
dnw_IO2_rf_6t_sdc_aux = (((dnw_IO2_rf_aux AND RFDN6T) AND RFSD) NOT interact RFDN5T) NOT MOSCKT
dnw_IO2_rf_6t_sdc_old     = RFDN6T enclose dnw_IO2_rf_6t_sdc_aux
dnw_IO2_rf_6t_sdc_mis_aux = (((dnw_IO2_rf_aux AND RFDN6T) AND RFSD) NOT interact RFDN5T) AND MOSCKT
dnw_IO2_rf_6t_sdc_mis_old = RFDN6T enclose dnw_IO2_rf_6t_sdc_mis_aux

// ngate_IO2_egl
ngate_IO2_egl4_1    = ((((((((((((N_IO2_egl4  NOT PSUB) NOT VTNH) NOT LVN) NOT CL) NOT OPC) NOT INST) NOT STSRAM) NOT DNSRAM) NOT RFSRAM) NOT DPSRAM) NOT OVERPL) NOT UNDEPL) NOT UHVT
ngate_IO2_egl4_rf2    = (ngate_IO2_egl4_1 AND RFDEV) NOT DNW
ngate_IO2_egl4_rf_aux = ngate_IO2_egl4_rf2 INTERACT RFMOSD
ngate_IO2_egl4_rf_1   = ((GT ENCLOSE ngate_IO2_egl4_rf_aux) INTERACT CT) NOT RFSD
ngate_IO2_egl4_rf_old     = ngate_IO2_egl4_rf_1 NOT MOSCKT
ngate_IO2_egl4_rf_mis_old = ngate_IO2_egl4_rf_1 AND MOSCKT
ngate_IO2_egl4_rf_sdc_1   = ((GT ENCLOSE ngate_IO2_egl4_rf_aux) INTERACT CT) AND RFSD
ngate_IO2_egl4_rf_sdc_old     = ngate_IO2_egl4_rf_sdc_1 NOT MOSCKT
ngate_IO2_egl4_rf_sdc_mis_old = ngate_IO2_egl4_rf_sdc_1 AND MOSCKT
ngate_IO2_egl4_2      = ngate_IO2_egl4_1 NOT RFDEV
ngate_IO2_egl4_3      = (ngate_IO2_egl4_2 NOT DNWTR) touch nsd == 2
ngate_IO2_egl4_old        = (ngate_IO2_egl4_3 NOT MOSCKT) NOT INTERACT AADUM
ngate_IO2_egl4_mis_old    = (ngate_IO2_egl4_3 AND MOSCKT) NOT INTERACT AADUM

ngate_IO2_egl1_1    = ((((((((((((N_IO2_egl1  NOT PSUB) NOT VTNH) NOT LVN) NOT CL) NOT OPC) NOT INST) NOT STSRAM) NOT DNSRAM) NOT RFSRAM) NOT DPSRAM) NOT OVERPL) NOT UNDEPL) NOT UHVT
ngate_IO2_egl1_rf2    = (ngate_IO2_egl1_1 AND RFDEV) NOT DNW
ngate_IO2_egl1_rf_aux = ngate_IO2_egl1_rf2 INTERACT RFMOSD
ngate_IO2_egl1_rf_1   = ((GT ENCLOSE ngate_IO2_egl1_rf_aux) INTERACT CT) NOT RFSD
ngate_IO2_egl1_rf_old     = ngate_IO2_egl1_rf_1 NOT MOSCKT
ngate_IO2_egl1_rf_mis_old = ngate_IO2_egl1_rf_1 AND MOSCKT
ngate_IO2_egl1_rf_sdc_1   = ((GT ENCLOSE ngate_IO2_egl1_rf_aux) INTERACT CT) AND RFSD
ngate_IO2_egl1_rf_sdc_old     = ngate_IO2_egl1_rf_sdc_1 NOT MOSCKT
ngate_IO2_egl1_rf_sdc_mis_old = ngate_IO2_egl1_rf_sdc_1 AND MOSCKT
ngate_IO2_egl1_2      = ngate_IO2_egl1_1 NOT RFDEV
ngate_IO2_egl1_3      = (ngate_IO2_egl1_2 NOT DNWTR) touch nsd == 2
ngate_IO2_egl1_old        = (ngate_IO2_egl1_3 NOT MOSCKT) NOT INTERACT AADUM
ngate_IO2_egl1_mis_old    = (ngate_IO2_egl1_3 AND MOSCKT) NOT INTERACT AADUM
// ngate_IO2_egl

pgat10         = (((((P_core NOT VTPH) NOT LVP) NOT CL) NOT OVERPL) NOT UNDEPL) NOT UHVT
pgate_core_hvt1 = (((((((((((P_core AND VTPH) NOT LVP) NOT CL) NOT OPC) NOT INST) NOT STSRAM) NOT DNSRAM) NOT RFSRAM) NOT DPSRAM) NOT OVERPL) NOT UNDEPL) NOT UHVT
pgate_core_hvt2 = pgate_core_hvt1 touch psd == 2
pgate_core_hvt_old  = (pgate_core_hvt2 NOT MOSCKT) NOT INTERACT AADUM
pgate_core_hvt_mis_old = (pgate_core_hvt2 AND MOSCKT) NOT INTERACT AADUM

pgate_core_lvt1 = (((((((((((P_core NOT VTPH) AND LVP) NOT CL) NOT OPC) NOT INST) NOT STSRAM) NOT DNSRAM) NOT RFSRAM) NOT DPSRAM) NOT OVERPL) NOT UNDEPL) NOT UHVT
pgate_core_lvt2 = (pgate_core_lvt1 touch psd == 2) NOT RFDEV
pgate_core_lvt_old  = (pgate_core_lvt2 NOT MOSCKT) NOT INTERACT AADUM
pgate_core_lvt_mis_old  = (pgate_core_lvt2 AND MOSCKT) NOT INTERACT AADUM

pgate_core_lvt_rf1    = pgate_core_lvt1 AND RFDEV
pgate_core_lvt_rf_aux = pgate_core_lvt_rf1 INTERACT RFMOSD
pgate_core_lvt_rf_1   = ((((GT ENCLOSE pgate_core_lvt_rf_aux) INTERACT CT) NOT RFSD) NOT interact RFDN6T) NOT interact RFDN5T
pgate_core_lvt_rf_old     = pgate_core_lvt_rf_1 NOT MOSCKT
pgate_core_lvt_rf_mis_old = pgate_core_lvt_rf_1 AND MOSCKT
pgate_core_lvt_rf_5t_aux     = (((pgate_core_lvt_rf_aux AND RFDN5T) NOT RFSD) NOT interact RFDN6T) NOT MOSCKT
pgate_core_lvt_rf_5t_old         = RFDN5T enclose pgate_core_lvt_rf_5t_aux
pgate_core_lvt_rf_5t_mis_aux = (((pgate_core_lvt_rf_aux AND RFDN5T) NOT RFSD) NOT interact RFDN6T) AND MOSCKT
pgate_core_lvt_rf_5t_mis_old     = RFDN5T enclose pgate_core_lvt_rf_5t_mis_aux
pgate_core_lvt_rf_sdc_1      = ((((GT ENCLOSE pgate_core_lvt_rf_aux) INTERACT CT) AND RFSD) NOT interact RFDN6T) NOT interact RFDN5T
pgate_core_lvt_rf_sdc_old        = pgate_core_lvt_rf_sdc_1 NOT MOSCKT
pgate_core_lvt_rf_sdc_mis_old    = pgate_core_lvt_rf_sdc_1 AND MOSCKT
pgate_core_lvt_rf_5t_sdc_aux = (((pgate_core_lvt_rf_aux AND RFDN5T) AND RFSD) NOT interact RFDN6T) NOT MOSCKT
pgate_core_lvt_rf_5t_sdc_old     = RFDN5T enclose pgate_core_lvt_rf_5t_sdc_aux
pgate_core_lvt_rf_5t_sdc_mis_aux = (((pgate_core_lvt_rf_aux AND RFDN5T) AND RFSD) NOT interact RFDN6T) AND MOSCKT
pgate_core_lvt_rf_5t_sdc_mis_old = RFDN5T enclose pgate_core_lvt_rf_5t_sdc_mis_aux

pgate_IO1_1    = (((((((((((P_IO1  NOT VTPH) NOT LVP) NOT CL) NOT OPC) NOT INST) NOT STSRAM) NOT DNSRAM) NOT RFSRAM) NOT DPSRAM) NOT OVERPL) NOT UNDEPL) NOT UHVT
pgate_IO1_rf2       = pgate_IO1_1 AND RFDEV
pgate_IO1_rf_aux    = pgate_IO1_rf2 INTERACT RFMOSD
pgate_IO1_rf_old        = ((((GT ENCLOSE pgate_IO1_rf_aux) INTERACT CT) NOT RFSD) NOT interact RFDN6T) NOT interact RFDN5T
pgate_IO1_rf_5t_aux = (((pgate_IO1_rf_aux AND RFDN5T) NOT RFSD) NOT interact RFDN6T) NOT MOSCKT
pgate_IO1_rf_5t_old     = RFDN5T enclose pgate_IO1_rf_5t_aux
pgate_IO1_2    = pgate_IO1_1 NOT RFDEV
pgate_IO1_3    = pgate_IO1_2 touch psd == 2
pgate_IO1_old      = (pgate_IO1_3 NOT MOSCKT) NOT INTERACT AADUM
pgate_IO1_mis_old  = (pgate_IO1_3 AND MOSCKT) NOT INTERACT AADUM
pgate_IO2_1    = (((((((((((P_IO2  NOT VTPH) NOT LVP) NOT CL) NOT OPC) NOT INST) NOT STSRAM) NOT DNSRAM) NOT RFSRAM) NOT DPSRAM) NOT OVERPL) NOT UNDEPL) NOT UHVT
pgate_IO2_rf2  = pgate_IO2_1 AND RFDEV
pgate_IO2_rf_aux  = pgate_IO2_rf2 INTERACT RFMOSD
pgate_IO2_rf_1    = ((((GT ENCLOSE pgate_IO2_rf_aux) INTERACT CT) NOT RFSD) NOT interact RFDN6T) NOT interact RFDN5T
pgate_IO2_rf_old      = pgate_IO2_rf_1 NOT MOSCKT
pgate_IO2_rf_mis_old  = pgate_IO2_rf_1 AND MOSCKT
pgate_IO2_rf_5t_aux     = (((pgate_IO2_rf_aux AND RFDN5T) NOT RFSD) NOT interact RFDN6T) NOT MOSCKT
pgate_IO2_rf_5t_old         = RFDN5T enclose pgate_IO2_rf_5t_aux
pgate_IO2_rf_5t_mis_aux = (((pgate_IO2_rf_aux AND RFDN5T) NOT RFSD) NOT interact RFDN6T) AND MOSCKT
pgate_IO2_rf_5t_mis_old     = RFDN5T enclose pgate_IO2_rf_5t_mis_aux
pgate_IO2_rf_sdc_1      = ((((GT ENCLOSE pgate_IO2_rf_aux) INTERACT CT) AND RFSD) NOT interact RFDN6T) NOT interact RFDN5T
pgate_IO2_rf_sdc_old        = pgate_IO2_rf_sdc_1 NOT MOSCKT
pgate_IO2_rf_sdc_mis_old    = pgate_IO2_rf_sdc_1 AND MOSCKT
pgate_IO2_rf_5t_sdc_aux = (((pgate_IO2_rf_aux AND RFDN5T) AND RFSD) NOT interact RFDN6T) NOT MOSCKT
pgate_IO2_rf_5t_sdc_old     = RFDN5T enclose pgate_IO2_rf_5t_sdc_aux
pgate_IO2_rf_5t_sdc_mis_aux = (((pgate_IO2_rf_aux AND RFDN5T) AND RFSD) NOT interact RFDN6T) AND MOSCKT
pgate_IO2_rf_5t_sdc_mis_old = RFDN5T enclose pgate_IO2_rf_5t_sdc_mis_aux
pgate_IO2_2    = pgate_IO2_1 NOT RFDEV
pgate_IO2_3    = pgate_IO2_2 touch psd == 2
pgate_IO2_old      = (pgate_IO2_3 NOT MOSCKT) NOT INTERACT AADUM
pgate_IO2_mis_old  = (pgate_IO2_3 AND MOSCKT) NOT INTERACT AADUM

// pgate_IO2_egl
pgate_IO2_egl4_1    = (((((((((((P_IO2_egl4  NOT VTPH) NOT LVP) NOT CL) NOT OPC) NOT INST) NOT STSRAM) NOT DNSRAM) NOT RFSRAM) NOT DPSRAM) NOT OVERPL) NOT UNDEPL) NOT UHVT
pgate_IO2_egl4_rf2  = pgate_IO2_egl4_1 AND RFDEV
pgate_IO2_egl4_rf_aux  = pgate_IO2_egl4_rf2 INTERACT RFMOSD
pgate_IO2_egl4_rf_1    = ((((GT ENCLOSE pgate_IO2_egl4_rf_aux) INTERACT CT) NOT RFSD) NOT interact RFDN6T) NOT interact RFDN5T
pgate_IO2_egl4_rf_old      = pgate_IO2_egl4_rf_1 NOT MOSCKT
pgate_IO2_egl4_rf_mis_old  = pgate_IO2_egl4_rf_1 AND MOSCKT
pgate_IO2_egl4_rf_5t_aux     = (((pgate_IO2_egl4_rf_aux AND RFDN5T) NOT RFSD) NOT interact RFDN6T) NOT MOSCKT
pgate_IO2_egl4_rf_5t_old         = RFDN5T enclose pgate_IO2_egl4_rf_5t_aux
pgate_IO2_egl4_rf_5t_mis_aux = (((pgate_IO2_egl4_rf_aux AND RFDN5T) NOT RFSD) NOT interact RFDN6T) AND MOSCKT
pgate_IO2_egl4_rf_5t_mis_old     = RFDN5T enclose pgate_IO2_egl4_rf_5t_mis_aux
pgate_IO2_egl4_rf_sdc_1      = ((((GT ENCLOSE pgate_IO2_egl4_rf_aux) INTERACT CT) AND RFSD) NOT interact RFDN6T) NOT interact RFDN5T
pgate_IO2_egl4_rf_sdc_old        = pgate_IO2_egl4_rf_sdc_1 NOT MOSCKT
pgate_IO2_egl4_rf_sdc_mis_old    = pgate_IO2_egl4_rf_sdc_1 AND MOSCKT
pgate_IO2_egl4_rf_5t_sdc_aux = (((pgate_IO2_egl4_rf_aux AND RFDN5T) AND RFSD) NOT interact RFDN6T) NOT MOSCKT
pgate_IO2_egl4_rf_5t_sdc_old     = RFDN5T enclose pgate_IO2_egl4_rf_5t_sdc_aux
pgate_IO2_egl4_rf_5t_sdc_mis_aux = (((pgate_IO2_egl4_rf_aux AND RFDN5T) AND RFSD) NOT interact RFDN6T) AND MOSCKT
pgate_IO2_egl4_rf_5t_sdc_mis_old = RFDN5T enclose pgate_IO2_egl4_rf_5t_sdc_mis_aux
pgate_IO2_egl4_2    = pgate_IO2_egl4_1 NOT RFDEV
pgate_IO2_egl4_3    = pgate_IO2_egl4_2 touch psd == 2
pgate_IO2_egl4_old      = (pgate_IO2_egl4_3 NOT MOSCKT) NOT INTERACT AADUM
pgate_IO2_egl4_mis_old  = (pgate_IO2_egl4_3 AND MOSCKT) NOT INTERACT AADUM

pgate_IO2_egl1_1    = (((((((((((P_IO2_egl1  NOT VTPH) NOT LVP) NOT CL) NOT OPC) NOT INST) NOT STSRAM) NOT DNSRAM) NOT RFSRAM) NOT DPSRAM) NOT OVERPL) NOT UNDEPL) NOT UHVT
pgate_IO2_egl1_rf2  = pgate_IO2_egl1_1 AND RFDEV
pgate_IO2_egl1_rf_aux  = pgate_IO2_egl1_rf2 INTERACT RFMOSD
pgate_IO2_egl1_rf_1    = ((((GT ENCLOSE pgate_IO2_egl1_rf_aux) INTERACT CT) NOT RFSD) NOT interact RFDN6T) NOT interact RFDN5T
pgate_IO2_egl1_rf_old      = pgate_IO2_egl1_rf_1 NOT MOSCKT
pgate_IO2_egl1_rf_mis_old  = pgate_IO2_egl1_rf_1 AND MOSCKT
pgate_IO2_egl1_rf_5t_aux     = (((pgate_IO2_egl1_rf_aux AND RFDN5T) NOT RFSD) NOT interact RFDN6T) NOT MOSCKT
pgate_IO2_egl1_rf_5t_old         = RFDN5T enclose pgate_IO2_egl1_rf_5t_aux
pgate_IO2_egl1_rf_5t_mis_aux = (((pgate_IO2_egl1_rf_aux AND RFDN5T) NOT RFSD) NOT interact RFDN6T) AND MOSCKT
pgate_IO2_egl1_rf_5t_mis_old     = RFDN5T enclose pgate_IO2_egl1_rf_5t_mis_aux
pgate_IO2_egl1_rf_sdc_1      = ((((GT ENCLOSE pgate_IO2_egl1_rf_aux) INTERACT CT) AND RFSD) NOT interact RFDN6T) NOT interact RFDN5T
pgate_IO2_egl1_rf_sdc_old        = pgate_IO2_egl1_rf_sdc_1 NOT MOSCKT
pgate_IO2_egl1_rf_sdc_mis_old    = pgate_IO2_egl1_rf_sdc_1 AND MOSCKT
pgate_IO2_egl1_rf_5t_sdc_aux = (((pgate_IO2_egl1_rf_aux AND RFDN5T) AND RFSD) NOT interact RFDN6T) NOT MOSCKT
pgate_IO2_egl1_rf_5t_sdc_old     = RFDN5T enclose pgate_IO2_egl1_rf_5t_sdc_aux
pgate_IO2_egl1_rf_5t_sdc_mis_aux = (((pgate_IO2_egl1_rf_aux AND RFDN5T) AND RFSD) NOT interact RFDN6T) AND MOSCKT
pgate_IO2_egl1_rf_5t_sdc_mis_old = RFDN5T enclose pgate_IO2_egl1_rf_5t_sdc_mis_aux
pgate_IO2_egl1_2    = pgate_IO2_egl1_1 NOT RFDEV
pgate_IO2_egl1_3    = pgate_IO2_egl1_2 touch psd == 2
pgate_IO2_egl1_old      = (pgate_IO2_egl1_3 NOT MOSCKT) NOT INTERACT AADUM
pgate_IO2_egl1_mis_old  = (pgate_IO2_egl1_3 AND MOSCKT) NOT INTERACT AADUM
// pgate_IO2_egl

ngate_IO2_over1 = ((((((((((((N_IO2  NOT PSUB) NOT VTNH) NOT LVN) NOT CL) NOT OPC) NOT INST) NOT STSRAM) NOT DNSRAM) NOT RFSRAM) NOT DPSRAM) AND OVERPL) NOT UNDEPL) NOT UHVT
ngate_IO2_over2        = (ngate_IO2_over1 NOT DNWTR) touch nsd == 2
ngate_IO2_over_old         = ((ngate_IO2_over2 NOT MOSCKT) NOT RFDEV) NOT INTERACT AADUM
ngate_IO2_over_mis_old     = ((ngate_IO2_over2 AND MOSCKT) NOT RFDEV) NOT INTERACT AADUM
ngate_IO2_over_rf2     = (ngate_IO2_over1 AND RFDEV) NOT DNW
ngate_IO2_over_rf_aux  = ngate_IO2_over_rf2 INTERACT RFMOSD
ngate_IO2_over_rf_1    = ((GT ENCLOSE ngate_IO2_over_rf_aux) INTERACT CT) NOT RFSD
ngate_IO2_over_rf_old      = ngate_IO2_over_rf_1 NOT MOSCKT
ngate_IO2_over_rf_mis_old  = ngate_IO2_over_rf_1 AND MOSCKT
dnwodgate33_old            = ((ngate_IO2_over1 AND DNWTR) AND DNW) NOT INTERACT AADUM
dnw_IO2_over_rf1       = ngate_IO2_over1 INTERACT DNW
dnw_IO2_over_rf_aux    = (dnw_IO2_over_rf1 INTERACT RFMOSD) AND RFDEV
dnw_IO2_over_rf_1      = ((((GT ENCLOSE dnw_IO2_over_rf_aux) INTERACT CT) NOT RFSD) NOT interact RFDN6T) NOT interact RFDN5T
dnw_IO2_over_rf_old        = dnw_IO2_over_rf_1 NOT MOSCKT
dnw_IO2_over_rf_mis_old    = dnw_IO2_over_rf_1 AND MOSCKT
dnw_IO2_over_rf_6t_aux     = (((dnw_IO2_over_rf_aux AND RFDN6T) NOT RFSD) NOT interact RFDN5T) NOT MOSCKT
dnw_IO2_over_rf_6t_old         = RFDN6T enclose dnw_IO2_over_rf_6t_aux
dnw_IO2_over_rf_6t_mis_aux = (((dnw_IO2_over_rf_aux AND RFDN6T) NOT RFSD) NOT interact RFDN5T) AND MOSCKT
dnw_IO2_over_rf_6t_mis_old     = RFDN6T enclose dnw_IO2_over_rf_6t_mis_aux
dnw_IO2_over_rf_sdc_1      = ((((GT ENCLOSE dnw_IO2_over_rf_aux) INTERACT CT) AND RFSD) NOT interact RFDN6T) NOT interact RFDN5T
dnw_IO2_over_rf_sdc        = dnw_IO2_over_rf_sdc_1 NOT MOSCKT
dnw_IO2_over_rf_sdc_mis    = dnw_IO2_over_rf_sdc_1 AND MOSCKT
dnw_IO2_over_rf_6t_sdc_aux = (((dnw_IO2_over_rf_aux AND RFDN6T) AND RFSD) NOT interact RFDN5T) NOT MOSCKT
dnw_IO2_over_rf_6t_sdc     = RFDN6T enclose dnw_IO2_over_rf_6t_sdc_aux
dnw_IO2_over_rf_6t_sdc_mis_aux = (((dnw_IO2_over_rf_aux AND RFDN6T) AND RFSD) NOT interact RFDN5T) AND MOSCKT
dnw_IO2_over_rf_6t_sdc_mis = RFDN6T enclose dnw_IO2_over_rf_6t_sdc_mis_aux

// ngate_IO2_egl_over 
ngate_IO2_egl4_over1 = ((((((((((((N_IO2_egl4  NOT PSUB) NOT VTNH) NOT LVN) NOT CL) NOT OPC) NOT INST) NOT STSRAM) NOT DNSRAM) NOT RFSRAM) NOT DPSRAM) AND OVERPL) NOT UNDEPL) NOT UHVT
ngate_IO2_egl4_over2        = (ngate_IO2_egl4_over1 NOT DNWTR) touch nsd == 2
ngate_IO2_egl4_over_old         = ((ngate_IO2_egl4_over2 NOT MOSCKT) NOT RFDEV) NOT INTERACT AADUM
ngate_IO2_egl4_over_mis_old     = ((ngate_IO2_egl4_over2 AND MOSCKT) NOT RFDEV) NOT INTERACT AADUM
ngate_IO2_egl4_over_rf2     = (ngate_IO2_egl4_over1 AND RFDEV) NOT DNW
ngate_IO2_egl4_over_rf_aux  = ngate_IO2_egl4_over_rf2 INTERACT RFMOSD
ngate_IO2_egl4_over_rf_1    = ((GT ENCLOSE ngate_IO2_egl4_over_rf_aux) INTERACT CT) NOT RFSD
ngate_IO2_egl4_over_rf_old      = ngate_IO2_egl4_over_rf_1 NOT MOSCKT
ngate_IO2_egl4_over_rf_mis_old  = ngate_IO2_egl4_over_rf_1 AND MOSCKT

ngate_IO2_egl1_over1 = ((((((((((((N_IO2_egl1  NOT PSUB) NOT VTNH) NOT LVN) NOT CL) NOT OPC) NOT INST) NOT STSRAM) NOT DNSRAM) NOT RFSRAM) NOT DPSRAM) AND OVERPL) NOT UNDEPL) NOT UHVT
ngate_IO2_egl1_over2        = (ngate_IO2_egl1_over1 NOT DNWTR) touch nsd == 2
ngate_IO2_egl1_over_old         = ((ngate_IO2_egl1_over2 NOT MOSCKT) NOT RFDEV) NOT INTERACT AADUM
ngate_IO2_egl1_over_mis_old     = ((ngate_IO2_egl1_over2 AND MOSCKT) NOT RFDEV) NOT INTERACT AADUM
ngate_IO2_egl1_over_rf2     = (ngate_IO2_egl1_over1 AND RFDEV) NOT DNW
ngate_IO2_egl1_over_rf_aux  = ngate_IO2_egl1_over_rf2 INTERACT RFMOSD
ngate_IO2_egl1_over_rf_1    = ((GT ENCLOSE ngate_IO2_egl1_over_rf_aux) INTERACT CT) NOT RFSD
ngate_IO2_egl1_over_rf_old      = ngate_IO2_egl1_over_rf_1 NOT MOSCKT
ngate_IO2_egl1_over_rf_mis_old  = ngate_IO2_egl1_over_rf_1 AND MOSCKT
// ngate_IO2_egl_over 

pgate_IO2_over1 = (((((((((((P_IO2  NOT VTPH) NOT LVP) NOT CL) NOT OPC) NOT INST) NOT STSRAM) NOT DNSRAM) NOT RFSRAM) NOT DPSRAM) AND OVERPL) NOT UNDEPL) NOT UHVT
pgate_IO2_over2       = pgate_IO2_over1 touch psd == 2
pgate_IO2_over_old        = ((pgate_IO2_over2 NOT MOSCKT) NOT RFDEV) NOT INTERACT AADUM
pgate_IO2_over_mis_old    = ((pgate_IO2_over2 AND MOSCKT) NOT RFDEV) NOT INTERACT AADUM
pgate_IO2_over_rf2    = pgate_IO2_over1 AND RFDEV
pgate_IO2_over_rf_aux = pgate_IO2_over_rf2 INTERACT RFMOSD
pgate_IO2_over_rf_1   = ((((GT ENCLOSE pgate_IO2_over_rf_aux) INTERACT CT) NOT RFSD) NOT interact RFDN6T) NOT interact RFDN5T
pgate_IO2_over_rf_old     = pgate_IO2_over_rf_1 NOT MOSCKT
pgate_IO2_over_rf_mis_old = pgate_IO2_over_rf_1 AND MOSCKT
pgate_IO2_over_rf_5t_aux     = (((pgate_IO2_over_rf_aux AND RFDN5T) NOT RFSD) NOT interact RFDN6T) NOT MOSCKT
pgate_IO2_over_rf_5t_old         = RFDN5T enclose pgate_IO2_over_rf_5t_aux
pgate_IO2_over_rf_5t_mis_aux = (((pgate_IO2_over_rf_aux AND RFDN5T) NOT RFSD) NOT interact RFDN6T) AND MOSCKT
pgate_IO2_over_rf_5t_mis_old     = RFDN5T enclose pgate_IO2_over_rf_5t_mis_aux

// pgate_IO2_egl_over 
pgate_IO2_egl4_over1 = (((((((((((P_IO2_egl4  NOT VTPH) NOT LVP) NOT CL) NOT OPC) NOT INST) NOT STSRAM) NOT DNSRAM) NOT RFSRAM) NOT DPSRAM) AND OVERPL) NOT UNDEPL) NOT UHVT
pgate_IO2_egl4_over2       = pgate_IO2_egl4_over1 touch psd == 2
pgate_IO2_egl4_over_old        = ((pgate_IO2_egl4_over2 NOT MOSCKT) NOT RFDEV) NOT INTERACT AADUM
pgate_IO2_egl4_over_mis_old    = ((pgate_IO2_egl4_over2 AND MOSCKT) NOT RFDEV) NOT INTERACT AADUM
pgate_IO2_egl4_over_rf2    = pgate_IO2_egl4_over1 AND RFDEV
pgate_IO2_egl4_over_rf_aux = pgate_IO2_egl4_over_rf2 INTERACT RFMOSD
pgate_IO2_egl4_over_rf_1   = ((((GT ENCLOSE pgate_IO2_egl4_over_rf_aux) INTERACT CT) NOT RFSD) NOT interact RFDN6T) NOT interact RFDN5T
pgate_IO2_egl4_over_rf_old     = pgate_IO2_egl4_over_rf_1 NOT MOSCKT
pgate_IO2_egl4_over_rf_mis_old = pgate_IO2_egl4_over_rf_1 AND MOSCKT
pgate_IO2_egl4_over_rf_5t_aux     = (((pgate_IO2_egl4_over_rf_aux AND RFDN5T) NOT RFSD) NOT interact RFDN6T) NOT MOSCKT
pgate_IO2_egl4_over_rf_5t_old         = RFDN5T enclose pgate_IO2_egl4_over_rf_5t_aux
pgate_IO2_egl4_over_rf_5t_mis_aux = (((pgate_IO2_egl4_over_rf_aux AND RFDN5T) NOT RFSD) NOT interact RFDN6T) AND MOSCKT
pgate_IO2_egl4_over_rf_5t_mis_old     = RFDN5T enclose pgate_IO2_egl4_over_rf_5t_mis_aux

pgate_IO2_egl1_over1 = (((((((((((P_IO2_egl1  NOT VTPH) NOT LVP) NOT CL) NOT OPC) NOT INST) NOT STSRAM) NOT DNSRAM) NOT RFSRAM) NOT DPSRAM) AND OVERPL) NOT UNDEPL) NOT UHVT
pgate_IO2_egl1_over2       = pgate_IO2_egl1_over1 touch psd == 2
pgate_IO2_egl1_over_old        = ((pgate_IO2_egl1_over2 NOT MOSCKT) NOT RFDEV) NOT INTERACT AADUM
pgate_IO2_egl1_over_mis_old    = ((pgate_IO2_egl1_over2 AND MOSCKT) NOT RFDEV) NOT INTERACT AADUM
pgate_IO2_egl1_over_rf2    = pgate_IO2_egl1_over1 AND RFDEV
pgate_IO2_egl1_over_rf_aux = pgate_IO2_egl1_over_rf2 INTERACT RFMOSD
pgate_IO2_egl1_over_rf_1   = ((((GT ENCLOSE pgate_IO2_egl1_over_rf_aux) INTERACT CT) NOT RFSD) NOT interact RFDN6T) NOT interact RFDN5T
pgate_IO2_egl1_over_rf_old     = pgate_IO2_egl1_over_rf_1 NOT MOSCKT
pgate_IO2_egl1_over_rf_mis_old = pgate_IO2_egl1_over_rf_1 AND MOSCKT
pgate_IO2_egl1_over_rf_5t_aux     = (((pgate_IO2_egl1_over_rf_aux AND RFDN5T) NOT RFSD) NOT interact RFDN6T) NOT MOSCKT
pgate_IO2_egl1_over_rf_5t_old         = RFDN5T enclose pgate_IO2_egl1_over_rf_5t_aux
pgate_IO2_egl1_over_rf_5t_mis_aux = (((pgate_IO2_egl1_over_rf_aux AND RFDN5T) NOT RFSD) NOT interact RFDN6T) AND MOSCKT
pgate_IO2_egl1_over_rf_5t_mis_old     = RFDN5T enclose pgate_IO2_egl1_over_rf_5t_mis_aux
// pgate_IO2_egl_over 


ngate_IO2_under1 = ((((((((((((N_IO2  NOT PSUB) NOT VTNH) NOT LVN) NOT CL) NOT OPC) NOT INST) NOT STSRAM) NOT DNSRAM) NOT RFSRAM) NOT DPSRAM) NOT OVERPL) AND UNDEPL) NOT UHVT
ngate_IO2_under2 = (ngate_IO2_under1 NOT DNWTR) touch nsd == 2
ngate_IO2_under_old  = ((ngate_IO2_under2 NOT MOSCKT) NOT RFDEV) NOT INTERACT AADUM
ngate_IO2_under_mis_old  = ((ngate_IO2_under2 AND MOSCKT) NOT RFDEV) NOT INTERACT AADUM
ngate_IO2_under_rf2  = (ngate_IO2_under1 AND RFDEV) NOT DNW
ngate_IO2_under_rf_aux = ngate_IO2_under_rf2 INTERACT RFMOSD
ngate_IO2_under_rf_1   = ((((GT ENCLOSE ngate_IO2_under_rf_aux) INTERACT CT) NOT RFSD) NOT INTERACT RFDN6T) NOT interact RFDN5T
ngate_IO2_under_rf_old     = ngate_IO2_under_rf_1 NOT MOSCKT
ngate_IO2_under_rf_mis_old = ngate_IO2_under_rf_1 AND MOSCKT
dnwudgate18_old     = ((ngate_IO2_under1 AND DNW) AND DNWTR) NOT INTERACT AADUM
dnw_IO2_under_rf1       = ngate_IO2_under1 INTERACT DNW
dnw_IO2_under_rf_aux    = (dnw_IO2_under_rf1 INTERACT RFMOSD) AND RFDEV
dnw_IO2_under_rf_1      = ((((GT ENCLOSE dnw_IO2_under_rf_aux) INTERACT CT) NOT RFSD) NOT interact RFDN6T) NOT interact RFDN5T
dnw_IO2_under_rf_old        = dnw_IO2_under_rf_1 NOT MOSCKT
dnw_IO2_under_rf_mis_old    = dnw_IO2_under_rf_1 AND MOSCKT
dnw_IO2_under_rf_6t_aux     = (((dnw_IO2_under_rf_aux AND RFDN6T) NOT RFSD) NOT interact RFDN5T) NOT MOSCKT
dnw_IO2_under_rf_6t_old         = RFDN6T enclose dnw_IO2_under_rf_6t_aux
dnw_IO2_under_rf_6t_mis_aux = (((dnw_IO2_under_rf_aux AND RFDN6T) NOT RFSD) NOT interact RFDN5T) AND MOSCKT
dnw_IO2_under_rf_6t_mis_old     = RFDN6T enclose dnw_IO2_under_rf_6t_mis_aux


pgate_IO2_under1       = (((((((((((P_IO2  NOT VTPH) NOT LVP) NOT CL) NOT OPC) NOT INST) NOT STSRAM) NOT DNSRAM) NOT RFSRAM) NOT DPSRAM) NOT OVERPL) AND UNDEPL) NOT UHVT
pgate_IO2_under2       = pgate_IO2_under1 touch psd == 2
pgate_IO2_under_old        = ((pgate_IO2_under2 NOT MOSCKT) NOT RFDEV) NOT INTERACT AADUM
pgate_IO2_under_mis_old    = ((pgate_IO2_under2 AND MOSCKT) NOT RFDEV) NOT INTERACT AADUM
pgate_IO2_under_rf2    = pgate_IO2_under1 AND RFDEV
pgate_IO2_under_rf_aux = pgate_IO2_under_rf2 INTERACT RFMOSD
pgate_IO2_under_rf_1   = ((((GT ENCLOSE pgate_IO2_under_rf_aux) INTERACT CT) NOT RFSD) NOT INTERACT RFDN6T) NOT INTERACT RFDN5T
pgate_IO2_under_rf_old     = pgate_IO2_under_rf_1 NOT MOSCKT
pgate_IO2_under_rf_mis_old = pgate_IO2_under_rf_1 AND MOSCKT
pgate_IO2_under_rf_5t_aux = (((pgate_IO2_under_rf_aux AND RFDN5T) NOT RFSD) NOT INTERACT RFDN6T) NOT MOSCKT 
pgate_IO2_under_rf_5t_old     = RFDN5T enclose pgate_IO2_under_rf_5t_aux
pgate_IO2_under_rf_5t_mis_aux = (((pgate_IO2_under_rf_aux AND RFDN5T) NOT RFSD) NOT INTERACT RFDN6T) AND MOSCKT
pgate_IO2_under_rf_5t_mis_old     = RFDN5T enclose pgate_IO2_under_rf_5t_mis_aux


ngate_core_ull1 = (((((((((((((N_core NOT PSUB) NOT VTPH) NOT LVN) NOT CL) NOT OPC) NOT INST) NOT STSRAM) NOT DNSRAM) NOT RFSRAM) NOT DPSRAM) NOT OVERPL) NOT UNDEPL) AND UHVT) AND VTNH
ngate_core_ull2   = (ngate_core_ull1 NOT DNWTR) touch nsd == 2
ngate_core_ull_old    = (ngate_core_ull2 NOT MOSCKT) NOT INTERACT AADUM
ngate_core_ull_mis_old= (ngate_core_ull2 AND MOSCKT) NOT INTERACT AADUM
dnwullngate_old = ((ngate_core_ull1 AND DNW) AND DNWTR) NOT INTERACT AADUM

pgate_core_ull1 = (((((((((((((P_core NOT PSUB) NOT VTNH) NOT LVN) NOT CL) NOT OPC) NOT INST) NOT STSRAM) NOT DNSRAM) NOT RFSRAM) NOT DPSRAM) NOT OVERPL) NOT UNDEPL) AND UHVT) AND VTPH
pgate_core_ull2   = (pgate_core_ull1 NOT DNWTR) touch psd == 2
pgate_core_ull_old    = (pgate_core_ull2 NOT MOSCKT) NOT INTERACT AADUM
pgate_core_ull_mis_old= (pgate_core_ull2 AND MOSCKT) NOT INTERACT AADUM

//*SRAM bitcell(3)

//SRAM_NGATE   = ((((N_core NOT PSUB) NOT LVN) NOT CL) AND NC) AND OPC
SRAM_NGATE     = (((((N_core OR N_core_egl4) OR N_core_egl1) NOT PSUB) NOT LVN) NOT CL) AND OPC

SRAM_NGATE_0.525_HVT = ((((((SRAM_NGATE AND INST) AND STSRAM) NOT DPSRAM) NOT DNSRAM) NOT RFSRAM) NOT UDSRAM) AND VTNH
SRAM_NGATE_0.525_SVT = ((((((SRAM_NGATE AND INST) AND STSRAM) NOT DPSRAM) NOT DNSRAM) NOT RFSRAM) NOT UDSRAM) NOT VTNH

SRAM_NGATE_0.62_HVT  = (((((((SRAM_NGATE AND INST) NOT STSRAM) NOT DPSRAM) AND DNSRAM) NOT RFSRAM) NOT UDSRAM) AND VTNH) NOT UHVT
SRAM_NGATE_0.62_SVT  = (((((((SRAM_NGATE AND INST) NOT STSRAM) NOT DPSRAM) AND DNSRAM) NOT RFSRAM) NOT UDSRAM) NOT VTNH) NOT UHVT
SRAM_NGATE_0.62_ULL  = (((((((SRAM_NGATE AND INST) NOT STSRAM) NOT DPSRAM) AND DNSRAM) NOT RFSRAM) NOT UDSRAM) AND VTNH) AND UHVT

SRAM_NGATE_0.974_HVT = (((((((SRAM_NGATE AND INST) NOT STSRAM) AND DPSRAM) NOT DNSRAM) NOT RFSRAM) NOT UDSRAM) AND VTNH) NOT UHVT
SRAM_NGATE_0.974_SVT = (((((((SRAM_NGATE AND INST) NOT STSRAM) AND DPSRAM) NOT DNSRAM) NOT RFSRAM) NOT UDSRAM) NOT VTNH) NOT UHVT
SRAM_NGATE_0.974_ULL = (((((((SRAM_NGATE AND INST) NOT STSRAM) AND DPSRAM) NOT DNSRAM) NOT RFSRAM) NOT UDSRAM) AND VTNH) AND UHVT

SRAM_NGATE_1.158_HVT = ((((((SRAM_NGATE AND INST) NOT STSRAM) NOT DPSRAM) NOT DNSRAM) AND RFSRAM) NOT UDSRAM) AND VTNH
SRAM_NGATE_1.158_SVT = ((((((SRAM_NGATE AND INST) NOT STSRAM) NOT DPSRAM) NOT DNSRAM) AND RFSRAM) NOT UDSRAM) NOT VTNH

SRAM_NGATE_0.499_HVT = ((((((SRAM_NGATE AND INST) NOT STSRAM) NOT DPSRAM) NOT DNSRAM) NOT RFSRAM) AND UDSRAM) AND VTNH
SRAM_NGATE_0.499_SVT = ((((((SRAM_NGATE AND INST) NOT STSRAM) NOT DPSRAM) NOT DNSRAM) NOT RFSRAM) AND UDSRAM) NOT VTNH
SRAM_PGATE           = ((((P_core OR P_core_egl4) OR P_core_egl1) AND OPC) NOT LVP) NOT CL

SRAM_PGATE_0.525_HVT = ((((((SRAM_PGATE AND INST) AND STSRAM) NOT DPSRAM) NOT DNSRAM) NOT RFSRAM) NOT UDSRAM) AND VTPH
SRAM_PGATE_0.525_SVT = ((((((SRAM_PGATE AND INST) AND STSRAM) NOT DPSRAM) NOT DNSRAM) NOT RFSRAM) NOT UDSRAM) NOT VTPH
SRAM_PGATE_0.525     = SRAM_PGATE_0.525_HVT OR SRAM_PGATE_0.525_SVT

SRAM_PGATE_0.62_HVT  = (((((((SRAM_PGATE AND INST) NOT STSRAM) NOT DPSRAM) AND DNSRAM) NOT RFSRAM) NOT UDSRAM) AND VTPH) NOT UHVT
SRAM_PGATE_0.62_SVT  = (((((((SRAM_PGATE AND INST) NOT STSRAM) NOT DPSRAM) AND DNSRAM) NOT RFSRAM) NOT UDSRAM) NOT VTPH) NOT UHVT
SRAM_PGATE_0.62_ULL  = (((((((SRAM_PGATE AND INST) NOT STSRAM) NOT DPSRAM) AND DNSRAM) NOT RFSRAM) NOT UDSRAM) AND VTPH) AND UHVT
SRAM_PGATE_0.62      = (SRAM_PGATE_0.62_HVT OR SRAM_PGATE_0.62_SVT) OR SRAM_PGATE_0.62_ULL

SRAM_PGATE_0.974_HVT = (((((((SRAM_PGATE AND INST) NOT STSRAM) AND DPSRAM) NOT DNSRAM) NOT RFSRAM) NOT UDSRAM) AND VTPH) NOT UHVT
SRAM_PGATE_0.974_SVT = (((((((SRAM_PGATE AND INST) NOT STSRAM) AND DPSRAM) NOT DNSRAM) NOT RFSRAM) NOT UDSRAM) NOT VTPH) NOT UHVT
SRAM_PGATE_0.974_ULL = (((((((SRAM_PGATE AND INST) NOT STSRAM) AND DPSRAM) NOT DNSRAM) NOT RFSRAM) NOT UDSRAM) AND VTPH) AND UHVT
SRAM_PGATE_0.974     = (SRAM_PGATE_0.974_HVT OR SRAM_PGATE_0.974_SVT) OR SRAM_PGATE_0.974_ULL

SRAM_PGATE_1.158_HVT = ((((((SRAM_PGATE AND INST) NOT STSRAM) NOT DPSRAM) NOT DNSRAM) AND RFSRAM) NOT UDSRAM) AND VTPH
SRAM_PGATE_1.158_SVT = ((((((SRAM_PGATE AND INST) NOT STSRAM) NOT DPSRAM) NOT DNSRAM) AND RFSRAM) NOT UDSRAM) NOT VTPH
SRAM_PGATE_1.158     = SRAM_PGATE_1.158_HVT OR SRAM_PGATE_1.158_SVT

SRAM_PGATE_0.499_HVT = ((((((SRAM_PGATE AND INST) NOT STSRAM) NOT DPSRAM) NOT DNSRAM) NOT RFSRAM) AND UDSRAM) AND VTPH
SRAM_PGATE_0.499_SVT = ((((((SRAM_PGATE AND INST) NOT STSRAM) NOT DPSRAM) NOT DNSRAM) NOT RFSRAM) AND UDSRAM) NOT VTPH
SRAM_PGATE_0.499     = SRAM_PGATE_0.499_HVT OR SRAM_PGATE_0.499_SVT
SRAM_PGATE_all       = (((SRAM_PGATE_0.525 OR SRAM_PGATE_0.62) OR SRAM_PGATE_0.974) OR SRAM_PGATE_1.158) OR SRAM_PGATE_0.499


//*Define bitcell = 0.525;0.62 //

//*NPGHVT(W/L=0.085/0.075,AREA=0.006375) (W/L=0.125/0.075,AREA=0.009375) //
npgsp_0.525_hvt1 = AREA SRAM_NGATE_0.525_HVT >=0.006375 <0.0063751 
npgsp_0.525_hvt_old  = npgsp_0.525_hvt1 TOUCH nsd == 2  
npgsp_0.62_hvt1  = AREA SRAM_NGATE_0.62_HVT  >=0.009375 <0.0093751
npgsp_0.62_hvt_old   = npgsp_0.62_hvt1 TOUCH nsd == 2

//*NPGSVT(W/L=0.085/0.075,AREA=0.006375) (W/L=0.125/0.075,AREA=0.009375) //
npgsp_0.525_svt1 = AREA SRAM_NGATE_0.525_SVT >=0.006375 <0.0063751
npgsp_0.525_svt_old  = npgsp_0.525_svt1 TOUCH nsd == 2
npgsp_0.62_svt1  = AREA SRAM_NGATE_0.62_SVT  >=0.009375 <0.0093751
npgsp_0.62_svt_old   = npgsp_0.62_svt1 TOUCH nsd == 2

//*NPGULL
npgsp_0.62_ull1  = AREA SRAM_NGATE_0.62_ULL  >=0.009375 <0.0093751
npgsp_0.62_ull_old   = npgsp_0.62_ull1 TOUCH nsd == 2

//*NPDHVT(W/L=0.135/0.065, AREA=0.008775) (W/L=0.21/0.065,AREA=0.01365) //
npdsp_0.525_hvt1 = AREA SRAM_NGATE_0.525_HVT >=0.008775 <0.0087751
npdsp_0.525_hvt_old  = npdsp_0.525_hvt1 TOUCH nsd == 2
npdsp_0.62_hvt1  = AREA SRAM_NGATE_0.62_HVT  >=0.01365   <0.013651
npdsp_0.62_hvt_old   = npdsp_0.62_hvt1 TOUCH nsd == 2


//*NPDSVT(W/L=0.135/0.065, AREA=0.008775) (W/L=0.21/0.065,AREA=0.01365) //
npdsp_0.525_svt1 = AREA SRAM_NGATE_0.525_SVT >=0.008775 <0.0087751
npdsp_0.525_svt_old  = npdsp_0.525_svt1 TOUCH nsd == 2
npdsp_0.62_svt1  = AREA SRAM_NGATE_0.62_SVT  >=0.01365   <0.013651
npdsp_0.62_svt_old   = npdsp_0.62_svt1 TOUCH nsd == 2

//*NPDULL
npdsp_0.62_ull1  = AREA SRAM_NGATE_0.62_ULL  >=0.01365   <0.013651
npdsp_0.62_ull_old   = npdsp_0.62_ull1 TOUCH nsd == 2


//*PLHVT(W/L=0.085/0.065, AREA=0.005525) (W/L=0.095/0.065,AREA=0.006175) //
plsp_0.525_hvt1  = AREA SRAM_PGATE_0.525_HVT >=0.005525 <0.0055251
plsp_0.525_hvt_old   = plsp_0.525_hvt1 TOUCH psd == 2
plsp_0.62_hvt1   = AREA SRAM_PGATE_0.62_HVT  >=0.006175 <0.0061751
plsp_0.62_hvt_old    = plsp_0.62_hvt1 TOUCH psd == 2

//*PLSVT(W/L=0.085/0.065, AREA=0.005525) (W/L=0.095/0.065,AREA=0.006175) //
plsp_0.525_svt1  = AREA SRAM_PGATE_0.525_SVT >=0.005525 <0.0055251
plsp_0.525_svt_old   = plsp_0.525_svt1 TOUCH psd == 2
plsp_0.62_svt1   = AREA SRAM_PGATE_0.62_SVT  >=0.006175 <0.0061751
plsp_0.62_svt_old    = plsp_0.62_svt1 TOUCH psd == 2

//*PLULL
plsp_0.62_ull1   = AREA SRAM_PGATE_0.62_ULL  >=0.006175 <0.0061751
plsp_0.62_ull_old    = plsp_0.62_ull1 TOUCH psd == 2

//*DPPLHVT(W/L=0.085/0.07, AREA=0.00595)(W/L=0.095/0.07,AREA=0.00665) //
pldp_0.974_hvt1  = AREA SRAM_PGATE_0.974_HVT >=0.00595 <0.005951
pldp_0.974_hvt_old   =  pldp_0.974_hvt1 TOUCH psd == 2
pldp_1.158_hvt1  = AREA SRAM_PGATE_1.158_HVT >=0.00665 <0.006651
pldp_1.158_hvt_old   = pldp_1.158_hvt1 TOUCH psd == 2
pldp_hvt         = pldp_0.974_hvt OR pldp_1.158_hvt

//*DPPLSVT(W/L=0.085/0.07, AREA=0.00595)(W/L=0.095/0.07,AREA=0.00665) //
pldp_0.974_svt1  = AREA SRAM_PGATE_0.974_SVT >=0.00595 <0.005951
pldp_0.974_svt_old   = pldp_0.974_svt1 TOUCH psd == 2
pldp_1.158_svt1  = AREA SRAM_PGATE_1.158_SVT >=0.00665 <0.006651
pldp_1.158_svt_old   = pldp_1.158_svt1 TOUCH psd == 2
pldp_svt         = pldp_0.974_svt OR pldp_1.158_svt

//*DPPLULL(W/L=0.085/0.07, AREA=0.00595)(W/L=0.095/0.07,AREA=0.00665) //
pldp_0.974_ull1  = AREA SRAM_PGATE_0.974_ULL >=0.0063 <0.00631
pldp_0.974_ull_old   = pldp_0.974_ull1 TOUCH psd == 2
pldp_ull         = copy pldp_0.974_ull


//*DPNPGAHVT(W/L=0.1/0.085, AREA=0.0085)(W/L=0.12/0.09,AREA=0.0108)  //
npgadp_0.974_hvt_1 = AREA SRAM_NGATE_0.974_HVT >=0.0085 <0.00851
npgadp_1.158_hvt_1 = AREA SRAM_NGATE_1.158_HVT >=0.0108 <0.01081
SP_NW_HVT          = SP ENCLOSE pldp_hvt
SP_NW_ov_hvta      = SIZE SP_NW_HVT BY 0.135
SP_NW_ov_hvtb      = SIZE SP_NW_HVT BY 0.14
npgadp_0.974_hvt1  = npgadp_0.974_hvt_1 TOUCH SP_NW_ov_hvta
npgadp_0.974_hvt_old   = npgadp_0.974_hvt1 TOUCH nsd == 2
npgadp_1.158_hvt1  = npgadp_1.158_hvt_1 TOUCH SP_NW_ov_hvtb
npgadp_1.158_hvt_old   = npgadp_1.158_hvt1 TOUCH nsd == 2

//*DPNPGASVT(W/L=0.1/0.085, AREA=0.0085)(W/L=0.12/0.09,AREA=0.0108)  //
npgadp_0.974_svt_1 = AREA SRAM_NGATE_0.974_SVT >=0.0085 <0.00851
npgadp_1.158_svt_1 = AREA SRAM_NGATE_1.158_SVT >=0.0108 <0.01081
SP_NW_SVT          = SP ENCLOSE pldp_svt
SP_NW_ov_svta      = SIZE SP_NW_SVT BY 0.135
SP_NW_ov_svtb      = SIZE SP_NW_SVT BY 0.14
npgadp_0.974_svt1  = npgadp_0.974_svt_1 TOUCH SP_NW_ov_svta
npgadp_0.974_svt_old   = npgadp_0.974_svt1 TOUCH nsd == 2
npgadp_1.158_svt1  = npgadp_1.158_svt_1 TOUCH SP_NW_ov_svtb
npgadp_1.158_svt_old   = npgadp_1.158_svt1 TOUCH nsd == 2

//*DPNPGAULL(W/L=0.1/0.085, AREA=0.0085)(W/L=0.12/0.09,AREA=0.0108)  //
npgadp_0.974_ull_1 = AREA SRAM_NGATE_0.974_ULL >=0.00825 <0.008251
SP_NW_ULL          = SP ENCLOSE pldp_ull
SP_NW_ov_ulla      = SIZE SP_NW_ULL BY 0.145
SP_NW_ov_ullb      = SIZE SP_NW_ULL BY 0.14
npgadp_0.974_ull1  = npgadp_0.974_ull_1 TOUCH SP_NW_ov_ulla
npgadp_0.974_ull_old   = npgadp_0.974_ull1 TOUCH nsd == 2


//*DPNPGBHVT(W/L=0.1/0.085, AREA=0.0085)(W/L=0.12/0.09,AREA=0.0108) //
npgbdp_0.974_hvt_1  = npgadp_0.974_hvt_1 NOT npgadp_0.974_hvt
npgbdp_0.974_hvt_old    = npgbdp_0.974_hvt_1 TOUCH nsd == 2
npgbdp_1.158_hvt_1  = npgadp_1.158_hvt_1 NOT npgadp_1.158_hvt
npgbdp_1.158_hvt_old    = npgbdp_1.158_hvt_1 TOUCH nsd == 2

//*DPNPGBSVT(W/L=0.1/0.085, AREA=0.0085)(W/L=0.12/0.09,AREA=0.0108) //
npgbdp_0.974_svt_1  = npgadp_0.974_svt_1 NOT npgadp_0.974_svt
npgbdp_0.974_svt_old    = npgbdp_0.974_svt_1 TOUCH nsd == 2
npgbdp_1.158_svt_1  = npgadp_1.158_svt_1 NOT npgadp_1.158_svt
npgbdp_1.158_svt_old    = npgbdp_1.158_svt_1 TOUCH nsd == 2

//*DPNPGBULL(W/L=0.1/0.085, AREA=0.0085)(W/L=0.12/0.09,AREA=0.0108) //
npgbdp_0.974_ull_1  = npgadp_0.974_ull_1 NOT npgadp_0.974_ull
npgbdp_0.974_ull_old    = npgbdp_0.974_ull_1 TOUCH nsd == 2


//*DPNPDHVT(W/L=0.31/0.07,AREA=0.0217)(W/L=0.46/0.07,AREA=0.0322)   //
npddp_0.974_hvt_1   = AREA SRAM_NGATE_0.974_HVT >=0.0217 <0.02171
npddp_0.974_hvt_old     = npddp_0.974_hvt_1 TOUCH nsd == 2
npddp_1.158_hvt_1   = AREA SRAM_NGATE_1.158_HVT >=0.0322 <0.03221
npddp_1.158_hvt_old     = npddp_1.158_hvt_1 TOUCH nsd == 2

//*DPNPDSVT(W/L=0.31/0.07,AREA=0.0217)(W/L=0.46/0.07,AREA=0.0322)   //
npddp_0.974_svt_1  = AREA SRAM_NGATE_0.974_SVT >=0.0217 <0.02171
npddp_0.974_svt_old    = npddp_0.974_svt_1 TOUCH nsd == 2
npddp_1.158_svt_1  = AREA SRAM_NGATE_1.158_SVT >=0.0322 <0.03221
npddp_1.158_svt_old    = npddp_1.158_svt_1 TOUCH nsd == 2

//*DPNPDULL
npddp_0.974_ull_1  = AREA SRAM_NGATE_0.974_ULL >= 0.02275 <0.022751
npddp_0.974_ull_old    = npddp_0.974_ull_1 TOUCH nsd == 2


//*Define bitcell=0.499 //
//*NPG(W/L=0.085/0.075,AREA=0.006375)
npgsp_all_hvt = AREA SRAM_NGATE_0.499_HVT >=0.006375 <0.006376
npgsp_all_svt = AREA SRAM_NGATE_0.499_SVT >=0.006375 <0.006376
npgsp_0.499_hvt_old = npgsp_all_hvt TOUCH nsd == 2
npgsp_0.499_svt_old = npgsp_all_svt TOUCH nsd == 2


//*NPD(W/L=0.135/0.065, AREA=0.008775)
npdsp_all_hvt = AREA SRAM_NGATE_0.499_HVT >=0.008775 <0.008776
npdsp_all_svt = AREA SRAM_NGATE_0.499_SVT >=0.008775 <0.008776
npdsp_0.499_hvt_old = npdsp_all_hvt TOUCH nsd == 2
npdsp_0.499_svt_old = npdsp_all_svt TOUCH nsd == 2


//*PL(W/L=0.085/0.065, AREA=0.005525)
plsp_all_hvt   = AREA SRAM_PGATE_0.499_HVT >=0.005525 <0.005526
plsp_all_svt   = AREA SRAM_PGATE_0.499_SVT >=0.005525 <0.005526
plsp_0.499_hvt_old = plsp_all_hvt TOUCH psd == 2
plsp_0.499_svt_old = plsp_all_svt TOUCH psd == 2

//*PLDP(W/L=?/?, AREA=?)
pldp_all   = AREA SRAM_PGATE >=0 <1
pldp = pldp_all TOUCH psd == 2

pgate_core_all    = pgat10 NOT SRAM_PGATE_all
pgate_core_1      = pgate_core_all TOUCH psd == 2
pgate_core_rf_aux = (pgate_core_all AND RFDEV) INTERACT RFMOSD
pgate_core_rf_1   = ((((GT ENCLOSE pgate_core_rf_aux) INTERACT CT) NOT RFSD) NOT interact RFDN6T) NOT interact RFDN5T
pgate_core_rf_old     = pgate_core_rf_1 NOT MOSCKT
pgate_core_rf_mis_old = pgate_core_rf_1 AND MOSCKT
pgate_core_rf_5t_aux     = (((pgate_core_rf_aux AND RFDN5T) NOT RFSD) NOT interact RFDN6T) NOT MOSCKT
pgate_core_rf_5t_old         = RFDN5T enclose pgate_core_rf_5t_aux
pgate_core_rf_5t_mis_aux = (((pgate_core_rf_aux AND RFDN5T) NOT RFSD) NOT interact RFDN6T) AND MOSCKT
pgate_core_rf_5t_mis_old     = RFDN5T enclose pgate_core_rf_5t_mis_aux
pgate_core_rf_sdc_1      = ((((GT ENCLOSE pgate_core_rf_aux) INTERACT CT) AND RFSD) NOT interact RFDN6T) NOT interact RFDN5T
pgate_core_rf_sdc_old        = pgate_core_rf_sdc_1 NOT MOSCKT
pgate_core_rf_sdc_mis_old    = pgate_core_rf_sdc_1 AND MOSCKT
pgate_core_rf_5t_sdc_aux = (((pgate_core_rf_aux AND RFDN5T) AND RFSD) NOT interact RFDN6T) NOT MOSCKT
pgate_core_rf_5t_sdc_old     = RFDN5T enclose pgate_core_rf_5t_sdc_aux
pgate_core_rf_5t_sdc_mis_aux = (((pgate_core_rf_aux AND RFDN5T) AND RFSD) NOT interact RFDN6T) AND MOSCKT
pgate_core_rf_5t_sdc_mis_old = RFDN5T enclose pgate_core_rf_5t_sdc_mis_aux
pgate_core1       = pgate_core_1 NOT RFDEV
pgate_core2       = pgate_core1 touch psd == 2
pgate_core_old        = (pgate_core2 NOT MOSCKT) NOT INTERACT AADUM
pgate_core_mis_old    = (pgate_core2 AND MOSCKT) NOT INTERACT AADUM

// pgate_core_egl
pgat10_egl4            = (((((P_core_egl4 NOT VTPH) NOT LVP) NOT CL) NOT OVERPL) NOT UNDEPL) NOT UHVT
pgate_core_egl4_all    = pgat10_egl4 NOT SRAM_PGATE_all
pgate_core_egl4_1      = pgate_core_egl4_all TOUCH psd == 2
pgate_core_egl4_rf_aux = (pgate_core_egl4_all AND RFDEV) INTERACT RFMOSD
pgate_core_egl4_rf_1   = ((((GT ENCLOSE pgate_core_egl4_rf_aux) INTERACT CT) NOT RFSD) NOT interact RFDN6T) NOT interact RFDN5T
pgate_core_egl4_rf_old     = pgate_core_egl4_rf_1 NOT MOSCKT
pgate_core_egl4_rf_mis_old = pgate_core_egl4_rf_1 AND MOSCKT
pgate_core_egl4_rf_5t_aux     = (((pgate_core_egl4_rf_aux AND RFDN5T) NOT RFSD) NOT interact RFDN6T) NOT MOSCKT
pgate_core_egl4_rf_5t_old     = RFDN5T enclose pgate_core_egl4_rf_5t_aux
pgate_core_egl4_rf_5t_mis_aux = (((pgate_core_egl4_rf_aux AND RFDN5T) NOT RFSD) NOT interact RFDN6T) AND MOSCKT
pgate_core_egl4_rf_5t_mis_old = RFDN5T enclose pgate_core_egl4_rf_5t_mis_aux
pgate_core_egl4_rf_sdc_1       = ((((GT ENCLOSE pgate_core_egl4_rf_aux) INTERACT CT) AND RFSD) NOT interact RFDN6T) NOT interact RFDN5T
pgate_core_egl4_rf_sdc_old     = pgate_core_egl4_rf_sdc_1 NOT MOSCKT
pgate_core_egl4_rf_sdc_mis_old = pgate_core_egl4_rf_sdc_1 AND MOSCKT
pgate_core_egl4_rf_5t_sdc_aux     = (((pgate_core_egl4_rf_aux AND RFDN5T) AND RFSD) NOT interact RFDN6T) NOT MOSCKT
pgate_core_egl4_rf_5t_sdc_old     = RFDN5T enclose pgate_core_egl4_rf_5t_sdc_aux
pgate_core_egl4_rf_5t_sdc_mis_aux = (((pgate_core_egl4_rf_aux AND RFDN5T) AND RFSD) NOT interact RFDN6T) AND MOSCKT
pgate_core_egl4_rf_5t_sdc_mis_old = RFDN5T enclose pgate_core_egl4_rf_5t_sdc_mis_aux
pgate_core_egl41       = pgate_core_egl4_1 NOT RFDEV
pgate_core_egl42       = pgate_core_egl41 touch psd == 2
pgate_core_egl4_old        = (pgate_core_egl42 NOT MOSCKT) NOT INTERACT AADUM
pgate_core_egl4_mis_old    = (pgate_core_egl42 AND MOSCKT) NOT INTERACT AADUM

pgat10_egl1            = (((((P_core_egl1 NOT VTPH) NOT LVP) NOT CL) NOT OVERPL) NOT UNDEPL) NOT UHVT
pgate_core_egl1_all    = pgat10_egl1 NOT SRAM_PGATE_all
pgate_core_egl1_1      = pgate_core_egl1_all TOUCH psd == 2
pgate_core_egl1_rf_aux = (pgate_core_egl1_all AND RFDEV) INTERACT RFMOSD
pgate_core_egl1_rf_1   = ((((GT ENCLOSE pgate_core_egl1_rf_aux) INTERACT CT) NOT RFSD) NOT interact RFDN6T) NOT interact RFDN5T
pgate_core_egl1_rf_old     = pgate_core_egl1_rf_1 NOT MOSCKT
pgate_core_egl1_rf_mis_old = pgate_core_egl1_rf_1 AND MOSCKT
pgate_core_egl1_rf_5t_aux     = (((pgate_core_egl1_rf_aux AND RFDN5T) NOT RFSD) NOT interact RFDN6T) NOT MOSCKT
pgate_core_egl1_rf_5t_old     = RFDN5T enclose pgate_core_egl1_rf_5t_aux
pgate_core_egl1_rf_5t_mis_aux = (((pgate_core_egl1_rf_aux AND RFDN5T) NOT RFSD) NOT interact RFDN6T) AND MOSCKT
pgate_core_egl1_rf_5t_mis_old = RFDN5T enclose pgate_core_egl1_rf_5t_mis_aux
pgate_core_egl1_rf_sdc_1       = ((((GT ENCLOSE pgate_core_egl1_rf_aux) INTERACT CT) AND RFSD) NOT interact RFDN6T) NOT interact RFDN5T
pgate_core_egl1_rf_sdc_old     = pgate_core_egl1_rf_sdc_1 NOT MOSCKT
pgate_core_egl1_rf_sdc_mis_old = pgate_core_egl1_rf_sdc_1 AND MOSCKT
pgate_core_egl1_rf_5t_sdc_aux     = (((pgate_core_egl1_rf_aux AND RFDN5T) AND RFSD) NOT interact RFDN6T) NOT MOSCKT
pgate_core_egl1_rf_5t_sdc_old     = RFDN5T enclose pgate_core_egl1_rf_5t_sdc_aux
pgate_core_egl1_rf_5t_sdc_mis_aux = (((pgate_core_egl1_rf_aux AND RFDN5T) AND RFSD) NOT interact RFDN6T) AND MOSCKT
pgate_core_egl1_rf_5t_sdc_mis_old = RFDN5T enclose pgate_core_egl1_rf_5t_sdc_mis_aux
pgate_core_egl11       = pgate_core_egl1_1 NOT RFDEV
pgate_core_egl12       = pgate_core_egl11 touch psd == 2
pgate_core_egl1_old        = (pgate_core_egl12 NOT MOSCKT) NOT INTERACT AADUM
pgate_core_egl1_mis_old    = (pgate_core_egl12 AND MOSCKT) NOT INTERACT AADUM
// pgate_core_egl

//*MOS Varactor

pvar_core_aux = (((cngate NOT DG) NOT TG ) INTERACT VARMOS) NOT RFDEV 
pvar_core     = VARMOS ENCLOSE pvar_core_aux
pvar_core_t_old   = GT ENCLOSE pvar_core_aux
pvar_core_aa  = AA INTERACT pvar_core_aux
//pvar_core     = GT ENCLOSE pvar_core_aux
pvar_IO1_aux  = (((cngate AND DG) NOT TG ) INTERACT VARMOS) NOT RFDEV
pvar_IO1      = VARMOS ENCLOSE pvar_IO1_aux
pvar_IO1_t_old    = GT ENCLOSE pvar_IO1_aux
pvar_IO1_aa   = AA INTERACT pvar_IO1_aux
//pvar_IO1      = GT ENCLOSE pvar_IO1_aux
pvar_IO2_aux  = (((cngate NOT DG) AND TG ) INTERACT VARMOS) NOT RFDEV
pvar_IO2      = VARMOS ENCLOSE pvar_IO2_aux
pvar_IO2_t_old    = GT ENCLOSE pvar_IO2_aux
pvar_IO2_aa   = AA INTERACT pvar_IO2_aux
//pvar_IO2      = GT ENCLOSE pvar_IO2_aux

pvar_core_rf_aux    = (((((cngate NOT DG) NOT TG ) INTERACT VARMOS) AND RFDEV) NOT RF3T) NOT DNW
pvar_core_rf_t_old      = GT ENCLOSE pvar_core_rf_aux
pvar_core_rf        = VARMOS ENCLOSE pvar_core_rf_aux
pvar_core_rf_aux_3t = (((((cngate NOT DG) NOT TG ) INTERACT VARMOS) AND RFDEV) AND RF3T) NOT DNW
pvar_core_rf_3t_t_old   = GT ENCLOSE pvar_core_rf_aux_3t
pvar_core_rf_3t     = VARMOS ENCLOSE pvar_core_rf_aux_3t

pvar_core_rf_dnw_aux    = (((((cngate NOT DG) NOT TG ) INTERACT VARMOS) AND RFDEV) NOT RF3T) AND DNW
pvar_core_dnw_rf_t_old    = GT ENCLOSE pvar_core_rf_dnw_aux
pvar_core_dnw_rf        = VARMOS ENCLOSE pvar_core_rf_dnw_aux
pvar_core_rf_dnw_aux_3t = (((((cngate NOT DG) NOT TG ) INTERACT VARMOS) AND RFDEV) AND RF3T) AND DNW
pvar_core_dnw_rf_3t_t_old = GT ENCLOSE pvar_core_rf_dnw_aux_3t
pvar_core_dnw_rf_3t     = VARMOS ENCLOSE pvar_core_rf_dnw_aux_3t

pvar_IO1_rf_aux   = (((((cngate AND DG) NOT TG ) INTERACT VARMOS) AND RFDEV) NOT RF3T) NOT DNW 
pvar_IO1_rf_t_old     = GT ENCLOSE pvar_IO1_rf_aux
pvar_IO1_rf       = VARMOS ENCLOSE pvar_IO1_rf_aux
pvar_IO1_rf_aux_3t= (((((cngate AND DG) NOT TG ) INTERACT VARMOS) AND RFDEV) AND RF3T) NOT DNW 
pvar_IO1_rf_3t_t_old  = GT ENCLOSE pvar_IO1_rf_aux_3t
pvar_IO1_rf_3t    = VARMOS ENCLOSE pvar_IO1_rf_aux_3t

pvar_IO1_rf_dnw_aux = (((((cngate AND DG) NOT TG ) INTERACT VARMOS) AND RFDEV) NOT RF3T) AND DNW 
pvar_IO1_dnw_rf_t_old   = GT ENCLOSE pvar_IO1_rf_dnw_aux
pvar_IO1_dnw_rf     = VARMOS ENCLOSE pvar_IO1_rf_dnw_aux
pvar_IO1_rf_dnw_aux_3t= (((((cngate AND DG) NOT TG ) INTERACT VARMOS) AND RFDEV) AND RF3T) AND DNW 
pvar_IO1_dnw_rf_3t_t_old  = GT ENCLOSE pvar_IO1_rf_dnw_aux_3t
pvar_IO1_dnw_rf_3t    = VARMOS ENCLOSE pvar_IO1_rf_dnw_aux_3t

pvar_IO2_rf_aux  = (((((cngate NOT DG) AND TG ) INTERACT VARMOS) AND RFDEV) NOT RF3T) NOT DNW
pvar_IO2_rf_t_old    = GT ENCLOSE pvar_IO2_rf_aux
pvar_IO2_rf      = VARMOS ENCLOSE pvar_IO2_rf_aux
pvar_IO2_rf_aux_3t= (((((cngate NOT DG) AND TG ) INTERACT VARMOS) AND RFDEV) AND RF3T) NOT DNW
pvar_IO2_rf_3t_t_old  = GT ENCLOSE pvar_IO2_rf_aux_3t
pvar_IO2_rf_3t    = VARMOS ENCLOSE pvar_IO2_rf_aux_3t

pvar_IO2_rf_dnw_aux   = (((((cngate NOT DG) AND TG ) INTERACT VARMOS) AND RFDEV) NOT RF3T) AND DNW
pvar_IO2_dnw_rf_t_old     = GT ENCLOSE pvar_IO2_rf_dnw_aux
pvar_IO2_dnw_rf       = VARMOS ENCLOSE pvar_IO2_rf_dnw_aux
pvar_IO2_rf_dnw_aux_3t= (((((cngate NOT DG) AND TG ) INTERACT VARMOS) AND RFDEV) AND RF3T) AND DNW
pvar_IO2_dnw_rf_3t_t_old  = GT ENCLOSE pvar_IO2_rf_dnw_aux_3t
pvar_IO2_dnw_rf_3t    = VARMOS ENCLOSE pvar_IO2_rf_dnw_aux_3t


//*SMIC IO devices(3)
cngate_core1 = ((cngate NOT DG) NOT TG) NOT INTERACT VARMOS
cngate_core  = cngate_core1 touch ntd == 2
cngate_IO1_1 = ((cngate AND DG) NOT TG) NOT INTERACT VARMOS
cngate_IO1   = cngate_IO1_1 touch ntd == 2
cngate_IO2_1 = ((cngate NOT DG) AND TG) NOT INTERACT VARMOS
cngate_IO2   = cngate_IO2_1 touch ntd == 2

polycont = CT AND poly_int
dfcont   = CT NOT polycont
npolycont = polycont AND SN
ppolycont = polycont NOT npolycont
ndfcont   = dfcont AND SN
pdfcont   = dfcont NOT SN

//*Define layer for ERC check
rnwell  = nwell TOUCH nwr
bnwell  = nwell INTERACT DMPNP
ntap1   = ntd   NOT rnwell
ntap2   = ntap1 NOT bnwell
ntap    = STAMP ntap2 BY ntd
ptap_outside_dnw2=ptd NOT INTERACT dnw
ptap_outside_dnw = STAMP ptap_outside_dnw2 BY ptd

//*Define layer for dnw mos LADDR/WADDR calculation
dnwngate   = (((((((((dnw_core_rf_aux OR dnw_IO1_rf_aux) OR dnw_IO2_rf_aux) OR dnw_IO2_over_rf_aux) OR dnwngate12) OR dnwngate18) OR dnwngate25) OR dnwhvtgate12) OR dnwlvtgate12) OR dnwodgate33) OR dnwudgate18
ndifd1     = ndiff AND DNW
ndifd      = EXTENTS ndifd1
ndifd3     = ndifd NOT gt2
gt2        = GT AND ndifd

daa1       = (AA INTERACT GT) AND DNW
daa        = EXTENTS daa1
daa3       = daa1 NOT gt2
dnwngate12_body    = gt2 enclose dnwngate12
dnwngate18_body    = gt2 enclose dnwngate18
dnwngate25_body    = gt2 enclose dnwngate25
dnwhvtgate12_body  = gt2 enclose dnwhvtgate12
dnwlvtgate12_body  = gt2 enclose dnwlvtgate12
dnwodgate33_body   = gt2 enclose dnwodgate33
dnwudgate18_body   = gt2 enclose dnwudgate18

dnwwdedge   = ndifd TOUCH EDGE gt2 

dnwwdedge_daa = daa TOUCH EDGE gt2

//dnwwaddrec  = ENC dnwwdedge rwell <1000 opposite region
//dnwwaddrec2 = ENC dnwwdedge DNW <1000 opposite region
//dnwwaddrec3 = ENC dnwwdedge_daa DNW <1000 opposite region


//Added for RF SAR/SBR/SDR calculation

nactive    = (AA AND SN) AND RFDEV
nactive2   = nactive NOT rfngate

rfngate1   = ngate_core_rf AND ngate_core_rf_aux 
rfngate2   = ngate_core_rf_mis AND ngate_core_rf_aux 
rfngate3   = ngate_IO1_rf AND ngate_IO1_rf_aux 
rfngate4   = ngate_IO2_rf AND ngate_IO2_rf_aux 
rfngate5   = ngate_IO2_rf_mis AND ngate_IO2_rf_aux 
rfngate6   = dnw_core_rf AND dnw_core_rf_aux 
rfngate7   = dnw_core_rf_mis AND dnw_core_rf_aux 
rfngate8   = dnw_IO1_rf AND dnw_IO1_rf_aux 
rfngate9   = dnw_IO2_rf AND dnw_IO2_rf_aux 
rfngate10   = dnw_IO2_rf_mis AND dnw_IO2_rf_aux 
rfngate11   = ngate_core_lvt_rf AND ngate_core_lvt_rf_aux
rfngate12   = ngate_core_lvt_rf_mis AND ngate_core_lvt_rf_aux
rfngate13   = dnw_core_lvt_rf AND dnw_core_lvt_rf_aux
rfngate14   = dnw_core_lvt_rf_mis AND dnw_core_lvt_rf_aux
rfngate15   = ngate_core_rf_sdc AND ngate_core_rf_aux
rfngate16   = ngate_core_rf_sdc_mis AND ngate_core_rf_aux
rfngate17  = ngate_IO2_rf_sdc AND ngate_IO2_rf_aux
rfngate18  = ngate_IO2_rf_sdc_mis AND ngate_IO2_rf_aux
rfngate19  = ngate_core_lvt_rf_sdc AND ngate_core_lvt_rf_aux
rfngate20  = ngate_core_lvt_rf_sdc_mis AND ngate_core_lvt_rf_aux
rfngate21  = dnw_core_rf_sdc AND dnw_core_rf_aux
rfngate22  = dnw_core_rf_sdc_mis AND dnw_core_rf_aux
rfngate23  = dnw_IO2_rf_sdc AND dnw_IO2_rf_aux
rfngate24  = dnw_IO2_rf_sdc_mis AND dnw_IO2_rf_aux
rfngate25  = dnw_core_rf_6t AND dnw_core_rf_aux
rfngate26  = dnw_core_rf_6t_mis AND dnw_core_rf_aux
rfngate27  = dnw_core_rf_6t_sdc AND dnw_core_rf_aux
rfngate28  = dnw_core_rf_6t_sdc_mis AND dnw_core_rf_aux
rfngate29  = dnw_IO1_rf_6t AND dnw_IO1_rf_aux
rfngate30  = dnw_IO2_rf_6t AND dnw_IO2_rf_aux
rfngate31  = dnw_IO2_rf_6t_mis AND dnw_IO2_rf_aux
rfngate32  = dnw_IO2_rf_6t_sdc AND dnw_IO2_rf_aux
rfngate33  = dnw_IO2_rf_6t_sdc_mis AND dnw_IO2_rf_aux
rfngate34  = dnw_core_lvt_rf_6t AND dnw_core_lvt_rf_aux
rfngate35  = dnw_core_lvt_rf_6t_mis AND dnw_core_lvt_rf_aux
rfngate36  = dnw_core_lvt_rf_sdc AND dnw_core_lvt_rf_aux
rfngate37  = dnw_core_lvt_rf_sdc_mis AND dnw_core_lvt_rf_aux
rfngate38  = dnw_core_lvt_rf_6t_sdc AND dnw_core_lvt_rf_aux
rfngate39  = dnw_core_lvt_rf_6t_sdc_mis AND dnw_core_lvt_rf_aux
rfngate40  = ngate_IO2_over_rf AND ngate_IO2_over_rf_aux 
rfngate41  = ngate_IO2_over_rf_mis AND ngate_IO2_over_rf_aux 
rfngate42  = dnw_IO2_over_rf AND dnw_IO2_over_rf_aux 
rfngate43  = dnw_IO2_over_rf_mis AND dnw_IO2_over_rf_aux 
rfngate44  = dnw_IO2_over_rf_6t AND dnw_IO2_over_rf_aux 
rfngate45  = dnw_IO2_over_rf_6t_mis AND dnw_IO2_over_rf_aux 
rfngate46  = ngate_IO2_under_rf AND ngate_IO2_under_rf_aux
rfngate47  = ngate_IO2_under_rf_mis AND ngate_IO2_under_rf_aux
rfngate48  = dnw_IO2_under_rf AND dnw_IO2_under_rf_aux
rfngate49  = dnw_IO2_under_rf_mis AND dnw_IO2_under_rf_aux
rfngate50  = dnw_IO2_under_rf_6t AND dnw_IO2_under_rf_aux
rfngate51  = dnw_IO2_under_rf_6t_mis AND dnw_IO2_under_rf_aux

rfngate    = (((((((((((((((((((((((((((((((((((((((((((((((((rfngate1 OR rfngate2) OR rfngate3) OR rfngate4) OR rfngate5) OR rfngate6) OR rfngate7) OR rfngate8) OR rfngate9) OR rfngate10) OR rfngate11) OR rfngate12) OR rfngate13) OR rfngate14) OR rfngate15) OR rfngate16) OR rfngate17) OR rfngate18) OR rfngate19) OR rfngate20 ) OR rfngate21) OR rfngate22) OR rfngate23) OR rfngate24) OR rfngate25) OR rfngate26) OR rfngate27) OR rfngate28) OR rfngate29) OR rfngate30) OR rfngate31) OR rfngate32) OR rfngate33) OR rfngate34) OR rfngate35) OR rfngate36) OR rfngate37) OR rfngate38) OR rfngate39) OR rfngate40) OR rfngate41) OR rfngate42) OR rfngate43) OR rfngate44) OR rfngate45) OR rfngate46) OR rfngate47) OR rfngate48) OR rfngate49) OR rfngate50) OR rfngate51

nsdrf_edge = nactive2 COINCIDENT EDGE rfngate
nsdrf_sd   = nactive2 WITH EDGE nsdrf_edge ==2
nsdrf_sab  = nactive2 WITH EDGE nsdrf_edge ==1

s_core     = nactive2 OR rfngate
sab_core   = s_core NOT nsdrf_sab

pactive    = (AA AND SP) AND RFDEV
pactive2   = pactive NOT rfpgate 

rfpgate1   = pgate_core_rf AND pgate_core_rf_aux
rfpgate2   = pgate_core_rf_mis AND pgate_core_rf_aux
rfpgate3   = pgate_IO1_rf AND pgate_IO1_rf_aux
rfpgate4   = pgate_IO2_rf AND pgate_IO2_rf_aux
rfpgate5   = pgate_IO2_rf_mis AND pgate_IO2_rf_aux
rfpgate6   = pgate_core_lvt_rf AND pgate_core_lvt_rf_aux
rfpgate7   = pgate_core_lvt_rf_mis AND pgate_core_lvt_rf_aux
rfpgate8   = pgate_core_rf_sdc AND pgate_core_rf_aux
rfpgate9   = pgate_core_rf_sdc_mis AND pgate_core_rf_aux
rfpgate10   = pgate_IO2_rf_sdc AND pgate_IO2_rf_aux
rfpgate11   = pgate_IO2_rf_sdc_mis AND pgate_IO2_rf_aux
rfpgate12   = pgate_core_lvt_rf_sdc AND pgate_core_lvt_rf_aux
rfpgate13   = pgate_core_lvt_rf_sdc_mis AND pgate_core_lvt_rf_aux
rfpgate14   = pgate_IO2_over_rf AND pgate_IO2_over_rf_aux
rfpgate15   = pgate_IO2_over_rf_mis AND pgate_IO2_over_rf_aux

rfpgate16   = pgate_core_rf_5t AND pgate_core_rf_aux
rfpgate17   = pgate_core_rf_5t_mis AND pgate_core_rf_aux
rfpgate18   = pgate_core_rf_5t_sdc AND pgate_core_rf_aux
rfpgate19   = pgate_core_rf_5t_sdc_mis AND pgate_core_rf_aux
rfpgate20   = pgate_core_lvt_rf_5t AND pgate_core_lvt_rf_aux
rfpgate21   = pgate_core_lvt_rf_5t_mis AND pgate_core_lvt_rf_aux
rfpgate22   = pgate_core_lvt_rf_5t_sdc AND pgate_core_lvt_rf_aux
rfpgate23   = pgate_core_lvt_rf_5t_sdc_mis AND pgate_core_lvt_rf_aux
rfpgate24   = pgate_IO1_rf_5t AND pgate_IO1_rf_aux
rfpgate25   = pgate_IO2_rf_5t AND pgate_IO2_rf_aux
rfpgate26   = pgate_IO2_rf_5t_mis AND pgate_IO2_rf_aux
rfpgate27   = pgate_IO2_rf_5t_sdc AND pgate_IO2_rf_aux
rfpgate28   = pgate_IO2_rf_5t_sdc_mis AND pgate_IO2_rf_aux
rfpgate29   = pgate_IO2_over_rf_5t AND pgate_IO2_over_rf_aux
rfpgate30   = pgate_IO2_over_rf_5t_mis AND pgate_IO2_over_rf_aux

rfpgate31   = pgate_IO2_under_rf AND pgate_IO2_under_rf_aux
rfpgate32   = pgate_IO2_under_rf_mis AND pgate_IO2_under_rf_aux
rfpgate33   = pgate_IO2_under_rf_5t AND pgate_IO2_under_rf_aux
rfpgate34   = pgate_IO2_under_rf_5t_mis AND pgate_IO2_under_rf_aux


rfpgate    = ((((((((((((((((((((((((((((((((rfpgate1 OR rfpgate2) OR rfpgate3) OR rfpgate4) OR rfpgate5) OR rfpgate6) OR rfpgate7) OR rfpgate8) OR rfpgate9) OR rfpgate10) OR rfpgate11) OR rfpgate12) OR rfpgate13) OR rfpgate14) OR rfpgate15) OR rfpgate16) OR rfpgate17) OR rfpgate18) OR rfpgate19) OR rfpgate20) OR rfpgate21) OR rfpgate22) OR rfpgate23) OR rfpgate24) OR rfpgate25) OR rfpgate26) OR rfpgate27) OR rfpgate28) OR rfpgate29) OR rfpgate30) OR rfpgate31) OR rfpgate32) OR rfpgate33) OR rfpgate34

psdrf_edge = pactive2 COINCIDENT EDGE rfpgate
psdrf_sd   = pactive2 WITH EDGE psdrf_edge ==2
psdrf_sab  = pactive2 WITH EDGE psdrf_edge ==1

s_core_p   = pactive2 OR rfpgate
sab_core_p = s_core_p NOT psdrf_sab


//Define poly for MOM third terminal with out n or p guard ring
MOM_poly = (poly_int NOT GTDUM) AND MOMDMY

//Define layer for LADDR/WADDR calculation of RF DNW Var MOS

VAR_aux = ((((pvar_core_rf_dnw_aux OR pvar_core_rf_dnw_aux_3t) OR pvar_IO1_rf_dnw_aux ) OR pvar_IO1_rf_dnw_aux_3t) OR pvar_IO2_rf_dnw_aux) OR pvar_IO2_rf_dnw_aux_3t

AA_VAR         = (ndifi AND VARMOS) AND DNW
dnwwdedge_var  = AA_VAR  TOUCH EDGE VAR_aux
dnwwaddrec_var = ENC dnwwdedge_var nwell <100 opposite region

//Define LDMOS
ndifi_sti              = ndifi OR STIDMY
nld50ll_gate           = ((((((poly1 AND ndifi_sti) AND LDBK) INTERACT nwell) AND TG) NOT OVERPL) NOT MOSCKT) AND NOSHR
nld50ll_gate_mis       = ((((((poly1 AND ndifi_sti) AND LDBK) INTERACT nwell) AND TG) NOT OVERPL) AND MOSCKT) AND NOSHR
nld50ll_gate_od        = ((((((poly1 AND ndifi_sti) AND LDBK) INTERACT nwell) AND TG) AND OVERPL) NOT MOSCKT) AND NOSHR
nld50ll_gate_od_mis    = ((((((poly1 AND ndifi_sti) AND LDBK) INTERACT nwell) AND TG) AND OVERPL) AND MOSCKT) AND NOSHR
nld50ll_gate_sh        = ((((((poly1 AND ndifi_sti) AND LDBK) INTERACT nwell) AND TG) NOT OVERPL) NOT MOSCKT) NOT NOSHR
nld50ll_gate_mis_sh    = ((((((poly1 AND ndifi_sti) AND LDBK) INTERACT nwell) AND TG) NOT OVERPL) AND MOSCKT) NOT NOSHR
nld50ll_gate_od_sh     = ((((((poly1 AND ndifi_sti) AND LDBK) INTERACT nwell) AND TG) AND OVERPL) NOT MOSCKT) NOT NOSHR
nld50ll_gate_od_mis_sh = ((((((poly1 AND ndifi_sti) AND LDBK) INTERACT nwell) AND TG) AND OVERPL) AND MOSCKT) NOT NOSHR
nld50ll_gate_body_old            = NFDMK INTERACT nld50ll_gate
nld50ll_gate_mis_body        = NFDMK INTERACT nld50ll_gate_mis
nld50ll_gate_od_body_old         = NFDMK INTERACT nld50ll_gate_od
nld50ll_gate_od_mis_body     = NFDMK INTERACT nld50ll_gate_od_mis
nld50ll_gate_sh_body_old         = NFDMK INTERACT nld50ll_gate_sh
nld50ll_gate_mis_sh_body     = NFDMK INTERACT nld50ll_gate_mis_sh
nld50ll_gate_od_sh_body_old      = NFDMK INTERACT nld50ll_gate_od_sh
nld50ll_gate_od_mis_sh_body  = NFDMK INTERACT nld50ll_gate_od_mis_sh
nld_gate    = ((((((nld50ll_gate OR nld50ll_gate_mis) OR nld50ll_gate_od) OR nld50ll_gate_od_mis) OR nld50ll_gate_sh) OR nld50ll_gate_mis_sh) OR nld50ll_gate_od_sh) OR nld50ll_gate_od_mis_sh
nld50ll_s   = ((ndifi_sti NOT nld_gate) NOT INTERACT STIDMY) AND LDBK
nld50ll_d   = ((ndifi_sti NOT nld_gate) INTERACT STIDMY) AND LDBK
nld50ll_ad  = nwell ENCLOSE nld50ll_d
nld50ll_s_od   = copy nld50ll_s
nld50ll_s_sh   = copy nld50ll_s
nld50ll_s_od_sh= copy nld50ll_s

//new define
#IFDEF RC_RUN TRUE
nld50ll_s:prop = dfm property nld50ll_s nld50ll_gate_body OVERLAP ABUT ALSO MULTI
    [ ct = count(nld50ll_gate_body)]
    [ ar = (count(nld50ll_gate_body)==2) ?  (area(nld50ll_s)/2) : area(nld50ll_s) ]
    [ pm = (count(nld50ll_gate_body)==2) ?  (perim(nld50ll_s)/2) : perim(nld50ll_s) ]
nld50ll_gate_body:prop = dfm property nld50ll_gate_body nld50ll_s:prop OVERLAP ABUT ALSO MULTI
    [ ar = sum(property(nld50ll_s:prop,"ar")) ]
    [ pm = sum(property(nld50ll_s:prop,"pm")) ]
nld50ll_s_sh:prop = dfm property nld50ll_s_sh nld50ll_gate_sh_body OVERLAP ABUT ALSO MULTI
    [ ct = count(nld50ll_gate_sh_body)]
    [ ar = (count(nld50ll_gate_sh_body)==2) ?  (area(nld50ll_s_sh)/2) : area(nld50ll_s_sh) ]
    [ pm = (count(nld50ll_gate_sh_body)==2) ?  (perim(nld50ll_s_sh)/2) : perim(nld50ll_s_sh) ]
nld50ll_gate_sh_body:prop = dfm property nld50ll_gate_sh_body nld50ll_s_sh:prop OVERLAP ABUT ALSO MULTI
    [ ar = sum(property(nld50ll_s_sh:prop,"ar")) ]
    [ pm = sum(property(nld50ll_s_sh:prop,"pm")) ]
nld50ll_s_od:prop = dfm property nld50ll_s_od nld50ll_gate_od_body OVERLAP ABUT ALSO MULTI
    [ ct = count(nld50ll_gate_od_body)]
    [ ar = (count(nld50ll_gate_od_body)==2) ?  (area(nld50ll_s_od)/2) : area(nld50ll_s_od) ]
    [ pm = (count(nld50ll_gate_od_body)==2) ?  (perim(nld50ll_s_od)/2) : perim(nld50ll_s_od) ]
nld50ll_gate_od_body:prop = dfm property nld50ll_gate_od_body nld50ll_s_od:prop OVERLAP ABUT ALSO MULTI
    [ ar = sum(property(nld50ll_s_od:prop,"ar")) ]
    [ pm = sum(property(nld50ll_s_od:prop,"pm")) ]
nld50ll_s_od_sh:prop = dfm property nld50ll_s_od_sh nld50ll_gate_od_sh_body OVERLAP ABUT ALSO MULTI
    [ ct = count(nld50ll_gate_od_sh_body)]
    [ ar = (count(nld50ll_gate_od_sh_body)==2) ?  (area(nld50ll_s_od_sh)/2) : area(nld50ll_s_od_sh) ]
    [ pm = (count(nld50ll_gate_od_sh_body)==2) ?  (perim(nld50ll_s_od_sh)/2) : perim(nld50ll_s_od_sh) ]
nld50ll_gate_od_sh_body:prop = dfm property nld50ll_gate_od_sh_body nld50ll_s_od_sh:prop OVERLAP ABUT ALSO MULTI
    [ ar = sum(property(nld50ll_s_od_sh:prop,"ar")) ]
    [ pm = sum(property(nld50ll_s_od_sh:prop,"pm")) ]
#ENDIF
//end

pdifi_sti   = pdifi OR STIDMY
pld50ll_gate= (((((((poly1 AND pdifi_sti) AND LDBK) INTERACT pwell) AND TG) NOT OVERPL) NOT MOSCKT) AND NOSHR) AND DNW
pld50ll_gate_mis= (((((((poly1 AND pdifi_sti) AND LDBK) INTERACT pwell) AND TG) NOT OVERPL) AND MOSCKT) AND NOSHR) AND DNW
pld50ll_gate_od= (((((((poly1 AND pdifi_sti) AND LDBK) INTERACT pwell) AND TG) AND OVERPL) NOT MOSCKT) AND NOSHR) AND DNW
pld50ll_gate_od_mis= (((((((poly1 AND pdifi_sti) AND LDBK) INTERACT pwell) AND TG) AND OVERPL) AND MOSCKT) AND NOSHR) AND DNW
pld50ll_gate_sh        = (((((((poly1 AND pdifi_sti) AND LDBK) INTERACT pwell) AND TG) NOT OVERPL) NOT MOSCKT) NOT NOSHR) AND DNW
pld50ll_gate_mis_sh    = (((((((poly1 AND pdifi_sti) AND LDBK) INTERACT pwell) AND TG) NOT OVERPL) AND MOSCKT) NOT NOSHR) AND DNW
pld50ll_gate_od_sh     = (((((((poly1 AND pdifi_sti) AND LDBK) INTERACT pwell) AND TG) AND OVERPL) NOT MOSCKT) NOT NOSHR) AND DNW
pld50ll_gate_od_mis_sh = (((((((poly1 AND pdifi_sti) AND LDBK) INTERACT pwell) AND TG) AND OVERPL) AND MOSCKT) NOT NOSHR) AND DNW
pld50ll_gate_body_old            = NFDMK INTERACT pld50ll_gate
pld50ll_gate_mis_body        = NFDMK INTERACT pld50ll_gate_mis
pld50ll_gate_od_body_old         = NFDMK INTERACT pld50ll_gate_od
pld50ll_gate_od_mis_body     = NFDMK INTERACT pld50ll_gate_od_mis
pld50ll_gate_sh_body_old         = NFDMK INTERACT pld50ll_gate_sh
pld50ll_gate_mis_sh_body     = NFDMK INTERACT pld50ll_gate_mis_sh
pld50ll_gate_od_sh_body_old      = NFDMK INTERACT pld50ll_gate_od_sh
pld50ll_gate_od_mis_sh_body  = NFDMK INTERACT pld50ll_gate_od_mis_sh
pld_gate    = ((((((pld50ll_gate OR pld50ll_gate_mis) OR pld50ll_gate_od) OR pld50ll_gate_od_mis) OR pld50ll_gate_sh) OR pld50ll_gate_mis_sh) OR pld50ll_gate_od_sh) OR pld50ll_gate_od_mis_sh
pld50ll_s   = ((pdifi_sti NOT pld_gate) NOT INTERACT STIDMY) AND LDBK
pld50ll_d   = ((pdifi_sti NOT pld_gate) INTERACT STIDMY) AND LDBK
pld50ll_ad  = rwell ENCLOSE pld50ll_d
pld50ll_s_od   = copy pld50ll_s
pld50ll_s_sh   = copy pld50ll_s
pld50ll_s_od_sh= copy pld50ll_s

pld50 = ((pld50ll_gate_body OR pld50ll_gate_sh_body) or pld50ll_gate_od_body) or pld50ll_gate_od_sh_body

//new define
#IFDEF RC_RUN TRUE
pld50ll_s:prop = dfm property pld50ll_s pld50ll_gate_body OVERLAP ABUT ALSO MULTI
    [ ct = count(pld50ll_gate_body)]
    [ ar = (count(pld50ll_gate_body)==2) ?  (area(pld50ll_s)/2) : area(pld50ll_s) ]
    [ pm = (count(pld50ll_gate_body)==2) ?  (perim(pld50ll_s)/2) : perim(pld50ll_s) ]
pld50ll_gate_body:prop = dfm property pld50ll_gate_body pld50ll_s:prop OVERLAP ABUT ALSO MULTI
    [ ar = sum(property(pld50ll_s:prop,"ar")) ]
    [ pm = sum(property(pld50ll_s:prop,"pm")) ]
pld50ll_s_sh:prop = dfm property pld50ll_s_sh pld50ll_gate_sh_body OVERLAP ABUT ALSO MULTI
    [ ct = count(pld50ll_gate_sh_body)]
    [ ar = (count(pld50ll_gate_sh_body)==2) ?  (area(pld50ll_s_sh)/2) : area(pld50ll_s_sh) ]
    [ pm = (count(pld50ll_gate_sh_body)==2) ?  (perim(pld50ll_s_sh)/2) : perim(pld50ll_s_sh) ]
pld50ll_gate_sh_body:prop = dfm property pld50ll_gate_sh_body pld50ll_s_sh:prop OVERLAP ABUT ALSO MULTI
    [ ar = sum(property(pld50ll_s_sh:prop,"ar")) ]
    [ pm = sum(property(pld50ll_s_sh:prop,"pm")) ]
pld50ll_s_od:prop = dfm property pld50ll_s_od pld50ll_gate_od_body OVERLAP ABUT ALSO MULTI
    [ ct = count(pld50ll_gate_od_body)]
    [ ar = (count(pld50ll_gate_od_body)==2) ?  (area(pld50ll_s_od)/2) : area(pld50ll_s_od) ]
    [ pm = (count(pld50ll_gate_od_body)==2) ?  (perim(pld50ll_s_od)/2) : perim(pld50ll_s_od) ]
pld50ll_gate_od_body:prop = dfm property pld50ll_gate_od_body pld50ll_s_od:prop OVERLAP ABUT ALSO MULTI
    [ ar = sum(property(pld50ll_s_od:prop,"ar")) ]
    [ pm = sum(property(pld50ll_s_od:prop,"pm")) ]
pld50ll_s_od_sh:prop = dfm property pld50ll_s_od_sh pld50ll_gate_od_sh_body OVERLAP ABUT ALSO MULTI
    [ ct = count(pld50ll_gate_od_sh_body)]
    [ ar = (count(pld50ll_gate_od_sh_body)==2) ?  (area(pld50ll_s_od_sh)/2) : area(pld50ll_s_od_sh) ]
    [ pm = (count(pld50ll_gate_od_sh_body)==2) ?  (perim(pld50ll_s_od_sh)/2) : perim(pld50ll_s_od_sh) ]
pld50ll_gate_od_sh_body:prop = dfm property pld50ll_gate_od_sh_body pld50ll_s_od_sh:prop OVERLAP ABUT ALSO MULTI
    [ ar = sum(property(pld50ll_s_od_sh:prop,"ar")) ]
    [ pm = sum(property(pld50ll_s_od_sh:prop,"pm")) ]
#ENDIF
//end

//*Define taps for well connection
ntd_nwell_subcont = ntd AND nwell
ntd_dnwell_subcont = ntd AND dnwell
//ntd_dnw_subcont   = ntd AND nwell_DNW  
ptd_pwell_subcont = ptd AND pwell
ptd_rwell_subcont = ptd AND rwell
ptd_pnpcoll_subcont = ptd AND pnpcoll
ptd_dnwd_psub_subcont = ptd AND dnwd_psub
ntd_mom_nw_subcont = ntd and mom_nw
ptd_mom_pw_subcont = ptd and mom_pw

//*Define layers for WPE extraction*//
ngate_wpe = ngate NOT INST //to speed up run time
pgate_wpe = pgate NOT INST //to speed up run time
ngate_egl4_box_wpe = ngate_egl4_box NOT INST
pgate_egl4_box_wpe = pgate_egl4_box NOT INST
ngate_egl1_box_wpe = ngate_egl1_box NOT INST
pgate_egl1_box_wpe = pgate_egl1_box NOT INST

//*None-layer definition
ulln_none_layers = ((((((((((((((((((((((((NW or PSUB) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

ulln_mis_ckt_none_layers = ((((((((((((((((((((((((NW or PSUB) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnwulln_ckt_none_layers = ((((((((((((((((((((((((NW or PSUB) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

ullp_none_layers = (((((((((((((((((((((((((PSUB or VTNH) or LVN) or LVP) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

ullp_mis_ckt_none_layers = (((((((((((((((((((((((((PSUB or VTNH) or LVN) or LVP) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

n12ll_none_layers = ((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

n12ll_ckt_rf_none_layers = ((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

n12ll_ckt_rf_mis_none_layers = ((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

n12ll_ckt_rf_sdc_none_layers = ((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

n12ll_ckt_rf_sdc_mis_none_layers = ((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

n12ll_mis_ckt_none_layers = ((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnw12ll_ckt_none_layers = ((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnw12ll_ckt_rf_none_layers = ((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnw12ll_ckt_rf_6t_none_layers = ((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnw12ll_ckt_rf_6t_mis_none_layers = ((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnw12ll_ckt_rf_6t_sdc_none_layers = ((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnw12ll_ckt_rf_6t_sdc_mis_none_layers = ((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnw12ll_ckt_rf_mis_none_layers = ((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnw12ll_ckt_rf_sdc_none_layers = ((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnw12ll_ckt_rf_sdc_mis_none_layers = ((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

p12ll_none_layers = (((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

p12ll_ckt_rf_none_layers = (((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

p12ll_ckt_rf_5t_none_layers = (((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

p12ll_ckt_rf_5t_mis_none_layers = (((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

p12ll_ckt_rf_5t_sdc_none_layers = (((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

p12ll_ckt_rf_5t_sdc_mis_none_layers = (((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

p12ll_ckt_rf_mis_none_layers = (((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

p12ll_ckt_rf_sdc_none_layers = (((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

p12ll_ckt_rf_sdc_mis_none_layers = (((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

p12ll_mis_ckt_none_layers = (((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

nhvt12ll_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

nhvt12ll_mis_ckt_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnwhvt12ll_ckt_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

phvt12ll_none_layers = ((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or LVN) or LVP) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

phvt12ll_mis_ckt_none_layers = ((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or LVN) or LVP) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

nlvt12ll_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

nlvt12ll_ckt_rf_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

nlvt12ll_ckt_rf_mis_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

nlvt12ll_ckt_rf_sdc_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

nlvt12ll_ckt_rf_sdc_mis_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

nlvt12ll_mis_ckt_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnwlvt12ll_ckt_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnwlvt12ll_ckt_rf_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnwlvt12ll_ckt_rf_6t_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnwlvt12ll_ckt_rf_6t_mis_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnwlvt12ll_ckt_rf_6t_sdc_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnwlvt12ll_ckt_rf_6t_sdc_mis_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnwlvt12ll_ckt_rf_mis_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnwlvt12ll_ckt_rf_sdc_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnwlvt12ll_ckt_rf_sdc_mis_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

plvt12ll_none_layers = ((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

plvt12ll_ckt_rf_none_layers = ((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

plvt12ll_ckt_rf_5t_none_layers = ((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

plvt12ll_ckt_rf_5t_mis_none_layers = ((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

plvt12ll_ckt_rf_5t_sdc_none_layers = ((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

plvt12ll_ckt_rf_5t_sdc_mis_none_layers = ((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

plvt12ll_ckt_rf_mis_none_layers = ((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

plvt12ll_ckt_rf_sdc_none_layers = ((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

plvt12ll_ckt_rf_sdc_mis_none_layers = ((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

plvt12ll_mis_ckt_none_layers = ((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

n18ll_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

n18ll_ckt_rf_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

n18ll_mis_ckt_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnw18ll_ckt_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnw18ll_ckt_rf_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnw18ll_ckt_rf_6t_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

p18ll_none_layers = ((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

p18ll_ckt_rf_none_layers = ((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

p18ll_ckt_rf_5t_none_layers = ((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

p18ll_mis_ckt_none_layers = ((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

n25ll_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

n25ll_ckt_rf_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

n25ll_ckt_rf_mis_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

n25ll_ckt_rf_sdc_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

n25ll_ckt_rf_sdc_mis_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

n25ll_mis_ckt_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnw25ll_ckt_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnw25ll_ckt_rf_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnw25ll_ckt_rf_6t_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnw25ll_ckt_rf_6t_mis_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnw25ll_ckt_rf_6t_sdc_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnw25ll_ckt_rf_6t_sdc_mis_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnw25ll_ckt_rf_mis_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnw25ll_ckt_rf_sdc_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnw25ll_ckt_rf_sdc_mis_none_layers = (((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

p25ll_none_layers = ((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

p25ll_ckt_rf_none_layers = ((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

p25ll_ckt_rf_5t_none_layers = ((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

p25ll_ckt_rf_5t_mis_none_layers = ((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

p25ll_ckt_rf_5t_sdc_none_layers = ((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

p25ll_ckt_rf_5t_sdc_mis_none_layers = ((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

p25ll_ckt_rf_mis_none_layers = ((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

p25ll_ckt_rf_sdc_none_layers = ((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

p25ll_ckt_rf_sdc_mis_none_layers = ((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

p25ll_mis_ckt_none_layers = ((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

nod33ll_none_layers = ((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

nod33ll_mis_ckt_none_layers = ((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnw25llod33_ckt_rf_none_layers = ((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnw25llod33_ckt_rf_6t_none_layers = ((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnw25llod33_ckt_rf_6t_mis_none_layers = ((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnw25llod33_ckt_rf_mis_none_layers = ((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnwod33ll_ckt_none_layers = ((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

n25llod33_ckt_rf_none_layers = ((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

n25llod33_ckt_rf_mis_none_layers = ((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

pod33ll_none_layers = (((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SN) or NPR1) or HRP) or ESD1) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

pod33ll_mis_ckt_none_layers = (((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SN) or NPR1) or HRP) or ESD1) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

p25llod33_ckt_rf_none_layers = (((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SN) or NPR1) or HRP) or ESD1) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

p25llod33_ckt_rf_5t_none_layers = (((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SN) or NPR1) or HRP) or ESD1) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

p25llod33_ckt_rf_5t_mis_none_layers = (((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SN) or NPR1) or HRP) or ESD1) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

p25llod33_ckt_rf_mis_none_layers = (((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SN) or NPR1) or HRP) or ESD1) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

nud18ll_none_layers = ((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or OVERPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

nud18ll_mis_ckt_none_layers = ((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or OVERPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnw25llud18_ckt_rf_none_layers = ((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or OVERPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnw25llud18_ckt_rf_6t_none_layers = ((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or OVERPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnw25llud18_ckt_rf_6t_mis_none_layers = ((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or OVERPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnw25llud18_ckt_rf_mis_none_layers = ((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or OVERPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

dnwud18ll_ckt_none_layers = ((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or OVERPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

n25llud18_ckt_rf_none_layers = ((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or OVERPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

n25llud18_ckt_rf_mis_none_layers = ((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or OVERPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or INDMY

pud18ll_none_layers = (((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

pud18ll_mis_ckt_none_layers = (((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

p25llud18_ckt_rf_none_layers = (((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

p25llud18_ckt_rf_5t_none_layers = (((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

p25llud18_ckt_rf_5t_mis_none_layers = (((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

p25llud18_ckt_rf_mis_none_layers = (((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SN) or NPR1) or HRP) or ESD1) or OVERPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or INDMY

nt12ll_none_layers = (((((((((((((((((((((((((((((((DNW or NW) or UHVT) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

nt12ll_mis_ckt_none_layers = (((((((((((((((((((((((((((((((DNW or NW) or UHVT) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

nt18ll_none_layers = ((((((((((((((((((((((((((((((DNW or NW) or UHVT) or VTNH) or VTPH) or LVN) or LVP) or TG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

nt18ll_mis_ckt_none_layers = ((((((((((((((((((((((((((((((DNW or NW) or UHVT) or VTNH) or VTPH) or LVN) or LVP) or TG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

nt25ll_none_layers = ((((((((((((((((((((((((((((((DNW or NW) or UHVT) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

nt25ll_mis_ckt_none_layers = ((((((((((((((((((((((((((((((DNW or NW) or UHVT) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

ntod33ll_none_layers = (((((((((((((((((((((((((((((DNW or NW) or UHVT) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

ntod33ll_mis_ckt_none_layers = (((((((((((((((((((((((((((((DNW or NW) or UHVT) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

ntud18ll_none_layers = (((((((((((((((((((((((((((((DNW or NW) or UHVT) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

ntud18ll_mis_ckt_none_layers = (((((((((((((((((((((((((((((DNW or NW) or UHVT) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

nld50llod_ckt_none_layers = (((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or UNDEPL) or INST) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

nld50llod_sh_ckt_none_layers = (((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or UNDEPL) or INST) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pld50llod_ckt_none_layers = ((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SN) or NPR1) or HRP) or ESD1) or SAB) or UNDEPL) or INST) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pld50llod_sh_ckt_none_layers = ((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SN) or NPR1) or HRP) or ESD1) or SAB) or UNDEPL) or INST) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

nld50ll_ckt_none_layers = ((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

nld50ll_sh_ckt_none_layers = ((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pld50ll_ckt_none_layers = (((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pld50ll_sh_ckt_none_layers = (((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rnwsti_none_layers = ((((((((((((((((((((((((((((((DNW or AA) or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rnwsti_ckt_none_layers = ((((((((((((((((((((((((((((((DNW or AA) or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rnwaa_none_layers = (((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or GT) or SN) or SP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rnwaa_ckt_none_layers = (((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or GT) or SN) or SP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rndifsab_none_layers = ((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or GT) or SP) or NPR1) or HRP) or ESD1) or INST) or LDBK) or STIDMY) or RESNW) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rndifsab_ckt_none_layers = ((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or GT) or SP) or NPR1) or HRP) or ESD1) or INST) or LDBK) or STIDMY) or RESNW) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rndifsab_ckt_rf_none_layers = ((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or GT) or SP) or NPR1) or HRP) or ESD1) or INST) or LDBK) or STIDMY) or RESNW) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rpdifsab_none_layers = (((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or GT) or SN) or NPR1) or HRP) or ESD1) or INST) or LDBK) or STIDMY) or RESNW) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rpdifsab_ckt_none_layers = (((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or GT) or SN) or NPR1) or HRP) or ESD1) or INST) or LDBK) or STIDMY) or RESNW) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rpdifsab_ckt_rf_none_layers = (((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or GT) or SN) or NPR1) or HRP) or ESD1) or INST) or LDBK) or STIDMY) or RESNW) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rndif_none_layers = (((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or INST) or LDBK) or STIDMY) or RESNW) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rndif_ckt_none_layers = (((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or INST) or LDBK) or STIDMY) or RESNW) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rpdif_none_layers = ((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or INST) or LDBK) or STIDMY) or RESNW) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rpdif_ckt_none_layers = ((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or INST) or LDBK) or STIDMY) or RESNW) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rnposab_none_layers = (((((((((((((((((((((((((AA or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or SP) or NPR1) or HRP) or ESD1) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rnposab_3t_none_layers = (((((((((((((((((((((((((AA or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or SP) or NPR1) or HRP) or ESD1) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rnposab_3t_ckt_none_layers = (((((((((((((((((((((((((AA or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or SP) or NPR1) or HRP) or ESD1) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rnposab_ckt_none_layers = (((((((((((((((((((((((((AA or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or SP) or NPR1) or HRP) or ESD1) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rnposab_ckt_rf_none_layers = (((((((((((((((((((((((((AA or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or SP) or NPR1) or HRP) or ESD1) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rnposab_ckt_rf_3t_none_layers = (((((((((((((((((((((((((AA or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or SP) or NPR1) or HRP) or ESD1) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rpposab_none_layers = (((((((((((((((((((((((((AA or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or SN) or NPR1) or HRP) or ESD1) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rpposab_3t_none_layers = (((((((((((((((((((((((((AA or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or SN) or NPR1) or HRP) or ESD1) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rpposab_3t_ckt_none_layers = (((((((((((((((((((((((((AA or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or SN) or NPR1) or HRP) or ESD1) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rpposab_ckt_none_layers = (((((((((((((((((((((((((AA or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or SN) or NPR1) or HRP) or ESD1) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rpposab_ckt_rf_none_layers = (((((((((((((((((((((((((AA or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or SN) or NPR1) or HRP) or ESD1) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rpposab_ckt_rf_3t_none_layers = (((((((((((((((((((((((((AA or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or SN) or NPR1) or HRP) or ESD1) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rnpo_none_layers = ((((((((((((((((((((((((((AA or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or SP) or NPR1) or HRP) or ESD1) or SAB) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rnpo_3t_none_layers = ((((((((((((((((((((((((((AA or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or SP) or NPR1) or HRP) or ESD1) or SAB) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rnpo_3t_ckt_none_layers = ((((((((((((((((((((((((((AA or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or SP) or NPR1) or HRP) or ESD1) or SAB) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rnpo_ckt_none_layers = ((((((((((((((((((((((((((AA or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or SP) or NPR1) or HRP) or ESD1) or SAB) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rppo_none_layers = ((((((((((((((((((((((((((AA or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or SN) or NPR1) or HRP) or ESD1) or SAB) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rppo_3t_none_layers = ((((((((((((((((((((((((((AA or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or SN) or NPR1) or HRP) or ESD1) or SAB) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rppo_3t_ckt_none_layers = ((((((((((((((((((((((((((AA or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or SN) or NPR1) or HRP) or ESD1) or SAB) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rppo_ckt_none_layers = ((((((((((((((((((((((((((AA or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or SN) or NPR1) or HRP) or ESD1) or SAB) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rhrpo_none_layers = ((((((((((((((((((((((((AA or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or SN) or NPR1) or ESD1) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rhrpo_3t_none_layers = ((((((((((((((((((((((((AA or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or SN) or NPR1) or ESD1) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rhrpo_3t_ckt_none_layers = ((((((((((((((((((((((((AA or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or SN) or NPR1) or ESD1) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rhrpo_ckt_none_layers = ((((((((((((((((((((((((AA or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or SN) or NPR1) or ESD1) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rhrpo_ckt_rf_none_layers = ((((((((((((((((((((((((AA or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or SN) or NPR1) or ESD1) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rhrpo_ckt_rf_3t_none_layers = ((((((((((((((((((((((((AA or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or SN) or NPR1) or ESD1) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

ndioull_none_layers = (((((((((((((((((((((((((((((NW or PSUB) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pdioull_none_layers = ((((((((((((((((((((((((((((PSUB or VTNH) or LVN) or LVP) or TG) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

ndio12ll_none_layers = (((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pdio12ll_none_layers = ((((((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

ndio18ll_none_layers = ((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pdio18ll_none_layers = (((((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

ndio25ll_none_layers = ((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pdio25ll_none_layers = (((((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

ntdio12ll_none_layers = (((((((((((((((((((((((((((((((DNW or NW) or UHVT) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

ntdio18ll_none_layers = ((((((((((((((((((((((((((((((DNW or NW) or UHVT) or VTNH) or VTPH) or LVN) or LVP) or TG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

ntdio25ll_none_layers = ((((((((((((((((((((((((((((((DNW or NW) or UHVT) or VTNH) or VTPH) or LVN) or LVP) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

ndio12llhvt_none_layers = ((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pdio12llhvt_none_layers = (((((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or LVN) or LVP) or TG) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

ndio12lllvt_none_layers = ((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVP) or TG) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pdio12lllvt_none_layers = (((((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or TG) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

nwdioll_none_layers = (((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

dnd12ll_none_layers = ((((((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

rwd12ll_none_layers = ((((((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

dnwd12ll_none_layers = ((((((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pvar12ll_ckt_none_layers = ((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pvar12ll_ckt_rf_none_layers = ((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pvar12ll_ckt_rf_3t_none_layers = ((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pvar12lldnw_ckt_rf_none_layers = (((((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pvar12lldnw_ckt_rf_3t_none_layers = (((((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pvar18ll_ckt_none_layers = (((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pvar18ll_ckt_rf_none_layers = (((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pvar18ll_ckt_rf_3t_none_layers = (((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pvar18lldnw_ckt_rf_none_layers = ((((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pvar18lldnw_ckt_rf_3t_none_layers = ((((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pvar25ll_ckt_none_layers = (((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pvar25ll_ckt_rf_none_layers = (((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pvar25ll_ckt_rf_3t_none_layers = (((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pvar25lldnw_ckt_rf_none_layers = ((((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pvar25lldnw_ckt_rf_3t_none_layers = ((((((((((((((((((((((((((((UHVT or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp12ll_none_layers = (((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp12a100ll_none_layers = (((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp12a100ll_mis_ckt_none_layers = (((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp12a100ll_sh_none_layers = (((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp12a100ll_sh_mis_ckt_none_layers = (((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp12a25ll_none_layers = (((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp12a25ll_mis_ckt_none_layers = (((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp12a25ll_sh_none_layers = (((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp12a25ll_sh_mis_ckt_none_layers = (((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp12a4ll_none_layers = (((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp12a4ll_mis_ckt_none_layers = (((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp12a4ll_sh_none_layers = (((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp12a4ll_sh_mis_ckt_none_layers = (((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp18ll_none_layers = ((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp18a100ll_none_layers = ((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp18a100ll_mis_ckt_none_layers = ((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp18a100ll_sh_none_layers = ((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp18a100ll_sh_mis_ckt_none_layers = ((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp18a25ll_none_layers = ((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp18a25ll_mis_ckt_none_layers = ((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp18a25ll_sh_none_layers = ((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp18a25ll_sh_mis_ckt_none_layers = ((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp18a4ll_none_layers = ((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp18a4ll_mis_ckt_none_layers = ((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp18a4ll_sh_none_layers = ((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp18a4ll_sh_mis_ckt_none_layers = ((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp25ll_none_layers = ((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp25a100ll_none_layers = ((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp25a100ll_mis_ckt_none_layers = ((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp25a100ll_sh_none_layers = ((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp25a100ll_sh_mis_ckt_none_layers = ((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp25a25ll_none_layers = ((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp25a25ll_mis_ckt_none_layers = ((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp25a25ll_sh_none_layers = ((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp25a25ll_sh_mis_ckt_none_layers = ((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp25a4ll_none_layers = ((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp25a4ll_mis_ckt_none_layers = ((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp25a4ll_sh_none_layers = ((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

pnp25a4ll_sh_mis_ckt_none_layers = ((((((((((((((((((((((((((((((DNW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or GT) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn12ll_none_layers = (((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn12a100ll_none_layers = (((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn12a100ll_mis_ckt_none_layers = (((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn12a100ll_sh_none_layers = (((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn12a100ll_sh_mis_ckt_none_layers = (((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn12a25ll_none_layers = (((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn12a25ll_mis_ckt_none_layers = (((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn12a25ll_sh_none_layers = (((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn12a25ll_sh_mis_ckt_none_layers = (((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn12a4ll_none_layers = (((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn12a4ll_mis_ckt_none_layers = (((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn12a4ll_sh_none_layers = (((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn12a4ll_sh_mis_ckt_none_layers = (((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn18ll_none_layers = ((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn18a100ll_none_layers = ((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn18a100ll_mis_ckt_none_layers = ((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn18a100ll_sh_none_layers = ((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn18a100ll_sh_mis_ckt_none_layers = ((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn18a25ll_none_layers = ((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn18a25ll_mis_ckt_none_layers = ((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn18a25ll_sh_none_layers = ((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn18a25ll_sh_mis_ckt_none_layers = ((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn18a4ll_none_layers = ((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn18a4ll_mis_ckt_none_layers = ((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn18a4ll_sh_none_layers = ((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn18a4ll_sh_mis_ckt_none_layers = ((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn25ll_none_layers = ((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn25a100ll_none_layers = ((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn25a100ll_mis_ckt_none_layers = ((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn25a100ll_sh_none_layers = ((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn25a100ll_sh_mis_ckt_none_layers = ((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn25a25ll_none_layers = ((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn25a25ll_mis_ckt_none_layers = ((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn25a25ll_sh_none_layers = ((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn25a25ll_sh_mis_ckt_none_layers = ((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn25a4ll_none_layers = ((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn25a4ll_mis_ckt_none_layers = ((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn25a4ll_sh_none_layers = ((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

npn25a4ll_sh_mis_ckt_none_layers = ((((((((((((((((((((((((((((((NW or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or DG) or GT) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

EFUSE_res_none_layers = ((((((((((((((((((((((((((((((AA or NW) or UHVT) or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or ESDIO2) or ESD5V) or INDMY) or MOMDMY

ind_2Tdiff_2d8alutm_psub_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_2Tdiff_alutm_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_2Tdiff_alutm_psub_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_3Tdiff_2d8alutm_psub_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_3Tdiff_alutm_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_3Tdiff_alutm_psub_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_diff_1tm_t2_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_diff_1tm_t2_psub_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_diff_1tm_t3_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_diff_1tm_t3_psub_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_diff_1tm_t4_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_diff_1tm_t4_psub_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_diff_1tm_t5_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_diff_1tm_t5_psub_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_diff_t2_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_diff_t2_psub_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_diff_t3_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_diff_t3_psub_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_diff_t4_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_diff_t4_psub_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_diff_t5_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_diff_t5_psub_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_diff_t6_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_diff_t6_psub_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_1tm_t2_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_1tm_t2_psub_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_1tm_t3_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_1tm_t3_psub_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_1tm_t4_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_1tm_t4_psub_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_1tm_t5_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_1tm_t5_psub_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_diff_t1alpa_t1_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_diff_t1alpa_t2_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_diff_t1alpa_t3_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_diff_t1alpa_t4_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_diff_t1alpa_t5_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_t1alpa_psub_t1_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_t1alpa_psub_t2_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_t1alpa_psub_t3_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_t1alpa_psub_t4_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_t1alpa_psub_t5_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_t1alpa_t1_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_t1alpa_t2_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_t1alpa_t3_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_t1alpa_t4_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_t1alpa_t5_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_t2_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_t2_psub_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_t3_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_t3_psub_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_t4_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_t4_psub_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_t5_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_t5_psub_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_t6_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

ind_rf_t6_psub_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

rf_ind_2d8alutm_psub_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

rf_ind_alutm_psub_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

spi_ind_rf_1p1_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

spi_ind_rf_1p2_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

spi_ind_rf_1p3_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

spi_ind_rf_psub_1p1_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

spi_ind_rf_psub_1p2_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

spi_ind_rf_psub_1p3_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

spi_ind_rf_RDL2d8_psub_1p1_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

spi_ind_rf_RDL2d8_psub_1p2_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

spi_ind_rf_RDL2d8_psub_1p3_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

spi_ind_rf_RDL2d8_psub_2p3_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

diff_t1alpa_psub_t1_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

diff_t1alpa_psub_t2_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

diff_t1alpa_psub_t3_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

diff_t1alpa_psub_t4_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

diff_t1alpa_psub_t5_none_layers = ((((((((((((((((((((((((VTNH or VTPH) or LVN) or LVP) or NPR1) or HRP) or ESD1) or OVERPL) or UNDEPL) or INST) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or MOMDMY

STPLHVT_none_layers = (((((((((((((((((((((((((((PSUB or VTNH) or LVN) or LVP) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

DNPLHVT_none_layers = (((((((((((((((((((((((((((PSUB or VTNH) or LVN) or LVP) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

DPPLHVT_none_layers = (((((((((((((((((((((((((((PSUB or VTNH) or LVN) or LVP) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

RFPLHVT_none_layers = (((((((((((((((((((((((((((PSUB or VTNH) or LVN) or LVP) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

UDPLHVT_none_layers = (((((((((((((((((((((((((((PSUB or VTNH) or LVN) or LVP) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

dnplull_ckt_none_layers = (((((((((((((((((((((((((((PSUB or VTNH) or LVN) or LVP) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

dpplull_ckt_none_layers = (((((((((((((((((((((((((((PSUB or VTNH) or LVN) or LVP) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

STNPGHVT_none_layers = ((((((((((((((((((((((((((((NW or PSUB) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

DNNPGHVT_none_layers = ((((((((((((((((((((((((((((NW or PSUB) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

DPNPGAHVT_none_layers = ((((((((((((((((((((((((((((NW or PSUB) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

DPNPGBHVT_none_layers = ((((((((((((((((((((((((((((NW or PSUB) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

RFNPGAHVT_none_layers = ((((((((((((((((((((((((((((NW or PSUB) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

RFNPGBHVT_none_layers = ((((((((((((((((((((((((((((NW or PSUB) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

UDNPGHVT_none_layers = ((((((((((((((((((((((((((((NW or PSUB) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

STNPDHVT_none_layers = ((((((((((((((((((((((((((((NW or PSUB) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

DNNPDHVT_none_layers = ((((((((((((((((((((((((((((NW or PSUB) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

DPNPDHVT_none_layers = ((((((((((((((((((((((((((((NW or PSUB) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

RFNPDHVT_none_layers = ((((((((((((((((((((((((((((NW or PSUB) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

UDNPDHVT_none_layers = ((((((((((((((((((((((((((((NW or PSUB) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

dnnpdull_ckt_none_layers = ((((((((((((((((((((((((((((NW or PSUB) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

dnnpgull_ckt_none_layers = ((((((((((((((((((((((((((((NW or PSUB) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

dpnpdull_ckt_none_layers = ((((((((((((((((((((((((((((NW or PSUB) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

dpnpgaull_ckt_none_layers = ((((((((((((((((((((((((((((NW or PSUB) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

dpnpgbull_ckt_none_layers = ((((((((((((((((((((((((((((NW or PSUB) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

STPLSVT_none_layers = ((((((((((((((((((((((((((((PSUB or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

DNPLSVT_none_layers = ((((((((((((((((((((((((((((PSUB or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

DPPLSVT_none_layers = ((((((((((((((((((((((((((((PSUB or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

RFPLSVT_none_layers = ((((((((((((((((((((((((((((PSUB or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

UDPLSVT_none_layers = ((((((((((((((((((((((((((((PSUB or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SN) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

STNPDSVT_none_layers = (((((((((((((((((((((((((((((NW or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

DNNPDSVT_none_layers = (((((((((((((((((((((((((((((NW or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

DPNPDSVT_none_layers = (((((((((((((((((((((((((((((NW or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

RFNPDSVT_none_layers = (((((((((((((((((((((((((((((NW or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

UDNPDSVT_none_layers = (((((((((((((((((((((((((((((NW or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

STNPGSVT_none_layers = (((((((((((((((((((((((((((((NW or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

DNNPGSVT_none_layers = (((((((((((((((((((((((((((((NW or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

DPNPGASVT_none_layers = (((((((((((((((((((((((((((((NW or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

DPNPGBSVT_none_layers = (((((((((((((((((((((((((((((NW or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

RFNPGASVT_none_layers = (((((((((((((((((((((((((((((NW or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

RFNPGBSVT_none_layers = (((((((((((((((((((((((((((((NW or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

UDNPGSVT_none_layers = (((((((((((((((((((((((((((((NW or PSUB) or VTNH) or VTPH) or LVN) or LVP) or TG) or DG) or SP) or NPR1) or HRP) or ESD1) or SAB) or OVERPL) or UNDEPL) or LDBK) or STIDMY) or RESNW) or RESAA) or RESP1) or HRPDMY) or DSTR) or VARMOS) or VARJUN) or DMPNP) or GTFUSE) or EFUSE) or FUSEMK1) or ESDIO2) or ESD5V) or INDMY

dnd12_core	= dnd12_core_old NOT dnd12ll_none_layers
npdsp_0.62_hvt	= npdsp_0.62_hvt_old NOT DNNPDHVT_none_layers
npdsp_0.62_svt	= npdsp_0.62_svt_old NOT DNNPDSVT_none_layers
npdsp_0.62_ull	= npdsp_0.62_ull_old NOT DNNPDULL_CKT_none_layers
npgsp_0.62_hvt	= npgsp_0.62_hvt_old NOT DNNPGHVT_none_layers
npgsp_0.62_svt	= npgsp_0.62_svt_old NOT DNNPGSVT_none_layers
npgsp_0.62_ull	= npgsp_0.62_ull_old NOT DNNPGULL_CKT_none_layers
plsp_0.62_hvt	= plsp_0.62_hvt_old NOT DNPLHVT_none_layers
plsp_0.62_svt	= plsp_0.62_svt_old NOT DNPLSVT_none_layers
plsp_0.62_ull	= plsp_0.62_ull_old NOT DNPLULL_CKT_none_layers
dnwngate12	= dnwngate12_old NOT dnw12ll_ckt_none_layers
dnw_core_rf_6t	= dnw_core_rf_6t_old NOT dnw12ll_ckt_rf_6t_none_layers
dnw_core_rf_6t_mis	= dnw_core_rf_6t_mis_old NOT dnw12ll_ckt_rf_6t_mis_none_layers
dnw_core_rf_6t_sdc	= dnw_core_rf_6t_sdc_old NOT dnw12ll_ckt_rf_6t_sdc_none_layers
dnw_core_rf_6t_sdc_mis	= dnw_core_rf_6t_sdc_mis_old NOT dnw12ll_ckt_rf_6t_sdc_mis_none_layers
dnw_core_rf	= dnw_core_rf_old NOT dnw12ll_ckt_rf_none_layers
dnw_core_rf_mis	= dnw_core_rf_mis_old NOT dnw12ll_ckt_rf_mis_none_layers
dnw_core_rf_sdc	= dnw_core_rf_sdc_old NOT dnw12ll_ckt_rf_sdc_none_layers
dnw_core_rf_sdc_mis	= dnw_core_rf_sdc_mis_old NOT dnw12ll_ckt_rf_sdc_mis_none_layers
dnwngate18	= dnwngate18_old NOT dnw18ll_ckt_none_layers
dnw_IO1_rf_6t	= dnw_IO1_rf_6t_old NOT dnw18ll_ckt_rf_6t_none_layers
dnw_IO1_rf	= dnw_IO1_rf_old NOT dnw18ll_ckt_rf_none_layers
dnwngate25	= dnwngate25_old NOT dnw25ll_ckt_none_layers
dnw_IO2_rf_6t	= dnw_IO2_rf_6t_old NOT dnw25ll_ckt_rf_6t_none_layers
dnw_IO2_rf_6t_mis	= dnw_IO2_rf_6t_mis_old NOT dnw25ll_ckt_rf_6t_mis_none_layers
dnw_IO2_rf_6t_sdc	= dnw_IO2_rf_6t_sdc_old NOT dnw25ll_ckt_rf_6t_sdc_none_layers
dnw_IO2_rf_6t_sdc_mis	= dnw_IO2_rf_6t_sdc_mis_old NOT dnw25ll_ckt_rf_6t_sdc_mis_none_layers
dnw_IO2_rf	= dnw_IO2_rf_old NOT dnw25ll_ckt_rf_none_layers
dnw_IO2_rf_mis	= dnw_IO2_rf_mis_old NOT dnw25ll_ckt_rf_mis_none_layers
dnw_IO2_rf_sdc	= dnw_IO2_rf_sdc_old NOT dnw25ll_ckt_rf_sdc_none_layers
dnw_IO2_rf_sdc_mis	= dnw_IO2_rf_sdc_mis_old NOT dnw25ll_ckt_rf_sdc_mis_none_layers
dnw_IO2_over_rf_6t	= dnw_IO2_over_rf_6t_old NOT dnw25llod33_ckt_rf_6t_none_layers
dnw_IO2_over_rf_6t_mis	= dnw_IO2_over_rf_6t_mis_old NOT dnw25llod33_ckt_rf_6t_mis_none_layers
dnw_IO2_over_rf	= dnw_IO2_over_rf_old NOT dnw25llod33_ckt_rf_none_layers
dnw_IO2_over_rf_mis	= dnw_IO2_over_rf_mis_old NOT dnw25llod33_ckt_rf_mis_none_layers
dnw_IO2_under_rf_6t	= dnw_IO2_under_rf_6t_old NOT dnw25llud18_ckt_rf_6t_none_layers
dnw_IO2_under_rf_6t_mis	= dnw_IO2_under_rf_6t_mis_old NOT dnw25llud18_ckt_rf_6t_mis_none_layers
dnw_IO2_under_rf	= dnw_IO2_under_rf_old NOT dnw25llud18_ckt_rf_none_layers
dnw_IO2_under_rf_mis	= dnw_IO2_under_rf_mis_old NOT dnw25llud18_ckt_rf_mis_none_layers
dnwd12_core	= dnwd12_core_old NOT dnwd12ll_none_layers
dnwhvtgate12	= dnwhvtgate12_old NOT dnwhvt12ll_ckt_none_layers
dnwlvtgate12	= dnwlvtgate12_old NOT dnwlvt12ll_ckt_none_layers
dnw_core_lvt_rf_6t	= dnw_core_lvt_rf_6t_old NOT dnwlvt12ll_ckt_rf_6t_none_layers
dnw_core_lvt_rf_6t_mis	= dnw_core_lvt_rf_6t_mis_old NOT dnwlvt12ll_ckt_rf_6t_mis_none_layers
dnw_core_lvt_rf_6t_sdc	= dnw_core_lvt_rf_6t_sdc_old NOT dnwlvt12ll_ckt_rf_6t_sdc_none_layers
dnw_core_lvt_rf_6t_sdc_mis	= dnw_core_lvt_rf_6t_sdc_mis_old NOT dnwlvt12ll_ckt_rf_6t_sdc_mis_none_layers
dnw_core_lvt_rf	= dnw_core_lvt_rf_old NOT dnwlvt12ll_ckt_rf_none_layers
dnw_core_lvt_rf_mis	= dnw_core_lvt_rf_mis_old NOT dnwlvt12ll_ckt_rf_mis_none_layers
dnw_core_lvt_rf_sdc	= dnw_core_lvt_rf_sdc_old NOT dnwlvt12ll_ckt_rf_sdc_none_layers
dnw_core_lvt_rf_sdc_mis	= dnw_core_lvt_rf_sdc_mis_old NOT dnwlvt12ll_ckt_rf_sdc_mis_none_layers
dnwodgate33	= dnwodgate33_old NOT dnwod33ll_ckt_none_layers
dnwudgate18	= dnwudgate18_old NOT dnwud18ll_ckt_none_layers
dnwullngate	= dnwullngate_old NOT dnwulln_ckt_none_layers
npddp_0.974_hvt	= npddp_0.974_hvt_old NOT DPNPDHVT_none_layers
npddp_0.974_svt	= npddp_0.974_svt_old NOT DPNPDSVT_none_layers
npddp_0.974_ull	= npddp_0.974_ull_old NOT DPNPDULL_CKT_none_layers
npgadp_0.974_hvt	= npgadp_0.974_hvt_old NOT DPNPGAHVT_none_layers
npgadp_0.974_svt	= npgadp_0.974_svt_old NOT DPNPGASVT_none_layers
npgadp_0.974_ull	= npgadp_0.974_ull_old NOT DPNPGAULL_CKT_none_layers
npgbdp_0.974_hvt	= npgbdp_0.974_hvt_old NOT DPNPGBHVT_none_layers
npgbdp_0.974_svt	= npgbdp_0.974_svt_old NOT DPNPGBSVT_none_layers
npgbdp_0.974_ull	= npgbdp_0.974_ull_old NOT DPNPGBULL_CKT_none_layers
pldp_0.974_hvt	= pldp_0.974_hvt_old NOT DPPLHVT_none_layers
pldp_0.974_svt	= pldp_0.974_svt_old NOT DPPLSVT_none_layers
pldp_0.974_ull	= pldp_0.974_ull_old NOT DPPLULL_CKT_none_layers
efgate	= efgate_old NOT EFUSE_res_none_layers
ngate_core_rf_mis	= ngate_core_rf_mis_old NOT n12ll_ckt_rf_mis_none_layers
ngate_core_rf	= ngate_core_rf_old NOT n12ll_ckt_rf_none_layers
ngate_core_rf_sdc_mis	= ngate_core_rf_sdc_mis_old NOT n12ll_ckt_rf_sdc_mis_none_layers
ngate_core_rf_sdc	= ngate_core_rf_sdc_old NOT n12ll_ckt_rf_sdc_none_layers
ngate_core_mis	= ngate_core_mis_old NOT n12ll_mis_ckt_none_layers
ngate_core	= ngate_core_old NOT n12ll_none_layers
// egl
ngate_core_egl4_rf_mis	= ngate_core_egl4_rf_mis_old NOT n12ll_ckt_rf_mis_none_layers
ngate_core_egl4_rf	= ngate_core_egl4_rf_old NOT n12ll_ckt_rf_none_layers
ngate_core_egl4_rf_sdc_mis	= ngate_core_egl4_rf_sdc_mis_old NOT n12ll_ckt_rf_sdc_mis_none_layers
ngate_core_egl4_rf_sdc	= ngate_core_egl4_rf_sdc_old NOT n12ll_ckt_rf_sdc_none_layers
ngate_core_egl4_mis	= ngate_core_egl4_mis_old NOT n12ll_mis_ckt_none_layers
ngate_core_egl4_seed = ngate_core_egl4_old NOT n12ll_none_layers
ngate_core_egl4      = ngate_core_egl4_seed NOT INTERACT SAB
ngate_core_sab_egl4  = ngate_core_egl4_seed INTERACT SAB

ngate_core_egl1_rf_mis	= ngate_core_egl1_rf_mis_old NOT n12ll_ckt_rf_mis_none_layers
ngate_core_egl1_rf	= ngate_core_egl1_rf_old NOT n12ll_ckt_rf_none_layers
ngate_core_egl1_rf_sdc_mis	= ngate_core_egl1_rf_sdc_mis_old NOT n12ll_ckt_rf_sdc_mis_none_layers
ngate_core_egl1_rf_sdc	= ngate_core_egl1_rf_sdc_old NOT n12ll_ckt_rf_sdc_none_layers
ngate_core_egl1_mis	= ngate_core_egl1_mis_old NOT n12ll_mis_ckt_none_layers
ngate_core_egl1	= ngate_core_egl1_old NOT n12ll_none_layers
// egl
ngate_IO1_rf	= ngate_IO1_rf_old NOT n18ll_ckt_rf_none_layers
ngate_IO1_mis	= ngate_IO1_mis_old NOT n18ll_mis_ckt_none_layers
ngate_IO1	= ngate_IO1_old NOT n18ll_none_layers
ngate_IO2_rf_mis	= ngate_IO2_rf_mis_old NOT n25ll_ckt_rf_mis_none_layers
ngate_IO2_rf	= ngate_IO2_rf_old NOT n25ll_ckt_rf_none_layers
ngate_IO2_rf_sdc_mis	= ngate_IO2_rf_sdc_mis_old NOT n25ll_ckt_rf_sdc_mis_none_layers
ngate_IO2_rf_sdc	= ngate_IO2_rf_sdc_old NOT n25ll_ckt_rf_sdc_none_layers
ngate_IO2_mis	= ngate_IO2_mis_old NOT n25ll_mis_ckt_none_layers
ngate_IO2	= ngate_IO2_old NOT n25ll_none_layers
// egl
ngate_IO2_egl4_rf_mis	= ngate_IO2_egl4_rf_mis_old NOT n25ll_ckt_rf_mis_none_layers
ngate_IO2_egl4_rf	= ngate_IO2_egl4_rf_old NOT n25ll_ckt_rf_none_layers
ngate_IO2_egl4_rf_sdc_mis	= ngate_IO2_egl4_rf_sdc_mis_old NOT n25ll_ckt_rf_sdc_mis_none_layers
ngate_IO2_egl4_rf_sdc	= ngate_IO2_egl4_rf_sdc_old NOT n25ll_ckt_rf_sdc_none_layers
ngate_IO2_egl4_mis	= ngate_IO2_egl4_mis_old NOT n25ll_mis_ckt_none_layers
ngate_IO2_egl4_seed	= ngate_IO2_egl4_old NOT n25ll_none_layers
ngate_IO2_egl4      = ngate_IO2_egl4_seed NOT INTERACT SAB
ngate_IO2_sab_egl4  = ngate_IO2_egl4_seed INTERACT SAB

ngate_IO2_egl1_rf_mis	= ngate_IO2_egl1_rf_mis_old NOT n25ll_ckt_rf_mis_none_layers
ngate_IO2_egl1_rf	= ngate_IO2_egl1_rf_old NOT n25ll_ckt_rf_none_layers
ngate_IO2_egl1_rf_sdc_mis	= ngate_IO2_egl1_rf_sdc_mis_old NOT n25ll_ckt_rf_sdc_mis_none_layers
ngate_IO2_egl1_rf_sdc	= ngate_IO2_egl1_rf_sdc_old NOT n25ll_ckt_rf_sdc_none_layers
ngate_IO2_egl1_mis	= ngate_IO2_egl1_mis_old NOT n25ll_mis_ckt_none_layers
ngate_IO2_egl1	= ngate_IO2_egl1_old NOT n25ll_none_layers
// egl
ngate_IO2_over_rf_mis	= ngate_IO2_over_rf_mis_old NOT n25llod33_ckt_rf_mis_none_layers
ngate_IO2_over_rf	= ngate_IO2_over_rf_old NOT n25llod33_ckt_rf_none_layers
ngate_IO2_under_rf_mis	= ngate_IO2_under_rf_mis_old NOT n25llud18_ckt_rf_mis_none_layers
ngate_IO2_under_rf	= ngate_IO2_under_rf_old NOT n25llud18_ckt_rf_none_layers
ndio_core_hvt	= ndio_core_hvt_old NOT ndio12llhvt_none_layers
ndio_core_lvt	= ndio_core_lvt_old NOT ndio12lllvt_none_layers
ndio_core	= ndio_core_old NOT ndio12ll_none_layers
ndio_IO1	= ndio_IO1_old NOT ndio18ll_none_layers
ndio_IO2	= ndio_IO2_old NOT ndio25ll_none_layers
ndio_core_ull	= ndio_core_ull_old NOT ndioull_none_layers
ngate_core_hvt_mis	= ngate_core_hvt_mis_old NOT nhvt12ll_mis_ckt_none_layers
ngate_core_hvt	= ngate_core_hvt_old NOT nhvt12ll_none_layers
nld50ll_gate_body	= nld50ll_gate_body_old NOT nld50ll_ckt_none_layers
nld50ll_gate_od_body	= nld50ll_gate_od_body_old NOT nld50llod_ckt_none_layers
nld50ll_gate_od_sh_body	= nld50ll_gate_od_sh_body_old NOT nld50llod_sh_ckt_none_layers
nld50ll_gate_sh_body	= nld50ll_gate_sh_body_old NOT nld50ll_sh_ckt_none_layers
ngate_core_lvt_rf_mis	= ngate_core_lvt_rf_mis_old NOT nlvt12ll_ckt_rf_mis_none_layers
ngate_core_lvt_rf	= ngate_core_lvt_rf_old NOT nlvt12ll_ckt_rf_none_layers
ngate_core_lvt_rf_sdc_mis	= ngate_core_lvt_rf_sdc_mis_old NOT nlvt12ll_ckt_rf_sdc_mis_none_layers
ngate_core_lvt_rf_sdc	= ngate_core_lvt_rf_sdc_old NOT nlvt12ll_ckt_rf_sdc_none_layers
ngate_core_lvt_mis	= ngate_core_lvt_mis_old NOT nlvt12ll_mis_ckt_none_layers
ngate_core_lvt	= ngate_core_lvt_old NOT nlvt12ll_none_layers
ngate_IO2_over_mis	= ngate_IO2_over_mis_old NOT nod33ll_mis_ckt_none_layers
ngate_IO2_over	= ngate_IO2_over_old NOT nod33ll_none_layers
// egl
ngate_IO2_egl4_over_mis	= ngate_IO2_egl4_over_mis_old NOT nod33ll_mis_ckt_none_layers
ngate_IO2_egl4_over_seed = ngate_IO2_egl4_over_old NOT nod33ll_none_layers
ngate_IO2_egl4_over      = ngate_IO2_egl4_over_seed NOT INTERACT SAB
ngate_IO2_sab_egl4_over  = ngate_IO2_egl4_over_seed INTERACT SAB

ngate_IO2_egl1_over_mis	= ngate_IO2_egl1_over_mis_old NOT nod33ll_mis_ckt_none_layers
ngate_IO2_egl1_over	= ngate_IO2_egl1_over_old NOT nod33ll_none_layers
// egl
NPNCOREA100_mis	= NPNCOREA100_mis_old NOT npn12a100ll_mis_ckt_none_layers
NPNCOREA100	= NPNCOREA100_old NOT npn12a100ll_none_layers
NPNCOREA100_mis_sh	= NPNCOREA100_mis_sh_old NOT npn12a100ll_sh_mis_ckt_none_layers
NPNCOREA100_sh	= NPNCOREA100_sh_old NOT npn12a100ll_sh_none_layers
NPNCOREA25_mis	= NPNCOREA25_mis_old NOT npn12a25ll_mis_ckt_none_layers
NPNCOREA25	= NPNCOREA25_old NOT npn12a25ll_none_layers
NPNCOREA25_mis_sh	= NPNCOREA25_mis_sh_old NOT npn12a25ll_sh_mis_ckt_none_layers
NPNCOREA25_sh	= NPNCOREA25_sh_old NOT npn12a25ll_sh_none_layers
NPNCOREA4_mis	= NPNCOREA4_mis_old NOT npn12a4ll_mis_ckt_none_layers
NPNCOREA4	= NPNCOREA4_old NOT npn12a4ll_none_layers
NPNCOREA4_mis_sh	= NPNCOREA4_mis_sh_old NOT npn12a4ll_sh_mis_ckt_none_layers
NPNCOREA4_sh	= NPNCOREA4_sh_old NOT npn12a4ll_sh_none_layers
NPNIO1A100_mis	= NPNIO1A100_mis_old NOT npn18a100ll_mis_ckt_none_layers
NPNIO1A100	= NPNIO1A100_old NOT npn18a100ll_none_layers
NPNIO1A100_mis_sh	= NPNIO1A100_mis_sh_old NOT npn18a100ll_sh_mis_ckt_none_layers
NPNIO1A100_sh	= NPNIO1A100_sh_old NOT npn18a100ll_sh_none_layers
NPNIO1A25_mis	= NPNIO1A25_mis_old NOT npn18a25ll_mis_ckt_none_layers
NPNIO1A25	= NPNIO1A25_old NOT npn18a25ll_none_layers
NPNIO1A25_mis_sh	= NPNIO1A25_mis_sh_old NOT npn18a25ll_sh_mis_ckt_none_layers
NPNIO1A25_sh	= NPNIO1A25_sh_old NOT npn18a25ll_sh_none_layers
NPNIO1A4_mis	= NPNIO1A4_mis_old NOT npn18a4ll_mis_ckt_none_layers
NPNIO1A4	= NPNIO1A4_old NOT npn18a4ll_none_layers
NPNIO1A4_mis_sh	= NPNIO1A4_mis_sh_old NOT npn18a4ll_sh_mis_ckt_none_layers
NPNIO1A4_sh	= NPNIO1A4_sh_old NOT npn18a4ll_sh_none_layers
NPNIO2A100_mis	= NPNIO2A100_mis_old NOT npn25a100ll_mis_ckt_none_layers
NPNIO2A100	= NPNIO2A100_old NOT npn25a100ll_none_layers
NPNIO2A100_mis_sh	= NPNIO2A100_mis_sh_old NOT npn25a100ll_sh_mis_ckt_none_layers
NPNIO2A100_sh	= NPNIO2A100_sh_old NOT npn25a100ll_sh_none_layers
NPNIO2A25_mis	= NPNIO2A25_mis_old NOT npn25a25ll_mis_ckt_none_layers
NPNIO2A25	= NPNIO2A25_old NOT npn25a25ll_none_layers
NPNIO2A25_mis_sh	= NPNIO2A25_mis_sh_old NOT npn25a25ll_sh_mis_ckt_none_layers
NPNIO2A25_sh	= NPNIO2A25_sh_old NOT npn25a25ll_sh_none_layers
NPNIO2A4_mis	= NPNIO2A4_mis_old NOT npn25a4ll_mis_ckt_none_layers
NPNIO2A4	= NPNIO2A4_old NOT npn25a4ll_none_layers
NPNIO2A4_mis_sh	= NPNIO2A4_mis_sh_old NOT npn25a4ll_sh_mis_ckt_none_layers
NPNIO2A4_sh	= NPNIO2A4_sh_old NOT npn25a4ll_sh_none_layers
ntgate_core_mis	= ntgate_core_mis_old NOT nt12ll_mis_ckt_none_layers
ntgate_core	= ntgate_core_old NOT nt12ll_none_layers
ntgate_IO1_mis	= ntgate_IO1_mis_old NOT nt18ll_mis_ckt_none_layers
ntgate_IO1	= ntgate_IO1_old NOT nt18ll_none_layers
ntgate_IO2_mis	= ntgate_IO2_mis_old NOT nt25ll_mis_ckt_none_layers
ntgate_IO2	= ntgate_IO2_old NOT nt25ll_none_layers
ntdio_core	= ntdio_core_old NOT ntdio12ll_none_layers
ntdio_IO1	= ntdio_IO1_old NOT ntdio18ll_none_layers
ntdio_IO2	= ntdio_IO2_old NOT ntdio25ll_none_layers
ntgate_IO2_over_mis	= ntgate_IO2_over_mis_old NOT ntod33ll_mis_ckt_none_layers
ntgate_IO2_over	= ntgate_IO2_over_old NOT ntod33ll_none_layers
ntgate_IO2_under_mis	= ntgate_IO2_under_mis_old NOT ntud18ll_mis_ckt_none_layers
ntgate_IO2_under	= ntgate_IO2_under_old NOT ntud18ll_none_layers
ngate_IO2_under_mis	= ngate_IO2_under_mis_old NOT nud18ll_mis_ckt_none_layers
ngate_IO2_under	= ngate_IO2_under_old NOT nud18ll_none_layers
dionw	= dionw_old NOT nwdioll_none_layers
pgate_core_rf_5t_mis	= pgate_core_rf_5t_mis_old NOT p12ll_ckt_rf_5t_mis_none_layers
pgate_core_rf_5t	= pgate_core_rf_5t_old NOT p12ll_ckt_rf_5t_none_layers
pgate_core_rf_5t_sdc_mis	= pgate_core_rf_5t_sdc_mis_old NOT p12ll_ckt_rf_5t_sdc_mis_none_layers
pgate_core_rf_5t_sdc	= pgate_core_rf_5t_sdc_old NOT p12ll_ckt_rf_5t_sdc_none_layers
pgate_core_rf_mis	= pgate_core_rf_mis_old NOT p12ll_ckt_rf_mis_none_layers
pgate_core_rf	= pgate_core_rf_old NOT p12ll_ckt_rf_none_layers
pgate_core_rf_sdc_mis	= pgate_core_rf_sdc_mis_old NOT p12ll_ckt_rf_sdc_mis_none_layers
pgate_core_rf_sdc	= pgate_core_rf_sdc_old NOT p12ll_ckt_rf_sdc_none_layers
pgate_core_mis	= pgate_core_mis_old NOT p12ll_mis_ckt_none_layers
pgate_core	= pgate_core_old NOT p12ll_none_layers
// egl
pgate_core_egl4_rf_5t_mis	= pgate_core_egl4_rf_5t_mis_old NOT p12ll_ckt_rf_5t_mis_none_layers
pgate_core_egl4_rf_5t	= pgate_core_egl4_rf_5t_old NOT p12ll_ckt_rf_5t_none_layers
pgate_core_egl4_rf_5t_sdc_mis	= pgate_core_egl4_rf_5t_sdc_mis_old NOT p12ll_ckt_rf_5t_sdc_mis_none_layers
pgate_core_egl4_rf_5t_sdc	= pgate_core_egl4_rf_5t_sdc_old NOT p12ll_ckt_rf_5t_sdc_none_layers
pgate_core_egl4_rf_mis	= pgate_core_egl4_rf_mis_old NOT p12ll_ckt_rf_mis_none_layers
pgate_core_egl4_rf	= pgate_core_egl4_rf_old NOT p12ll_ckt_rf_none_layers
pgate_core_egl4_rf_sdc_mis	= pgate_core_egl4_rf_sdc_mis_old NOT p12ll_ckt_rf_sdc_mis_none_layers
pgate_core_egl4_rf_sdc	= pgate_core_egl4_rf_sdc_old NOT p12ll_ckt_rf_sdc_none_layers
pgate_core_egl4_mis	= pgate_core_egl4_mis_old NOT p12ll_mis_ckt_none_layers
pgate_core_egl4_seed = pgate_core_egl4_old NOT p12ll_none_layers
pgate_core_egl4      = pgate_core_egl4_seed NOT INTERACT SAB
pgate_core_sab_egl4  = pgate_core_egl4_seed INTERACT SAB

pgate_core_egl1_rf_5t_mis	= pgate_core_egl1_rf_5t_mis_old NOT p12ll_ckt_rf_5t_mis_none_layers
pgate_core_egl1_rf_5t	= pgate_core_egl1_rf_5t_old NOT p12ll_ckt_rf_5t_none_layers
pgate_core_egl1_rf_5t_sdc_mis	= pgate_core_egl1_rf_5t_sdc_mis_old NOT p12ll_ckt_rf_5t_sdc_mis_none_layers
pgate_core_egl1_rf_5t_sdc	= pgate_core_egl1_rf_5t_sdc_old NOT p12ll_ckt_rf_5t_sdc_none_layers
pgate_core_egl1_rf_mis	= pgate_core_egl1_rf_mis_old NOT p12ll_ckt_rf_mis_none_layers
pgate_core_egl1_rf	= pgate_core_egl1_rf_old NOT p12ll_ckt_rf_none_layers
pgate_core_egl1_rf_sdc_mis	= pgate_core_egl1_rf_sdc_mis_old NOT p12ll_ckt_rf_sdc_mis_none_layers
pgate_core_egl1_rf_sdc	= pgate_core_egl1_rf_sdc_old NOT p12ll_ckt_rf_sdc_none_layers
pgate_core_egl1_mis	= pgate_core_egl1_mis_old NOT p12ll_mis_ckt_none_layers
pgate_core_egl1	= pgate_core_egl1_old NOT p12ll_none_layers
// egl
pgate_IO1_rf_5t	= pgate_IO1_rf_5t_old NOT p18ll_ckt_rf_5t_none_layers
pgate_IO1_rf	= pgate_IO1_rf_old NOT p18ll_ckt_rf_none_layers
pgate_IO1_mis	= pgate_IO1_mis_old NOT p18ll_mis_ckt_none_layers
pgate_IO1	= pgate_IO1_old NOT p18ll_none_layers
pgate_IO2_rf_5t_mis	= pgate_IO2_rf_5t_mis_old NOT p25ll_ckt_rf_5t_mis_none_layers
pgate_IO2_rf_5t	= pgate_IO2_rf_5t_old NOT p25ll_ckt_rf_5t_none_layers
pgate_IO2_rf_5t_sdc_mis	= pgate_IO2_rf_5t_sdc_mis_old NOT p25ll_ckt_rf_5t_sdc_mis_none_layers
pgate_IO2_rf_5t_sdc	= pgate_IO2_rf_5t_sdc_old NOT p25ll_ckt_rf_5t_sdc_none_layers
pgate_IO2_rf_mis	= pgate_IO2_rf_mis_old NOT p25ll_ckt_rf_mis_none_layers
pgate_IO2_rf	= pgate_IO2_rf_old NOT p25ll_ckt_rf_none_layers
pgate_IO2_rf_sdc_mis	= pgate_IO2_rf_sdc_mis_old NOT p25ll_ckt_rf_sdc_mis_none_layers
pgate_IO2_rf_sdc	= pgate_IO2_rf_sdc_old NOT p25ll_ckt_rf_sdc_none_layers
pgate_IO2_mis	= pgate_IO2_mis_old NOT p25ll_mis_ckt_none_layers
pgate_IO2_over_rf_5t_mis	= pgate_IO2_over_rf_5t_mis_old NOT p25llod33_ckt_rf_5t_mis_none_layers
pgate_IO2_over_rf_5t	= pgate_IO2_over_rf_5t_old NOT p25llod33_ckt_rf_5t_none_layers
pgate_IO2_over_rf_mis	= pgate_IO2_over_rf_mis_old NOT p25llod33_ckt_rf_mis_none_layers
pgate_IO2_over_rf	= pgate_IO2_over_rf_old NOT p25llod33_ckt_rf_none_layers
pgate_IO2	= pgate_IO2_old NOT p25ll_none_layers
//
pgate_IO2_egl4_rf_5t_mis	= pgate_IO2_egl4_rf_5t_mis_old NOT p25ll_ckt_rf_5t_mis_none_layers
pgate_IO2_egl4_rf_5t	= pgate_IO2_egl4_rf_5t_old NOT p25ll_ckt_rf_5t_none_layers
pgate_IO2_egl4_rf_5t_sdc_mis	= pgate_IO2_egl4_rf_5t_sdc_mis_old NOT p25ll_ckt_rf_5t_sdc_mis_none_layers
pgate_IO2_egl4_rf_5t_sdc	= pgate_IO2_egl4_rf_5t_sdc_old NOT p25ll_ckt_rf_5t_sdc_none_layers
pgate_IO2_egl4_rf_mis	= pgate_IO2_egl4_rf_mis_old NOT p25ll_ckt_rf_mis_none_layers
pgate_IO2_egl4_rf	= pgate_IO2_egl4_rf_old NOT p25ll_ckt_rf_none_layers
pgate_IO2_egl4_rf_sdc_mis	= pgate_IO2_egl4_rf_sdc_mis_old NOT p25ll_ckt_rf_sdc_mis_none_layers
pgate_IO2_egl4_rf_sdc	= pgate_IO2_egl4_rf_sdc_old NOT p25ll_ckt_rf_sdc_none_layers
pgate_IO2_egl4_mis	= pgate_IO2_egl4_mis_old NOT p25ll_mis_ckt_none_layers
pgate_IO2_egl4_over_rf_5t_mis	= pgate_IO2_egl4_over_rf_5t_mis_old NOT p25llod33_ckt_rf_5t_mis_none_layers
pgate_IO2_egl4_over_rf_5t	= pgate_IO2_egl4_over_rf_5t_old NOT p25llod33_ckt_rf_5t_none_layers
pgate_IO2_egl4_over_rf_mis	= pgate_IO2_egl4_over_rf_mis_old NOT p25llod33_ckt_rf_mis_none_layers
pgate_IO2_egl4_over_rf	= pgate_IO2_egl4_over_rf_old NOT p25llod33_ckt_rf_none_layers
pgate_IO2_egl4_seed	= pgate_IO2_egl4_old NOT p25ll_none_layers
pgate_IO2_egl4      = pgate_IO2_egl4_seed NOT INTERACT SAB
pgate_IO2_sab_egl4  = pgate_IO2_egl4_seed INTERACT SAB

pgate_IO2_egl1_rf_5t_mis	= pgate_IO2_egl1_rf_5t_mis_old NOT p25ll_ckt_rf_5t_mis_none_layers
pgate_IO2_egl1_rf_5t	= pgate_IO2_egl1_rf_5t_old NOT p25ll_ckt_rf_5t_none_layers
pgate_IO2_egl1_rf_5t_sdc_mis	= pgate_IO2_egl1_rf_5t_sdc_mis_old NOT p25ll_ckt_rf_5t_sdc_mis_none_layers
pgate_IO2_egl1_rf_5t_sdc	= pgate_IO2_egl1_rf_5t_sdc_old NOT p25ll_ckt_rf_5t_sdc_none_layers
pgate_IO2_egl1_rf_mis	= pgate_IO2_egl1_rf_mis_old NOT p25ll_ckt_rf_mis_none_layers
pgate_IO2_egl1_rf	= pgate_IO2_egl1_rf_old NOT p25ll_ckt_rf_none_layers
pgate_IO2_egl1_rf_sdc_mis	= pgate_IO2_egl1_rf_sdc_mis_old NOT p25ll_ckt_rf_sdc_mis_none_layers
pgate_IO2_egl1_rf_sdc	= pgate_IO2_egl1_rf_sdc_old NOT p25ll_ckt_rf_sdc_none_layers
pgate_IO2_egl1_mis	= pgate_IO2_egl1_mis_old NOT p25ll_mis_ckt_none_layers
pgate_IO2_egl1_over_rf_5t_mis	= pgate_IO2_egl1_over_rf_5t_mis_old NOT p25llod33_ckt_rf_5t_mis_none_layers
pgate_IO2_egl1_over_rf_5t	= pgate_IO2_egl1_over_rf_5t_old NOT p25llod33_ckt_rf_5t_none_layers
pgate_IO2_egl1_over_rf_mis	= pgate_IO2_egl1_over_rf_mis_old NOT p25llod33_ckt_rf_mis_none_layers
pgate_IO2_egl1_over_rf	= pgate_IO2_egl1_over_rf_old NOT p25llod33_ckt_rf_none_layers
pgate_IO2_egl1	= pgate_IO2_egl1_old NOT p25ll_none_layers
//
pgate_IO2_under_rf_5t_mis	= pgate_IO2_under_rf_5t_mis_old NOT p25llud18_ckt_rf_5t_mis_none_layers
pgate_IO2_under_rf_5t	= pgate_IO2_under_rf_5t_old NOT p25llud18_ckt_rf_5t_none_layers
pgate_IO2_under_rf_mis	= pgate_IO2_under_rf_mis_old NOT p25llud18_ckt_rf_mis_none_layers
pgate_IO2_under_rf	= pgate_IO2_under_rf_old NOT p25llud18_ckt_rf_none_layers
pdio_core_hvt	= pdio_core_hvt_old NOT pdio12llhvt_none_layers
pdio_core_lvt	= pdio_core_lvt_old NOT pdio12lllvt_none_layers
pdio_core	= pdio_core_old NOT pdio12ll_none_layers
pdio_IO1	= pdio_IO1_old NOT pdio18ll_none_layers
pdio_IO2	= pdio_IO2_old NOT pdio25ll_none_layers
pdio_core_ull	= pdio_core_ull_old NOT pdioull_none_layers
pgate_core_hvt_mis	= pgate_core_hvt_mis_old NOT phvt12ll_mis_ckt_none_layers
pgate_core_hvt	= pgate_core_hvt_old NOT phvt12ll_none_layers
pld50ll_gate_body	= pld50ll_gate_body_old NOT pld50ll_ckt_none_layers
pld50ll_gate_od_body	= pld50ll_gate_od_body_old NOT pld50llod_ckt_none_layers
pld50ll_gate_od_sh_body	= pld50ll_gate_od_sh_body_old NOT pld50llod_sh_ckt_none_layers
pld50ll_gate_sh_body	= pld50ll_gate_sh_body_old NOT pld50ll_sh_ckt_none_layers
pgate_core_lvt_rf_5t_mis	= pgate_core_lvt_rf_5t_mis_old NOT plvt12ll_ckt_rf_5t_mis_none_layers
pgate_core_lvt_rf_5t	= pgate_core_lvt_rf_5t_old NOT plvt12ll_ckt_rf_5t_none_layers
pgate_core_lvt_rf_5t_sdc_mis	= pgate_core_lvt_rf_5t_sdc_mis_old NOT plvt12ll_ckt_rf_5t_sdc_mis_none_layers
pgate_core_lvt_rf_5t_sdc	= pgate_core_lvt_rf_5t_sdc_old NOT plvt12ll_ckt_rf_5t_sdc_none_layers
pgate_core_lvt_rf_mis	= pgate_core_lvt_rf_mis_old NOT plvt12ll_ckt_rf_mis_none_layers
pgate_core_lvt_rf	= pgate_core_lvt_rf_old NOT plvt12ll_ckt_rf_none_layers
pgate_core_lvt_rf_sdc_mis	= pgate_core_lvt_rf_sdc_mis_old NOT plvt12ll_ckt_rf_sdc_mis_none_layers
pgate_core_lvt_rf_sdc	= pgate_core_lvt_rf_sdc_old NOT plvt12ll_ckt_rf_sdc_none_layers
pgate_core_lvt_mis	= pgate_core_lvt_mis_old NOT plvt12ll_mis_ckt_none_layers
pgate_core_lvt	= pgate_core_lvt_old NOT plvt12ll_none_layers
PNPCOREA100_mis	= PNPCOREA100_mis_old NOT pnp12a100ll_mis_ckt_none_layers
PNPCOREA100	= PNPCOREA100_old NOT pnp12a100ll_none_layers
PNPCOREA100_mis_sh	= PNPCOREA100_mis_sh_old NOT pnp12a100ll_sh_mis_ckt_none_layers
PNPCOREA100_sh	= PNPCOREA100_sh_old NOT pnp12a100ll_sh_none_layers
PNPCOREA25_mis	= PNPCOREA25_mis_old NOT pnp12a25ll_mis_ckt_none_layers
PNPCOREA25	= PNPCOREA25_old NOT pnp12a25ll_none_layers
PNPCOREA25_mis_sh	= PNPCOREA25_mis_sh_old NOT pnp12a25ll_sh_mis_ckt_none_layers
PNPCOREA25_sh	= PNPCOREA25_sh_old NOT pnp12a25ll_sh_none_layers
PNPCOREA4_mis	= PNPCOREA4_mis_old NOT pnp12a4ll_mis_ckt_none_layers
PNPCOREA4	= PNPCOREA4_old NOT pnp12a4ll_none_layers
PNPCOREA4_mis_sh	= PNPCOREA4_mis_sh_old NOT pnp12a4ll_sh_mis_ckt_none_layers
PNPCOREA4_sh	= PNPCOREA4_sh_old NOT pnp12a4ll_sh_none_layers
PNPIO1A100_mis	= PNPIO1A100_mis_old NOT pnp18a100ll_mis_ckt_none_layers
PNPIO1A100	= PNPIO1A100_old NOT pnp18a100ll_none_layers
PNPIO1A100_mis_sh	= PNPIO1A100_mis_sh_old NOT pnp18a100ll_sh_mis_ckt_none_layers
PNPIO1A100_sh	= PNPIO1A100_sh_old NOT pnp18a100ll_sh_none_layers
PNPIO1A25_mis	= PNPIO1A25_mis_old NOT pnp18a25ll_mis_ckt_none_layers
PNPIO1A25	= PNPIO1A25_old NOT pnp18a25ll_none_layers
PNPIO1A25_mis_sh	= PNPIO1A25_mis_sh_old NOT pnp18a25ll_sh_mis_ckt_none_layers
PNPIO1A25_sh	= PNPIO1A25_sh_old NOT pnp18a25ll_sh_none_layers
PNPIO1A4_mis	= PNPIO1A4_mis_old NOT pnp18a4ll_mis_ckt_none_layers
PNPIO1A4	= PNPIO1A4_old NOT pnp18a4ll_none_layers
PNPIO1A4_mis_sh	= PNPIO1A4_mis_sh_old NOT pnp18a4ll_sh_mis_ckt_none_layers
PNPIO1A4_sh	= PNPIO1A4_sh_old NOT pnp18a4ll_sh_none_layers
PNPIO2A100_mis	= PNPIO2A100_mis_old NOT pnp25a100ll_mis_ckt_none_layers
PNPIO2A100	= PNPIO2A100_old NOT pnp25a100ll_none_layers
PNPIO2A100_mis_sh	= PNPIO2A100_mis_sh_old NOT pnp25a100ll_sh_mis_ckt_none_layers
PNPIO2A100_sh	= PNPIO2A100_sh_old NOT pnp25a100ll_sh_none_layers
PNPIO2A25_mis	= PNPIO2A25_mis_old NOT pnp25a25ll_mis_ckt_none_layers
PNPIO2A25	= PNPIO2A25_old NOT pnp25a25ll_none_layers
PNPIO2A25_mis_sh	= PNPIO2A25_mis_sh_old NOT pnp25a25ll_sh_mis_ckt_none_layers
PNPIO2A25_sh	= PNPIO2A25_sh_old NOT pnp25a25ll_sh_none_layers
PNPIO2A4_mis	= PNPIO2A4_mis_old NOT pnp25a4ll_mis_ckt_none_layers
PNPIO2A4	= PNPIO2A4_old NOT pnp25a4ll_none_layers
PNPIO2A4_mis_sh	= PNPIO2A4_mis_sh_old NOT pnp25a4ll_sh_mis_ckt_none_layers
PNPIO2A4_sh	= PNPIO2A4_sh_old NOT pnp25a4ll_sh_none_layers
pgate_IO2_over_mis	= pgate_IO2_over_mis_old NOT pod33ll_mis_ckt_none_layers
pgate_IO2_over	= pgate_IO2_over_old NOT pod33ll_none_layers
//
pgate_IO2_egl4_over_mis	= pgate_IO2_egl4_over_mis_old NOT pod33ll_mis_ckt_none_layers
pgate_IO2_egl4_over_seed = pgate_IO2_egl4_over_old NOT pod33ll_none_layers
pgate_IO2_egl4_over      = pgate_IO2_egl4_over_seed NOT INTERACT SAB
pgate_IO2_sab_egl4_over  = pgate_IO2_egl4_over_seed INTERACT SAB

pgate_IO2_egl1_over_mis	= pgate_IO2_egl1_over_mis_old NOT pod33ll_mis_ckt_none_layers
pgate_IO2_egl1_over	= pgate_IO2_egl1_over_old NOT pod33ll_none_layers
//
pgate_IO2_under_mis	= pgate_IO2_under_mis_old NOT pud18ll_mis_ckt_none_layers
pgate_IO2_under	= pgate_IO2_under_old NOT pud18ll_none_layers
pvar_core_t	= pvar_core_t_old NOT pvar12ll_ckt_none_layers
pvar_core_rf_3t_t	= pvar_core_rf_3t_t_old NOT pvar12ll_ckt_rf_3t_none_layers
pvar_core_rf_t	= pvar_core_rf_t_old NOT pvar12ll_ckt_rf_none_layers
pvar_core_dnw_rf_3t_t	= pvar_core_dnw_rf_3t_t_old NOT pvar12lldnw_ckt_rf_3t_none_layers
pvar_core_dnw_rf_t	= pvar_core_dnw_rf_t_old NOT pvar12lldnw_ckt_rf_none_layers
pvar_IO1_t	= pvar_IO1_t_old NOT pvar18ll_ckt_none_layers
pvar_IO1_rf_3t_t	= pvar_IO1_rf_3t_t_old NOT pvar18ll_ckt_rf_3t_none_layers
pvar_IO1_rf_t	= pvar_IO1_rf_t_old NOT pvar18ll_ckt_rf_none_layers
pvar_IO1_dnw_rf_3t_t	= pvar_IO1_dnw_rf_3t_t_old NOT pvar18lldnw_ckt_rf_3t_none_layers
pvar_IO1_dnw_rf_t	= pvar_IO1_dnw_rf_t_old NOT pvar18lldnw_ckt_rf_none_layers
pvar_IO2_t	= pvar_IO2_t_old NOT pvar25ll_ckt_none_layers
pvar_IO2_rf_3t_t	= pvar_IO2_rf_3t_t_old NOT pvar25ll_ckt_rf_3t_none_layers
pvar_IO2_rf_t	= pvar_IO2_rf_t_old NOT pvar25ll_ckt_rf_none_layers
pvar_IO2_dnw_rf_3t_t	= pvar_IO2_dnw_rf_3t_t_old NOT pvar25lldnw_ckt_rf_3t_none_layers
pvar_IO2_dnw_rf_t	= pvar_IO2_dnw_rf_t_old NOT pvar25lldnw_ckt_rf_none_layers
npddp_1.158_hvt	= npddp_1.158_hvt_old NOT RFNPDHVT_none_layers
npddp_1.158_svt	= npddp_1.158_svt_old NOT RFNPDSVT_none_layers
npgadp_1.158_hvt	= npgadp_1.158_hvt_old NOT RFNPGAHVT_none_layers
npgadp_1.158_svt	= npgadp_1.158_svt_old NOT RFNPGASVT_none_layers
npgbdp_1.158_hvt	= npgbdp_1.158_hvt_old NOT RFNPGBHVT_none_layers
npgbdp_1.158_svt	= npgbdp_1.158_svt_old NOT RFNPGBSVT_none_layers
pldp_1.158_hvt	= pldp_1.158_hvt_old NOT RFPLHVT_none_layers
pldp_1.158_svt	= pldp_1.158_svt_old NOT RFPLSVT_none_layers
RES_RHRPO_3T_CKT_NW	= RES_RHRPO_3T_CKT_NW_old NOT rhrpo_3t_ckt_none_layers
RES_RHRPO_3T_CKT_PW	= RES_RHRPO_3T_CKT_PW_old NOT rhrpo_3t_ckt_none_layers
RES_RHRPO_3T	= RES_RHRPO_3T_old NOT rhrpo_3t_none_layers
RES_RHRPO_CKT	= RES_RHRPO_CKT_old NOT rhrpo_ckt_none_layers
RES_RHRPO_RF_3T_NW	= RES_RHRPO_RF_3T_NW_old NOT rhrpo_ckt_rf_3t_none_layers
RES_RHRPO_RF_3T_PW	= RES_RHRPO_RF_3T_PW_old NOT rhrpo_ckt_rf_3t_none_layers
RES_RHRPO_RF	= RES_RHRPO_RF_old NOT rhrpo_ckt_rf_none_layers
RES_RHRPO	= RES_RHRPO_old NOT rhrpo_none_layers
RES_RNDIF_CKT	= RES_RNDIF_CKT_old NOT rndif_ckt_none_layers
RES_RNDIF	= RES_RNDIF_old NOT rndif_none_layers
RES_RNDIFSAB_CKT	= RES_RNDIFSAB_CKT_old NOT rndifsab_ckt_none_layers
RES_RNDIFSAB_RF	= RES_RNDIFSAB_RF_old NOT rndifsab_ckt_rf_none_layers
RES_RNDIFSAB	= RES_RNDIFSAB_old NOT rndifsab_none_layers
RES_RNPO_3T_NW_CKT	= RES_RNPO_3T_NW_CKT_old NOT rnpo_3t_ckt_none_layers
RES_RNPO_3T_PW_CKT	= RES_RNPO_3T_PW_CKT_old NOT rnpo_3t_ckt_none_layers
RES_RNPO_3T	= RES_RNPO_3T_old NOT rnpo_3t_none_layers
RES_RNPO_CKT	= RES_RNPO_CKT_old NOT rnpo_ckt_none_layers
RES_RNPO	= RES_RNPO_old NOT rnpo_none_layers
RES_RNPOSAB_3T_NW_CKT	= RES_RNPOSAB_3T_NW_CKT_old NOT rnposab_3t_ckt_none_layers
RES_RNPOSAB_3T_PW_CKT	= RES_RNPOSAB_3T_PW_CKT_old NOT rnposab_3t_ckt_none_layers
RES_RNPOSAB_3T	= RES_RNPOSAB_3T_old NOT rnposab_3t_none_layers
RES_RNPOSAB_CKT	= RES_RNPOSAB_CKT_old NOT rnposab_ckt_none_layers
RES_RNPOSAB_RF3T_NW	= RES_RNPOSAB_RF3T_NW_old NOT rnposab_ckt_rf_3t_none_layers
RES_RNPOSAB_RF3T_PW	= RES_RNPOSAB_RF3T_PW_old NOT rnposab_ckt_rf_3t_none_layers
RES_RNPOSAB_RF	= RES_RNPOSAB_RF_old NOT rnposab_ckt_rf_none_layers
RES_RNPOSAB	= RES_RNPOSAB_old NOT rnposab_none_layers
RES_RNWAA_CKT	= RES_RNWAA_CKT_old NOT rnwaa_ckt_none_layers
RES_RNWAA	= RES_RNWAA_old NOT rnwaa_none_layers
RES_RNWSTI_CKT	= RES_RNWSTI_CKT_old NOT rnwsti_ckt_none_layers
RES_RNWSTI	= RES_RNWSTI_old NOT rnwsti_none_layers
RES_RPDIF_CKT	= RES_RPDIF_CKT_old NOT rpdif_ckt_none_layers
RES_RPDIF	= RES_RPDIF_old NOT rpdif_none_layers
RES_RPDIFSAB_CKT	= RES_RPDIFSAB_CKT_old NOT rpdifsab_ckt_none_layers
RES_RPDIFSAB_RF	= RES_RPDIFSAB_RF_old NOT rpdifsab_ckt_rf_none_layers
RES_RPDIFSAB	= RES_RPDIFSAB_old NOT rpdifsab_none_layers
RES_RPPO_3T_NW_CKT	= RES_RPPO_3T_NW_CKT_old NOT rppo_3t_ckt_none_layers
RES_RPPO_3T_PW_CKT	= RES_RPPO_3T_PW_CKT_old NOT rppo_3t_ckt_none_layers
RES_RPPO_3T	= RES_RPPO_3T_old NOT rppo_3t_none_layers
RES_RPPO_CKT	= RES_RPPO_CKT_old NOT rppo_ckt_none_layers
RES_RPPO	= RES_RPPO_old NOT rppo_none_layers
RES_RPPOSAB_3T_NW_CKT	= RES_RPPOSAB_3T_NW_CKT_old NOT rpposab_3t_ckt_none_layers
RES_RPPOSAB_3T_PW_CKT	= RES_RPPOSAB_3T_PW_CKT_old NOT rpposab_3t_ckt_none_layers
RES_RPPOSAB_3T	= RES_RPPOSAB_3T_old NOT rpposab_3t_none_layers
RES_RPPOSAB_CKT	= RES_RPPOSAB_CKT_old NOT rpposab_ckt_none_layers
RES_RPPOSAB_RF3T_NW	= RES_RPPOSAB_RF3T_NW_old NOT rpposab_ckt_rf_3t_none_layers
RES_RPPOSAB_RF3T_PW	= RES_RPPOSAB_RF3T_PW_old NOT rpposab_ckt_rf_3t_none_layers
RES_RPPOSAB_RF	= RES_RPPOSAB_RF_old NOT rpposab_ckt_rf_none_layers
RES_RPPOSAB	= RES_RPPOSAB_old NOT rpposab_none_layers
rwd12_core	= rwd12_core_old NOT rwd12ll_none_layers
npdsp_0.525_hvt	= npdsp_0.525_hvt_old NOT STNPDHVT_none_layers
npdsp_0.525_svt	= npdsp_0.525_svt_old NOT STNPDSVT_none_layers
npgsp_0.525_hvt	= npgsp_0.525_hvt_old NOT STNPGHVT_none_layers
npgsp_0.525_svt	= npgsp_0.525_svt_old NOT STNPGSVT_none_layers
plsp_0.525_hvt	= plsp_0.525_hvt_old NOT STPLHVT_none_layers
plsp_0.525_svt	= plsp_0.525_svt_old NOT STPLSVT_none_layers
npdsp_0.499_hvt	= npdsp_0.499_hvt_old NOT UDNPDHVT_none_layers
npdsp_0.499_svt	= npdsp_0.499_svt_old NOT UDNPDSVT_none_layers
npgsp_0.499_hvt	= npgsp_0.499_hvt_old NOT UDNPGHVT_none_layers
npgsp_0.499_svt	= npgsp_0.499_svt_old NOT UDNPGSVT_none_layers
plsp_0.499_hvt	= plsp_0.499_hvt_old NOT UDPLHVT_none_layers
plsp_0.499_svt	= plsp_0.499_svt_old NOT UDPLSVT_none_layers
ngate_core_ull_mis	= ngate_core_ull_mis_old NOT ulln_mis_ckt_none_layers
ngate_core_ull	= ngate_core_ull_old NOT ulln_none_layers
pgate_core_ull_mis	= pgate_core_ull_mis_old NOT ullp_mis_ckt_none_layers
pgate_core_ull	= pgate_core_ull_old NOT ullp_none_layers

#IFDEF TOPMETAL 4
#ELSE
#IFDEF TOPMETAL 5
#ELSE
diff_t1alpa_psub_t1     = diff_t1alpa_psub_t1_old NOT diff_t1alpa_psub_t1_none_layers
diff_t1alpa_psub_t2     = diff_t1alpa_psub_t2_old NOT diff_t1alpa_psub_t2_none_layers
diff_t1alpa_psub_t3     = diff_t1alpa_psub_t3_old NOT diff_t1alpa_psub_t3_none_layers
diff_t1alpa_psub_t4     = diff_t1alpa_psub_t4_old NOT diff_t1alpa_psub_t4_none_layers
diff_t1alpa_psub_t5     = diff_t1alpa_psub_t5_old NOT diff_t1alpa_psub_t5_none_layers
rf_ind_2d8alutm_psub    = rf_ind_2d8alutm_psub_old NOT rf_ind_2d8alutm_psub_none_layers
rf_ind_alutm_psub       = rf_ind_alutm_psub_old NOT rf_ind_alutm_psub_none_layers
spi_ind_rf_1p1  = spi_ind_rf_1p1_old NOT spi_ind_rf_1p1_none_layers
spi_ind_rf_1p2  = spi_ind_rf_1p2_old NOT spi_ind_rf_1p2_none_layers
spi_ind_rf_1p3  = spi_ind_rf_1p3_old NOT spi_ind_rf_1p3_none_layers
spi_ind_rf_psub_1p1     = spi_ind_rf_psub_1p1_old NOT spi_ind_rf_psub_1p1_none_layers
spi_ind_rf_psub_1p2     = spi_ind_rf_psub_1p2_old NOT spi_ind_rf_psub_1p2_none_layers
spi_ind_rf_psub_1p3     = spi_ind_rf_psub_1p3_old NOT spi_ind_rf_psub_1p3_none_layers
spi_ind_rf_RDL2d8_psub_1p1      = spi_ind_rf_RDL2d8_psub_1p1_old NOT spi_ind_rf_RDL2d8_psub_1p1_none_layers
spi_ind_rf_RDL2d8_psub_1p2      = spi_ind_rf_RDL2d8_psub_1p2_old NOT spi_ind_rf_RDL2d8_psub_1p2_none_layers
spi_ind_rf_RDL2d8_psub_1p3      = spi_ind_rf_RDL2d8_psub_1p3_old NOT spi_ind_rf_RDL2d8_psub_1p3_none_layers
spi_ind_rf_RDL2d8_psub_2p3      = spi_ind_rf_RDL2d8_psub_2p3_old NOT spi_ind_rf_RDL2d8_psub_2p3_none_layers
ind_2Tdiff_2d8alutm_psub        = ind_2Tdiff_2d8alutm_psub_old NOT ind_2Tdiff_2d8alutm_psub_none_layers
ind_2Tdiff_alutm        = ind_2Tdiff_alutm_old NOT ind_2Tdiff_alutm_none_layers
ind_2Tdiff_alutm_psub   = ind_2Tdiff_alutm_psub_old NOT ind_2Tdiff_alutm_psub_none_layers
ind_3Tdiff_2d8alutm_psub        = ind_3Tdiff_2d8alutm_psub_old NOT ind_3Tdiff_2d8alutm_psub_none_layers
ind_3Tdiff_alutm        = ind_3Tdiff_alutm_old NOT ind_3Tdiff_alutm_none_layers
ind_3Tdiff_alutm_psub   = ind_3Tdiff_alutm_psub_old NOT ind_3Tdiff_alutm_psub_none_layers
ind_diff_1tm_t2 = ind_diff_1tm_t2_old NOT ind_diff_1tm_t2_none_layers
ind_diff_1tm_t2_psub    = ind_diff_1tm_t2_psub_old NOT ind_diff_1tm_t2_psub_none_layers
ind_diff_1tm_t3 = ind_diff_1tm_t3_old NOT ind_diff_1tm_t3_none_layers
ind_diff_1tm_t3_psub    = ind_diff_1tm_t3_psub_old NOT ind_diff_1tm_t3_psub_none_layers
ind_diff_1tm_t4 = ind_diff_1tm_t4_old NOT ind_diff_1tm_t4_none_layers
ind_diff_1tm_t4_psub    = ind_diff_1tm_t4_psub_old NOT ind_diff_1tm_t4_psub_none_layers
ind_diff_1tm_t5 = ind_diff_1tm_t5_old NOT ind_diff_1tm_t5_none_layers
ind_diff_1tm_t5_psub    = ind_diff_1tm_t5_psub_old NOT ind_diff_1tm_t5_psub_none_layers
ind_diff_t2     = ind_diff_t2_old NOT ind_diff_t2_none_layers
ind_diff_t2_psub        = ind_diff_t2_psub_old NOT ind_diff_t2_psub_none_layers
ind_diff_t3     = ind_diff_t3_old NOT ind_diff_t3_none_layers
ind_diff_t3_psub        = ind_diff_t3_psub_old NOT ind_diff_t3_psub_none_layers
ind_diff_t4     = ind_diff_t4_old NOT ind_diff_t4_none_layers
ind_diff_t4_psub        = ind_diff_t4_psub_old NOT ind_diff_t4_psub_none_layers
ind_diff_t5     = ind_diff_t5_old NOT ind_diff_t5_none_layers
ind_diff_t5_psub        = ind_diff_t5_psub_old NOT ind_diff_t5_psub_none_layers
ind_diff_t6     = ind_diff_t6_old NOT ind_diff_t6_none_layers
ind_diff_t6_psub        = ind_diff_t6_psub_old NOT ind_diff_t6_psub_none_layers
ind_rf_1tm_t2   = ind_rf_1tm_t2_old NOT ind_rf_1tm_t2_none_layers
ind_rf_1tm_t2_psub      = ind_rf_1tm_t2_psub_old NOT ind_rf_1tm_t2_psub_none_layers
ind_rf_1tm_t3   = ind_rf_1tm_t3_old NOT ind_rf_1tm_t3_none_layers
ind_rf_1tm_t3_psub      = ind_rf_1tm_t3_psub_old NOT ind_rf_1tm_t3_psub_none_layers
ind_rf_1tm_t4   = ind_rf_1tm_t4_old NOT ind_rf_1tm_t4_none_layers
ind_rf_1tm_t4_psub      = ind_rf_1tm_t4_psub_old NOT ind_rf_1tm_t4_psub_none_layers
ind_rf_1tm_t5   = ind_rf_1tm_t5_old NOT ind_rf_1tm_t5_none_layers
ind_rf_1tm_t5_psub      = ind_rf_1tm_t5_psub_old NOT ind_rf_1tm_t5_psub_none_layers
ind_rf_diff_t1alpa_t1   = ind_rf_diff_t1alpa_t1_old NOT ind_rf_diff_t1alpa_t1_none_layers
ind_rf_diff_t1alpa_t2   = ind_rf_diff_t1alpa_t2_old NOT ind_rf_diff_t1alpa_t2_none_layers
ind_rf_diff_t1alpa_t3   = ind_rf_diff_t1alpa_t3_old NOT ind_rf_diff_t1alpa_t3_none_layers
ind_rf_diff_t1alpa_t4   = ind_rf_diff_t1alpa_t4_old NOT ind_rf_diff_t1alpa_t4_none_layers
ind_rf_diff_t1alpa_t5   = ind_rf_diff_t1alpa_t5_old NOT ind_rf_diff_t1alpa_t5_none_layers
ind_rf_t1alpa_psub_t1   = ind_rf_t1alpa_psub_t1_old NOT ind_rf_t1alpa_psub_t1_none_layers
ind_rf_t1alpa_psub_t2   = ind_rf_t1alpa_psub_t2_old NOT ind_rf_t1alpa_psub_t2_none_layers
ind_rf_t1alpa_psub_t3   = ind_rf_t1alpa_psub_t3_old NOT ind_rf_t1alpa_psub_t3_none_layers
ind_rf_t1alpa_psub_t4   = ind_rf_t1alpa_psub_t4_old NOT ind_rf_t1alpa_psub_t4_none_layers
ind_rf_t1alpa_psub_t5   = ind_rf_t1alpa_psub_t5_old NOT ind_rf_t1alpa_psub_t5_none_layers
ind_rf_t1alpa_t1        = ind_rf_t1alpa_t1_old NOT ind_rf_t1alpa_t1_none_layers
ind_rf_t1alpa_t2        = ind_rf_t1alpa_t2_old NOT ind_rf_t1alpa_t2_none_layers
ind_rf_t1alpa_t3        = ind_rf_t1alpa_t3_old NOT ind_rf_t1alpa_t3_none_layers
ind_rf_t1alpa_t4        = ind_rf_t1alpa_t4_old NOT ind_rf_t1alpa_t4_none_layers
ind_rf_t1alpa_t5        = ind_rf_t1alpa_t5_old NOT ind_rf_t1alpa_t5_none_layers
ind_rf_t2       = ind_rf_t2_old NOT ind_rf_t2_none_layers
ind_rf_t2_psub  = ind_rf_t2_psub_old NOT ind_rf_t2_psub_none_layers
ind_rf_t3       = ind_rf_t3_old NOT ind_rf_t3_none_layers
ind_rf_t3_psub  = ind_rf_t3_psub_old NOT ind_rf_t3_psub_none_layers
ind_rf_t4       = ind_rf_t4_old NOT ind_rf_t4_none_layers
ind_rf_t4_psub  = ind_rf_t4_psub_old NOT ind_rf_t4_psub_none_layers
ind_rf_t5       = ind_rf_t5_old NOT ind_rf_t5_none_layers
ind_rf_t5_psub  = ind_rf_t5_psub_old NOT ind_rf_t5_psub_none_layers
ind_rf_t6       = ind_rf_t6_old NOT ind_rf_t6_none_layers
ind_rf_t6_psub  = ind_rf_t6_psub_old NOT ind_rf_t6_psub_none_layers
#ENDIF
#ENDIF

////////////////////////////////////////////
//*Connect Section                        //
////////////////////////////////////////////
PA_new = SIZE PA BY PA_size_value

ALPA   = RDL OR PA_new

RDV    = PA OR BCB1

#IFDEF TOPMETAL 10
CONNECT dind_B m3_ind
CONNECT m1_ind ntd BY ndfcont
CONNECT m1_ind ptd BY pdfcont

#IFDEF TOP_METAL_NUM double
CONNECT ALPA     metal10 BY RDV
CONNECT m10_ind_conn dind_pm
CONNECT m10_ind_conn spi_pm_PI
CONNECT m10_ind_conn spi_pm_MI
CONNECT m10_ind_conn spi_2d8_PI
CONNECT m10_ind_conn spi_2d8_MI

#IFDEF TM1_WIDTH 4
CONNECT dind_pm m8_ind BY TV1
CONNECT metal9 metal8  BY TV1

#IFDEF TM2_WIDTH 4
CONNECT metal10 metal9 BY TV2
CONNECT m9_ind_conn m10_ind_conn BY TV2
#ENDIF

#IFDEF TM2_WIDTH 15
CONNECT metal10 metal9 BY TV2
CONNECT m9_ind_conn m10_ind_conn BY TV2
CONNECT m9_ind_conn m10_2d8ind_conn BY TV2
CONNECT dind_pm_rdl m10_ind_conn
CONNECT m10_ind_conn rdl_ind_conn BY RDV
CONNECT m10_2d8ind_conn rdl_2d8ind_conn BY RDV
CONNECT ALPA rdl_ind_conn
CONNECT ALPA rdl_2d8ind_conn
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 2
CONNECT dind_pm m8_ind BY STV1
CONNECT metal9 metal8  BY STV1

#IFDEF TM2_WIDTH 2
CONNECT metal10 metal9 BY STV2
CONNECT m9_ind_conn m10_ind_conn BY STV2
#ENDIF
#IFDEF TM2_WIDTH 15
CONNECT metal10 metal9 BY TV2
CONNECT m9_ind_conn m10_ind_conn BY TV2
CONNECT dind_pm_rdl m10_ind_conn
CONNECT m10_ind_conn rdl_ind_conn BY RDV
CONNECT ALPA rdl_ind_conn
#ENDIF
#IFDEF TM2_WIDTH 4
CONNECT metal10 metal9 BY TV2
CONNECT m9_ind_conn m10_ind_conn BY TV2
#ENDIF
#ENDIF

CONNECT m10_ind_conn dind_pm_PI /*plus terminal for spiral and can be connected by tm1 and tm2*/
CONNECT m10_ind_conn dind_pm_MI /*plus terminal for spiral and can be connected by tm1 and tm2*/
CONNECT m1_ind metal1
CONNECT m2_ind metal2
CONNECT m3_ind metal3
CONNECT m4_ind metal4
CONNECT m5_ind metal5
CONNECT m6_ind metal6
CONNECT m7_ind metal7
CONNECT m8_ind metal8
CONNECT m9_ind_conn metal9
CONNECT m10_ind_conn metal10
CONNECT m10_2d8ind_conn metal10
CONNECT m9_ind_conn m8_ind BY TV1
CONNECT m8_ind m7_ind BY V7
CONNECT m7_ind m6_ind BY V6
CONNECT m6_ind m5_ind BY V5
CONNECT m5_ind m4_ind BY V4
CONNECT m4_ind m3_ind BY V3
CONNECT m3_ind m2_ind BY V2
CONNECT m2_ind m1_ind BY V1
CONNECT dind_2D8 metal10
CONNECT dind_ALPA metal10
CONNECT dind_CEN metal10
CONNECT dind_CEN m10_ind_rc

CONNECT metal1 mom_terminal12
CONNECT metal1 mom_terminal12_one
CONNECT metal1 mom_terminal12_two
CONNECT metal2 mom_terminal23
CONNECT metal2 mom_terminal23_one
CONNECT metal2 mom_terminal23_two
CONNECT metal3 mom_terminal34
CONNECT metal3 mom_terminal34_one
CONNECT metal3 mom_terminal34_two
CONNECT metal4 mom_terminal45
CONNECT metal4 mom_terminal45_one
CONNECT metal4 mom_terminal45_two
CONNECT metal5 mom_terminal56
CONNECT metal5 mom_terminal56_one
CONNECT metal5 mom_terminal56_two
CONNECT metal1 mom_terminal13
CONNECT metal1 mom_terminal13_one
CONNECT metal1 mom_terminal13_two
CONNECT metal2 mom_terminal24
CONNECT metal2 mom_terminal24_one
CONNECT metal2 mom_terminal24_two
CONNECT metal1 mom_terminal14
CONNECT metal1 mom_terminal14_one
CONNECT metal1 mom_terminal14_two
CONNECT metal3 mom_terminal35
CONNECT metal3 mom_terminal35_one
CONNECT metal3 mom_terminal35_two
CONNECT metal1 mom_terminal15
CONNECT metal1 mom_terminal15_one
CONNECT metal1 mom_terminal15_two
CONNECT metal4 mom_terminal46
CONNECT metal4 mom_terminal46_one
CONNECT metal4 mom_terminal46_two
CONNECT metal2 mom_terminal25
CONNECT metal2 mom_terminal25_one
CONNECT metal2 mom_terminal25_two
CONNECT metal3 mom_terminal36
CONNECT metal3 mom_terminal36_one
CONNECT metal3 mom_terminal36_two
CONNECT metal2 mom_terminal26
CONNECT metal2 mom_terminal26_one
CONNECT metal2 mom_terminal26_two
CONNECT metal1 mom_terminal16
CONNECT metal1 mom_terminal16_one
CONNECT metal1 mom_terminal16_two
CONNECT metal8 metal7 BY V7
CONNECT metal7 metal6 BY V6
CONNECT metal6 metal5 BY V5
CONNECT metal5 metal4 BY V4
CONNECT metal4 metal3 BY V3
CONNECT metal3 metal2 BY V2
CONNECT metal2 metal1 BY V1
#ENDIF
#ENDIF

#IFDEF TOPMETAL 9
CONNECT dind_B m3_ind
CONNECT m1_ind ntd BY ndfcont
CONNECT m1_ind ptd BY pdfcont

CONNECT m9_ind_conn dind_pm_MI
#IFDEF TOP_METAL_NUM single
CONNECT m8_ind_conn m7_ind BY V7
CONNECT ALPA     metal9 BY RDV 
CONNECT metal8 metal7 BY V7
CONNECT dind_pm_rdl m9_ind_conn //**
CONNECT dind_pm_PI_rdl m9_ind_conn //**
CONNECT dind_pm_MI_rdl m9_ind_conn //**
CONNECT m9_ind_conn rdl_ind_conn BY RDV //**
CONNECT m9_2d8ind_conn rdl_2d8ind_conn BY RDV
CONNECT ALPA rdl_ind_conn //***
CONNECT ALPA rdl_2d8ind_conn

#IFDEF TM2_WIDTH 2
CONNECT metal9 metal8 BY STV2
CONNECT dind_pm m8_ind_conn BY STV2
#ELSE
CONNECT metal9 metal8 BY TV2
CONNECT dind_pm m8_ind_conn BY TV2
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM double
CONNECT m8_ind_conn m7_ind BY TV1
CONNECT ALPA     metal9 BY RDV 

#IFDEF TM1_WIDTH 4
CONNECT metal8 metal7 BY TV1
CONNECT dind_pm m7_ind BY TV1

#IFDEF TM2_WIDTH 4
CONNECT metal9 metal8 BY TV2
CONNECT m8_ind_conn m9_ind_conn BY TV2
#ENDIF

#IFDEF TM2_WIDTH 15
CONNECT metal9 metal8 BY TV2
CONNECT m8_ind_conn m9_ind_conn BY TV2
CONNECT m8_ind_conn m9_2d8ind_conn BY TV2
CONNECT dind_pm_rdl m9_ind_conn
CONNECT m9_ind_conn rdl_ind_conn BY RDV
CONNECT m9_2d8ind_conn rdl_2d8ind_conn BY RDV
CONNECT ALPA rdl_ind_conn
CONNECT ALPA rdl_2d8ind_conn
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 2
CONNECT metal8 metal7 BY STV1
CONNECT dind_pm m7_ind BY STV1

#IFDEF TM2_WIDTH 2
CONNECT metal9 metal8 BY STV2
CONNECT m8_ind_conn m9_ind_conn BY STV2
#ENDIF
#IFDEF TM2_WIDTH 15
CONNECT metal9 metal8 BY TV2
CONNECT m8_ind_conn m9_ind_conn BY TV2
CONNECT dind_pm_rdl m9_ind_conn
CONNECT m9_ind_conn rdl_ind_conn BY RDV
CONNECT ALPA rdl_ind_conn
#ENDIF
#IFDEF TM2_WIDTH 4
CONNECT metal9 metal8 BY TV2
CONNECT m8_ind_conn m9_ind_conn BY TV2
#ENDIF
#ENDIF
#ENDIF

CONNECT m9_ind_conn dind_pm
CONNECT m9_ind_conn spi_pm_PI
CONNECT m9_ind_conn spi_pm_MI
CONNECT m9_ind_conn spi_2d8_PI
CONNECT m9_ind_conn spi_2d8_MI
CONNECT m9_ind_conn dind_pm_PI /*plus terminal for spiral and can be connected by top metal*/
CONNECT m1_ind metal1
CONNECT m2_ind metal2
CONNECT m3_ind metal3
CONNECT m4_ind metal4
CONNECT m5_ind metal5
CONNECT m6_ind metal6
CONNECT m7_ind metal7
CONNECT m8_ind_conn metal8
CONNECT m9_ind_conn metal9
CONNECT m9_2d8ind_conn metal9
CONNECT m7_ind m6_ind BY V6
CONNECT m6_ind m5_ind BY V5
CONNECT m5_ind m4_ind BY V4
CONNECT m4_ind m3_ind BY V3
CONNECT m3_ind m2_ind BY V2
CONNECT m2_ind m1_ind BY V1
CONNECT dind_2D8 metal9
CONNECT dind_ALPA metal9
CONNECT dind_CEN metal9
CONNECT dind_CEN m9_ind_rc

CONNECT metal1 mom_terminal12
CONNECT metal1 mom_terminal12_one
CONNECT metal1 mom_terminal12_two
CONNECT metal2 mom_terminal23
CONNECT metal2 mom_terminal23_one
CONNECT metal2 mom_terminal23_two
CONNECT metal3 mom_terminal34
CONNECT metal3 mom_terminal34_one
CONNECT metal3 mom_terminal34_two
CONNECT metal4 mom_terminal45
CONNECT metal4 mom_terminal45_one
CONNECT metal4 mom_terminal45_two
CONNECT metal5 mom_terminal56
CONNECT metal5 mom_terminal56_one
CONNECT metal5 mom_terminal56_two
CONNECT metal1 mom_terminal13
CONNECT metal1 mom_terminal13_one
CONNECT metal1 mom_terminal13_two
CONNECT metal2 mom_terminal24
CONNECT metal2 mom_terminal24_one
CONNECT metal2 mom_terminal24_two
CONNECT metal1 mom_terminal14
CONNECT metal1 mom_terminal14_one
CONNECT metal1 mom_terminal14_two
CONNECT metal3 mom_terminal35
CONNECT metal3 mom_terminal35_one
CONNECT metal3 mom_terminal35_two
CONNECT metal1 mom_terminal15
CONNECT metal1 mom_terminal15_one
CONNECT metal1 mom_terminal15_two
CONNECT metal4 mom_terminal46
CONNECT metal4 mom_terminal46_one
CONNECT metal4 mom_terminal46_two
CONNECT metal2 mom_terminal25
CONNECT metal2 mom_terminal25_one
CONNECT metal2 mom_terminal25_two
CONNECT metal3 mom_terminal36
CONNECT metal3 mom_terminal36_one
CONNECT metal3 mom_terminal36_two
CONNECT metal2 mom_terminal26
CONNECT metal2 mom_terminal26_one
CONNECT metal2 mom_terminal26_two
CONNECT metal1 mom_terminal16
CONNECT metal1 mom_terminal16_one
CONNECT metal1 mom_terminal16_two

CONNECT metal7 metal6 BY V6
CONNECT metal6 metal5 BY V5
CONNECT metal5 metal4 BY V4
CONNECT metal4 metal3 BY V3
CONNECT metal3 metal2 BY V2
CONNECT metal2 metal1 BY V1
#ENDIF


#IFDEF TOPMETAL 8
CONNECT dind_B m3_ind
CONNECT m1_ind ntd BY ndfcont
CONNECT m1_ind ptd BY pdfcont

CONNECT m8_ind_conn dind_pm_MI
#IFDEF TOP_METAL_NUM single
CONNECT m7_ind_conn m6_ind BY V6
CONNECT ALPA     metal8 BY RDV 
CONNECT metal7 metal6 BY V6
CONNECT dind_pm_rdl m8_ind_conn
CONNECT dind_pm_PI_rdl m8_ind_conn
CONNECT dind_pm_MI_rdl m8_ind_conn
CONNECT m8_ind_conn rdl_ind_conn BY RDV
CONNECT m8_2d8ind_conn rdl_2d8ind_conn BY RDV
CONNECT ALPA rdl_ind_conn
CONNECT ALPA rdl_2d8ind_conn

#IFDEF TM2_WIDTH 2
CONNECT metal8 metal7 BY STV2
CONNECT dind_pm m7_ind_conn BY STV2
#ELSE
CONNECT metal8 metal7 BY TV2
CONNECT dind_pm m7_ind_conn BY TV2
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM double 
CONNECT ALPA     metal8 BY RDV 
CONNECT m7_ind_conn m6_ind BY TV1

#IFDEF TM1_WIDTH 4
CONNECT metal7 metal6 BY TV1
CONNECT dind_pm m6_ind BY TV1

#IFDEF TM2_WIDTH 4
CONNECT metal8 metal7 BY TV2
CONNECT m7_ind_conn m8_ind_conn BY TV2
#ENDIF

#IFDEF TM2_WIDTH 15
CONNECT metal8 metal7 BY TV2
CONNECT m7_ind_conn m8_ind_conn BY TV2
CONNECT m7_ind_conn m8_2d8ind_conn BY TV2
CONNECT dind_pm_rdl m8_ind_conn
CONNECT m8_ind_conn rdl_ind_conn BY RDV
CONNECT m8_2d8ind_conn rdl_2d8ind_conn BY RDV
CONNECT ALPA rdl_ind_conn
CONNECT ALPA rdl_2d8ind_conn
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 2
CONNECT metal7 metal6 BY STV1
CONNECT dind_pm m6_ind BY STV1

#IFDEF TM2_WIDTH 2
CONNECT metal8 metal7 BY STV2
CONNECT dind_pm m7_ind_conn BY STV2
#ENDIF
#IFDEF TM2_WIDTH 15
CONNECT metal8 metal7 BY TV2
CONNECT m7_ind_conn m8_ind_conn BY TV2
CONNECT dind_pm_rdl m8_ind_conn
CONNECT m8_ind_conn rdl_ind_conn BY RDV
CONNECT ALPA rdl_ind_conn
#ENDIF
#IFDEF TM2_WIDTH 4
CONNECT metal8 metal7 BY TV2
CONNECT m7_ind_conn m8_ind_conn BY TV2
#ENDIF
#ENDIF
#ENDIF

CONNECT m8_ind_conn dind_pm
CONNECT m8_ind_conn spi_pm_PI
CONNECT m8_ind_conn spi_pm_MI
CONNECT m8_ind_conn spi_2d8_PI
CONNECT m8_ind_conn spi_2d8_MI
CONNECT m8_ind_conn dind_pm_PI /*plus terminal for spiral and can be connected by top metal*/
CONNECT m1_ind metal1
CONNECT m2_ind metal2
CONNECT m3_ind metal3
CONNECT m4_ind metal4
CONNECT m5_ind metal5
CONNECT m6_ind metal6
CONNECT m7_ind_conn metal7
CONNECT m8_ind_conn metal8
CONNECT m8_2d8ind_conn metal8
CONNECT m6_ind m5_ind BY V5
CONNECT m5_ind m4_ind BY V4
CONNECT m4_ind m3_ind BY V3
CONNECT m3_ind m2_ind BY V2
CONNECT m2_ind m1_ind BY V1
CONNECT dind_2D8 metal8
//CONNECT dind_ALPA ALPA
CONNECT dind_ALPA metal8
CONNECT dind_CEN metal8
CONNECT dind_CEN m8_ind_rc

CONNECT metal1 mom_terminal12
CONNECT metal1 mom_terminal12_one
CONNECT metal1 mom_terminal12_two
CONNECT metal2 mom_terminal23
CONNECT metal2 mom_terminal23_one
CONNECT metal2 mom_terminal23_two
CONNECT metal3 mom_terminal34
CONNECT metal3 mom_terminal34_one
CONNECT metal3 mom_terminal34_two
CONNECT metal4 mom_terminal45
CONNECT metal4 mom_terminal45_one
CONNECT metal4 mom_terminal45_two
CONNECT metal5 mom_terminal56
CONNECT metal5 mom_terminal56_one
CONNECT metal5 mom_terminal56_two
CONNECT metal1 mom_terminal13
CONNECT metal1 mom_terminal13_one
CONNECT metal1 mom_terminal13_two
CONNECT metal2 mom_terminal24
CONNECT metal2 mom_terminal24_one
CONNECT metal2 mom_terminal24_two
CONNECT metal1 mom_terminal14
CONNECT metal1 mom_terminal14_one
CONNECT metal1 mom_terminal14_two
CONNECT metal3 mom_terminal35
CONNECT metal3 mom_terminal35_one
CONNECT metal3 mom_terminal35_two
CONNECT metal1 mom_terminal15
CONNECT metal1 mom_terminal15_one
CONNECT metal1 mom_terminal15_two
CONNECT metal4 mom_terminal46
CONNECT metal4 mom_terminal46_one
CONNECT metal4 mom_terminal46_two
CONNECT metal2 mom_terminal25
CONNECT metal2 mom_terminal25_one
CONNECT metal2 mom_terminal25_two
CONNECT metal3 mom_terminal36
CONNECT metal3 mom_terminal36_one
CONNECT metal3 mom_terminal36_two
CONNECT metal2 mom_terminal26
CONNECT metal2 mom_terminal26_one
CONNECT metal2 mom_terminal26_two
CONNECT metal1 mom_terminal16
CONNECT metal1 mom_terminal16_one
CONNECT metal1 mom_terminal16_two

CONNECT metal6 metal5 BY V5
CONNECT metal5 metal4 BY V4
CONNECT metal4 metal3 BY V3
CONNECT metal3 metal2 BY V2
CONNECT metal2 metal1 BY V1
#ENDIF


#IFDEF TOPMETAL 7
CONNECT dind_B m3_ind
CONNECT m1_ind ntd BY ndfcont
CONNECT m1_ind ptd BY pdfcont
CONNECT m7_ind_conn dind_pm_MI

#IFDEF TOP_METAL_NUM single
CONNECT m6_ind_conn m5_ind BY V5
CONNECT ALPA     metal7 BY RDV 
CONNECT metal1 mom_terminal12
CONNECT metal1 mom_terminal12_one
CONNECT metal1 mom_terminal12_two
CONNECT metal2 mom_terminal23
CONNECT metal2 mom_terminal23_one
CONNECT metal2 mom_terminal23_two
CONNECT metal3 mom_terminal34
CONNECT metal3 mom_terminal34_one
CONNECT metal3 mom_terminal34_two
CONNECT metal4 mom_terminal45
CONNECT metal4 mom_terminal45_one
CONNECT metal4 mom_terminal45_two
CONNECT metal5 mom_terminal56
CONNECT metal5 mom_terminal56_one
CONNECT metal5 mom_terminal56_two
CONNECT metal4 mom_terminal46
CONNECT metal4 mom_terminal46_one
CONNECT metal4 mom_terminal46_two
CONNECT metal3 mom_terminal36
CONNECT metal3 mom_terminal36_one
CONNECT metal3 mom_terminal36_two
CONNECT metal2 mom_terminal26
CONNECT metal2 mom_terminal26_one
CONNECT metal2 mom_terminal26_two
CONNECT metal1 mom_terminal16
CONNECT metal1 mom_terminal16_one
CONNECT metal1 mom_terminal16_two
CONNECT metal6 metal5 BY V5
CONNECT dind_pm_rdl m7_ind_conn //**
CONNECT dind_pm_PI_rdl m7_ind_conn //**
CONNECT dind_pm_MI_rdl m7_ind_conn //**
CONNECT m7_ind_conn rdl_ind_conn BY RDV //**
CONNECT m7_ind_conn rdl_2d8ind_conn BY RDV
CONNECT ALPA rdl_ind_conn //***
CONNECT ALPA rdl_2d8ind_conn

#IFDEF TM2_WIDTH 2
CONNECT metal7 metal6 BY STV2
CONNECT dind_pm m6_ind_conn BY STV2
#ELSE
CONNECT metal7 metal6 BY TV2
CONNECT dind_pm m6_ind_conn BY TV2
#ENDIF

#ENDIF

#IFDEF TOP_METAL_NUM double
CONNECT ALPA     metal7 BY RDV 
CONNECT m6_ind_conn m5_ind BY TV1

#IFDEF TM1_WIDTH 4
CONNECT metal6 metal5 BY TV1
CONNECT dind_pm m5_ind BY TV1

#IFDEF TM2_WIDTH 4
CONNECT metal7 metal6 BY TV2
CONNECT m6_ind_conn m7_ind_conn BY TV2
#ENDIF

#IFDEF TM2_WIDTH 15
CONNECT metal7 metal6 BY TV2
CONNECT m6_ind_conn m7_ind_conn BY TV2
CONNECT m6_ind_conn m7_2d8ind_conn BY TV2
CONNECT dind_pm_rdl m7_ind_conn
CONNECT m7_ind_conn rdl_ind_conn BY RDV
CONNECT m7_2d8ind_conn rdl_2d8ind_conn BY RDV
CONNECT ALPA rdl_ind_conn
CONNECT ALPA rdl_2d8ind_conn
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 2
CONNECT metal6 metal5 BY STV1
CONNECT dind_pm m5_ind BY STV1

#IFDEF TM2_WIDTH 2
CONNECT metal7 metal6 BY STV2
CONNECT m6_ind_conn m7_ind_conn BY STV2
#ENDIF
#IFDEF TM2_WIDTH 15
CONNECT metal7 metal6 BY TV2
CONNECT m6_ind_conn m7_ind_conn BY TV2
CONNECT dind_pm_rdl m7_ind_conn
CONNECT m7_ind_conn rdl_ind_conn BY RDV
CONNECT ALPA rdl_ind_conn
#ENDIF
#IFDEF TM2_WIDTH 4
CONNECT metal7 metal6 BY TV2
CONNECT m6_ind_conn m7_ind_conn BY TV2
#ENDIF
#ENDIF
#ENDIF

CONNECT m7_ind_conn dind_pm
CONNECT m7_ind_conn spi_pm_PI
CONNECT m7_ind_conn spi_pm_MI
CONNECT m7_ind_conn spi_2d8_PI
CONNECT m7_ind_conn spi_2d8_MI
CONNECT m7_ind_conn dind_pm_PI /*plus terminal for spiral and can be connected by top metal*/
CONNECT m1_ind metal1
CONNECT m2_ind metal2
CONNECT m3_ind metal3
CONNECT m4_ind metal4
CONNECT m5_ind metal5
CONNECT m6_ind_conn metal6
CONNECT m7_ind_conn metal7
CONNECT m7_2d8ind_conn metal7
CONNECT m5_ind m4_ind BY V4
CONNECT m4_ind m3_ind BY V3
CONNECT m3_ind m2_ind BY V2
CONNECT m2_ind m1_ind BY V1
CONNECT dind_2D8 metal7
CONNECT dind_ALPA metal7
CONNECT dind_CEN metal7
CONNECT dind_CEN m7_ind_rc

CONNECT metal1 mom_terminal12
CONNECT metal1 mom_terminal12_one
CONNECT metal1 mom_terminal12_two
CONNECT metal2 mom_terminal23
CONNECT metal2 mom_terminal23_one
CONNECT metal2 mom_terminal23_two
CONNECT metal3 mom_terminal34
CONNECT metal3 mom_terminal34_one
CONNECT metal3 mom_terminal34_two
CONNECT metal4 mom_terminal45
CONNECT metal4 mom_terminal45_one
CONNECT metal4 mom_terminal45_two
CONNECT metal1 mom_terminal13
CONNECT metal1 mom_terminal13_one
CONNECT metal1 mom_terminal13_two
CONNECT metal2 mom_terminal24
CONNECT metal2 mom_terminal24_one
CONNECT metal2 mom_terminal24_two
CONNECT metal1 mom_terminal14
CONNECT metal1 mom_terminal14_one
CONNECT metal1 mom_terminal14_two
CONNECT metal3 mom_terminal35
CONNECT metal3 mom_terminal35_one
CONNECT metal3 mom_terminal35_two
CONNECT metal2 mom_terminal25
CONNECT metal2 mom_terminal25_one
CONNECT metal2 mom_terminal25_two
CONNECT metal1 mom_terminal15
CONNECT metal1 mom_terminal15_one
CONNECT metal1 mom_terminal15_two

CONNECT metal5 metal4 BY V4
CONNECT metal4 metal3 BY V3
CONNECT metal3 metal2 BY V2
CONNECT metal2 metal1 BY V1
#ENDIF


#IFDEF TOPMETAL 6
CONNECT dind_B m3_ind
CONNECT m1_ind ntd BY ndfcont
CONNECT m1_ind ptd BY pdfcont
CONNECT m6_ind_conn dind_pm_MI
#IFDEF TOP_METAL_NUM single
CONNECT m5_ind_conn m4_ind BY V4
CONNECT ALPA     metal6 BY RDV 

#IFDEF TM2_WIDTH 2
CONNECT metal6 metal5 BY STV2
CONNECT dind_pm m5_ind_conn BY STV2
#ELSE
CONNECT metal6 metal5 BY TV2
CONNECT dind_pm m5_ind_conn BY TV2
#ENDIF

CONNECT metal5 metal4 BY V4

CONNECT metal1 mom_terminal12
CONNECT metal1 mom_terminal12_one
CONNECT metal1 mom_terminal12_two
CONNECT metal2 mom_terminal23
CONNECT metal2 mom_terminal23_one
CONNECT metal2 mom_terminal23_two
CONNECT metal3 mom_terminal34
CONNECT metal3 mom_terminal34_one
CONNECT metal3 mom_terminal34_two
CONNECT metal4 mom_terminal45
CONNECT metal4 mom_terminal45_one
CONNECT metal4 mom_terminal45_two
CONNECT metal1 mom_terminal13
CONNECT metal1 mom_terminal13_one
CONNECT metal1 mom_terminal13_two
CONNECT metal2 mom_terminal24
CONNECT metal2 mom_terminal24_one
CONNECT metal2 mom_terminal24_two
CONNECT metal1 mom_terminal14
CONNECT metal1 mom_terminal14_one
CONNECT metal1 mom_terminal14_two
CONNECT metal3 mom_terminal35
CONNECT metal3 mom_terminal35_one
CONNECT metal3 mom_terminal35_two
CONNECT metal2 mom_terminal25
CONNECT metal2 mom_terminal25_one
CONNECT metal2 mom_terminal25_two
CONNECT metal1 mom_terminal15
CONNECT metal1 mom_terminal15_one
CONNECT metal1 mom_terminal15_two
CONNECT dind_pm_rdl m6_ind_conn //**
CONNECT dind_pm_PI_rdl m6_ind_conn //**
CONNECT dind_pm_MI_rdl m6_ind_conn //**
CONNECT m6_ind_conn rdl_ind_conn BY RDV //**
CONNECT m6_2d8ind_conn rdl_2d8ind_conn BY RDV
CONNECT ALPA rdl_ind_conn //***
CONNECT ALPA rdl_2d8ind_conn
#ENDIF

#IFDEF TOP_METAL_NUM double
CONNECT m5_ind_conn m4_ind BY TV1
#IFDEF TM1_WIDTH 4
CONNECT metal5 metal4 BY TV1
CONNECT dind_pm m4_ind BY TV1

#IFDEF TM2_WIDTH 4
CONNECT m5_ind_conn m6_ind_conn BY TV2
CONNECT metal6 metal5 BY TV2
#ENDIF

#IFDEF TM2_WIDTH 15
CONNECT m5_ind_conn m6_ind_conn BY TV2
CONNECT m5_ind_conn m6_2d8ind_conn BY TV2
CONNECT dind_pm_rdl m6_ind_conn
CONNECT m6_ind_conn rdl_ind_conn BY RDV
CONNECT m6_2d8ind_conn rdl_2d8ind_conn BY RDV
CONNECT ALPA rdl_ind_conn
CONNECT ALPA rdl_2d8ind_conn
CONNECT metal6 metal5 BY TV2
#ENDIF

#ENDIF

#IFDEF TM1_WIDTH 2
CONNECT metal5 metal4 BY STV1
CONNECT dind_pm m4_ind BY STV1

#IFDEF TM2_WIDTH 2
CONNECT m5_ind_conn m6_ind_conn BY STV2
CONNECT metal6 metal5 BY STV2
#ENDIF
#IFDEF TM2_WIDTH 15
CONNECT m5_ind_conn m6_ind_conn BY TV2
CONNECT dind_pm_rdl m6_ind_conn
CONNECT m6_ind_conn rdl_ind_conn BY RDV
CONNECT ALPA rdl_ind_conn
CONNECT metal6 metal5 BY TV2
#ENDIF
#IFDEF TM2_WIDTH 4
CONNECT m5_ind_conn m6_ind_conn BY TV2
CONNECT metal6 metal5 BY TV2
#ENDIF
#ENDIF
#ENDIF

CONNECT ALPA     metal6 BY RDV 
CONNECT metal1 mom_terminal12
CONNECT metal1 mom_terminal12_one
CONNECT metal1 mom_terminal12_two
CONNECT metal2 mom_terminal23
CONNECT metal2 mom_terminal23_one
CONNECT metal2 mom_terminal23_two
CONNECT metal3 mom_terminal34
CONNECT metal3 mom_terminal34_one
CONNECT metal3 mom_terminal34_two
CONNECT metal1 mom_terminal13
CONNECT metal1 mom_terminal13_one
CONNECT metal1 mom_terminal13_two
CONNECT metal2 mom_terminal24
CONNECT metal2 mom_terminal24_one
CONNECT metal2 mom_terminal24_two
CONNECT metal1 mom_terminal14
CONNECT metal1 mom_terminal14_one
CONNECT metal1 mom_terminal14_two

CONNECT m6_ind_conn dind_pm
CONNECT m6_ind_conn spi_pm_PI
CONNECT m6_ind_conn spi_pm_MI
CONNECT m6_ind_conn spi_2d8_PI
CONNECT m6_ind_conn spi_2d8_MI
CONNECT m6_ind_conn dind_pm_PI /*plus terminal for spiral and can be connected by top metal*/
CONNECT m1_ind metal1
CONNECT m2_ind metal2
CONNECT m3_ind metal3
CONNECT m4_ind metal4
CONNECT dind_2D8 metal6
CONNECT dind_ALPA metal6
CONNECT dind_CEN metal6
CONNECT dind_CEN m6_ind_rc

CONNECT m5_ind_conn metal5
CONNECT m6_ind_conn metal6
CONNECT m6_2d8ind_conn metal6
CONNECT m4_ind m3_ind BY V3
CONNECT m3_ind m2_ind BY V2
CONNECT m2_ind m1_ind BY V1
CONNECT metal4 metal3 BY V3
CONNECT metal3 metal2 BY V2
CONNECT metal2 metal1 BY V1
#ENDIF

#IFDEF TOPMETAL 5
#IFDEF TOP_METAL_NUM single
CONNECT ALPA     metal5 BY RDV 

#IFDEF TM2_WIDTH 2
CONNECT metal5 metal4 BY STV2
//CONNECT mom_metal4 metal5 BY STV2
#ELSE
CONNECT metal5 metal4 BY TV2
//CONNECT mom_metal4 metal5 BY TV2
#ENDIF


CONNECT metal4 metal3 BY V3

CONNECT metal1 mom_terminal12
CONNECT metal1 mom_terminal12_one
CONNECT metal1 mom_terminal12_two
CONNECT metal2 mom_terminal23
CONNECT metal2 mom_terminal23_one
CONNECT metal2 mom_terminal23_two
CONNECT metal3 mom_terminal34
CONNECT metal3 mom_terminal34_one
CONNECT metal3 mom_terminal34_two
CONNECT metal1 mom_terminal13
CONNECT metal1 mom_terminal13_one
CONNECT metal1 mom_terminal13_two
CONNECT metal2 mom_terminal24
CONNECT metal2 mom_terminal24_one
CONNECT metal2 mom_terminal24_two
CONNECT metal1 mom_terminal14
CONNECT metal1 mom_terminal14_one
CONNECT metal1 mom_terminal14_two
//CONNECT metal2 mom_terminal23rf
//CONNECT metal3 mom_terminal34rf
//CONNECT metal2 mom_terminal24rf
//CONNECT metal2 mom_terminal23rf_m
//CONNECT metal3 mom_terminal34rf_m
//CONNECT metal2 mom_terminal24rf_m
#ENDIF

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 4
CONNECT metal4 metal3 BY TV1
//CONNECT mom_metal3 metal4     BY TV1

#IFDEF TM2_WIDTH 4
CONNECT metal5 metal4 BY TV2
#ENDIF

#IFDEF TM2_WIDTH 15
CONNECT metal5 metal4 BY TV2
#ENDIF

#ENDIF

#IFDEF TM1_WIDTH 2
CONNECT metal4 metal3 BY STV1
//CONNECT mom_metal3 metal4     BY STV1

#IFDEF TM2_WIDTH 2
CONNECT metal5 metal4 BY STV2
#ELSE
CONNECT metal5 metal4 BY TV2
#ENDIF
#ENDIF

CONNECT ALPA     metal5 BY RDV 
CONNECT metal1 mom_terminal12
CONNECT metal1 mom_terminal12_one
CONNECT metal1 mom_terminal12_two
CONNECT metal2 mom_terminal23
CONNECT metal2 mom_terminal23_one
CONNECT metal2 mom_terminal23_two
CONNECT metal1 mom_terminal13
CONNECT metal1 mom_terminal13_one
CONNECT metal1 mom_terminal13_two
//CONNECT metal2 mom_terminal23rf
//CONNECT metal2 mom_terminal23rf_m
#ENDIF

CONNECT metal3 metal2 BY V2
CONNECT metal2 metal1 BY V1

#ENDIF

#IFDEF TOPMETAL 4
#IFDEF TOP_METAL_NUM single
CONNECT ALPA     metal4 BY RDV 

#IFDEF TM2_WIDTH 2
CONNECT metal4 metal3 BY STV2
//CONNECT mom_metal3 metal4 BY STV2
#ELSE
CONNECT metal4 metal3 BY TV2
//CONNECT mom_metal3 metal4 BY TV2
#ENDIF

CONNECT metal3 metal2 BY V2

CONNECT metal1 mom_terminal12
CONNECT metal1 mom_terminal12_one
CONNECT metal1 mom_terminal12_two
CONNECT metal2 mom_terminal23
CONNECT metal2 mom_terminal23_one
CONNECT metal2 mom_terminal23_two
CONNECT metal1 mom_terminal13
CONNECT metal1 mom_terminal13_one
CONNECT metal1 mom_terminal13_two
//CONNECT metal2 mom_terminal23rf
//CONNECT metal2 mom_terminal23rf_m
#ENDIF

CONNECT metal3 metal2 BY V2
CONNECT metal2 metal1 BY V1

#ENDIF

CONNECT npoly ngate_core
CONNECT npoly pgate_core
CONNECT npoly ngate_core_egl4
CONNECT npoly ngate_core_sab_egl4
CONNECT npoly pgate_core_egl4
CONNECT npoly pgate_core_sab_egl4
CONNECT npoly ngate_core_egl1
CONNECT npoly pgate_core_egl1
CONNECT npoly ngate_IO1
CONNECT npoly pgate_IO1
CONNECT npoly ntgate_core
CONNECT npoly ntgate_IO1
CONNECT npoly ngate_core_hvt
CONNECT npoly pgate_core_hvt
CONNECT npoly ngate_core_lvt
CONNECT npoly pgate_core_lvt
CONNECT npoly ngate_core_mis
CONNECT npoly pgate_core_mis
CONNECT npoly ngate_IO1_mis
CONNECT npoly pgate_IO1_mis
CONNECT npoly ntgate_core_mis
CONNECT npoly ntgate_IO1_mis
CONNECT npoly ngate_core_hvt_mis
CONNECT npoly pgate_core_hvt_mis
CONNECT npoly ngate_core_lvt_mis
CONNECT npoly pgate_core_lvt_mis
CONNECT npoly dnwngate12
CONNECT npoly dnwngate18
CONNECT npoly dnwhvtgate12
CONNECT npoly dnwlvtgate12
CONNECT npoly ngate_IO2
CONNECT npoly pgate_IO2
CONNECT npoly ngate_IO2_egl4
CONNECT npoly ngate_IO2_sab_egl4
CONNECT npoly pgate_IO2_egl4
CONNECT npoly pgate_IO2_sab_egl4
CONNECT npoly ngate_IO2_egl1
CONNECT npoly pgate_IO2_egl1
CONNECT npoly ntgate_IO2
CONNECT npoly ntgate_IO2_under
CONNECT npoly ntgate_IO2_over
CONNECT npoly ngate_IO2_over
CONNECT npoly pgate_IO2_over
CONNECT npoly ngate_IO2_egl4_over
CONNECT npoly ngate_IO2_sab_egl4_over
CONNECT npoly pgate_IO2_egl4_over
CONNECT npoly pgate_IO2_sab_egl4_over
CONNECT npoly ngate_IO2_egl1_over
CONNECT npoly pgate_IO2_egl1_over
CONNECT npoly ngate_IO2_under
CONNECT npoly pgate_IO2_under
CONNECT npoly ngate_IO2_mis
CONNECT npoly pgate_IO2_mis
CONNECT npoly ntgate_IO2_mis
CONNECT npoly ntgate_IO2_under_mis
CONNECT npoly ntgate_IO2_over_mis
CONNECT npoly ngate_IO2_over_mis
CONNECT npoly pgate_IO2_over_mis
CONNECT npoly ngate_IO2_under_mis
CONNECT npoly pgate_IO2_under_mis
CONNECT npoly dnwngate25
CONNECT npoly dnwodgate33
CONNECT npoly dnwudgate18
CONNECT npoly ngate_core_ull
CONNECT npoly pgate_core_ull
CONNECT npoly ngate_core_ull_mis
CONNECT npoly pgate_core_ull_mis
CONNECT npoly dnwullngate

CONNECT npoly npdsp_0.525_svt
CONNECT npoly npgsp_0.525_svt
CONNECT npoly plsp_0.525_svt
CONNECT npoly npdsp_0.525_hvt
CONNECT npoly npgsp_0.525_hvt
CONNECT npoly plsp_0.525_hvt
CONNECT npoly npdsp_0.62_svt
CONNECT npoly npgsp_0.62_svt
CONNECT npoly plsp_0.62_svt
CONNECT npoly npdsp_0.62_hvt
CONNECT npoly npgsp_0.62_hvt
CONNECT npoly plsp_0.62_hvt
CONNECT npoly npdsp_0.62_ull
CONNECT npoly npgsp_0.62_ull
CONNECT npoly plsp_0.62_ull
CONNECT npoly npddp_0.974_svt
CONNECT npoly npgadp_0.974_svt
CONNECT npoly npgbdp_0.974_svt
CONNECT npoly pldp_0.974_svt
CONNECT npoly npddp_0.974_hvt
CONNECT npoly npgadp_0.974_hvt
CONNECT npoly npgbdp_0.974_hvt
CONNECT npoly pldp_0.974_hvt
CONNECT npoly npddp_0.974_ull
CONNECT npoly npgadp_0.974_ull
CONNECT npoly npgbdp_0.974_ull
CONNECT npoly pldp_0.974_ull
CONNECT npoly npddp_1.158_hvt
CONNECT npoly npgadp_1.158_hvt
CONNECT npoly npgbdp_1.158_hvt
CONNECT npoly pldp_1.158_hvt

CONNECT npoly nld50ll_gate_body
CONNECT npoly nld50ll_gate_sh_body
CONNECT npoly pld50ll_gate_body
CONNECT npoly pld50ll_gate_sh_body
CONNECT npoly nld50ll_gate_od_body
CONNECT npoly nld50ll_gate_od_sh_body
CONNECT npoly pld50ll_gate_od_body
CONNECT npoly pld50ll_gate_od_sh_body

CONNECT npoly cngate_core
CONNECT npoly cngate_IO1
CONNECT npoly cngate_IO2
CONNECT npoly pvar_core_aux
CONNECT npoly pvar_core_rf_aux
CONNECT npoly pvar_core_rf_aux_3t
CONNECT npoly pvar_core_rf_dnw_aux
CONNECT npoly pvar_core_rf_dnw_aux_3t
CONNECT npoly pvar_IO1_aux
CONNECT npoly pvar_IO1_rf_aux
CONNECT npoly pvar_IO1_rf_aux_3t
CONNECT npoly pvar_IO1_rf_dnw_aux
CONNECT npoly pvar_IO1_rf_dnw_aux_3t
CONNECT npoly pvar_IO2_aux
CONNECT npoly pvar_IO2_rf_aux
CONNECT npoly pvar_IO2_rf_aux_3t
CONNECT npoly pvar_IO2_rf_dnw_aux
CONNECT npoly pvar_IO2_rf_dnw_aux_3t
CONNECT npoly ngate_core_rf
CONNECT npoly ngate_core_rf_mis
CONNECT npoly ngate_core_rf_sdc
CONNECT npoly ngate_core_rf_sdc_mis
CONNECT npoly ngate_core_lvt_rf
CONNECT npoly ngate_core_lvt_rf_mis
CONNECT npoly ngate_core_lvt_rf_sdc
CONNECT npoly ngate_core_lvt_rf_sdc_mis
CONNECT npoly ngate_IO1_rf
CONNECT npoly ngate_IO2_rf
CONNECT npoly ngate_IO2_rf_mis
CONNECT npoly ngate_IO2_rf_sdc
CONNECT npoly ngate_IO2_rf_sdc_mis
CONNECT npoly ngate_IO2_over_rf
CONNECT npoly ngate_IO2_over_rf_mis
CONNECT npoly ngate_IO2_under_rf
CONNECT npoly ngate_IO2_under_rf_mis
CONNECT npoly pgate_core_rf
CONNECT npoly pgate_core_rf_mis
CONNECT npoly pgate_core_rf_sdc
CONNECT npoly pgate_core_rf_sdc_mis
CONNECT npoly pgate_core_lvt_rf
CONNECT npoly pgate_core_lvt_rf_mis
CONNECT npoly pgate_core_lvt_rf_sdc
CONNECT npoly pgate_core_lvt_rf_sdc_mis
CONNECT npoly pgate_IO1_rf
CONNECT npoly pgate_IO2_rf
CONNECT npoly pgate_IO2_rf_mis
CONNECT npoly pgate_IO2_over_rf
CONNECT npoly pgate_IO2_over_rf_mis
CONNECT npoly pgate_IO2_under_rf
CONNECT npoly pgate_IO2_under_rf_mis
CONNECT npoly pgate_IO2_rf_sdc
CONNECT npoly pgate_IO2_rf_sdc_mis
CONNECT npoly dnw_core_rf
CONNECT npoly dnw_core_rf_mis
CONNECT npoly dnw_core_rf_6t_aux
CONNECT npoly dnw_core_rf_6t_mis_aux
CONNECT npoly dnw_core_rf_sdc
CONNECT npoly dnw_core_rf_sdc_mis
CONNECT npoly dnw_core_rf_6t_sdc_aux
CONNECT npoly dnw_core_rf_6t_sdc_mis_aux
CONNECT npoly dnw_core_lvt_rf
CONNECT npoly dnw_core_lvt_rf_mis
CONNECT npoly dnw_core_lvt_rf_6t_aux
CONNECT npoly dnw_core_lvt_rf_6t_mis_aux
CONNECT npoly dnw_core_lvt_rf_sdc
CONNECT npoly dnw_core_lvt_rf_sdc_mis
CONNECT npoly dnw_core_lvt_rf_6t_sdc_aux
CONNECT npoly dnw_core_lvt_rf_6t_sdc_mis_aux
CONNECT npoly dnw_IO1_rf
CONNECT npoly dnw_IO1_rf_6t_aux
CONNECT npoly dnw_IO2_rf
CONNECT npoly dnw_IO2_rf_mis
CONNECT npoly dnw_IO2_over_rf
CONNECT npoly dnw_IO2_over_rf_mis
CONNECT npoly dnw_IO2_over_rf_6t_aux
CONNECT npoly dnw_IO2_over_rf_6t_mis_aux
CONNECT npoly dnw_IO2_rf_6t_aux
CONNECT npoly dnw_IO2_rf_6t_mis_aux
CONNECT npoly dnw_IO2_rf_sdc
CONNECT npoly dnw_IO2_rf_sdc_mis
CONNECT npoly dnw_IO2_rf_6t_sdc_aux
CONNECT npoly dnw_IO2_rf_6t_sdc_mis_aux
CONNECT npoly dnw_IO2_under_rf
CONNECT npoly dnw_IO2_under_rf_mis
CONNECT npoly dnw_IO2_under_rf_6t_aux
CONNECT npoly dnw_IO2_under_rf_6t_mis_aux
CONNECT npoly pgate_core_rf_5t_aux
CONNECT npoly pgate_core_lvt_rf_5t_aux
CONNECT npoly pgate_core_lvt_rf_5t_sdc_aux
CONNECT npoly pgate_core_rf_5t_sdc_aux
CONNECT npoly pgate_IO1_rf_5t_aux
CONNECT npoly pgate_IO2_rf_5t_aux
CONNECT npoly pgate_IO2_rf_5t_sdc_aux
CONNECT npoly pgate_IO2_over_rf_5t_aux
CONNECT npoly pgate_IO2_under_rf_5t_aux
CONNECT npoly pgate_core_rf_5t_mis_aux
CONNECT npoly pgate_core_rf_5t_sdc_mis_aux
CONNECT npoly pgate_core_lvt_rf_5t_mis_aux
CONNECT npoly pgate_core_lvt_rf_5t_sdc_mis_aux
CONNECT npoly pgate_IO2_rf_5t_mis_aux
CONNECT npoly pgate_IO2_rf_5t_sdc_mis_aux
CONNECT npoly pgate_IO2_over_rf_5t_mis_aux
CONNECT npoly pgate_IO2_under_rf_5t_mis_aux

CONNECT npoly ppoly

CONNECT ppoly pgate_core_rf_5t_aux
CONNECT ppoly pgate_core_lvt_rf_5t_aux
CONNECT ppoly pgate_core_lvt_rf_5t_sdc_aux
CONNECT ppoly pgate_core_rf_5t_sdc_aux
CONNECT ppoly pgate_IO1_rf_5t_aux
CONNECT ppoly pgate_IO2_rf_5t_aux
CONNECT ppoly pgate_IO2_rf_5t_sdc_aux
CONNECT ppoly pgate_IO2_over_rf_5t_aux
CONNECT ppoly pgate_IO2_under_rf_5t_aux
CONNECT ppoly pgate_core_rf_5t_mis_aux
CONNECT ppoly pgate_core_rf_5t_sdc_mis_aux
CONNECT ppoly pgate_core_lvt_rf_5t_mis_aux
CONNECT ppoly pgate_core_lvt_rf_5t_sdc_mis_aux
CONNECT ppoly pgate_IO2_rf_5t_mis_aux
CONNECT ppoly pgate_IO2_rf_5t_sdc_mis_aux
CONNECT ppoly pgate_IO2_over_rf_5t_mis_aux
CONNECT ppoly pgate_IO2_under_rf_5t_mis_aux
CONNECT ppoly ngate_core
CONNECT ppoly pgate_core
CONNECT ppoly ngate_core_egl4
CONNECT ppoly ngate_core_sab_egl4
CONNECT ppoly pgate_core_egl4
CONNECT ppoly pgate_core_sab_egl4
CONNECT ppoly ngate_core_egl1
CONNECT ppoly pgate_core_egl1
CONNECT ppoly ngate_IO1
CONNECT ppoly pgate_IO1
CONNECT ppoly ntgate_core
CONNECT ppoly ntgate_IO1
CONNECT ppoly ngate_core_hvt
CONNECT ppoly pgate_core_hvt
CONNECT ppoly ngate_core_lvt
CONNECT ppoly pgate_core_lvt
CONNECT ppoly ngate_core_mis
CONNECT ppoly pgate_core_mis
CONNECT ppoly ngate_IO1_mis
CONNECT ppoly pgate_IO1_mis
CONNECT ppoly ntgate_core_mis
CONNECT ppoly ntgate_IO1_mis
CONNECT ppoly ngate_core_hvt_mis
CONNECT ppoly pgate_core_hvt_mis
CONNECT ppoly ngate_core_lvt_mis
CONNECT ppoly pgate_core_lvt_mis
CONNECT ppoly dnwngate12
CONNECT ppoly dnwngate18
CONNECT ppoly dnwhvtgate12
CONNECT ppoly dnwlvtgate12
CONNECT ppoly ngate_IO2
CONNECT ppoly pgate_IO2
CONNECT ppoly ngate_IO2_egl4
CONNECT ppoly ngate_IO2_sab_egl4
CONNECT ppoly pgate_IO2_egl4
CONNECT ppoly pgate_IO2_sab_egl4
CONNECT ppoly ngate_IO2_egl1
CONNECT ppoly pgate_IO2_egl1
CONNECT ppoly ntgate_IO2
CONNECT ppoly ntgate_IO2_under
CONNECT ppoly ntgate_IO2_over
CONNECT ppoly ngate_IO2_over
CONNECT ppoly pgate_IO2_over
CONNECT ppoly ngate_IO2_egl4_over
CONNECT ppoly ngate_IO2_sab_egl4_over
CONNECT ppoly pgate_IO2_egl4_over
CONNECT ppoly pgate_IO2_sab_egl4_over
CONNECT ppoly ngate_IO2_egl1_over
CONNECT ppoly pgate_IO2_egl1_over
CONNECT ppoly ngate_IO2_under
CONNECT ppoly pgate_IO2_under
CONNECT ppoly ngate_IO2_mis
CONNECT ppoly pgate_IO2_mis
CONNECT ppoly ntgate_IO2_mis
CONNECT ppoly ntgate_IO2_under_mis
CONNECT ppoly ntgate_IO2_over_mis
CONNECT ppoly ngate_IO2_over_mis
CONNECT ppoly pgate_IO2_over_mis
CONNECT ppoly ngate_IO2_under_mis
CONNECT ppoly pgate_IO2_under_mis
CONNECT ppoly dnwngate25
CONNECT ppoly dnwodgate33
CONNECT ppoly dnwudgate18
CONNECT ppoly pgate_core_ull
CONNECT ppoly ngate_core_ull
CONNECT ppoly pgate_core_ull_mis
CONNECT ppoly ngate_core_ull_mis
CONNECT ppoly dnwullngate

CONNECT ppoly npdsp_0.525_svt
CONNECT ppoly npgsp_0.525_svt
CONNECT ppoly plsp_0.525_svt
CONNECT ppoly npdsp_0.525_hvt
CONNECT ppoly npgsp_0.525_hvt
CONNECT ppoly plsp_0.525_hvt
CONNECT ppoly npdsp_0.62_svt
CONNECT ppoly npgsp_0.62_svt
CONNECT ppoly plsp_0.62_svt
CONNECT ppoly npdsp_0.62_hvt
CONNECT ppoly npgsp_0.62_hvt
CONNECT ppoly plsp_0.62_hvt
CONNECT ppoly npdsp_0.62_ull
CONNECT ppoly npgsp_0.62_ull
CONNECT ppoly plsp_0.62_ull
CONNECT ppoly npddp_0.974_svt
CONNECT ppoly npgadp_0.974_svt
CONNECT ppoly npgbdp_0.974_svt
CONNECT ppoly pldp_0.974_svt
CONNECT ppoly npddp_0.974_hvt
CONNECT ppoly npgadp_0.974_hvt
CONNECT ppoly npgbdp_0.974_hvt
CONNECT ppoly pldp_0.974_hvt
CONNECT ppoly npddp_0.974_ull
CONNECT ppoly npgadp_0.974_ull
CONNECT ppoly npgbdp_0.974_ull
CONNECT ppoly pldp_0.974_ull
CONNECT ppoly npddp_1.158_hvt
CONNECT ppoly npgadp_1.158_hvt
CONNECT ppoly npgbdp_1.158_hvt
CONNECT ppoly pldp_1.158_hvt

CONNECT ppoly nld50ll_gate_body
CONNECT ppoly nld50ll_gate_sh_body
CONNECT ppoly pld50ll_gate_body
CONNECT ppoly pld50ll_gate_sh_body
CONNECT ppoly nld50ll_gate_od_body
CONNECT ppoly nld50ll_gate_od_sh_body
CONNECT ppoly pld50ll_gate_od_body
CONNECT ppoly pld50ll_gate_od_sh_body

CONNECT ppoly cngate_core
CONNECT ppoly cngate_IO1
CONNECT ppoly cngate_IO2
CONNECT ppoly pvar_core_aux
CONNECT ppoly pvar_core_rf_aux
CONNECT ppoly pvar_core_rf_aux_3t
CONNECT ppoly pvar_core_rf_dnw_aux
CONNECT ppoly pvar_core_rf_dnw_aux_3t
CONNECT ppoly pvar_IO1_aux
CONNECT ppoly pvar_IO1_rf_aux
CONNECT ppoly pvar_IO1_rf_aux_3t
CONNECT ppoly pvar_IO1_rf_dnw_aux
CONNECT ppoly pvar_IO1_rf_dnw_aux_3t
CONNECT ppoly pvar_IO2_aux
CONNECT ppoly pvar_IO2_rf_aux
CONNECT ppoly pvar_IO2_rf_aux_3t
CONNECT ppoly pvar_IO2_rf_dnw_aux
CONNECT ppoly pvar_IO2_rf_dnw_aux_3t
CONNECT ppoly ngate_core_rf
CONNECT ppoly ngate_core_rf_mis
CONNECT ppoly ngate_core_rf_sdc
CONNECT ppoly ngate_core_rf_sdc_mis
CONNECT ppoly ngate_core_lvt_rf
CONNECT ppoly ngate_core_lvt_rf_mis
CONNECT ppoly ngate_core_lvt_rf_sdc
CONNECT ppoly ngate_core_lvt_rf_sdc_mis
CONNECT ppoly ngate_IO1_rf
CONNECT ppoly ngate_IO2_rf
CONNECT ppoly ngate_IO2_rf_mis
CONNECT ppoly ngate_IO2_rf_sdc
CONNECT ppoly ngate_IO2_rf_sdc_mis
CONNECT ppoly ngate_IO2_over_rf
CONNECT ppoly ngate_IO2_over_rf_mis
CONNECT ppoly ngate_IO2_under_rf
CONNECT ppoly ngate_IO2_under_rf_mis

CONNECT ppoly pgate_core_rf
CONNECT ppoly pgate_core_rf_mis
CONNECT ppoly pgate_core_rf_sdc
CONNECT ppoly pgate_core_rf_sdc_mis
CONNECT ppoly pgate_core_lvt_rf
CONNECT ppoly pgate_core_lvt_rf_mis
CONNECT ppoly pgate_core_lvt_rf_sdc
CONNECT ppoly pgate_core_lvt_rf_sdc_mis
CONNECT ppoly pgate_IO1_rf
CONNECT ppoly pgate_IO2_rf
CONNECT ppoly pgate_IO2_rf_mis
CONNECT ppoly pgate_IO2_over_rf
CONNECT ppoly pgate_IO2_over_rf_mis
CONNECT ppoly pgate_IO2_under_rf
CONNECT ppoly pgate_IO2_under_rf_mis
CONNECT ppoly pgate_IO2_rf_sdc
CONNECT ppoly pgate_IO2_rf_sdc_mis
CONNECT ppoly dnw_core_rf
CONNECT ppoly dnw_core_rf_mis
CONNECT ppoly dnw_core_rf_6t_aux
CONNECT ppoly dnw_core_rf_6t_mis_aux
CONNECT ppoly dnw_core_rf_sdc
CONNECT ppoly dnw_core_rf_sdc_mis
CONNECT ppoly dnw_core_rf_6t_sdc_aux
CONNECT ppoly dnw_core_rf_6t_sdc_mis_aux
CONNECT ppoly dnw_core_lvt_rf
CONNECT ppoly dnw_core_lvt_rf_mis
CONNECT ppoly dnw_core_lvt_rf_6t_aux
CONNECT ppoly dnw_core_lvt_rf_6t_mis_aux
CONNECT ppoly dnw_core_lvt_rf_sdc
CONNECT ppoly dnw_core_lvt_rf_sdc_mis
CONNECT ppoly dnw_core_lvt_rf_6t_sdc_aux
CONNECT ppoly dnw_core_lvt_rf_6t_sdc_mis_aux
CONNECT ppoly dnw_IO1_rf
CONNECT ppoly dnw_IO1_rf_6t_aux
CONNECT ppoly dnw_IO2_rf
CONNECT ppoly dnw_IO2_rf_mis
CONNECT ppoly dnw_IO2_over_rf
CONNECT ppoly dnw_IO2_over_rf_mis
CONNECT ppoly dnw_IO2_over_rf_6t_aux
CONNECT ppoly dnw_IO2_over_rf_6t_mis_aux
CONNECT ppoly dnw_IO2_under_rf
CONNECT ppoly dnw_IO2_under_rf_mis
CONNECT ppoly dnw_IO2_under_rf_6t_aux
CONNECT ppoly dnw_IO2_under_rf_6t_mis_aux
CONNECT ppoly dnw_IO2_rf_6t_aux
CONNECT ppoly dnw_IO2_rf_6t_mis_aux
CONNECT ppoly dnw_IO2_rf_sdc
CONNECT ppoly dnw_IO2_rf_sdc_mis
CONNECT ppoly dnw_IO2_rf_6t_sdc_aux
CONNECT ppoly dnw_IO2_rf_6t_sdc_mis_aux

//CONNECT metal1 pvardio_core_rf_aux pvardio_IO1_rf_aux pvardio_IO2_rf_aux BY pdfcont
CONNECT metal1 PNPCOREA100    PNPCOREA25    PNPCOREA4    BY pdfcont
CONNECT metal1 PNPIO1A100     PNPIO1A25     PNPIO1A4     BY pdfcont
CONNECT metal1 PNPIO2A100     PNPIO2A25     PNPIO2A4     BY pdfcont
CONNECT metal1 PNPCOREA100_sh PNPCOREA25_sh PNPCOREA4_sh BY pdfcont
CONNECT metal1 PNPIO1A100_sh  PNPIO1A25_sh  PNPIO1A4_sh  BY pdfcont
CONNECT metal1 PNPIO2A100_sh  PNPIO2A25_sh  PNPIO2A4_sh  BY pdfcont

CONNECT metal1 NPNCOREA100    NPNCOREA25    NPNCOREA4    BY ndfcont
CONNECT metal1 NPNIO1A100     NPNIO1A25     NPNIO1A4     BY ndfcont
CONNECT metal1 NPNIO2A100     NPNIO2A25     NPNIO2A4     BY ndfcont
CONNECT metal1 NPNCOREA100_sh NPNCOREA25_sh NPNCOREA4_sh BY ndfcont
CONNECT metal1 NPNIO1A100_sh  NPNIO1A25_sh  NPNIO1A4_sh  BY ndfcont
CONNECT metal1 NPNIO2A100_sh  NPNIO2A25_sh  NPNIO2A4_sh  BY ndfcont

CONNECT metal1 PNPCOREA100_mis    PNPCOREA25_mis    PNPCOREA4_mis    BY pdfcont
CONNECT metal1 PNPIO1A100_mis     PNPIO1A25_mis     PNPIO1A4_mis     BY pdfcont
CONNECT metal1 PNPIO2A100_mis     PNPIO2A25_mis     PNPIO2A4_mis     BY pdfcont
CONNECT metal1 PNPCOREA100_mis_sh PNPCOREA25_mis_sh PNPCOREA4_mis_sh BY pdfcont
CONNECT metal1 PNPIO1A100_mis_sh  PNPIO1A25_mis_sh  PNPIO1A4_mis_sh  BY pdfcont
CONNECT metal1 PNPIO2A100_mis_sh  PNPIO2A25_mis_sh  PNPIO2A4_mis_sh  BY pdfcont

CONNECT metal1 NPNCOREA100_mis    NPNCOREA25_mis    NPNCOREA4_mis    BY ndfcont
CONNECT metal1 NPNIO1A100_mis     NPNIO1A25_mis     NPNIO1A4_mis     BY ndfcont
CONNECT metal1 NPNIO2A100_mis     NPNIO2A25_mis     NPNIO2A4_mis     BY ndfcont
CONNECT metal1 NPNCOREA100_mis_sh NPNCOREA25_mis_sh NPNCOREA4_mis_sh BY ndfcont
CONNECT metal1 NPNIO1A100_mis_sh  NPNIO1A25_mis_sh  NPNIO1A4_mis_sh  BY ndfcont
CONNECT metal1 NPNIO2A100_mis_sh  NPNIO2A25_mis_sh  NPNIO2A4_mis_sh  BY ndfcont


CONNECT metal1 dio_np BY ndfcont
CONNECT metal1 dio_pn BY pdfcont

CONNECT metal1 nsd nsdrfd BY ndfcont
CONNECT metal1 psd psdrfd BY pdfcont
CONNECT metal1 ntd BY ndfcont
CONNECT metal1 ptd BY pdfcont
CONNECT metal1 npoly BY npolycont
CONNECT metal1 ppoly BY ppolycont 
CONNECT metal1 nld50ll_s nld50ll_d BY ndfcont
CONNECT metal1 pld50ll_s pld50ll_d BY pdfcont

CONNECT psd ntd
CONNECT nsd ptd

SCONNECT ntd mom_nw by ntd_mom_nw_subcont
SCONNECT ptd mom_pw by ptd_mom_pw_subcont
SCONNECT ntd nwell by ntd_nwell_subcont
SCONNECT ptd pwell by ptd_pwell_subcont
SCONNECT ptd rwell by ptd_rwell_subcont
SCONNECT ptd dnwd_psub by ptd_dnwd_psub_subcont
SCONNECT ntd dnwell by ntd_dnwell_subcont
SCONNECT ptd pnpcoll by ptd_pnpcoll_subcont
SCONNECT ptd bulk_all by ptd_dnwd_psub_subcont

LVS SOFTCHK nwell CONTACT
LVS SOFTCHK pwell CONTACT
LVS SOFTCHK rwell CONTACT
LVS SOFTCHK mom_nw CONTACT
LVS SOFTCHK mom_pw CONTACT
LVS SOFTCHK dnwd_psub CONTACT
LVS SOFTCHK dnwell CONTACT
LVS SOFTCHK pnpcoll CONTACT
LVS SOFTCHK bulk_all CONTACT
////////////////////////////////////////////////////////////////////////
//*define Devices                                                     //
////////////////////////////////////////////////////////////////////////

////////////////////////////Define MOS///////////////////////////////// 

DMACRO DNW_MOS_PRO proc_layer sd_layer {
         [PROPERTY WR,LR
         WR = PERIM_CO(proc_layer,sd_layer)/2
         LR = AREA(proc_layer)/WR
         ]
}

DMACRO DNW_MOS_WPE_PRO proc_layer5 proc_layer6 sd_layer proclayer7 proc_layer8 {
         [PROPERTY WR,LR,SAR,SBR,SCA,SCB,SCC,NRS,NRD,mismod,prelayout_x,AS,AD,PS,PD,MR,NF,SD
         WR = PERIM_CO(proc_layer5,sd_layer)/2
         LR = AREA(proc_layer5)/WR
         S = ENC_PER(proc_layer5,proc_layer6,sd_layer,5)
         SAR =SUM( s::a)
         SBR =SUM( s::b)
         S1 = ENCLOSURE_VECTOR(proc_layer6,5)
         A = 5E-06
         PER_SRC = perimeter_inside(S,proc_layer8)
         PER_DRN = perimeter_inside(D,proc_layer8)
         MR    = 1
         NF    = 1
         SD    = 0
         IF(PER_SRC==0) {
           AD = AREA(D)*WR/PER_DRN
           PD = perimeter(D)*WR/PER_DRN
           AS = AD
           PS = PD
         }ELSE IF(PER_DRN==0){
            AS =AREA(S)*WR/PER_SRC
            PS =perimeter(S)*WR/PER_SRC
            AD =AS
            PD =PS
         }ELSE{
            AD =AREA(D)*WR/PER_DRN
            PD =perimeter(D)*WR/PER_DRN
            AS =AREA(S)*WR/PER_SRC
            PS =perimeter(S)*WR/PER_SRC
         }

      NRS=AS/(WR*WR)
      NRD=AD/(WR*WR)
         prelayout_x = 0
        #IFDEF MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF MOS_MIS_MODE 1
         mismod = 1
         #ENDIF
        #ENDIF

// Well proximity.
   SCH_1 = DFM_VEC_VAL( proclayer7, "PER_1" )
   SCH_2 = DFM_VEC_VAL( proclayer7, "PER_2" )
   SCV_1 = DFM_VEC_VAL( proclayer7, "PAR_1" )
   SCV_2 = DFM_VEC_VAL( proclayer7, "PAR_2" )
   SCA = TVF_NUM_FUN( "calc_sca_dfm", "device_function", SCH_1, SCH_2, SCV_1, SCV_2, WR, LR, UNIT_LENGTH() )
   SCB = TVF_NUM_FUN( "calc_scb_dfm", "device_function", SCH_1, SCH_2, SCV_1, SCV_2, WR, LR, UNIT_LENGTH() )
   SCC = TVF_NUM_FUN( "calc_scc_dfm", "device_function", SCH_1, SCH_2, SCV_1, SCV_2, WR, LR, UNIT_LENGTH() )
         ]
}

DMACRO DNW_MOS_REDUCE device_name {
       LVS REDUCE device_name PARALLEL yes
       [TOLERANCE LR 0
        effective LR,WR
        P = sum( WR*LR )
        Q = sum( WR/LR )
        WR = sqrt( P*Q )
        LR = sqrt ( P/Q )
       ]
}

DMACRO MOS_PRO fet_seed sd_seed {
       [ PROPERTY W,L
         W = PERIM_CO(fet_seed,sd_seed)/2
         L = AREA(fet_seed)/W
       ]
}

DMACRO MOS_WPE_PRO fet_seed sd_seed proclayer1 proclayer2 proclayer3 {
       [ PROPERTY W,L,AS,AD,PS,PD,SA,SB,SCA,SCB,SCC,NRS,NRD,M,NF,SD
         W = PERIM_CO(fet_seed,sd_seed)/2
         L = AREA(fet_seed)/W
         S = ENCLOSURE_VECTOR(proclayer2,5)
         A = 5E-06
         PER_S = perimeter_inside(S,proclayer1)
         PER_D = perimeter_inside(D,proclayer1)
         IF(PER_S==0) {
           AD = AREA(D)*W/PER_D
           PD = perimeter(D)*W/PER_D
           AS = AD
           PS = PD
         }ELSE IF(PER_D==0){
            AS=AREA(S)*W/PER_S
            PS =perimeter(S)*W/PER_S
            AD =AS
            PD =PS
         }ELSE{
            AD=AREA(D)*W/PER_D
            PD = perimeter(D)*W/PER_D
            AS = AREA(S)*W/PER_S
            PS = perimeter(S)*W/PER_S
         }
         SA = W/sum(S::w/(S::a+0.5*L)) - 0.5*L
         SB = W/sum(S::w/(S::b+0.5*L)) - 0.5*L
         M  = 1
         NF = 1
         SD = 0

      NRS=AS/(W*W)
      NRD=AD/(W*W)

// Well proximity.
   SCH_1 = DFM_VEC_VAL( proclayer3, "PER_1" )
   SCH_2 = DFM_VEC_VAL( proclayer3, "PER_2" )
   SCV_1 = DFM_VEC_VAL( proclayer3, "PAR_1" )
   SCV_2 = DFM_VEC_VAL( proclayer3, "PAR_2" )
   SCA = TVF_NUM_FUN( "calc_sca_dfm", "device_function", SCH_1, SCH_2, SCV_1, SCV_2, W, L, UNIT_LENGTH() )
   SCB = TVF_NUM_FUN( "calc_scb_dfm", "device_function", SCH_1, SCH_2, SCV_1, SCV_2, W, L, UNIT_LENGTH() )
   SCC = TVF_NUM_FUN( "calc_scc_dfm", "device_function", SCH_1, SCH_2, SCV_1, SCV_2, W, L, UNIT_LENGTH() )
       ]
}

DMACRO MOS_EGL4_WPE_PRO fet_seed sd_seed aa_layer diff_layer gate_box proclayer1 proclayer2 proclayer3 proclayer4 {
       [ PROPERTY W,L,A,B,D,H,NF,POLYCNN,HAT,HAB,AS,AD,PS,PD,SA,SB,SD
         W = PERIM_CO(fet_seed,sd_seed)/2
         L = AREA(fet_seed)/W

         NF = 1

         XA = perimeter_inside(fet_seed,proclayer2)/4
         H  = perimeter_inside(proclayer2,fet_seed)/4
         B  = perimeter_inside(proclayer2,proclayer1)/2 - 2*H
         CPO_IN = perimeter_inside(fet_seed,proclayer1)
         D      = (CPO_IN -(2*XA + 2*B))/1.656
         A      = XA + 2*D

         POLYCNN = PERIM_CO(fet_seed,aa_layer)
         HAT = (AREA(gate_box) - A*H*2)/(B+2*H) - 2*H
         AA_B = perimeter_inside(proclayer2,aa_layer)/2
         AA_A = (perimeter(aa_layer) - AA_B*2)/2
         HAB  = AA_A - (HAT + (A + 2*H))

         W_OUT = perimeter(proclayer1) - POLYCNN
         W_IN  = perimeter_inside(fet_seed,proclayer1)
         PER_S = perimeter_inside(SRC,diff_layer)
         PER_D = perimeter_inside(DRN,diff_layer)
         NF_NUMS = PER_S/W_OUT
         NF_NUMD = PER_D/W_IN

         AS = AREA(SRC)/NF_NUMS
         PS = perimeter(SRC)/NF_NUMS
         AD = AREA(DRN)/NF_NUMD
         PD = perimeter(DRN)/NF_NUMD

         NRS = AS/(W_OUT*W_OUT)
         NRD = AD/(W_IN*W_IN)

         mrk_pos = PERIM_CO(proclayer3,aa_layer)
         SXX1 = AREA(proclayer3)/XA
         
         IF((mrk_pos - 2*XA) == 0.0){
             SX1 = SXX1/2
             SX2 = SX1
         }ELSE IF((mrk_pos - XA) == 0.0){
             SX1 = (AA_B - (B + 2*H)*NF_NUMS)/(NF_NUMS+1)
             SX2 = AA_B - SX1 - (B + 2*H)
         }ELSE{
             SX1 = (AA_B - (B + 2*H))/2
             SX2 = SX1
         }

         SA1 = (B + 2*H - POLYCNN)/2 + SX1
         SW1 = HAT
         SA2 = SX1
         SW2 = A + 2*H
         SA3 = HAB
         SW3 = B + 2*H
         SA4 = SX2
         SW4 = A + 2*H
         SA5 = HAT
         SW5 = B + 2*H - POLYCNN
         SA  = (SW1 + SW2 + SW3 + SW4 + SW5)/(SW1/(SA1 + POLYCNN/2) + SW2/(SA2 + H/2) + SW3/(SA3 + H/2) + SW4/(SA4 + H/2) + SW5/(SA5 + H/2)) - H/2
         IF(SA <= 0.0){
            SA = 1e-7
         }

         SB1  = (B + 2*H - POLYCNN)/2 + SX1
         SWB1 = HAT
         SB2  = SX2 + B + H
         SWB2 = A - 2*D
         SB3  = HAT + H + A
         SWB3 = B - 2*D
         SB4  = SX1 + B + H
         SWB4 = A - 2*D
         SB5  = HAB + H + A
         SWB5 = B - 2*D 
         SB   = (SWB1 + SWB2 + SWB3 + SWB4 + SWB5)/(SWB1/(SB1 + POLYCNN/2) + SWB2/(SB2 + H/2) + SWB3/(SB3 + H/2) + SWB4/(SB4 + H/2) + SWB5/(SB5 + H/2)) - H/2
         IF(SB <= 0.0){
            SB = 1e-7
         }
         SD  = 0


         // Well proximity.
         SCH_1 = DFM_VEC_VAL( proclayer4, "PER_1" )
         SCH_2 = DFM_VEC_VAL( proclayer4, "PER_2" )
         SCV_1 = DFM_VEC_VAL( proclayer4, "PAR_1" )
         SCV_2 = DFM_VEC_VAL( proclayer4, "PAR_2" )
         SCA = TVF_NUM_FUN( "calc_sca_dfm", "device_function", SCH_1, SCH_2, SCV_1, SCV_2, W, L, UNIT_LENGTH() )
         SCB = TVF_NUM_FUN( "calc_scb_dfm", "device_function", SCH_1, SCH_2, SCV_1, SCV_2, W, L, UNIT_LENGTH() )
         SCC = TVF_NUM_FUN( "calc_scc_dfm", "device_function", SCH_1, SCH_2, SCV_1, SCV_2, W, L, UNIT_LENGTH() )

         A = TRUNC((A*1e+09) + 0.5)/1e+09    // rounding to 0.001um
         B = TRUNC((B*1e+09) + 0.5)/1e+09    // rounding to 0.001um
         D = TRUNC((D*1e+09) + 0.5)/1e+09    // rounding to 0.001um
         H = TRUNC((H*1e+09) + 0.5)/1e+09    // rounding to 0.001um
       ]
}

DMACRO MOS_EGL1_WPE_PRO fet_seed sd_seed aa_layer proclayer1 proclayer2 proclayer3{
       [ PROPERTY W,L,A,B,PAOFF,SA,SB
         W = PERIM_CO(fet_seed,sd_seed)/2
         L = AREA(fet_seed)/W

         A = perimeter_inside(proclayer1,aa_layer)/2
         B = PERIM_CO(proclayer1,aa_layer)/2
         PAOFF = perimeter_inside(proclayer2,fet_seed)/2

         XDA = A - PAOFF*2
         XDB = (perimeter_inside(fet_seed,proclayer2) - XDA)/2
         SA  = (AREA(sd_seed) - XDA*XDB)/A
         SB  = PAOFF
         SD  = 0

         AS = AREA(SRC)
         PS = perimeter(SRC)
         AD = AREA(DRN)
         PD = perimeter(DRN)
         NRS = AS/(W*W)
         NRD = AD/(PD*PD)

         // Well proximity.
         SCH_1 = DFM_VEC_VAL( proclayer3, "PER_1" )
         SCH_2 = DFM_VEC_VAL( proclayer3, "PER_2" )
         SCV_1 = DFM_VEC_VAL( proclayer3, "PAR_1" )
         SCV_2 = DFM_VEC_VAL( proclayer3, "PAR_2" )
         SCA = TVF_NUM_FUN( "calc_sca_dfm", "device_function", SCH_1, SCH_2, SCV_1, SCV_2, W, L, UNIT_LENGTH() )
         SCB = TVF_NUM_FUN( "calc_scb_dfm", "device_function", SCH_1, SCH_2, SCV_1, SCV_2, W, L, UNIT_LENGTH() )
         SCC = TVF_NUM_FUN( "calc_scc_dfm", "device_function", SCH_1, SCH_2, SCV_1, SCV_2, W, L, UNIT_LENGTH() )

         A = TRUNC((A*1e+09) + 0.5)/1e+09    // rounding to 0.001um
         B = TRUNC((B*1e+09) + 0.5)/1e+09    // rounding to 0.001um
       ]
}

DMACRO MOS_XRC_PRO fet_seed sd_seed proclayer1 proclayer2 proclayer3 {
       [ PROPERTY W,L,AS,AD,PS,PD,SA,SB,NRS,NRD,M,NF,SD
         W = PERIM_CO(fet_seed,sd_seed)/2
         L = AREA(fet_seed)/W
         S = ENCLOSURE_VECTOR(proclayer2,5)
         A = 5E-06
         PER_S = perimeter_inside(S,proclayer1)
         PER_D = perimeter_inside(D,proclayer1)
         M     = 1
         NF    = 1
         SD    = 0
         IF(PER_S==0) {
           AD = AREA(D)*W/PER_D
           PD = perimeter(D)*W/PER_D
           AS = AD
           PS = PD
         }ELSE IF(PER_D==0){
            AS=AREA(S)*W/PER_S
            PS =perimeter(S)*W/PER_S
            AD =AS
            PD =PS
         }ELSE{
            AD=AREA(D)*W/PER_D
            PD = perimeter(D)*W/PER_D
            AS = AREA(S)*W/PER_S
            PS = perimeter(S)*W/PER_S
         }
         SA = W/sum(S::w/(S::a+0.5*L)) - 0.5*L
         SB = W/sum(S::w/(S::b+0.5*L)) - 0.5*L

      NRS=AS/(W*W)
      NRD=AD/(W*W)
       ]
}

DMACRO MOS_WPE_MIS_PRO fet_seed sd_seed proclayer1 proclayer2 proclayer3 {
       [ PROPERTY W,L,AS,AD,PS,PD,SA,SB,SCA,SCB,SCC,NRS,NRD,mismod,prelayout_x,MR,NF,SD
         W = PERIM_CO(fet_seed,sd_seed)/2
         L = AREA(fet_seed)/W
         S = ENCLOSURE_VECTOR(proclayer2,5)
         A = 5E-06
         PER_S = perimeter_inside(S,proclayer1)
         PER_D = perimeter_inside(D,proclayer1)
         MR    = 1
         NF    = 1
         SD    = 0
         IF(PER_S==0) {
           AD = AREA(D)*W/PER_D
           PD = perimeter(D)*W/PER_D
           AS = AD
           PS = PD
         }ELSE IF(PER_D==0){
            AS=AREA(S)*W/PER_S
            PS =perimeter(S)*W/PER_S
            AD =AS
            PD =PS
         }ELSE{
            AD=AREA(D)*W/PER_D
            PD = perimeter(D)*W/PER_D
            AS = AREA(S)*W/PER_S
            PS = perimeter(S)*W/PER_S
         }
         SA = W/sum(S::w/(S::a+0.5*L)) - 0.5*L
         SB = W/sum(S::w/(S::b+0.5*L)) - 0.5*L

      NRS=AS/(W*W)
      NRD=AD/(W*W)
         prelayout_x = 0
         #IFDEF MOS_MIS_MODE 0
          mismod = 0
         #ELSE
          #IFDEF MOS_MIS_MODE 1
          mismod = 1
          #ENDIF
         #ENDIF
// Well proximity.
   SCH_1 = DFM_VEC_VAL( proclayer3, "PER_1" )
   SCH_2 = DFM_VEC_VAL( proclayer3, "PER_2" )
   SCV_1 = DFM_VEC_VAL( proclayer3, "PAR_1" )
   SCV_2 = DFM_VEC_VAL( proclayer3, "PAR_2" )
   SCA = TVF_NUM_FUN( "calc_sca_dfm", "device_function", SCH_1, SCH_2, SCV_1, SCV_2, W, L, UNIT_LENGTH() )
   SCB = TVF_NUM_FUN( "calc_scb_dfm", "device_function", SCH_1, SCH_2, SCV_1, SCV_2, W, L, UNIT_LENGTH() )
   SCC = TVF_NUM_FUN( "calc_scc_dfm", "device_function", SCH_1, SCH_2, SCV_1, SCV_2, W, L, UNIT_LENGTH() )
       ]
}

DMACRO MOS_XRC_MIS_PRO fet_seed sd_seed proclayer1 proclayer2 proclayer3 {
       [ PROPERTY W,L,AS,AD,PS,PD,SA,SB,NRS,NRD,mismod,prelayout_x,MR,NF,SD
         W = PERIM_CO(fet_seed,sd_seed)/2
         L = AREA(fet_seed)/W
         S = ENCLOSURE_VECTOR(proclayer2,5)
         A = 5E-06
         PER_S = perimeter_inside(S,proclayer1)
         PER_D = perimeter_inside(D,proclayer1)
         MR    = 1
         NF    = 1
         SD    = 0
         IF(PER_S==0) {
           AD = AREA(D)*W/PER_D
           PD = perimeter(D)*W/PER_D
           AS = AD
           PS = PD
         }ELSE IF(PER_D==0){
            AS=AREA(S)*W/PER_S
            PS =perimeter(S)*W/PER_S
            AD =AS
            PD =PS
         }ELSE{
            AD=AREA(D)*W/PER_D
            PD = perimeter(D)*W/PER_D
            AS = AREA(S)*W/PER_S
            PS = perimeter(S)*W/PER_S
         }
         SA = W/sum(S::w/(S::a+0.5*L)) - 0.5*L
         SB = W/sum(S::w/(S::b+0.5*L)) - 0.5*L

      NRS=AS/(W*W)
      NRD=AD/(W*W)
         prelayout_x = 0
         #IFDEF MOS_MIS_MODE 0
          mismod = 0
         #ELSE
          #IFDEF MOS_MIS_MODE 1
          mismod = 1
          #ENDIF
         #ENDIF
       ]
}

DMACRO SRAM_PRO fet_seed sd_seed proclayer1 proclayer2 {
       [ PROPERTY W,L,AS,AD,PS,PD,SA,SB,NRS,NRD,SCA,SCB,SCC
         W = PERIM_CO(fet_seed,sd_seed)/2
         L = AREA(fet_seed)/W
         S = ENCLOSURE_VECTOR(proclayer2,5)
         A = 5E-06
         PER_S = perimeter_inside(S,proclayer1)
         PER_D = perimeter_inside(D,proclayer1)
         IF(PER_S==0) {
           AD = AREA(D)*W/PER_D
           PD = perimeter(D)*W/PER_D
           AS = AD
           PS = PD
         }ELSE IF(PER_D==0){
            AS=AREA(S)*W/PER_S
            PS =perimeter(S)*W/PER_S
            AD =AS
            PD =PS
         }ELSE{
            AD=AREA(D)*W/PER_D
            PD = perimeter(D)*W/PER_D
            AS = AREA(S)*W/PER_S
            PS = perimeter(S)*W/PER_S
         }
         SA = 0
         SB = 0
         SCA = 0
         SCB = 0
         SCC = 0

         NRD = 0
         NRS = 0
         ]
}

DMACRO SRAM_PRO_MIS fet_seed sd_seed proclayer1 proclayer2 {
       [ PROPERTY W,L,AS,AD,PS,PD,SA,SB,NRS,NRD,SCA,SCB,SCC,mismod
         W = PERIM_CO(fet_seed,sd_seed)/2
         L = AREA(fet_seed)/W
         S = ENCLOSURE_VECTOR(proclayer2,5)
         A = 5E-06
         PER_S = perimeter_inside(S,proclayer1)
         PER_D = perimeter_inside(D,proclayer1)
         IF(PER_S==0) {
           AD = AREA(D)*W/PER_D
           PD = perimeter(D)*W/PER_D
           AS = AD
           PS = PD
         }ELSE IF(PER_D==0){
            AS=AREA(S)*W/PER_S
            PS =perimeter(S)*W/PER_S
            AD =AS
            PD =PS
         }ELSE{
            AD=AREA(D)*W/PER_D
            PD = perimeter(D)*W/PER_D
            AS = AREA(S)*W/PER_S
            PS = perimeter(S)*W/PER_S
         }
         SA = 0
         SB = 0
         SCA = 0
         SCB = 0
         SCC = 0

         NRD = 0
         NRS = 0
        #IFDEF MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF MOS_MIS_MODE 1
         mismod = 1
         #ENDIF
         #ENDIF
         ]
}

DMACRO MOS_REDUCE device_name {
       LVS REDUCE device_name PARALLEL yes
       [TOLERANCE L 0
        effective L,W
        P = sum( W*L )
        Q = sum( W/L )
        W = sqrt( P*Q )
        L = sqrt ( P/Q )
       ]
}

DMACRO MOS_EGL4_REDUCE device_name {
       LVS REDUCE device_name PARALLEL yes
       [TOLERANCE H 0
        effective A,B,D,H,NF
        PN = sum(NF)
        NF = PN
        A  = sum(A*NF)/PN
        B  = sum(B*NF)/PN
        D  = sum(D*NF)/PN
        H  = sum(H*NF)/PN
       ]
}

DMACRO MOS_EGL1_REDUCE device_name {
       LVS REDUCE device_name PARALLEL yes
       [TOLERANCE A 0
        effective A,B
        A  = sum(A)
        B  = sum(B)
       ]
}

#IFDEF RC_RUN FALSE
DEVICE MN(n12ll) ngate_core ngate_core(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO ngate_core nsd
DEVICE MP(p12ll) pgate_core pgate_core(G) psd(S) psd(D) nwell(B) CMACRO MOS_PRO pgate_core psd
DEVICE MN(n18ll) ngate_IO1 ngate_IO1(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO ngate_IO1 nsd
DEVICE MP(p18ll) pgate_IO1 pgate_IO1(G) psd(S) psd(D) nwell(B) CMACRO MOS_PRO pgate_IO1 psd
DEVICE MN(nt12ll) ntgate_core ntgate_core(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO ntgate_core nsd
DEVICE MN(nt18ll) ntgate_IO1 ntgate_IO1(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO ntgate_IO1 nsd
DEVICE MN(nhvt12ll) ngate_core_hvt ngate_core_hvt(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO ngate_core_hvt nsd
DEVICE MP(phvt12ll) pgate_core_hvt pgate_core_hvt(G) psd(S) psd(D) nwell(B) CMACRO MOS_PRO pgate_core_hvt psd
DEVICE MN(nlvt12ll) ngate_core_lvt ngate_core_lvt(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO ngate_core_lvt nsd
DEVICE MP(plvt12ll) pgate_core_lvt pgate_core_lvt(G) psd(S) psd(D) nwell(B) CMACRO MOS_PRO pgate_core_lvt psd
DEVICE M(ulln) ngate_core_ull ngate_core_ull(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO ngate_core_ull nsd
DEVICE M(ullp) pgate_core_ull pgate_core_ull(G) psd(S) psd(D) nwell(B) CMACRO MOS_PRO pgate_core_ull psd

DEVICE MN(n12ll_egl4) ngate_core_egl4 ngate_core_egl4(GATE) nsd(SRC) nsd(DRN) pwell(BULK) CMACRO MOS_PRO ngate_core_egl4 nsd
DEVICE MP(p12ll_egl4) pgate_core_egl4 pgate_core_egl4(GATE) psd(SRC) psd(DRN) nwell(BULK) CMACRO MOS_PRO pgate_core_egl4 psd
DEVICE MN(n12ll_egl1) ngate_core_egl1 ngate_core_egl1(GATE) nsd(SRC) nsd(DRN) pwell(BULK) CMACRO MOS_PRO ngate_core_egl1 nsd
DEVICE MP(p12ll_egl1) pgate_core_egl1 pgate_core_egl1(GATE) psd(SRC) psd(DRN) nwell(BULK) CMACRO MOS_PRO pgate_core_egl1 psd
DEVICE MN(n12ll_sab_egl4) ngate_core_sab_egl4 ngate_core_sab_egl4(GATE) nsd(SRC) nsd(DRN) pwell(BULK) CMACRO MOS_PRO ngate_core_sab_egl4 nsd
DEVICE MP(p12ll_sab_egl4) pgate_core_sab_egl4 pgate_core_sab_egl4(GATE) psd(SRC) psd(DRN) nwell(BULK) CMACRO MOS_PRO pgate_core_sab_egl4 psd

DEVICE n12ll_mis_ckt ngate_core_mis nsd(D) ngate_core_mis(G) nsd(S) pwell(B) CMACRO MOS_PRO ngate_core_mis nsd
CMACRO MOS_REDUCE n12ll_mis_ckt
DEVICE p12ll_mis_ckt pgate_core_mis psd(D) pgate_core_mis(G) psd(S) nwell(B) CMACRO MOS_PRO pgate_core_mis psd
CMACRO MOS_REDUCE p12ll_mis_ckt
DEVICE n18ll_mis_ckt ngate_IO1_mis nsd(D) ngate_IO1_mis(G) nsd(S)  pwell(B) CMACRO MOS_PRO ngate_IO1_mis nsd
CMACRO MOS_REDUCE n18ll_mis_ckt
DEVICE p18ll_mis_ckt pgate_IO1_mis psd(D) pgate_IO1_mis(G) psd(S) nwell(B) CMACRO MOS_PRO pgate_IO1_mis psd
CMACRO MOS_REDUCE p18ll_mis_ckt
DEVICE nt12ll_mis_ckt ntgate_core_mis nsd(D) ntgate_core_mis(G) nsd(S) pwell(B) CMACRO MOS_PRO ntgate_core_mis nsd
CMACRO MOS_REDUCE nt12ll_mis_ckt
DEVICE nt18ll_mis_ckt ntgate_IO1_mis nsd(D) ntgate_IO1_mis(G) nsd(S) pwell(B) CMACRO MOS_PRO ntgate_IO1_mis nsd
CMACRO MOS_REDUCE nt18ll_mis_ckt
DEVICE nhvt12ll_mis_ckt ngate_core_hvt_mis nsd(D) ngate_core_hvt_mis(G) nsd(S) pwell(B) CMACRO MOS_PRO ngate_core_hvt_mis nsd
CMACRO MOS_REDUCE nhvt12ll_mis_ckt
DEVICE phvt12ll_mis_ckt pgate_core_hvt_mis psd(D) pgate_core_hvt_mis(G) psd(S) nwell(B) CMACRO MOS_PRO pgate_core_hvt_mis psd
CMACRO MOS_REDUCE phvt12ll_mis_ckt
DEVICE nlvt12ll_mis_ckt ngate_core_lvt_mis nsd(D) ngate_core_lvt_mis(G) nsd(S) pwell(B) CMACRO MOS_PRO ngate_core_lvt_mis nsd
CMACRO MOS_REDUCE nlvt12ll_mis_ckt
DEVICE plvt12ll_mis_ckt pgate_core_lvt_mis psd(D) pgate_core_lvt_mis(G) psd(S) nwell(B) CMACRO MOS_PRO pgate_core_lvt_mis psd
CMACRO MOS_REDUCE plvt12ll_mis_ckt
DEVICE ulln_mis_ckt ngate_core_ull_mis nsd(D) ngate_core_ull_mis(G) nsd(S) pwell(B) CMACRO MOS_PRO ngate_core_ull_mis nsd
CMACRO MOS_REDUCE ulln_mis_ckt
DEVICE ullp_mis_ckt pgate_core_ull_mis psd(D) pgate_core_ull_mis(G) psd(S) nwell(B) CMACRO MOS_PRO pgate_core_ull_mis psd
CMACRO MOS_REDUCE ullp_mis_ckt

DEVICE dnw12ll_ckt dnwngate12 nsd(D) dnwngate12(G) nsd(S) rwell(B) CMACRO DNW_MOS_PRO dnwngate12 nsd
CMACRO DNW_MOS_REDUCE dnw12ll_ckt

DEVICE dnwulln_ckt dnwullngate nsd(D) dnwullngate(G) nsd(S) rwell(B) CMACRO DNW_MOS_PRO dnwullngate nsd
CMACRO DNW_MOS_REDUCE dnwulln_ckt

DEVICE dnw18ll_ckt dnwngate18 nsd(D) dnwngate18(G) nsd(S) rwell(B) CMACRO DNW_MOS_PRO dnwngate18 nsd
CMACRO DNW_MOS_REDUCE dnw18ll_ckt

DEVICE dnwhvt12ll_ckt dnwhvtgate12 nsd(D) dnwhvtgate12(G) nsd(S) rwell(B) CMACRO DNW_MOS_PRO dnwhvtgate12 nsd
CMACRO DNW_MOS_REDUCE dnwhvt12ll_ckt

DEVICE dnwlvt12ll_ckt dnwlvtgate12 nsd(D) dnwlvtgate12(G) nsd(S) rwell(B) CMACRO DNW_MOS_PRO dnwlvtgate12 nsd
CMACRO DNW_MOS_REDUCE dnwlvt12ll_ckt

#IFDEF IO 1825
DEVICE MN(n25ll) ngate_IO2 ngate_IO2(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO ngate_IO2 nsd
DEVICE MP(p25ll) pgate_IO2 pgate_IO2(G) psd(S) psd(D) nwell(B) CMACRO MOS_PRO pgate_IO2 psd
DEVICE MN(nt25ll) ntgate_IO2 ntgate_IO2(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO  ntgate_IO2 nsd
DEVICE MN(ntud18ll) ntgate_IO2_under ntgate_IO2_under(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO  ntgate_IO2_under nsd
DEVICE MN(ntod33ll) ntgate_IO2_over ntgate_IO2_over(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO  ntgate_IO2_over nsd
DEVICE MN(nod33ll) ngate_IO2_over ngate_IO2_over(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO ngate_IO2_over nsd
DEVICE MP(pod33ll) pgate_IO2_over pgate_IO2_over(G) psd(S) psd(D) nwell(B) CMACRO MOS_PRO pgate_IO2_over psd
DEVICE MN(nud18ll) ngate_IO2_under ngate_IO2_under(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO ngate_IO2_under nsd
DEVICE MP(pud18ll) pgate_IO2_under pgate_IO2_under(G) psd(S) psd(D) nwell(B) CMACRO MOS_PRO pgate_IO2_under psd

DEVICE n25ll_mis_ckt ngate_IO2_mis nsd(D) ngate_IO2_mis(G) nsd(S) pwell(B) CMACRO MOS_PRO ngate_IO2_mis nsd
CMACRO MOS_REDUCE n25ll_mis_ckt
DEVICE p25ll_mis_ckt pgate_IO2_mis psd(D) pgate_IO2_mis(G) psd(S) nwell(B) CMACRO MOS_PRO pgate_IO2_mis psd
CMACRO MOS_REDUCE p25ll_mis_ckt
DEVICE nt25ll_mis_ckt ntgate_IO2_mis nsd(D) ntgate_IO2_mis(G) nsd(S) pwell(B) CMACRO MOS_PRO ntgate_IO2_mis nsd
CMACRO MOS_REDUCE nt25ll_mis_ckt
DEVICE ntud18ll_mis_ckt ntgate_IO2_under_mis nsd(D) ntgate_IO2_under_mis(G) nsd(S) pwell(B) CMACRO MOS_PRO ntgate_IO2_under_mis nsd
CMACRO MOS_REDUCE ntud18ll_mis_ckt
DEVICE ntod33ll_mis_ckt ntgate_IO2_over_mis nsd(D) ntgate_IO2_over_mis(G) nsd(S) pwell(B) CMACRO MOS_PRO ntgate_IO2_over_mis nsd
CMACRO MOS_REDUCE ntod33ll_mis_ckt
DEVICE nod33ll_mis_ckt ngate_IO2_over_mis nsd(D) ngate_IO2_over_mis(G) nsd(S) pwell(B) CMACRO MOS_PRO ngate_IO2_over_mis nsd
CMACRO MOS_REDUCE nod33ll_mis_ckt
DEVICE pod33ll_mis_ckt pgate_IO2_over_mis psd(D) pgate_IO2_over_mis(G) psd(S) nwell(B) CMACRO MOS_PRO pgate_IO2_over_mis psd
CMACRO MOS_REDUCE pod33ll_mis_ckt
DEVICE nud18ll_mis_ckt ngate_IO2_under_mis nsd(D) ngate_IO2_under_mis(G) nsd(S) pwell(B) CMACRO MOS_PRO ngate_IO2_under_mis nsd
CMACRO MOS_REDUCE nud18ll_mis_ckt
DEVICE pud18ll_mis_ckt pgate_IO2_under_mis psd(D) pgate_IO2_under_mis(G) psd(S) nwell(B) CMACRO MOS_PRO pgate_IO2_under_mis psd
CMACRO MOS_REDUCE pud18ll_mis_ckt

DEVICE dnw25ll_ckt dnwngate25 nsd(D) dnwngate25(G) nsd(S) rwell(B) CMACRO DNW_MOS_PRO dnwngate25 nsd
CMACRO DNW_MOS_REDUCE dnw25ll_ckt

DEVICE dnwod33ll_ckt dnwodgate33 nsd(D) dnwodgate33(G) nsd(S) rwell(B) CMACRO DNW_MOS_PRO dnwodgate33 nsd
CMACRO DNW_MOS_REDUCE dnwod33ll_ckt

DEVICE dnwud18ll_ckt dnwudgate18 nsd(D) dnwudgate18(G) nsd(S) rwell(B) CMACRO DNW_MOS_PRO dnwudgate18 nsd
CMACRO DNW_MOS_REDUCE dnwud18ll_ckt

DEVICE MN(n25ll_egl4) ngate_IO2_egl4 ngate_IO2_egl4(GATE) nsd(SRC) nsd(DRN) pwell(BULK) CMACRO MOS_PRO ngate_IO2_egl4 nsd
DEVICE MP(p25ll_egl4) pgate_IO2_egl4 pgate_IO2_egl4(GATE) psd(SRC) psd(DRN) nwell(BULK) CMACRO MOS_PRO pgate_IO2_egl4 psd
DEVICE MN(n25ll_sab_egl4) ngate_IO2_sab_egl4 ngate_IO2_sab_egl4(GATE) nsd(SRC) nsd(DRN) pwell(BULK) CMACRO MOS_PRO ngate_IO2_sab_egl4 nsd
DEVICE MP(p25ll_sab_egl4) pgate_IO2_sab_egl4 pgate_IO2_sab_egl4(GATE) psd(SRC) psd(DRN) nwell(BULK) CMACRO MOS_PRO pgate_IO2_sab_egl4 psd
DEVICE MN(nod33ll_egl4) ngate_IO2_egl4_over ngate_IO2_egl4_over(GATE) nsd(SRC) nsd(DRN) pwell(BULK) CMACRO MOS_PRO ngate_IO2_egl4_over nsd
DEVICE MP(pod33ll_egl4) pgate_IO2_egl4_over pgate_IO2_egl4_over(GATE) psd(SRC) psd(DRN) nwell(BULK) CMACRO MOS_PRO pgate_IO2_egl4_over psd
DEVICE MN(nod33ll_sab_egl4) ngate_IO2_sab_egl4_over ngate_IO2_sab_egl4_over(GATE) nsd(SRC) nsd(DRN) pwell(BULK) CMACRO MOS_PRO ngate_IO2_sab_egl4_over nsd
DEVICE MP(pod33ll_sab_egl4) pgate_IO2_sab_egl4_over pgate_IO2_sab_egl4_over(GATE) psd(SRC) psd(DRN) nwell(BULK) CMACRO MOS_PRO pgate_IO2_sab_egl4_over psd

DEVICE MN(n25ll_egl1) ngate_IO2_egl1 ngate_IO2_egl1(GATE) nsd(SRC) nsd(DRN) pwell(BULK) CMACRO MOS_PRO ngate_IO2_egl1 nsd
DEVICE MP(p25ll_egl1) pgate_IO2_egl1 pgate_IO2_egl1(GATE) psd(SRC) psd(DRN) nwell(BULK) CMACRO MOS_PRO pgate_IO2_egl1 psd
DEVICE MN(nod33ll_egl1) ngate_IO2_egl1_over ngate_IO2_egl1_over(GATE) nsd(SRC) nsd(DRN) pwell(BULK) CMACRO MOS_PRO ngate_IO2_egl1_over nsd
DEVICE MP(pod33ll_egl1) pgate_IO2_egl1_over pgate_IO2_egl1_over(GATE) psd(SRC) psd(DRN) nwell(BULK) CMACRO MOS_PRO pgate_IO2_egl1_over psd

#ENDIF
#ENDIF

///////////////////////Define RF MOS////////////////////////////////////
#IFDEF RC_RUN FALSE 
DEVICE n12ll_ckt_rf ngate_core_rf nsdrfd(DRN) ngate_core_rf(GATE) nsd(SRC) pwell(BULK) <ngate_core_rf_aux> <nsdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(ngate_core_rf_aux)
        WR = PERIM_CO(ngate_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_core_rf_aux)/(WR*NF)]

DEVICE n12ll_ckt_rf_sdc ngate_core_rf_sdc nsdrfd(DRN) ngate_core_rf_sdc(GATE) nsd(SRC) pwell(BULK) <ngate_core_rf_aux> <nsdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(ngate_core_rf_aux)
        WR = PERIM_CO(ngate_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_core_rf_aux)/(WR*NF)]

DEVICE n18ll_ckt_rf ngate_IO1_rf nsdrfd(DRN) ngate_IO1_rf(GATE) nsd(SRC) pwell(BULK) <ngate_IO1_rf_aux> <nsdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(ngate_IO1_rf_aux)
        WR = PERIM_CO(ngate_IO1_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_IO1_rf_aux)/(WR*NF)]

DEVICE nlvt12ll_ckt_rf ngate_core_lvt_rf nsdrfd(DRN) ngate_core_lvt_rf(GATE) nsd(SRC) pwell(BULK) <ngate_core_lvt_rf_aux> <nsdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(ngate_core_lvt_rf_aux)
        WR = PERIM_CO(ngate_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_core_lvt_rf_aux)/(WR*NF)]

DEVICE nlvt12ll_ckt_rf_sdc ngate_core_lvt_rf_sdc nsdrfd(DRN) ngate_core_lvt_rf_sdc(GATE) nsd(SRC) pwell(BULK) <ngate_core_lvt_rf_aux> <nsdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(ngate_core_lvt_rf_aux)
        WR = PERIM_CO(ngate_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_core_lvt_rf_aux)/(WR*NF)]

DEVICE p12ll_ckt_rf pgate_core_rf psdrfd(DRN) pgate_core_rf(GATE) psd(SRC) nwell(BULK) <pgate_core_rf_aux> <psdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(pgate_core_rf_aux)
        WR = PERIM_CO(pgate_core_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_rf_aux)/(WR*NF)]

DEVICE p12ll_ckt_rf_5t pgate_core_rf_5t psdrfd(DRN) pgate_core_rf_5t_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_core_rf_aux> <psdrf>
       [ PROPERTY LR,WR,NF
        NF = COUNT(pgate_core_rf_aux)
        WR = PERIM_CO(pgate_core_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_rf_aux)/(WR*NF)]

DEVICE p12ll_ckt_rf_sdc pgate_core_rf_sdc psdrfd(DRN) pgate_core_rf_sdc(GATE) psd(SRC) nwell(BULK) <pgate_core_rf_aux> <psdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(pgate_core_rf_aux)
        WR = PERIM_CO(pgate_core_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_rf_aux)/(WR*NF)]

DEVICE p12ll_ckt_rf_5t_sdc pgate_core_rf_5t_sdc psdrfd(DRN) pgate_core_rf_5t_sdc_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_core_rf_aux> <psdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(pgate_core_rf_aux)
        WR = PERIM_CO(pgate_core_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_rf_aux)/(WR*NF)]

DEVICE p18ll_ckt_rf pgate_IO1_rf psdrfd(DRN) pgate_IO1_rf(GATE) psd(SRC) nwell(BULK) <pgate_IO1_rf_aux> <psdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(pgate_IO1_rf_aux)
        WR = PERIM_CO(pgate_IO1_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO1_rf_aux)/(WR*NF)]

DEVICE p18ll_ckt_rf_5t pgate_IO1_rf_5t psdrfd(DRN) pgate_IO1_rf_5t_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_IO1_rf_aux> <psdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(pgate_IO1_rf_aux)
        WR = PERIM_CO(pgate_IO1_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO1_rf_aux)/(WR*NF)]

DEVICE plvt12ll_ckt_rf pgate_core_lvt_rf psdrfd(DRN) pgate_core_lvt_rf(GATE) psd(SRC) nwell(BULK) <pgate_core_lvt_rf_aux> <psdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(pgate_core_lvt_rf_aux)
        WR = PERIM_CO(pgate_core_lvt_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_lvt_rf_aux)/(WR*NF)]

DEVICE plvt12ll_ckt_rf_5t pgate_core_lvt_rf_5t psdrfd(DRN) pgate_core_lvt_rf_5t_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_core_lvt_rf_aux> <psdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(pgate_core_lvt_rf_aux)
        WR = PERIM_CO(pgate_core_lvt_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_lvt_rf_aux)/(WR*NF)]

DEVICE plvt12ll_ckt_rf_sdc pgate_core_lvt_rf_sdc psdrfd(DRN) pgate_core_lvt_rf_sdc(GATE) psd(SRC) nwell(BULK) <pgate_core_lvt_rf_aux> <psdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(pgate_core_lvt_rf_aux)
        WR = PERIM_CO(pgate_core_lvt_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_lvt_rf_aux)/(WR*NF)]

DEVICE plvt12ll_ckt_rf_5t_sdc pgate_core_lvt_rf_5t_sdc psdrfd(DRN) pgate_core_lvt_rf_5t_sdc_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_core_lvt_rf_aux> <psdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(pgate_core_lvt_rf_aux)
        WR = PERIM_CO(pgate_core_lvt_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_lvt_rf_aux)/(WR*NF)]

DEVICE dnw12ll_ckt_rf dnw_core_rf nsdrfd(DRN) dnw_core_rf(GATE) nsd(SRC) rwell(BULK) <nsdrf> <dnw_core_rf_aux>
        [ PROPERTY LR,WR,NF
        NF = COUNT(dnw_core_rf_aux)
        WR = PERIM_CO(dnw_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_rf_aux)/(WR*NF)]

DEVICE dnw12ll_ckt_rf_6t dnw_core_rf_6t nsdrfd(DRN) dnw_core_rf_6t_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <nsdrf> <dnw_core_rf_aux>
        [ PROPERTY LR,WR,NF
        NF = COUNT(dnw_core_rf_aux)
        WR = PERIM_CO(dnw_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_rf_aux)/(WR*NF)]

DEVICE dnw12ll_ckt_rf_sdc dnw_core_rf_sdc nsdrfd(DRN) dnw_core_rf_sdc(GATE) nsd(SRC) rwell(BULK) <nsdrf> <dnw_core_rf_aux>
        [ PROPERTY LR,WR,NF
        NF = COUNT(dnw_core_rf_aux)
        WR = PERIM_CO(dnw_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_rf_aux)/(WR*NF)]

DEVICE dnw12ll_ckt_rf_6t_sdc dnw_core_rf_6t_sdc nsdrfd(DRN) dnw_core_rf_6t_sdc_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <nsdrf> <dnw_core_rf_aux>
        [ PROPERTY LR,WR,NF
        NF = COUNT(dnw_core_rf_aux)
        WR = PERIM_CO(dnw_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_rf_aux)/(WR*NF)]

DEVICE dnw18ll_ckt_rf dnw_IO1_rf nsdrfd(DRN) dnw_IO1_rf(GATE) nsd(SRC) rwell(BULK) <dnw_IO1_rf_aux> <nsdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(dnw_IO1_rf_aux)
        WR = PERIM_CO(dnw_IO1_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO1_rf_aux)/(WR*NF)]

DEVICE dnw18ll_ckt_rf_6t dnw_IO1_rf_6t nsdrfd(DRN) dnw_IO1_rf_6t_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <dnw_IO1_rf_aux> <nsdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(dnw_IO1_rf_aux)
        WR = PERIM_CO(dnw_IO1_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO1_rf_aux)/(WR*NF)]

DEVICE dnwlvt12ll_ckt_rf dnw_core_lvt_rf nsdrfd(DRN) dnw_core_lvt_rf(GATE) nsd(SRC) rwell(BULK) <nsdrf> <dnw_core_lvt_rf_aux>
        [ PROPERTY LR,WR,NF
        NF = COUNT(dnw_core_lvt_rf_aux)
        WR = PERIM_CO(dnw_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_lvt_rf_aux)/(WR*NF)]

DEVICE dnwlvt12ll_ckt_rf_6t dnw_core_lvt_rf_6t nsdrfd(DRN) dnw_core_lvt_rf_6t_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <nsdrf> <dnw_core_lvt_rf_aux>
        [ PROPERTY LR,WR,NF
        NF = COUNT(dnw_core_lvt_rf_aux)
        WR = PERIM_CO(dnw_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_lvt_rf_aux)/(WR*NF)]

DEVICE dnwlvt12ll_ckt_rf_sdc dnw_core_lvt_rf_sdc nsdrfd(DRN) dnw_core_lvt_rf_sdc(GATE) nsd(SRC) rwell(BULK) <nsdrf> <dnw_core_lvt_rf_aux>
        [ PROPERTY LR,WR,NF
        NF = COUNT(dnw_core_lvt_rf_aux)
        WR = PERIM_CO(dnw_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_lvt_rf_aux)/(WR*NF)]

DEVICE dnwlvt12ll_ckt_rf_6t_sdc dnw_core_lvt_rf_6t_sdc nsdrfd(DRN) dnw_core_lvt_rf_6t_sdc_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <nsdrf> <dnw_core_lvt_rf_aux>
        [ PROPERTY LR,WR,NF
        NF = COUNT(dnw_core_lvt_rf_aux)
        WR = PERIM_CO(dnw_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_lvt_rf_aux)/(WR*NF)]

#IFDEF IO 1825

DEVICE n25ll_ckt_rf ngate_IO2_rf nsdrfd(DRN) ngate_IO2_rf(GATE) nsd(SRC) pwell(BULK) <ngate_IO2_rf_aux> <nsdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(ngate_IO2_rf_aux)
        WR = PERIM_CO(ngate_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_IO2_rf_aux)/(WR*NF)]

DEVICE n25ll_ckt_rf_sdc ngate_IO2_rf_sdc nsdrfd(DRN) ngate_IO2_rf_sdc(GATE) nsd(SRC) pwell(BULK) <ngate_IO2_rf_aux> <nsdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(ngate_IO2_rf_aux)
        WR = PERIM_CO(ngate_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_IO2_rf_aux)/(WR*NF)]

DEVICE n25llod33_ckt_rf ngate_IO2_over_rf nsdrfd(DRN) ngate_IO2_over_rf(GATE) nsd(SRC) pwell(BULK) <ngate_IO2_over_rf_aux> <nsdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(ngate_IO2_over_rf_aux)
        WR = PERIM_CO(ngate_IO2_over_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_IO2_over_rf_aux)/(WR*NF)]

DEVICE n25llud18_ckt_rf ngate_IO2_under_rf nsdrfd(DRN) ngate_IO2_under_rf(GATE) nsd(SRC) pwell(BULK) <ngate_IO2_under_rf_aux> <nsdrf>
       [ PROPERTY LR, WR, NF
       NF = COUNT (ngate_IO2_under_rf_aux)
       WR = PERIM_CO(ngate_IO2_under_rf_aux,nsdrf)/(2*NF)
       LR = AREA(ngate_IO2_under_rf_aux)/(WR*NF)]

DEVICE n25llud18_ckt_rf_mis ngate_IO2_under_rf_mis nsdrfd(DRN) ngate_IO2_under_rf_mis(GATE) nsd(SRC) pwell(BULK) <ngate_IO2_under_rf_aux> <nsdrf>
       [ PROPERTY LR, WR, NF
       NF = COUNT (ngate_IO2_under_rf_aux)
       WR = PERIM_CO(ngate_IO2_under_rf_aux,nsdrf)/(2*NF)
       LR = AREA(ngate_IO2_under_rf_aux)/(WR*NF)]

DEVICE p25ll_ckt_rf pgate_IO2_rf psdrfd(DRN) pgate_IO2_rf(GATE) psd(SRC) nwell(BULK) <pgate_IO2_rf_aux> <psdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(pgate_IO2_rf_aux)
        WR = PERIM_CO(pgate_IO2_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_rf_aux)/(WR*NF)]

DEVICE p25ll_ckt_rf_5t pgate_IO2_rf_5t psdrfd(DRN) pgate_IO2_rf_5t_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_IO2_rf_aux> <psdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(pgate_IO2_rf_aux)
        WR = PERIM_CO(pgate_IO2_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_rf_aux)/(WR*NF)]

DEVICE p25ll_ckt_rf_sdc pgate_IO2_rf_sdc psdrfd(DRN) pgate_IO2_rf_sdc(GATE) psd(SRC) nwell(BULK) <pgate_IO2_rf_aux> <psdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(pgate_IO2_rf_aux)
        WR = PERIM_CO(pgate_IO2_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_rf_aux)/(WR*NF)]

DEVICE p25ll_ckt_rf_5t_sdc pgate_IO2_rf_5t_sdc psdrfd(DRN) pgate_IO2_rf_5t_sdc_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_IO2_rf_aux> <psdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(pgate_IO2_rf_aux)
        WR = PERIM_CO(pgate_IO2_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_rf_aux)/(WR*NF)]

DEVICE p25llod33_ckt_rf pgate_IO2_over_rf psdrfd(DRN) pgate_IO2_over_rf(GATE) psd(SRC) nwell(BULK) <pgate_IO2_over_rf_aux> <psdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(pgate_IO2_over_rf_aux)
        WR = PERIM_CO(pgate_IO2_over_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_over_rf_aux)/(WR*NF)]

DEVICE p25llod33_ckt_rf_5t pgate_IO2_over_rf_5t psdrfd(DRN) pgate_IO2_over_rf_5t_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_IO2_over_rf_aux> <psdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(pgate_IO2_over_rf_aux)
        WR = PERIM_CO(pgate_IO2_over_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_over_rf_aux)/(WR*NF)]

DEVICE p25llud18_ckt_rf pgate_IO2_under_rf psdrfd(DRN) pgate_IO2_under_rf(GATE) psd(SRC) nwell(BULK) <pgate_IO2_under_rf_aux> <psdrf>
       [PROPERTY LR,WR,NF
       NF = COUNT (pgate_IO2_under_rf_aux)
       WR = PERIM_CO(pgate_IO2_under_rf_aux,psdrf)/(2*NF)
       LR = AREA(pgate_IO2_under_rf_aux)/(WR*NF)]

DEVICE p25llud18_ckt_rf_mis pgate_IO2_under_rf_mis psdrfd(DRN) pgate_IO2_under_rf_mis(GATE) psd(SRC) nwell(BULK) <pgate_IO2_under_rf_aux> <psdrf>
       [PROPERTY LR,WR,NF
       NF = COUNT (pgate_IO2_under_rf_aux)
       WR = PERIM_CO(pgate_IO2_under_rf_aux,psdrf)/(2*NF)
       LR = AREA(pgate_IO2_under_rf_aux)/(WR*NF)]

DEVICE p25llud18_ckt_rf_5t pgate_IO2_under_rf_5t psdrfd(DRN) pgate_IO2_under_rf_5t_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_IO2_under_rf_aux> <psdrf>
       [PROPERTY LR,WR,NF
       NF = COUNT (pgate_IO2_under_rf_aux)
       WR = PERIM_CO(pgate_IO2_under_rf_aux,psdrf)/(2*NF)
       LR = AREA(pgate_IO2_under_rf_aux)/(WR*NF)]

DEVICE p25llud18_ckt_rf_5t_mis pgate_IO2_under_rf_5t_mis psdrfd(DRN) pgate_IO2_under_rf_5t_mis_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_IO2_under_rf_aux> <psdrf>
       [PROPERTY LR,WR,NF
       NF = COUNT (pgate_IO2_under_rf_aux)
       WR = PERIM_CO(pgate_IO2_under_rf_aux,psdrf)/(2*NF)
       LR = AREA(pgate_IO2_under_rf_aux)/(WR*NF)]

DEVICE dnw25ll_ckt_rf dnw_IO2_rf nsdrfd(DRN) dnw_IO2_rf(GATE) nsd(SRC) rwell(BULK) <dnw_IO2_rf_aux> <nsdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(dnw_IO2_rf_aux)
        WR = PERIM_CO(dnw_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_rf_aux)/(WR*NF)]

DEVICE dnw25ll_ckt_rf_6t dnw_IO2_rf_6t nsdrfd(DRN) dnw_IO2_rf_6t_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <dnw_IO2_rf_aux> <nsdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(dnw_IO2_rf_aux)
        WR = PERIM_CO(dnw_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_rf_aux)/(WR*NF)]

DEVICE dnw25ll_ckt_rf_sdc dnw_IO2_rf_sdc nsdrfd(DRN) dnw_IO2_rf_sdc(GATE) nsd(SRC) rwell(BULK) <dnw_IO2_rf_aux> <nsdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(dnw_IO2_rf_aux)
        WR = PERIM_CO(dnw_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_rf_aux)/(WR*NF)]

DEVICE dnw25ll_ckt_rf_6t_sdc dnw_IO2_rf_6t_sdc nsdrfd(DRN) dnw_IO2_rf_6t_sdc_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <dnw_IO2_rf_aux> <nsdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(dnw_IO2_rf_aux)
        WR = PERIM_CO(dnw_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_rf_aux)/(WR*NF)]

DEVICE dnw25llod33_ckt_rf dnw_IO2_over_rf nsdrfd(DRN) dnw_IO2_over_rf(GATE) nsd(SRC) rwell(BULK) <dnw_IO2_over_rf_aux> <nsdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(dnw_IO2_over_rf_aux)
        WR = PERIM_CO(dnw_IO2_over_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_over_rf_aux)/(WR*NF)]

DEVICE dnw25llod33_ckt_rf_6t dnw_IO2_over_rf_6t nsdrfd(DRN) dnw_IO2_over_rf_6t_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <dnw_IO2_over_rf_aux> <nsdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(dnw_IO2_over_rf_aux)
        WR = PERIM_CO(dnw_IO2_over_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_over_rf_aux)/(WR*NF)]

DEVICE dnw25llud18_ckt_rf dnw_IO2_under_rf nsdrfd(DRN) dnw_IO2_under_rf(GATE) nsd(SRC) rwell(BULK) <dnw_IO2_under_rf_aux> <nsdrf>
       [PROPERTY LR,WR,NF
       NF = COUNT(dnw_IO2_under_rf_aux)
       WR = PERIM_CO(dnw_IO2_under_rf_aux, nsdrf)/(2*NF)
       LR = AREA(dnw_IO2_under_rf_aux)/(WR*NF)]

DEVICE dnw25llud18_ckt_rf_mis dnw_IO2_under_rf_mis nsdrfd(DRN) dnw_IO2_under_rf_mis(GATE) nsd(SRC) rwell(BULK) <dnw_IO2_under_rf_aux> <nsdrf>
       [PROPERTY LR, WR, NF
       NF = COUNT(dnw_IO2_under_rf_aux)
       WR = PERIM_CO(dnw_IO2_under_rf_aux,nsdrf)/(2*NF)
       LR = AREA(dnw_IO2_under_rf_aux)/(WR*NF)]

DEVICE dnw25llud18_ckt_rf_6t dnw_IO2_under_rf_6t nsdrfd(DRN) dnw_IO2_under_rf_6t_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <dnw_IO2_under_rf_aux> <nsdrf>
       [PROPERTY LR,WR,NF
       NF = COUNT(dnw_IO2_under_rf_aux)
       WR = PERIM_CO(dnw_IO2_under_rf_aux,nsdrf)/(2*NF)
       LR = AREA(dnw_IO2_under_rf_aux)/(WR*NF)]

DEVICE dnw25llud18_ckt_rf_6t_mis dnw_IO2_under_rf_6t_mis nsdrfd(DRN) dnw_IO2_under_rf_6t_mis_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <dnw_IO2_under_rf_aux> <nsdrf>
       [PROPERTY LR,WR,NF
       NF = COUNT(dnw_IO2_under_rf_aux)
       WR = PERIM_CO(dnw_IO2_under_rf_aux,nsdrf)/(2*NF)
       LR = AREA(dnw_IO2_under_rf_aux)/(WR*NF)]

#ENDIF

DEVICE n12ll_ckt_rf_mis ngate_core_rf_mis nsdrfd(DRN) ngate_core_rf_mis(GATE) nsd(SRC) pwell(BULK) <ngate_core_rf_aux> <nsdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(ngate_core_rf_aux)
        WR = PERIM_CO(ngate_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_core_rf_aux)/(WR*NF)]

DEVICE n12ll_ckt_rf_sdc_mis ngate_core_rf_sdc_mis nsdrfd(DRN) ngate_core_rf_sdc_mis(GATE) nsd(SRC) pwell(BULK) <ngate_core_rf_aux> <nsdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(ngate_core_rf_aux)
        WR = PERIM_CO(ngate_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_core_rf_aux)/(WR*NF)]

DEVICE nlvt12ll_ckt_rf_mis ngate_core_lvt_rf_mis nsdrfd(DRN) ngate_core_lvt_rf_mis(GATE) nsd(SRC) pwell(BULK) <ngate_core_lvt_rf_aux> <nsdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(ngate_core_lvt_rf_aux)
        WR = PERIM_CO(ngate_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_core_lvt_rf_aux)/(WR*NF)]

DEVICE nlvt12ll_ckt_rf_sdc_mis ngate_core_lvt_rf_sdc_mis nsdrfd(DRN) ngate_core_lvt_rf_sdc_mis(GATE) nsd(SRC) pwell(BULK) <ngate_core_lvt_rf_aux> <nsdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(ngate_core_lvt_rf_aux)
        WR = PERIM_CO(ngate_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_core_lvt_rf_aux)/(WR*NF)]

DEVICE p12ll_ckt_rf_mis pgate_core_rf_mis psdrfd(DRN) pgate_core_rf_mis(GATE) psd(SRC) nwell(BULK) <pgate_core_rf_aux> <psdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(pgate_core_rf_aux)
        WR = PERIM_CO(pgate_core_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_rf_aux)/(WR*NF)]

DEVICE p12ll_ckt_rf_5t_mis pgate_core_rf_5t_mis psdrfd(DRN) pgate_core_rf_5t_mis_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_core_rf_aux> <psdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(pgate_core_rf_aux)
        WR = PERIM_CO(pgate_core_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_rf_aux)/(WR*NF)]

DEVICE p12ll_ckt_rf_sdc_mis pgate_core_rf_sdc_mis psdrfd(DRN) pgate_core_rf_sdc_mis(GATE) psd(SRC) nwell(BULK) <pgate_core_rf_aux> <psdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(pgate_core_rf_aux)
        WR = PERIM_CO(pgate_core_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_rf_aux)/(WR*NF)]

DEVICE p12ll_ckt_rf_5t_sdc_mis pgate_core_rf_5t_sdc_mis psdrfd(DRN) pgate_core_rf_5t_sdc_mis_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_core_rf_aux> <psdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(pgate_core_rf_aux)
        WR = PERIM_CO(pgate_core_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_rf_aux)/(WR*NF)]

DEVICE plvt12ll_ckt_rf_mis pgate_core_lvt_rf_mis psdrfd(DRN) pgate_core_lvt_rf_mis(GATE) psd(SRC) nwell(BULK) <pgate_core_lvt_rf_aux> <psdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(pgate_core_lvt_rf_aux)
        WR = PERIM_CO(pgate_core_lvt_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_lvt_rf_aux)/(WR*NF)]

DEVICE plvt12ll_ckt_rf_5t_mis pgate_core_lvt_rf_5t_mis psdrfd(DRN) pgate_core_lvt_rf_5t_mis_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_core_lvt_rf_aux> <psdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(pgate_core_lvt_rf_aux)
        WR = PERIM_CO(pgate_core_lvt_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_lvt_rf_aux)/(WR*NF)]

DEVICE plvt12ll_ckt_rf_sdc_mis pgate_core_lvt_rf_sdc_mis psdrfd(DRN) pgate_core_lvt_rf_sdc_mis(GATE) psd(SRC) nwell(BULK) <pgate_core_lvt_rf_aux> <psdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(pgate_core_lvt_rf_aux)
        WR = PERIM_CO(pgate_core_lvt_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_lvt_rf_aux)/(WR*NF)]

DEVICE plvt12ll_ckt_rf_5t_sdc_mis pgate_core_lvt_rf_5t_sdc_mis psdrfd(DRN) pgate_core_lvt_rf_5t_sdc_mis_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_core_lvt_rf_aux> <psdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(pgate_core_lvt_rf_aux)
        WR = PERIM_CO(pgate_core_lvt_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_lvt_rf_aux)/(WR*NF)]

DEVICE dnw12ll_ckt_rf_mis dnw_core_rf_mis nsdrfd(DRN) dnw_core_rf_mis(GATE) nsd(SRC) rwell(BULK) <nsdrf> <dnw_core_rf_aux>
        [ PROPERTY LR,WR,NF
        NF = COUNT(dnw_core_rf_aux)
        WR = PERIM_CO(dnw_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_rf_aux)/(WR*NF)]

DEVICE dnw12ll_ckt_rf_6t_mis dnw_core_rf_6t_mis nsdrfd(DRN) dnw_core_rf_6t_mis_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <nsdrf> <dnw_core_rf_aux>
        [ PROPERTY LR,WR,NF
        NF = COUNT(dnw_core_rf_aux)
        WR = PERIM_CO(dnw_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_rf_aux)/(WR*NF)]

DEVICE dnw12ll_ckt_rf_sdc_mis dnw_core_rf_sdc_mis nsdrfd(DRN) dnw_core_rf_sdc_mis(GATE) nsd(SRC) rwell(BULK) <nsdrf> <dnw_core_rf_aux>
        [ PROPERTY LR,WR,NF
        NF = COUNT(dnw_core_rf_aux)
        WR = PERIM_CO(dnw_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_rf_aux)/(WR*NF)]

DEVICE dnw12ll_ckt_rf_6t_sdc_mis dnw_core_rf_6t_sdc_mis nsdrfd(DRN) dnw_core_rf_6t_sdc_mis_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <nsdrf> <dnw_core_rf_aux>
        [ PROPERTY LR,WR,NF
        NF = COUNT(dnw_core_rf_aux)
        WR = PERIM_CO(dnw_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_rf_aux)/(WR*NF)]

DEVICE dnwlvt12ll_ckt_rf_mis dnw_core_lvt_rf_mis nsdrfd(DRN) dnw_core_lvt_rf_mis(GATE) nsd(SRC) rwell(BULK) <nsdrf> <dnw_core_lvt_rf_aux>
        [ PROPERTY LR,WR,NF
        NF = COUNT(dnw_core_lvt_rf_aux)
        WR = PERIM_CO(dnw_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_lvt_rf_aux)/(WR*NF)]

DEVICE dnwlvt12ll_ckt_rf_6t_mis dnw_core_lvt_rf_6t_mis nsdrfd(DRN) dnw_core_lvt_rf_6t_mis_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <nsdrf> <dnw_core_lvt_rf_aux>
        [ PROPERTY LR,WR,NF
        NF = COUNT(dnw_core_lvt_rf_aux)
        WR = PERIM_CO(dnw_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_lvt_rf_aux)/(WR*NF)]

DEVICE dnwlvt12ll_ckt_rf_sdc_mis dnw_core_lvt_rf_sdc_mis nsdrfd(DRN) dnw_core_lvt_rf_sdc_mis(GATE) nsd(SRC) rwell(BULK) <nsdrf> <dnw_core_lvt_rf_aux>
        [ PROPERTY LR,WR,NF
        NF = COUNT(dnw_core_lvt_rf_aux)
        WR = PERIM_CO(dnw_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_lvt_rf_aux)/(WR*NF)]

DEVICE dnwlvt12ll_ckt_rf_6t_sdc_mis dnw_core_lvt_rf_6t_sdc_mis nsdrfd(DRN) dnw_core_lvt_rf_6t_sdc_mis_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <nsdrf> <dnw_core_lvt_rf_aux>
        [ PROPERTY LR,WR,NF
        NF = COUNT(dnw_core_lvt_rf_aux)
        WR = PERIM_CO(dnw_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_lvt_rf_aux)/(WR*NF)]

#IFDEF IO 1825  
DEVICE n25ll_ckt_rf_mis ngate_IO2_rf_mis nsdrfd(DRN) ngate_IO2_rf_mis(GATE) nsd(SRC) pwell(BULK) <ngate_IO2_rf_aux> <nsdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(ngate_IO2_rf_aux)
        WR = PERIM_CO(ngate_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_IO2_rf_aux)/(WR*NF)]

DEVICE n25ll_ckt_rf_sdc_mis ngate_IO2_rf_sdc_mis nsdrfd(DRN) ngate_IO2_rf_sdc_mis(GATE) nsd(SRC) pwell(BULK) <ngate_IO2_rf_aux> <nsdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(ngate_IO2_rf_aux)
        WR = PERIM_CO(ngate_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_IO2_rf_aux)/(WR*NF)]

DEVICE n25llod33_ckt_rf_mis ngate_IO2_over_rf_mis nsdrfd(DRN) ngate_IO2_over_rf_mis(GATE) nsd(SRC) pwell(BULK) <ngate_IO2_over_rf_aux> <nsdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(ngate_IO2_over_rf_aux)
        WR = PERIM_CO(ngate_IO2_over_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_IO2_over_rf_aux)/(WR*NF)]

DEVICE p25ll_ckt_rf_mis pgate_IO2_rf_mis psdrfd(DRN) pgate_IO2_rf_mis(GATE) psd(SRC) nwell(BULK) <pgate_IO2_rf_aux> <psdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(pgate_IO2_rf_aux)
        WR = PERIM_CO(pgate_IO2_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_rf_aux)/(WR*NF)]

DEVICE p25ll_ckt_rf_5t_mis pgate_IO2_rf_5t_mis psdrfd(DRN) pgate_IO2_rf_5t_mis_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_IO2_rf_aux> <psdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(pgate_IO2_rf_aux)
        WR = PERIM_CO(pgate_IO2_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_rf_aux)/(WR*NF)]

DEVICE p25ll_ckt_rf_sdc_mis pgate_IO2_rf_sdc_mis psdrfd(DRN) pgate_IO2_rf_sdc_mis(GATE) psd(SRC) nwell(BULK) <pgate_IO2_rf_aux> <psdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(pgate_IO2_rf_aux)
        WR = PERIM_CO(pgate_IO2_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_rf_aux)/(WR*NF)]

DEVICE p25ll_ckt_rf_5t_sdc_mis pgate_IO2_rf_5t_sdc_mis psdrfd(DRN) pgate_IO2_rf_5t_sdc_mis_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_IO2_rf_aux> <psdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(pgate_IO2_rf_aux)
        WR = PERIM_CO(pgate_IO2_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_rf_aux)/(WR*NF)]

DEVICE p25llod33_ckt_rf_mis pgate_IO2_over_rf_mis psdrfd(DRN) pgate_IO2_over_rf_mis(GATE) psd(SRC) nwell(BULK) <pgate_IO2_over_rf_aux> <psdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(pgate_IO2_over_rf_aux)
        WR = PERIM_CO(pgate_IO2_over_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_over_rf_aux)/(WR*NF)]

DEVICE p25llod33_ckt_rf_5t_mis pgate_IO2_over_rf_5t_mis psdrfd(DRN) pgate_IO2_over_rf_5t_mis_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_IO2_over_rf_aux> <psdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(pgate_IO2_over_rf_aux)
        WR = PERIM_CO(pgate_IO2_over_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_over_rf_aux)/(WR*NF)]

DEVICE dnw25ll_ckt_rf_mis dnw_IO2_rf_mis nsdrfd(DRN) dnw_IO2_rf_mis(GATE) nsd(SRC) rwell(BULK) <dnw_IO2_rf_aux> <nsdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(dnw_IO2_rf_aux)
        WR = PERIM_CO(dnw_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_rf_aux)/(WR*NF) ]

DEVICE dnw25ll_ckt_rf_6t_mis dnw_IO2_rf_6t_mis nsdrfd(DRN) dnw_IO2_rf_6t_mis_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <dnw_IO2_rf_aux> <nsdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(dnw_IO2_rf_aux)
        WR = PERIM_CO(dnw_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_rf_aux)/(WR*NF) ]

DEVICE dnw25ll_ckt_rf_sdc_mis dnw_IO2_rf_sdc_mis nsdrfd(DRN) dnw_IO2_rf_sdc_mis(GATE) nsd(SRC) rwell(BULK) <dnw_IO2_rf_aux> <nsdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(dnw_IO2_rf_aux)
        WR = PERIM_CO(dnw_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_rf_aux)/(WR*NF)]

DEVICE dnw25ll_ckt_rf_6t_sdc_mis dnw_IO2_rf_6t_sdc_mis nsdrfd(DRN) dnw_IO2_rf_6t_sdc_mis_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <dnw_IO2_rf_aux> <nsdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(dnw_IO2_rf_aux)
        WR = PERIM_CO(dnw_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_rf_aux)/(WR*NF)]

DEVICE dnw25llod33_ckt_rf_mis dnw_IO2_over_rf_mis nsdrfd(DRN) dnw_IO2_over_rf_mis(GATE) nsd(SRC) rwell(BULK) <dnw_IO2_over_rf_aux> <nsdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(dnw_IO2_over_rf_aux)
        WR = PERIM_CO(dnw_IO2_over_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_over_rf_aux)/(WR*NF)]

DEVICE dnw25llod33_ckt_rf_6t_mis dnw_IO2_over_rf_6t_mis nsdrfd(DRN) dnw_IO2_over_rf_6t_mis_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <dnw_IO2_over_rf_aux> <nsdrf>
        [ PROPERTY LR,WR,NF
        NF = COUNT(dnw_IO2_over_rf_aux)
        WR = PERIM_CO(dnw_IO2_over_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_over_rf_aux)/(WR*NF)]
#ENDIF
#ENDIF
//////////////////////////////Define BITCELL /////////////////////
#IFDEF RC_RUN FALSE
#IFDEF SRAM DEV
//Define 0.525 bitcell devices
DEVICE M(STNPDSVT) npdsp_0.525_svt npdsp_0.525_svt(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO npdsp_0.525_svt nsd
DEVICE M(STNPGSVT) npgsp_0.525_svt npgsp_0.525_svt(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO npgsp_0.525_svt nsd
DEVICE M(STPLSVT) plsp_0.525_svt plsp_0.525_svt(G) psd(S) psd(D) nwell(B) CMACRO MOS_PRO plsp_0.525_svt psd
DEVICE M(STNPDHVT) npdsp_0.525_hvt npdsp_0.525_hvt(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO npdsp_0.525_hvt nsd
DEVICE M(STNPGHVT) npgsp_0.525_hvt npgsp_0.525_hvt(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO npgsp_0.525_hvt nsd
DEVICE M(STPLHVT) plsp_0.525_hvt plsp_0.525_hvt(G) psd(S) psd(D) nwell(B) CMACRO MOS_PRO plsp_0.525_hvt psd

//Define 0.62 bitcell
DEVICE MD(DNNPDSVT) npdsp_0.62_svt npdsp_0.62_svt(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO npdsp_0.62_svt nsd
DEVICE MD(DNNPGSVT) npgsp_0.62_svt npgsp_0.62_svt(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO npgsp_0.62_svt nsd
DEVICE MD(DNPLSVT) plsp_0.62_svt plsp_0.62_svt(G) psd(S) psd(D) nwell(B) CMACRO MOS_PRO plsp_0.62_svt psd
DEVICE MD(DNNPDHVT) npdsp_0.62_hvt npdsp_0.62_hvt(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO npdsp_0.62_hvt nsd
DEVICE MD(DNNPGHVT) npgsp_0.62_hvt npgsp_0.62_hvt(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO npgsp_0.62_hvt nsd
DEVICE MD(DNPLHVT) plsp_0.62_hvt plsp_0.62_hvt(G) psd(S) psd(D) nwell(B) CMACRO MOS_PRO plsp_0.62_hvt psd
/*
DEVICE MD(DNNPDULL) npdsp_0.62_ull npdsp_0.62_ull(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO npdsp_0.62_ull nsd NETLIST ELEMENT X
DEVICE MD(DNNPGULL) npgsp_0.62_ull npgsp_0.62_ull(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO npgsp_0.62_ull nsd NETLIST ELEMENT X
DEVICE MD(DNPLULL) plsp_0.62_ull plsp_0.62_ull(G) psd(S) psd(D) nwell(B) CMACRO MOS_PRO plsp_0.62_ull psd NETLIST ELEMENT X
*/
//Define 0.974 bitcell
DEVICE MD(DPNPDSVT) npddp_0.974_svt npddp_0.974_svt(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO npddp_0.974_svt nsd
DEVICE MD(DPNPGASVT) npgadp_0.974_svt npgadp_0.974_svt(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO npgadp_0.974_svt nsd
DEVICE MD(DPNPGBSVT) npgbdp_0.974_svt npgbdp_0.974_svt(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO npgbdp_0.974_svt nsd
DEVICE MD(DPPLSVT) pldp_0.974_svt pldp_0.974_svt(G) psd(S) psd(D) nwell(B) CMACRO MOS_PRO pldp_0.974_svt psd
DEVICE MD(DPNPDHVT) npddp_0.974_hvt npddp_0.974_hvt(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO npddp_0.974_hvt nsd
DEVICE MD(DPNPGAHVT) npgadp_0.974_hvt npgadp_0.974_hvt(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO npgadp_0.974_hvt nsd
DEVICE MD(DPNPGBHVT) npgbdp_0.974_hvt npgbdp_0.974_hvt(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO npgbdp_0.974_hvt nsd
DEVICE MD(DPPLHVT) pldp_0.974_hvt pldp_0.974_hvt(G) psd(S) psd(D) nwell(B) CMACRO MOS_PRO pldp_0.974_hvt psd
/*
DEVICE MD(DPNPDULL) npddp_0.974_ull npddp_0.974_ull(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO npddp_0.974_ull nsd NETLIST ELEMENT X
DEVICE MD(DPNPGAULL) npgadp_0.974_ull npgadp_0.974_ull(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO npgadp_0.974_ull nsd NETLIST ELEMENT X
DEVICE MD(DPNPGBULL) npgbdp_0.974_ull npgbdp_0.974_ull(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO npgbdp_0.974_ull nsd NETLIST ELEMENT X
DEVICE MD(DPPLULL) pldp_0.974_ull pldp_0.974_ull(G) psd(S) psd(D) nwell(B) CMACRO MOS_PRO pldp_0.974_ull psd NETLIST ELEMENT X
*/

//Define 1.158 bitcell
/*
DEVICE M(RFNPDSVT) npddp_1.158_svt npddp_1.158_svt(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO npddp_1.158_svt nsd
DEVICE M(RFNPGASVT) npgadp_1.158_svt npgadp_1.158_svt(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO npgadp_1.158_svt nsd
DEVICE M(RFNPGBSVT) npgbdp_1.158_svt npgbdp_1.158_svt(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO npgbdp_1.158_svt nsd
DEVICE M(RFPLSVT) pldp_1.158_svt pldp_1.158_svt(G) psd(S) psd(D) nwell(B) CMACRO MOS_PRO pldp_1.158_svt psd
*/
DEVICE M(RFNPDHVT) npddp_1.158_hvt npddp_1.158_hvt(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO npddp_1.158_hvt nsd
DEVICE M(RFNPGAHVT) npgadp_1.158_hvt npgadp_1.158_hvt(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO npgadp_1.158_hvt nsd
DEVICE M(RFNPGBHVT) npgbdp_1.158_hvt npgbdp_1.158_hvt(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO npgbdp_1.158_hvt nsd
DEVICE M(RFPLHVT) pldp_1.158_hvt pldp_1.158_hvt(G) psd(S) psd(D) nwell(B) CMACRO MOS_PRO pldp_1.158_hvt psd

/*Define 0.499 bitcell
DEVICE M(UDNPDHVT) npdsp_0.499_hvt npdsp_0.499_hvt(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO npdsp_0.499_hvt nsd
DEVICE M(UDNPGHVT) npgsp_0.499_hvt npgsp_0.499_hvt(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO npgsp_0.499_hvt nsd
DEVICE M(UDPLHVT) plsp_0.499_hvt plsp_0.499_hvt(G) psd(S) psd(D) nwell(B) CMACRO MOS_PRO plsp_0.499_hvt psd
DEVICE M(UDNPDSVT) npdsp_0.499_svt npdsp_0.499_svt(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO npdsp_0.499_svt nsd
DEVICE M(UDNPGSVT) npgsp_0.499_svt npgsp_0.499_svt(G) nsd(S) nsd(D) pwell(B) CMACRO MOS_PRO npgsp_0.499_svt nsd
DEVICE M(UDPLSVT) plsp_0.499_svt plsp_0.499_svt(G) psd(S) psd(D) nwell(B) CMACRO MOS_PRO plsp_0.499_svt psd
*/
#ENDIF

#IFDEF SRAM SUBCKT
//Define 0.525 bitcell devices
DEVICE NPDSVT_ckt npdsp_0.525_svt nsd(D) npdsp_0.525_svt(G) nsd(S) pwell(B) CMACRO MOS_PRO npdsp_0.525_svt nsd
CMACRO MOS_REDUCE NPDSVT_ckt 
DEVICE NPGSVT_ckt npgsp_0.525_svt nsd(D) npgsp_0.525_svt(G) nsd(S) pwell(B) CMACRO MOS_PRO npgsp_0.525_svt nsd
CMACRO MOS_REDUCE NPGSVT_ckt 
DEVICE PLSVT_ckt plsp_0.525_svt psd(D) plsp_0.525_svt(G) psd(S) nwell(B) CMACRO MOS_PRO plsp_0.525_svt psd
CMACRO MOS_REDUCE PLSVT_ckt 
DEVICE STNPDHVT_ckt npdsp_0.525_hvt nsd(D) npdsp_0.525_hvt(G) nsd(S) pwell(B) CMACRO MOS_PRO npdsp_0.525_hvt nsd
CMACRO MOS_REDUCE STNPDHVT_ckt
DEVICE STNPGHVT_ckt npgsp_0.525_hvt nsd(D) npgsp_0.525_hvt(G) nsd(S) pwell(B) CMACRO MOS_PRO npgsp_0.525_hvt nsd
CMACRO MOS_REDUCE STNPGHVT_ckt
DEVICE STPLHVT_ckt plsp_0.525_hvt psd(D) plsp_0.525_hvt(G) psd(S) nwell(B) CMACRO MOS_PRO plsp_0.525_hvt psd
CMACRO MOS_REDUCE STPLHVT_ckt

//Define 0.62 bitcell
DEVICE DNNPDSVT_ckt npdsp_0.62_svt nsd(D) npdsp_0.62_svt(G) nsd(S) pwell(B) CMACRO MOS_PRO npdsp_0.62_svt nsd
CMACRO MOS_REDUCE DNNPDSVT_ckt
DEVICE DNNPGSVT_ckt npgsp_0.62_svt nsd(D) npgsp_0.62_svt(G) nsd(S) pwell(B) CMACRO MOS_PRO npgsp_0.62_svt nsd
CMACRO MOS_REDUCE DNNPGSVT_ckt
DEVICE DNPLSVT_ckt plsp_0.62_svt psd(D) plsp_0.62_svt(G) psd(S) nwell(B) CMACRO MOS_PRO plsp_0.62_svt psd
CMACRO MOS_REDUCE DNPLSVT_ckt
DEVICE DNNPDHVT_ckt npdsp_0.62_hvt nsd(D) npdsp_0.62_hvt(G) nsd(S) pwell(B) CMACRO MOS_PRO npdsp_0.62_hvt nsd
CMACRO MOS_REDUCE DNNPDHVT_ckt
DEVICE DNNPGHVT_ckt npgsp_0.62_hvt nsd(D) npgsp_0.62_hvt(G) nsd(S) pwell(B) CMACRO MOS_PRO npgsp_0.62_hvt nsd
CMACRO MOS_REDUCE DNNPGHVT_ckt
DEVICE DNPLHVT_ckt plsp_0.62_hvt psd(D) plsp_0.62_hvt(G) psd(S) nwell(B) CMACRO MOS_PRO plsp_0.62_hvt psd
CMACRO MOS_REDUCE DNPLHVT_ckt

DEVICE DNNPDULL_ckt npdsp_0.62_ull nsd(D) npdsp_0.62_ull(G) nsd(S) pwell(B) CMACRO MOS_PRO npdsp_0.62_ull nsd
CMACRO MOS_REDUCE DNNPDULL_ckt
DEVICE DNNPGULL_ckt npgsp_0.62_ull nsd(D) npgsp_0.62_ull(G) nsd(S) pwell(B) CMACRO MOS_PRO npgsp_0.62_ull nsd
CMACRO MOS_REDUCE DNNPGULL_ckt
DEVICE DNPLULL_ckt plsp_0.62_ull psd(D) plsp_0.62_ull(G) psd(S) nwell(B) CMACRO MOS_PRO plsp_0.62_ull psd
CMACRO MOS_REDUCE DNPLULL_ckt

//Define 0.974 bitcell
DEVICE NPDDPSVT_ckt npddp_0.974_svt nsd(D) npddp_0.974_svt(G) nsd(S) pwell(B) CMACRO MOS_PRO npddp_0.974_svt nsd
CMACRO MOS_REDUCE NPDDPSVT_ckt
DEVICE NPGADPSVT_ckt npgadp_0.974_svt nsd(D) npgadp_0.974_svt(G) nsd(S) pwell(B) CMACRO MOS_PRO npgadp_0.974_svt nsd
CMACRO MOS_REDUCE NPGADPSVT_ckt
DEVICE NPGBDPSVT_ckt npgbdp_0.974_svt nsd(D) npgbdp_0.974_svt(G) nsd(S) pwell(B) CMACRO MOS_PRO npgbdp_0.974_svt nsd
CMACRO MOS_REDUCE NPGBDPSVT_ckt
DEVICE PLDPSVT_ckt pldp_0.974_svt psd(D) pldp_0.974_svt(G) psd(S) nwell(B) CMACRO MOS_PRO pldp_0.974_svt psd
CMACRO MOS_REDUCE PLDPSVT_ckt
DEVICE DPNPDHVT_ckt npddp_0.974_hvt nsd(D) npddp_0.974_hvt(G) nsd(S) pwell(B) CMACRO MOS_PRO npddp_0.974_hvt nsd
CMACRO MOS_REDUCE DPNPDHVT_ckt
DEVICE DPNPGAHVT_ckt npgadp_0.974_hvt nsd(D) npgadp_0.974_hvt(G) nsd(S) pwell(B) CMACRO MOS_PRO npgadp_0.974_hvt nsd
CMACRO MOS_REDUCE DPNPGAHVT_ckt
DEVICE DPNPGBHVT_ckt npgbdp_0.974_hvt nsd(D) npgbdp_0.974_hvt(G) nsd(S) pwell(B) CMACRO MOS_PRO npgbdp_0.974_hvt nsd
CMACRO MOS_REDUCE DPNPGBHVT_ckt
DEVICE DPPLHVT_ckt pldp_0.974_hvt psd(D) pldp_0.974_hvt(G) psd(S) nwell(B) CMACRO MOS_PRO pldp_0.974_hvt psd
CMACRO MOS_REDUCE DPPLHVT_ckt

DEVICE DPNPDULL_ckt npddp_0.974_ull nsd(D) npddp_0.974_ull(G) nsd(S) pwell(B) CMACRO MOS_PRO npddp_0.974_ull nsd
CMACRO MOS_REDUCE DPNPDULL_ckt
DEVICE DPNPGAULL_ckt npgadp_0.974_ull nsd(D) npgadp_0.974_ull(G) nsd(S) pwell(B) CMACRO MOS_PRO npgadp_0.974_ull nsd
CMACRO MOS_REDUCE DPNPGAULL_ckt
DEVICE DPNPGBULL_ckt npgbdp_0.974_ull nsd(D) npgbdp_0.974_ull(G) nsd(S) pwell(B) CMACRO MOS_PRO npgbdp_0.974_ull nsd
CMACRO MOS_REDUCE DPNPGBULL_ckt
DEVICE DPPLULL_ckt pldp_0.974_ull psd(D) pldp_0.974_ull(G) psd(S) nwell(B) CMACRO MOS_PRO pldp_0.974_ull psd
CMACRO MOS_REDUCE DPPLULL_ckt


/*Define 1.158 bitcell
DEVICE RFNPDSVT_ckt npddp_1.158_svt nsd(D) npddp_1.158_svt(G) nsd(S) pwell(B) CMACRO MOS_PRO npddp_1.158_svt nsd
CMACRO MOS_REDUCE RFNPDSVT_ckt
DEVICE RFNPGASVT_ckt npgadp_1.158_svt nsd(D) npgadp_1.158_svt(G) nsd(S) pwell(B) CMACRO MOS_PRO npgadp_1.158_svt nsd
CMACRO MOS_REDUCE RFNPGASVT_ckt
DEVICE RFNPGBSVT_ckt npgbdp_1.158_svt nsd(D) npgbdp_1.158_svt(G) nsd(S) pwell(B) CMACRO MOS_PRO npgbdp_1.158_svt nsd
CMACRO MOS_REDUCE RFNPGBSVT_ckt
DEVICE RFPLSVT_ckt pldp_1.158_svt psd(D) pldp_1.158_svt(G) psd(S) nwell(B) CMACRO MOS_PRO pldp_1.158_svt psd
CMACRO MOS_REDUCE RFPLSVT_ckt
*/
DEVICE RFNPDHVT_ckt npddp_1.158_hvt nsd(D) npddp_1.158_hvt(G) nsd(S) pwell(B) CMACRO MOS_PRO npddp_1.158_hvt nsd
CMACRO MOS_REDUCE RFNPDHVT_ckt
DEVICE RFNPGAHVT_ckt npgadp_1.158_hvt nsd(D) npgadp_1.158_hvt(G) nsd(S) pwell(B) CMACRO MOS_PRO npgadp_1.158_hvt nsd
CMACRO MOS_REDUCE RFNPGAHVT_ckt
DEVICE RFNPGBHVT_ckt npgbdp_1.158_hvt nsd(D) npgbdp_1.158_hvt(G) nsd(S) pwell(B) CMACRO MOS_PRO npgbdp_1.158_hvt nsd
CMACRO MOS_REDUCE RFNPGBHVT_ckt
DEVICE RFPLHVT_ckt pldp_1.158_hvt psd(D) pldp_1.158_hvt(G) psd(S) nwell(B) CMACRO MOS_PRO pldp_1.158_hvt psd
CMACRO MOS_REDUCE RFPLHVT_ckt

/*Define 0.499 bitcell
DEVICE UDNPDHVT_ckt npdsp_0.499_hvt nsd(D) npdsp_0.499_hvt(G) nsd(S) pwell(B) CMACRO MOS_PRO npdsp_0.499_hvt nsd
CMACRO MOS_REDUCE UDNPDHVT_ckt
DEVICE UDNPGHVT_ckt npgsp_0.499_hvt nsd(D) npgsp_0.499_hvt(G) nsd(S) pwell(B) CMACRO MOS_PRO npgsp_0.499_hvt nsd
CMACRO MOS_REDUCE UDNPGHVT_ckt
DEVICE UDPLHVT_ckt plsp_0.499_hvt psd(D) plsp_0.499_hvt(G) psd(S) nwell(B) CMACRO MOS_PRO plsp_0.499_hvt psd
CMACRO MOS_REDUCE UDPLHVT_ckt
DEVICE UDNPDSVT_ckt npdsp_0.499_svt nsd(D) npdsp_0.499_svt(G) nsd(S) pwell(B) CMACRO MOS_PRO npdsp_0.499_svt nsd
CMACRO MOS_REDUCE UDNPDSVT_ckt
DEVICE UDNPGSVT_ckt npgsp_0.499_svt nsd(D) npgsp_0.499_svt(G) nsd(S) pwell(B) CMACRO MOS_PRO npgsp_0.499_svt nsd
CMACRO MOS_REDUCE UDNPGSVT_ckt
DEVICE UDPLSVT_ckt plsp_0.499_svt psd(D) plsp_0.499_svt(G) psd(S) nwell(B) CMACRO MOS_PRO plsp_0.499_svt psd
CMACRO MOS_REDUCE UDPLSVT_ckt*/
#ENDIF
#ENDIF

/////////////////////////////Define C1 C2 C3////////////////////////////
DEVICE M(C1) cngate_core cngate_core(G) ntd(S) ntd(D) nwell(B)
       [ PROPERTY W, L
         W = PERIM_CO(cngate_core,ntd)/2
         L = AREA(cngate_core)/W 
       ]

DEVICE M(C2) cngate_IO1 cngate_IO1(G) ntd(S) ntd(D) nwell(B)
       [ PROPERTY W, L
         W = PERIM_CO(cngate_IO1,ntd)/2
         L = AREA(cngate_IO1)/W
       ]

DEVICE M(C3) cngate_IO2 cngate_IO2(G) ntd(S) ntd(D) nwell(B)
       [ PROPERTY W, L
         W = PERIM_CO(cngate_IO2,ntd)/2
         L = AREA(cngate_IO2)/W 
       ]
/////////////////////////////Define Varactor////////////////////////////
/*
DMACRO VAR_PARALLEL_REDUCE device_name{
       LVS REDUCE device_name PARALLEL yes
       [TOLERANCE LR 0 
        effective LR,WR,NF
         P = sum ( WR * LR )
         Q = sum ( WR / LR )
         LR = sqrt( P / Q )
         WR = sqrt( P * Q )
         NF = sum ( NF )
       ]
}
*/

DMACRO VAR_PARALLEL_REDUCE device_name{
       LVS REDUCE device_name PARALLEL yes
       [TOLERANCE LR 0 WR 0
        effective LR,WR,NF
         LR = sum ( LR*NF )/sum ( NF )
         WR = sum ( WR*NF )/sum ( NF )
         NF = sum ( NF )
       ]
}

DMACRO VARDNW_PARALLEL_REDUCE device_name{
       LVS REDUCE device_name PARALLEL yes
       [TOLERANCE LR 0 WR 0 LADDR 0 WADDR 0
        effective LR,WR,NF,LADDR,WADDR
         LR = sum ( LR*NF )/sum ( NF )
         WR = sum ( WR*NF )/sum ( NF )
         NF = sum ( NF )
         LADDR = sum ( LADDR )
         WADDR = sum ( WADDR )
       ]
}

DEVICE pvar12ll_ckt pvar_core_t pvar_core_aux(PLUS) ntd(MINUS)
       [ PROPERTY LR,WR,mismod_var,NF,mr
         NF = COUNT(pvar_core_aux)
         WR = PERIM_CO(pvar_core_aux,ntd)/(2*NF)
         LR = AREA(pvar_core_aux)/(WR*NF)
         #IFDEF VAR_MIS_MODE 0
          mismod_var = 0
         #ELSE
          #IFDEF VAR_MIS_MODE 1
          mismod_var = 1
          #ENDIF
         #ENDIF
         mr=1
       ]
CMACRO VAR_PARALLEL_REDUCE pvar12ll_ckt

DEVICE pvar18ll_ckt pvar_IO1_t pvar_IO1_aux(PLUS) ntd(MINUS)  
       [ PROPERTY LR,WR,mismod_var,NF,mr
         NF = COUNT(pvar_IO1_aux)
         WR = PERIM_CO(pvar_IO1_aux,ntd)/(2*NF)
         LR = AREA(pvar_IO1_aux)/(WR*NF)
         #IFDEF VAR_MIS_MODE 0
          mismod_var = 0
         #ELSE
          #IFDEF VAR_MIS_MODE 1
          mismod_var = 1
          #ENDIF
         #ENDIF
         mr=1
       ]
CMACRO VAR_PARALLEL_REDUCE pvar18ll_ckt

#IFDEF IO 1825
DEVICE pvar25ll_ckt pvar_IO2_t pvar_IO2_aux(PLUS) ntd(MINUS)
       [ PROPERTY LR,WR,mismod_var,NF,mr
         NF = COUNT(pvar_IO2_aux)
         WR = PERIM_CO(pvar_IO2_aux,ntd)/(2*NF)
         LR = AREA(pvar_IO2_aux)/(WR*NF)
         #IFDEF VAR_MIS_MODE 0
          mismod_var = 0
         #ELSE
          #IFDEF VAR_MIS_MODE 1
          mismod_var = 1
          #ENDIF
         #ENDIF
         mr=1
       ]
CMACRO VAR_PARALLEL_REDUCE pvar25ll_ckt
#ENDIF

//////////////////////////Define RF Varactor///////////////////////////

DEVICE pvar12ll_ckt_rf pvar_core_rf_t pvar_core_rf_aux(PLUS) ntd(MINUS)
       [ PROPERTY LR,WR,NF,mismod_var,MR
         NF = COUNT(pvar_core_rf_aux)
         WR = PERIM_CO(pvar_core_rf_aux,ntd)/(2*NF)
         LR = AREA(pvar_core_rf_aux)/(WR*NF)
         MR = 1
         #IFDEF VAR_MIS_MODE 0
          mismod_var = 0
         #ELSE
          #IFDEF VAR_MIS_MODE 1
          mismod_var = 1
          #ENDIF
         #ENDIF
       ]
CMACRO VAR_PARALLEL_REDUCE pvar12ll_ckt_rf

DEVICE pvar12ll_ckt_rf_3t pvar_core_rf_3t_t pvar_core_rf_aux_3t(PLUS) ntd(MINUS) bulk_all(B)
       [ PROPERTY LR,WR,NF,mismod_var,MR
         NF = COUNT(pvar_core_rf_aux_3t)
         WR = PERIM_CO(pvar_core_rf_aux_3t,ntd)/(2*NF)
         LR = AREA(pvar_core_rf_aux_3t)/(WR*NF)
         MR = 1
         #IFDEF VAR_MIS_MODE 0
          mismod_var = 0
         #ELSE
          #IFDEF VAR_MIS_MODE 1
          mismod_var = 1
          #ENDIF
         #ENDIF
       ]
CMACRO VAR_PARALLEL_REDUCE pvar12ll_ckt_rf_3t

DEVICE pvar12lldnw_ckt_rf pvar_core_dnw_rf_t pvar_core_rf_dnw_aux(PLUS) ntd(MINUS) <DNW> <dnwwaddrec_var> <AA_VAR> <nwell>
       [ PROPERTY LR,WR,NF,mismod_var,LADDR,WADDR,MR
         NF = COUNT(pvar_core_rf_dnw_aux)
         WR = PERIM_CO(pvar_core_rf_dnw_aux,ntd)/(2*NF)
         LR = AREA(pvar_core_rf_dnw_aux)/(WR*NF)
         MR  = 1
         DP = PERIMETER(nwell)
         RA = AREA(dnwwaddrec_var)/2
         NP = PERIMETER(AA_VAR)
         NL = NP/2-WR
         WADDR=RA/NL
         LADDR=DP/4-WADDR-WR/2-NL/2
         #IFDEF VAR_MIS_MODE 0
          mismod_var = 0
         #ELSE
          #IFDEF VAR_MIS_MODE 1
          mismod_var = 1
          #ENDIF
         #ENDIF
       ]
CMACRO VARDNW_PARALLEL_REDUCE pvar12lldnw_ckt_rf

DEVICE pvar12lldnw_ckt_rf_3t pvar_core_dnw_rf_3t_t pvar_core_rf_dnw_aux_3t(PLUS) ntd(MINUS) bulk_all(B) <DNW> <dnwwaddrec_var> <AA_VAR> <nwell>
       [ PROPERTY LR,WR,NF,mismod_var,LADDR,WADDR,MR
         NF = COUNT(pvar_core_rf_dnw_aux_3t)
         WR = PERIM_CO(pvar_core_rf_dnw_aux_3t,ntd)/(2*NF)
         LR = AREA(pvar_core_rf_dnw_aux_3t)/(WR*NF)
         MR = 1
         DP = PERIMETER(nwell)
         RA = AREA(dnwwaddrec_var)/2
         NP = PERIMETER(AA_VAR)
         NL = NP/2-WR
         WADDR=RA/NL
         LADDR=DP/4-WADDR-WR/2-NL/2
         #IFDEF VAR_MIS_MODE 0
          mismod_var = 0
         #ELSE
          #IFDEF VAR_MIS_MODE 1
          mismod_var = 1
          #ENDIF
         #ENDIF
       ]
CMACRO VARDNW_PARALLEL_REDUCE pvar12lldnw_ckt_rf_3t

DEVICE pvar18ll_ckt_rf pvar_IO1_rf_t pvar_IO1_rf_aux(PLUS) ntd(MINUS)
       [ PROPERTY LR,WR,NF,mismod_var,MR
         NF = COUNT(pvar_IO1_rf_aux)
         WR = PERIM_CO(pvar_IO1_rf_aux,ntd)/(2*NF)
         LR = AREA(pvar_IO1_rf_aux)/(WR*NF)
         MR = 1
         #IFDEF VAR_MIS_MODE 0
          mismod_var = 0
         #ELSE
          #IFDEF VAR_MIS_MODE 1
          mismod_var = 1
          #ENDIF
         #ENDIF
       ]
CMACRO VAR_PARALLEL_REDUCE pvar18ll_ckt_rf

DEVICE pvar18ll_ckt_rf_3t pvar_IO1_rf_3t_t pvar_IO1_rf_aux_3t(PLUS) ntd(MINUS) bulk_all(B)
       [ PROPERTY LR,WR,NF,mismod_var,MR
         NF = COUNT(pvar_IO1_rf_aux_3t)
         WR = PERIM_CO(pvar_IO1_rf_aux_3t,ntd)/(2*NF)
         LR = AREA(pvar_IO1_rf_aux_3t)/(WR*NF)
         MR = 1
         #IFDEF VAR_MIS_MODE 0
          mismod_var = 0
         #ELSE
          #IFDEF VAR_MIS_MODE 1
          mismod_var = 1
          #ENDIF
         #ENDIF
       ]
CMACRO VAR_PARALLEL_REDUCE pvar18ll_ckt_rf_3t

DEVICE pvar18lldnw_ckt_rf pvar_IO1_dnw_rf_t pvar_IO1_rf_dnw_aux(PLUS) ntd(MINUS) <DNW> <AA_VAR> <dnwwaddrec_var> <nwell>
       [ PROPERTY LR,WR,NF,mismod_var,LADDR,WADDR,MR
         NF = COUNT(pvar_IO1_rf_dnw_aux)
         WR = PERIM_CO(pvar_IO1_rf_dnw_aux,ntd)/(2*NF)
         LR = AREA(pvar_IO1_rf_dnw_aux)/(WR*NF)
         MR = 1
         DP = PERIMETER(nwell)
         RA = AREA(dnwwaddrec_var)/2
         NP = PERIMETER(AA_VAR)
         NL = NP/2-WR
         WADDR=RA/NL
         LADDR=DP/4-WADDR-WR/2-NL/2
         #IFDEF VAR_MIS_MODE 0
          mismod_var = 0
         #ELSE
          #IFDEF VAR_MIS_MODE 1
          mismod_var = 1
          #ENDIF
         #ENDIF
       ]
CMACRO VARDNW_PARALLEL_REDUCE pvar18lldnw_ckt_rf

DEVICE pvar18lldnw_ckt_rf_3t pvar_IO1_dnw_rf_3t_t pvar_IO1_rf_dnw_aux_3t(PLUS) ntd(MINUS) bulk_all(B) <AA_VAR> <DNW> <dnwwaddrec_var> <nwell>
       [ PROPERTY LR,WR,NF,mismod_var,LADDR,WADDR,MR
         NF = COUNT(pvar_IO1_rf_dnw_aux_3t)
         WR = PERIM_CO(pvar_IO1_rf_dnw_aux_3t,ntd)/(2*NF)
         LR = AREA(pvar_IO1_rf_dnw_aux_3t)/(WR*NF)
         MR = 1
         DP = PERIMETER(nwell)
         RA = AREA(dnwwaddrec_var)/2
         NP = PERIMETER(AA_VAR)
         NL = NP/2-WR
         WADDR=RA/NL
         LADDR=DP/4-WADDR-WR/2-NL/2
         #IFDEF VAR_MIS_MODE 0
          mismod_var = 0
         #ELSE
          #IFDEF VAR_MIS_MODE 1
          mismod_var = 1
          #ENDIF
         #ENDIF
       ]
CMACRO VARDNW_PARALLEL_REDUCE pvar18lldnw_ckt_rf_3t


#IFDEF IO 1825
DEVICE pvar25ll_ckt_rf pvar_IO2_rf_t pvar_IO2_rf_aux(PLUS) ntd(MINUS)
       [ PROPERTY LR,WR,NF,mismod_var,MR
         NF = COUNT(pvar_IO2_rf_aux)
         WR = PERIM_CO(pvar_IO2_rf_aux,ntd)/(2*NF)
         LR = AREA(pvar_IO2_rf_aux)/(WR*NF)
         MR = 1
         #IFDEF VAR_MIS_MODE 0
          mismod_var = 0
         #ELSE
          #IFDEF VAR_MIS_MODE 1
          mismod_var = 1
          #ENDIF
         #ENDIF
       ]
CMACRO VAR_PARALLEL_REDUCE pvar25ll_ckt_rf

DEVICE pvar25ll_ckt_rf_3t pvar_IO2_rf_3t_t pvar_IO2_rf_aux_3t(PLUS) ntd(MINUS) bulk_all(B)
       [ PROPERTY LR,WR,NF,mismod_var,MR
         NF = COUNT(pvar_IO2_rf_aux_3t)
         WR = PERIM_CO(pvar_IO2_rf_aux_3t,ntd)/(2*NF)
         LR = AREA(pvar_IO2_rf_aux_3t)/(WR*NF)
         MR = 1
         #IFDEF VAR_MIS_MODE 0
          mismod_var = 0
         #ELSE
          #IFDEF VAR_MIS_MODE 1
          mismod_var = 1
          #ENDIF
         #ENDIF
       ]
CMACRO VAR_PARALLEL_REDUCE pvar25ll_ckt_rf_3t

DEVICE pvar25lldnw_ckt_rf pvar_IO2_dnw_rf_t pvar_IO2_rf_dnw_aux(PLUS) ntd(MINUS) <AA_VAR> <DNW> <dnwwaddrec_var> <nwell>
        [PROPERTY LR,WR,NF,LADDR,WADDR,mismod_var,MR
         NF = COUNT(pvar_IO2_rf_dnw_aux)
         WR = PERIM_CO(pvar_IO2_rf_dnw_aux,ntd)/(2*NF)
         LR = AREA(pvar_IO2_rf_dnw_aux)/(WR*NF)
         DP = PERIMETER(nwell)
         RA = AREA(dnwwaddrec_var)/2
         NP = PERIMETER(AA_VAR)
         NL = NP/2-WR
         WADDR=RA/NL
         LADDR=DP/4-WADDR-WR/2-NL/2
         MR   =1
         #IFDEF VAR_MIS_MODE 0
          mismod_var = 0
         #ELSE
          #IFDEF VAR_MIS_MODE 1
          mismod_var = 1
          #ENDIF
         #ENDIF
       ]
CMACRO VARDNW_PARALLEL_REDUCE pvar25lldnw_ckt_rf

DEVICE pvar25lldnw_ckt_rf_3t pvar_IO2_dnw_rf_3t_t pvar_IO2_rf_dnw_aux_3t(PLUS) ntd(MINUS) bulk_all(B) <AA_VAR> <DNW> <dnwwaddrec_var> <nwell> 
       [ PROPERTY LR,WR,NF,LADDR,WADDR,mismod_var,MR
         NF = COUNT(pvar_IO2_rf_dnw_aux_3t)
         WR = PERIM_CO(pvar_IO2_rf_dnw_aux_3t,ntd)/(2*NF)
         LR = AREA(pvar_IO2_rf_dnw_aux_3t)/(WR*NF)
         DP = PERIMETER(nwell)
         RA = AREA(dnwwaddrec_var)/2
         NP = PERIMETER(AA_VAR)
         NL = NP/2-WR
         WADDR=RA/NL
         LADDR=DP/4-WADDR-WR/2-NL/2
         MR   =1
         #IFDEF VAR_MIS_MODE 0
          mismod_var = 0
         #ELSE
          #IFDEF VAR_MIS_MODE 1
          mismod_var = 1
          #ENDIF
         #ENDIF
       ]
CMACRO VARDNW_PARALLEL_REDUCE pvar25lldnw_ckt_rf_3t
#ENDIF

///////////////////////Define BJT/////////////////////////////////////
DMACRO BJT_REDUCE device_name {
       LVS REDUCE device_name PARALLEL yes
       [effective "AREA"
       "AREA" = sum ( "AREA" )
       ]
}
#IFDEF RC_RUN FALSE
DEVICE Q(pnp12a100ll) PNPCOREA100 pnpcoll(c) nwell(b) PNPCOREA100(e)
        [ PROPERTY A
        A = AREA(PNPCOREA100) ]

DEVICE Q(pnp12a100ll_sh) PNPCOREA100_sh pnpcoll(c) nwell(b) PNPCOREA100_sh(e)
        [ PROPERTY A
        A = AREA(PNPCOREA100_sh) ]

DEVICE Q(pnp12a25ll) PNPCOREA25 pnpcoll(c) nwell(b) PNPCOREA25(e)
        [ PROPERTY A
        A = AREA(PNPCOREA25) ]

DEVICE Q(pnp12a25ll_sh) PNPCOREA25_sh pnpcoll(c) nwell(b) PNPCOREA25_sh(e)
        [ PROPERTY A
        A = AREA(PNPCOREA25_sh) ]

DEVICE Q(pnp12a4ll) PNPCOREA4 pnpcoll(c) nwell(b) PNPCOREA4(e)
        [ PROPERTY A
        A = AREA(PNPCOREA4) ]

DEVICE Q(pnp12a4ll_sh) PNPCOREA4_sh pnpcoll(c) nwell(b) PNPCOREA4_sh(e)
        [ PROPERTY A
        A = AREA(PNPCOREA4_sh) ]

DEVICE Q(pnp18a100ll) PNPIO1A100 pnpcoll(c) nwell(b) PNPIO1A100(e)
        [ PROPERTY A
        A = AREA(PNPIO1A100) ]

DEVICE Q(pnp18a100ll_sh) PNPIO1A100_sh pnpcoll(c) nwell(b) PNPIO1A100_sh(e)
        [ PROPERTY A
        A = AREA(PNPIO1A100_sh) ]

DEVICE Q(pnp18a25ll) PNPIO1A25 pnpcoll(c) nwell(b) PNPIO1A25(e)
        [ PROPERTY A
        A = AREA(PNPIO1A25) ]

DEVICE Q(pnp18a25ll_sh) PNPIO1A25_sh pnpcoll(c) nwell(b) PNPIO1A25_sh(e)
        [ PROPERTY A
        A = AREA(PNPIO1A25_sh) ]

DEVICE Q(pnp18a4ll) PNPIO1A4 pnpcoll(c) nwell(b) PNPIO1A4(e)
        [ PROPERTY A
        A = AREA(PNPIO1A4) ]

DEVICE Q(pnp18a4ll_sh) PNPIO1A4_sh pnpcoll(c) nwell(b) PNPIO1A4_sh(e)
        [ PROPERTY A
        A = AREA(PNPIO1A4_sh) ]

DEVICE Q(npn12a4ll) NPNCOREA4 dnwell(c) pwell(b) NPNCOREA4(e) bulk_all(s)
        [ PROPERTY A
        A = AREA(NPNCOREA4) ]

DEVICE Q(npn12a4ll_sh) NPNCOREA4_sh dnwell(c) pwell(b) NPNCOREA4_sh(e) bulk_all(s)
        [ PROPERTY A
        A = AREA(NPNCOREA4_sh) ]

DEVICE Q(npn12a25ll) NPNCOREA25 dnwell(c) pwell(b) NPNCOREA25(e) bulk_all(s)
        [ PROPERTY A
        A = AREA(NPNCOREA25) ]

DEVICE Q(npn12a25ll_sh) NPNCOREA25_sh dnwell(c) pwell(b) NPNCOREA25_sh(e) bulk_all(s)
        [ PROPERTY A
        A = AREA(NPNCOREA25_sh) ]

DEVICE Q(npn12a100ll) NPNCOREA100 dnwell(c) pwell(b) NPNCOREA100(e) bulk_all(s)
        [ PROPERTY A
        A = AREA(NPNCOREA100) ]

DEVICE Q(npn12a100ll_sh) NPNCOREA100_sh dnwell(c) pwell(b) NPNCOREA100_sh(e) bulk_all(s)
        [ PROPERTY A
        A = AREA(NPNCOREA100_sh) ]

DEVICE Q(npn18a4ll) NPNIO1A4 dnwell(c) pwell(b) NPNIO1A4(e) bulk_all(s)
        [ PROPERTY A
        A = AREA(NPNIO1A4) ]

DEVICE Q(npn18a4ll_sh) NPNIO1A4_sh dnwell(c) pwell(b) NPNIO1A4_sh(e) bulk_all(s)
        [ PROPERTY A
        A = AREA(NPNIO1A4_sh) ]

DEVICE Q(npn18a25ll) NPNIO1A25 dnwell(c) pwell(b) NPNIO1A25(e) bulk_all(s)
        [ PROPERTY A
        A = AREA(NPNIO1A25) ]

DEVICE Q(npn18a25ll_sh) NPNIO1A25_sh dnwell(c) pwell(b) NPNIO1A25_sh(e) bulk_all(s)
        [ PROPERTY A
        A = AREA(NPNIO1A25_sh) ]

DEVICE Q(npn18a100ll) NPNIO1A100 dnwell(c) pwell(b) NPNIO1A100(e) bulk_all(s)
        [ PROPERTY A
        A = AREA(NPNIO1A100) ]

DEVICE Q(npn18a100ll_sh) NPNIO1A100_sh dnwell(c) pwell(b) NPNIO1A100_sh(e) bulk_all(s)
        [ PROPERTY A
        A = AREA(NPNIO1A100_sh) ]

DEVICE pnp12a100ll_mis_ckt PNPCOREA100_mis pnpcoll(COLL) nwell(BASE) PNPCOREA100_mis(EMIT)
        [ PROPERTY "AREA"
        "AREA" = AREA(PNPCOREA100_mis) ]
CMACRO BJT_REDUCE pnp12a100ll_mis_ckt

DEVICE pnp12a100ll_sh_mis_ckt PNPCOREA100_mis_sh pnpcoll(COLL) nwell(BASE) PNPCOREA100_mis_sh(EMIT)
        [ PROPERTY "AREA"
        "AREA" = AREA(PNPCOREA100_mis_sh) ]
CMACRO BJT_REDUCE pnp12a100ll_sh_mis_ckt

DEVICE pnp12a25ll_mis_ckt PNPCOREA25_mis pnpcoll(COLL) nwell(BASE) PNPCOREA25_mis(EMIT)
        [ PROPERTY "AREA"
        "AREA" = AREA(PNPCOREA25_mis) ]
CMACRO BJT_REDUCE pnp12a25ll_mis_ckt

DEVICE pnp12a25ll_sh_mis_ckt PNPCOREA25_mis_sh pnpcoll(COLL) nwell(BASE) PNPCOREA25_mis_sh(EMIT)
        [ PROPERTY "AREA"
        "AREA" = AREA(PNPCOREA25_mis_sh) ]
CMACRO BJT_REDUCE pnp12a25ll_sh_mis_ckt

DEVICE pnp12a4ll_mis_ckt PNPCOREA4_mis pnpcoll(COLL) nwell(BASE) PNPCOREA4_mis(EMIT)
        [ PROPERTY "AREA"
        "AREA" = AREA(PNPCOREA4_mis) ]
CMACRO BJT_REDUCE pnp12a4ll_mis_ckt

DEVICE pnp12a4ll_sh_mis_ckt PNPCOREA4_mis_sh pnpcoll(COLL) nwell(BASE) PNPCOREA4_mis_sh(EMIT)
        [ PROPERTY "AREA"
        "AREA" = AREA(PNPCOREA4_mis_sh) ]
CMACRO BJT_REDUCE pnp12a4ll_sh_mis_ckt

DEVICE pnp18a100ll_mis_ckt PNPIO1A100_mis pnpcoll(COLL) nwell(BASE) PNPIO1A100_mis(EMIT)
        [ PROPERTY "AREA"
        "AREA" = AREA(PNPIO1A100_mis) ]
CMACRO BJT_REDUCE pnp18a100ll_mis_ckt

DEVICE pnp18a100ll_sh_mis_ckt PNPIO1A100_mis_sh pnpcoll(COLL) nwell(BASE) PNPIO1A100_mis_sh(EMIT)
        [ PROPERTY "AREA"
        "AREA" = AREA(PNPIO1A100_mis_sh) ]
CMACRO BJT_REDUCE pnp18a100ll_sh_mis_ckt

DEVICE pnp18a25ll_mis_ckt PNPIO1A25_mis pnpcoll(COLL) nwell(BASE) PNPIO1A25_mis(EMIT)
        [ PROPERTY "AREA"
        "AREA" = AREA(PNPIO1A25_mis) ]
CMACRO BJT_REDUCE pnp18a25ll_mis_ckt

DEVICE pnp18a25ll_sh_mis_ckt PNPIO1A25_mis_sh pnpcoll(COLL) nwell(BASE) PNPIO1A25_mis_sh(EMIT)
        [ PROPERTY "AREA"
        "AREA" = AREA(PNPIO1A25_mis_sh) ]
CMACRO BJT_REDUCE pnp18a25ll_sh_mis_ckt

DEVICE pnp18a4ll_mis_ckt PNPIO1A4_mis pnpcoll(COLL) nwell(BASE) PNPIO1A4_mis(EMIT)
        [ PROPERTY "AREA"
        "AREA" = AREA(PNPIO1A4_mis) ]
CMACRO BJT_REDUCE pnp18a4ll_mis_ckt

DEVICE pnp18a4ll_sh_mis_ckt PNPIO1A4_mis_sh pnpcoll(COLL) nwell(BASE) PNPIO1A4_mis_sh(EMIT)
        [ PROPERTY "AREA"
        "AREA" = AREA(PNPIO1A4_mis_sh) ]
CMACRO BJT_REDUCE pnp18a4ll_sh_mis_ckt

DEVICE npn12a4ll_mis_ckt NPNCOREA4_mis dnwell(COLL) pwell(BASE) NPNCOREA4_mis(EMIT) bulk_all(BULK)
        [ PROPERTY "AREA"
        "AREA" = AREA(NPNCOREA4_mis) ]
CMACRO BJT_REDUCE npn12a4ll_mis_ckt

DEVICE npn12a4ll_sh_mis_ckt NPNCOREA4_mis_sh dnwell(COLL) pwell(BASE) NPNCOREA4_mis_sh(EMIT) bulk_all(BULK)
        [ PROPERTY "AREA"
        "AREA" = AREA(NPNCOREA4_mis_sh) ]
CMACRO BJT_REDUCE npn12a4ll_sh_mis_ckt

DEVICE npn12a25ll_mis_ckt NPNCOREA25_mis dnwell(COLL) pwell(BASE) NPNCOREA25_mis(EMIT) bulk_all(BULK)
        [ PROPERTY "AREA"
        "AREA" = AREA(NPNCOREA25_mis) ]
CMACRO BJT_REDUCE npn12a25ll_mis_ckt

DEVICE npn12a25ll_sh_mis_ckt NPNCOREA25_mis_sh dnwell(COLL) pwell(BASE) NPNCOREA25_mis_sh(EMIT) bulk_all(BULK)
        [ PROPERTY "AREA"
        "AREA" = AREA(NPNCOREA25_mis_sh) ]
CMACRO BJT_REDUCE npn12a25ll_sh_mis_ckt

DEVICE npn12a100ll_mis_ckt NPNCOREA100_mis dnwell(COLL) pwell(BASE) NPNCOREA100_mis(EMIT) bulk_all(BULK)
        [ PROPERTY "AREA"
        "AREA" = AREA(NPNCOREA100_mis) ]
CMACRO BJT_REDUCE npn12a100ll_mis_ckt

DEVICE npn12a100ll_sh_mis_ckt NPNCOREA100_mis_sh dnwell(COLL) pwell(BASE) NPNCOREA100_mis_sh(EMIT) bulk_all(BULK)
        [ PROPERTY "AREA"
        "AREA" = AREA(NPNCOREA100_mis_sh) ]
CMACRO BJT_REDUCE npn12a100ll_sh_mis_ckt

DEVICE npn18a4ll_mis_ckt NPNIO1A4_mis dnwell(COLL) pwell(BASE) NPNIO1A4_mis(EMIT) bulk_all(BULK)
        [ PROPERTY "AREA"
        "AREA" = AREA(NPNIO1A4_mis) ]
CMACRO BJT_REDUCE npn18a4ll_mis_ckt

DEVICE npn18a4ll_sh_mis_ckt NPNIO1A4_mis_sh dnwell(COLL) pwell(BASE) NPNIO1A4_mis_sh(EMIT) bulk_all(BULK)
        [ PROPERTY "AREA"
        "AREA" = AREA(NPNIO1A4_mis_sh) ]
CMACRO BJT_REDUCE npn18a4ll_sh_mis_ckt

DEVICE npn18a25ll_mis_ckt NPNIO1A25_mis dnwell(COLL) pwell(BASE) NPNIO1A25_mis(EMIT) bulk_all(BULK)
        [ PROPERTY "AREA"
        "AREA" = AREA(NPNIO1A25_mis) ]
CMACRO BJT_REDUCE npn18a25ll_mis_ckt

DEVICE npn18a25ll_sh_mis_ckt NPNIO1A25_mis_sh dnwell(COLL) pwell(BASE) NPNIO1A25_mis_sh(EMIT) bulk_all(BULK)
        [ PROPERTY "AREA"
        "AREA" = AREA(NPNIO1A25_mis_sh) ]
CMACRO BJT_REDUCE npn18a25ll_sh_mis_ckt

DEVICE npn18a100ll_mis_ckt NPNIO1A100_mis dnwell(COLL) pwell(BASE) NPNIO1A100_mis(EMIT) bulk_all(BULK)
        [ PROPERTY "AREA"
        "AREA" = AREA(NPNIO1A100_mis) ]
CMACRO BJT_REDUCE npn18a100ll_mis_ckt

DEVICE npn18a100ll_sh_mis_ckt NPNIO1A100_mis_sh dnwell(COLL) pwell(BASE) NPNIO1A100_mis_sh(EMIT) bulk_all(BULK)
        [ PROPERTY "AREA"
        "AREA" = AREA(NPNIO1A100_mis_sh) ]
CMACRO BJT_REDUCE npn18a100ll_sh_mis_ckt

#IFDEF IO 1825
DEVICE Q(pnp25a100ll) PNPIO2A100 pnpcoll(c) nwell(b) PNPIO2A100(e) 
        [ PROPERTY A
        A = AREA(PNPIO2A100) ]

DEVICE Q(pnp25a100ll_sh) PNPIO2A100_sh pnpcoll(c) nwell(b) PNPIO2A100_sh(e) 
        [ PROPERTY A
        A = AREA(PNPIO2A100_sh) ]

DEVICE Q(pnp25a25ll) PNPIO2A25  pnpcoll(c) nwell(b) PNPIO2A25(e)
        [ PROPERTY A
        A = AREA(PNPIO2A25) ]

DEVICE Q(pnp25a25ll_sh) PNPIO2A25_sh  pnpcoll(c) nwell(b) PNPIO2A25_sh(e)
        [ PROPERTY A
        A = AREA(PNPIO2A25_sh) ]

DEVICE Q(pnp25a4ll) PNPIO2A4  pnpcoll(c) nwell(b) PNPIO2A4(e)
        [ PROPERTY A
        A = AREA(PNPIO2A4) ]

DEVICE Q(pnp25a4ll_sh) PNPIO2A4_sh  pnpcoll(c) nwell(b) PNPIO2A4_sh(e)
        [ PROPERTY A
        A = AREA(PNPIO2A4_sh) ]

DEVICE Q(npn25a4ll) NPNIO2A4 dnwell(c) pwell(b) NPNIO2A4(e) bulk_all(s)
        [ PROPERTY A
        A = AREA(NPNIO2A4) ]

DEVICE Q(npn25a4ll_sh) NPNIO2A4_sh dnwell(c) pwell(b) NPNIO2A4_sh(e) bulk_all(s)
        [ PROPERTY A
        A = AREA(NPNIO2A4_sh) ]

DEVICE Q(npn25a25ll) NPNIO2A25 dnwell(c) pwell(b) NPNIO2A25(e) bulk_all(s)
        [ PROPERTY A
        A = AREA(NPNIO2A25) ]

DEVICE Q(npn25a25ll_sh) NPNIO2A25_sh dnwell(c) pwell(b) NPNIO2A25_sh(e) bulk_all(s)
        [ PROPERTY A
        A = AREA(NPNIO2A25_sh) ]

DEVICE Q(npn25a100ll) NPNIO2A100 dnwell(c) pwell(b) NPNIO2A100(e) bulk_all(s)
        [ PROPERTY A
        A = AREA(NPNIO2A100) ]

DEVICE Q(npn25a100ll_sh) NPNIO2A100_sh dnwell(c) pwell(b) NPNIO2A100_sh(e) bulk_all(s)
        [ PROPERTY A
        A = AREA(NPNIO2A100_sh) ]

DEVICE pnp25a100ll_mis_ckt PNPIO2A100_mis pnpcoll(COLL) nwell(BASE) PNPIO2A100_mis(EMIT) 
        [ PROPERTY "AREA"
        "AREA" = AREA(PNPIO2A100_mis) ]
CMACRO BJT_REDUCE pnp25a100ll_mis_ckt

DEVICE pnp25a100ll_sh_mis_ckt PNPIO2A100_mis_sh pnpcoll(COLL) nwell(BASE) PNPIO2A100_mis_sh(EMIT)
        [ PROPERTY "AREA"
        "AREA" = AREA(PNPIO2A100_mis_sh) ]
CMACRO BJT_REDUCE pnp25a100ll_sh_mis_ckt

DEVICE pnp25a25ll_mis_ckt PNPIO2A25_mis  pnpcoll(COLL) nwell(BASE) PNPIO2A25_mis(EMIT)
        [ PROPERTY "AREA"
        "AREA" = AREA(PNPIO2A25_mis) ]
CMACRO BJT_REDUCE pnp25a25ll_mis_ckt

DEVICE pnp25a25ll_sh_mis_ckt PNPIO2A25_mis_sh  pnpcoll(COLL) nwell(BASE) PNPIO2A25_mis_sh(EMIT)
        [ PROPERTY "AREA"
        "AREA" = AREA(PNPIO2A25_mis_sh) ]
CMACRO BJT_REDUCE pnp25a25ll_sh_mis_ckt

DEVICE pnp25a4ll_mis_ckt PNPIO2A4_mis  pnpcoll(COLL) nwell(BASE) PNPIO2A4_mis(EMIT)
        [ PROPERTY "AREA"
        "AREA" = AREA(PNPIO2A4_mis) ]
CMACRO BJT_REDUCE pnp25a4ll_mis_ckt

DEVICE pnp25a4ll_sh_mis_ckt PNPIO2A4_mis_sh  pnpcoll(COLL) nwell(BASE) PNPIO2A4_mis_sh(EMIT)
        [ PROPERTY "AREA"
        "AREA" = AREA(PNPIO2A4_mis_sh) ]
CMACRO BJT_REDUCE pnp25a4ll_sh_mis_ckt

DEVICE npn25a4ll_mis_ckt NPNIO2A4_mis dnwell(COLL) pwell(BASE) NPNIO2A4_mis(EMIT) bulk_all(BULK)
        [ PROPERTY "AREA"
        "AREA" = AREA(NPNIO2A4_mis) ]
CMACRO BJT_REDUCE npn25a4ll_mis_ckt

DEVICE npn25a4ll_sh_mis_ckt NPNIO2A4_mis_sh dnwell(COLL) pwell(BASE) NPNIO2A4_mis_sh(EMIT) bulk_all(BULK)
        [ PROPERTY "AREA"
        "AREA" = AREA(NPNIO2A4_mis_sh) ]
CMACRO BJT_REDUCE npn25a4ll_sh_mis_ckt

DEVICE npn25a25ll_mis_ckt NPNIO2A25_mis dnwell(COLL) pwell(BASE) NPNIO2A25_mis(EMIT) bulk_all(BULK)
        [ PROPERTY "AREA"
        "AREA" = AREA(NPNIO2A25_mis) ]
CMACRO BJT_REDUCE npn25a25ll_mis_ckt

DEVICE npn25a25ll_sh_mis_ckt NPNIO2A25_mis_sh dnwell(COLL) pwell(BASE) NPNIO2A25_mis_sh(EMIT) bulk_all(BULK)
        [ PROPERTY "AREA"
        "AREA" = AREA(NPNIO2A25_mis_sh) ]
CMACRO BJT_REDUCE npn25a25ll_sh_mis_ckt

DEVICE npn25a100ll_mis_ckt NPNIO2A100_mis dnwell(COLL) pwell(BASE) NPNIO2A100_mis(EMIT) bulk_all(BULK)
        [ PROPERTY "AREA"
        "AREA" = AREA(NPNIO2A100_mis) ]
CMACRO BJT_REDUCE npn25a100ll_mis_ckt

DEVICE npn25a100ll_sh_mis_ckt NPNIO2A100_mis_sh dnwell(COLL) pwell(BASE) NPNIO2A100_mis_sh(EMIT) bulk_all(BULK)
        [ PROPERTY "AREA"
        "AREA" = AREA(NPNIO2A100_mis_sh) ]
CMACRO BJT_REDUCE npn25a100ll_sh_mis_ckt
#ENDIF
#ENDIF

////////////////////////Define Diode//////////////////////////////////
DMACRO DIO_PRO seed_layer {
                      #IFDEF BACK_ANNOTATION_FLOW 1
                      [PROPERTY A,P,M,L,W
                       A=area(seed_layer)
                       P=perimeter(seed_layer)
                       L=(P+SQRT(abs(P*P-16*A)))/4
                       W=(P-SQRT(abs(P*P-16*A)))/4
                       M=1
                      ]
                      #ENDIF
                      #IFDEF BACK_ANNOTATION_FLOW 2
                      [PROPERTY A,P,M
                       A=area(seed_layer)
                       P=perimeter(seed_layer)
                       M=1
                      ]
                      #ENDIF
}

DEVICE D(ndio12ll)  ndio_core  pwell(pos)  dio_np(neg)   CMACRO DIO_PRO ndio_core
DEVICE D(pdio12ll)  pdio_core  dio_pn(pos) nwell(neg)    CMACRO DIO_PRO pdio_core
DEVICE D(ntdio12ll) ntdio_core pwell(pos)  dio_np(neg)   CMACRO DIO_PRO ntdio_core
DEVICE D(ndio18ll)  ndio_IO1  pwell(pos)  dio_np(neg)    CMACRO DIO_PRO ndio_IO1
DEVICE D(pdio18ll)  pdio_IO1  dio_pn(pos) nwell(neg)     CMACRO DIO_PRO pdio_IO1
DEVICE D(ntdio18ll) ntdio_IO1 pwell(pos)  dio_np(neg)    CMACRO DIO_PRO ntdio_IO1
DEVICE D(nwdioll)   dionw   pwell(pos)  nwell(neg)  CMACRO DIO_PRO dionw
DEVICE D(ndio12llhvt) ndio_core_hvt pwell(pos) dio_np(neg)   CMACRO DIO_PRO ndio_core_hvt
DEVICE D(pdio12llhvt) pdio_core_hvt  dio_pn(pos) nwell(neg)  CMACRO DIO_PRO pdio_core_hvt
DEVICE D(ndio12lllvt) ndio_core_lvt  pwell(pos) dio_np(neg)  CMACRO DIO_PRO ndio_core_lvt
DEVICE D(pdio12lllvt) pdio_core_lvt  dio_pn(pos) nwell(neg)  CMACRO DIO_PRO pdio_core_lvt
DEVICE D(ndioull)     ndio_core_ull  pwell(pos) dio_np(neg)  CMACRO DIO_PRO ndio_core_ull
DEVICE D(pdioull)     pdio_core_ull  dio_pn(pos) nwell(neg)  CMACRO DIO_PRO pdio_core_ull
DEVICE D(dnd12ll)     dnd12_core     rwell(pos)  dio_np(neg) CMACRO DIO_PRO dnd12_core
DEVICE D(rwd12ll)     rwd12_core     rwell(pos)  dnwell(neg) CMACRO DIO_PRO rwd12_core
DEVICE D(dnwd12ll)    dnwd12_core    bulk_all(pos)  dnwell(neg) <DNW>
                      [PROPERTY A,P,M,L,W
                       M= 1
                       A= area(DNW)
                       P=perimeter(DNW)
                       L=(P+SQRT(abs(P*P-16*A)))/4
                       W=(P-SQRT(abs(P*P-16*A)))/4 ]

#IFDEF IO 1825
DEVICE D(ndio25ll)  ndio_IO2  pwell(pos)  dio_np(neg)      CMACRO DIO_PRO ndio_IO2
DEVICE D(pdio25ll)  pdio_IO2  dio_pn(pos) nwell(neg)        CMACRO DIO_PRO pdio_IO2
DEVICE D(ntdio25ll) ntdio_IO2 pwell(pos)  dio_np(neg)        CMACRO DIO_PRO ntdio_IO2
#ENDIF

////////////////////Define Parasitic Diode///////////////////////////
DEVICE D(parasitic_rwd)  parasitic_rwell rwell(pos)    dnwell(neg)  CMACRO DIO_PRO parasitic_rwell
DEVICE D(parasitic_dnwd) parasitic_dnw   bulk_all(pos) dnwell(neg)  CMACRO DIO_PRO parasitic_dnw
DEVICE D(parasitic_nwd)  parasitic_nw    bulk_all(pos) nwell(neg)   CMACRO DIO_PRO parasitic_nw

#IFDEF PARASI_DIO_CMP_DNW FALSE
LVS FILTER D(parasitic_rwd)  OPEN
LVS FILTER D(parasitic_dnwd) OPEN
#ENDIF

#IFDEF PARASI_DIO_CMP_NW FALSE
LVS FILTER D(parasitic_nwd)  OPEN
#ENDIF


#IFDEF PARASI_DIO_CMP_DNW TRUE
#IFDEF PARASI_DIO_Property_CMP_DNW TRUE
TRACE PROPERTY D(parasitic_rwd) A A dio_err
TRACE PROPERTY D(parasitic_dnwd) A A dio_err
#ENDIF
#ENDIF

#IFDEF PARASI_DIO_CMP_NW TRUE
#IFDEF PARASI_DIO_Property_CMP_NW TRUE
TRACE PROPERTY D(parasitic_nwd) A A dio_err
#ENDIF
#ENDIF


////////////////////////////Define Resistor//////////////////////////
DMACRO RES_REDUCE device_name {
       LVS REDUCE device_name SERIES PLUS MINUS yes
       [TOLERANCE W 0 
        effective L,W
         P = sum ( W * L ) 
         Q = sum ( L / W ) 
         L = sqrt( P * Q )
         W = sqrt( P / Q )
       ]
       LVS REDUCE device_name PARALLEL yes
       [TOLERANCE L 0
         effective L,W
         P = sum ( W * L ) 
         Q = sum ( W / L )
         L = sqrt( P / Q )
         W = sqrt( P * Q )
       ]
}

DMACRO RES_PRO res_seed res_ter rsh_value dw_value dl_value {
       #IFDEF BACK_ANNOTATION_FLOW 1
       [PROPERTY W,L,M,FR
       #ENDIF
       #IFDEF BACK_ANNOTATION_FLOW 2
       [PROPERTY W,L,M
       #ENDIF
       W = PERIM_CO(res_seed,res_ter)/2
       L = AREA(res_seed)/W
       M = 1
       RS    = rsh_value
       DW    = dw_value
       DL    = dl_value
       R     = (L*0.9-2*DL)*RS/(W*0.9-2*DW)
       FR    = R
       ]
}

DMACRO RES_PRO_SAB_MIS res_seed res_ter rsh_value dw_value dl_value {
       #IFDEF BACK_ANNOTATION_FLOW 1
       [PROPERTY W,L,resmis_mod,MR,FR
       #ENDIF
       #IFDEF BACK_ANNOTATION_FLOW 2
       [PROPERTY W,L,resmis_mod,MR
       #ENDIF
       W = PERIM_CO(res_seed,res_ter)/2
       L = AREA(res_seed)/W
       #IFDEF RES_MIS_MODE 1
       resmis_mod=1
       #ENDIF
       #IFDEF RES_MIS_MODE 0
       resmis_mod=0
       #ENDIF
       MR = 1
       RS    = rsh_value
       DW    = dw_value
       DL    = dl_value
       R     = (L*0.9-2*DL)*RS/(W*0.9-2*DW)
       FR    = R
       ]
}

DMACRO HRES_PRO_SAB_MIS res_seed res_ter rsh_value dw_value dl_value {
       #IFDEF BACK_ANNOTATION_FLOW 1
       [PROPERTY W,L,resmis_mod,MR,FR
       #ENDIF
       #IFDEF BACK_ANNOTATION_FLOW 2
       [PROPERTY W,L,resmis_mod,MR
       #ENDIF
       W = PERIM_CO(res_seed,res_ter)/2
       L = AREA(res_seed)/W
       #IFDEF RES_MIS_MODE 1
       resmis_mod=1
       #ENDIF
       #IFDEF RES_MIS_MODE 0
       resmis_mod=0
       #ENDIF
       MR=1
       RS    = rsh_value
       DW    = dw_value
       DL    = dl_value
       R     = (L*0.9-2*DL)*RS/(W*0.9-2*DW)
       FR    = R
       ]
}

DMACRO RES_PRO_3TSAB_MIS res_seed res_ter rsh_value dw_value dl_value {
       #IFDEF BACK_ANNOTATION_FLOW 1
       [PROPERTY W,L,resmis_mod,flag_cc,MR,FR
       #ENDIF
       #IFDEF BACK_ANNOTATION_FLOW 2
       [PROPERTY W,L,resmis_mod,flag_cc,MR
       #ENDIF
       W = PERIM_CO(res_seed,res_ter)/2
       L = AREA(res_seed)/W
       #IFDEF RES_MIS_MODE 1
       resmis_mod=1
       #ENDIF
       #IFDEF RES_MIS_MODE 0
       resmis_mod=0
       #ENDIF
       flag_cc=0
       MR =1
       RS    = rsh_value
       DW    = dw_value
       DL    = dl_value
       R     = (L*0.9-2*DL)*RS/(W*0.9-2*DW)
       FR    = R
       ]
}

DMACRO HRES_PRO_3TSAB_MIS res_seed res_ter rsh_value dw_value dl_value {
       #IFDEF BACK_ANNOTATION_FLOW 1
       [PROPERTY W,L,resmis_mod,flag_cc,MR,FR
       #ENDIF
       #IFDEF BACK_ANNOTATION_FLOW 2
       [PROPERTY W,L,resmis_mod,flag_cc,MR
       #ENDIF
       W = PERIM_CO(res_seed,res_ter)/2
       L = AREA(res_seed)/W
       #IFDEF RES_MIS_MODE 1
       resmis_mod=1
       #ENDIF
       #IFDEF RES_MIS_MODE 0
       resmis_mod=0
       #ENDIF
       flag_cc=0
       MR=1
       RS    = rsh_value
       DW    = dw_value
       DL    = dl_value
       R     = (L*0.9-2*DL)*RS/(W*0.9-2*DW)
       FR    = R
       ]
}

DMACRO RES_PRO_3TNOSAB res_seed res_ter rsh_value dw_value dl_value {
       #IFDEF BACK_ANNOTATION_FLOW 1
       [PROPERTY W,L,flag_cc,M,FR
       #ENDIF
       #IFDEF BACK_ANNOTATION_FLOW 2
       [PROPERTY W,L,flag_cc,M
       #ENDIF
       W = PERIM_CO(res_seed,res_ter)/2
       L = AREA(res_seed)/W
       flag_cc=0
       M=1
       RS    = rsh_value
       DW    = dw_value
       DL    = dl_value
       R     = (L*0.9-2*DL)*RS/(W*0.9-2*DW)
       FR    = R
       ]
}


DEVICE rndif_ckt RES_RNDIF_CKT nsd(PLUS) nsd(MINUS) pwell(B) CMACRO RES_PRO RES_RNDIF_CKT nsd 12.36 -2.6e-08 0
CMACRO RES_REDUCE rndif_ckt

DEVICE rpdif_ckt RES_RPDIF_CKT psd(PLUS) psd(MINUS) nwell(B) CMACRO RES_PRO RES_RPDIF_CKT psd 10.75 -2.15e-08 0
CMACRO RES_REDUCE rpdif_ckt

DEVICE rnpo_ckt RES_RNPO_CKT npoly(PLUS) npoly(MINUS) CMACRO RES_PRO RES_RNPO_CKT npoly 11.45 -6.6e-09 0    
CMACRO RES_REDUCE rnpo_ckt

DEVICE rppo_ckt RES_RPPO_CKT ppoly(PLUS) ppoly(MINUS) CMACRO RES_PRO RES_RPPO_CKT ppoly 10.62 -5.5e-09 0
CMACRO RES_REDUCE rppo_ckt

DEVICE rnwsti_ckt RES_RNWSTI_CKT nwell(PLUS) nwell(MINUS) pwell(B) CMACRO RES_PRO_SAB_MIS RES_RNWSTI_CKT nwell 606.1 1.4e-07 0
CMACRO RES_REDUCE rnwsti_ckt

DEVICE rnwaa_ckt RES_RNWAA_CKT nwell(PLUS) nwell(MINUS) pwell(B) CMACRO RES_PRO_SAB_MIS RES_RNWAA_CKT nwell 365.0 1.18e-07 0
CMACRO RES_REDUCE rnwaa_ckt

DEVICE rndifsab_ckt RES_RNDIFSAB_CKT nsd(PLUS) nsd(MINUS) pwell(B) CMACRO RES_PRO_SAB_MIS RES_RNDIFSAB_CKT nsd 117.8 1.3e-08 -1.8e-07
CMACRO RES_REDUCE rndifsab_ckt

DEVICE rpdifsab_ckt RES_RPDIFSAB_CKT psd(PLUS) psd(MINUS) nwell(B) CMACRO RES_PRO_SAB_MIS RES_RPDIFSAB_CKT psd 233.5 2.2e-08 -1.3e-07
CMACRO RES_REDUCE rpdifsab_ckt

DEVICE rnposab_ckt RES_RNPOSAB_CKT npoly(PLUS) npoly(MINUS) CMACRO RES_PRO_SAB_MIS RES_RNPOSAB_CKT npoly 308.8 3e-08 -1e-07
CMACRO RES_REDUCE rnposab_ckt

DEVICE rpposab_ckt RES_RPPOSAB_CKT ppoly(PLUS) ppoly(MINUS) CMACRO RES_PRO_SAB_MIS RES_RPPOSAB_CKT ppoly 680.6 2.3e-08 -8.5e-08
CMACRO RES_REDUCE rpposab_ckt

DEVICE rnposab_3t_ckt RES_RNPOSAB_3T_NW_CKT npoly(PLUS) npoly(MINUS) nwell(B) CMACRO RES_PRO_3TSAB_MIS RES_RNPOSAB_3T_NW_CKT npoly 308.8 3e-08 -1e-07
DEVICE rnposab_3t_ckt RES_RNPOSAB_3T_PW_CKT npoly(PLUS) npoly(MINUS) pwell(B) CMACRO RES_PRO_3TSAB_MIS RES_RNPOSAB_3T_PW_CKT npoly 308.8 3e-08 -1e-07
CMACRO RES_REDUCE rnposab_3t_ckt

DEVICE rpposab_3t_ckt RES_RPPOSAB_3T_NW_CKT ppoly(PLUS) ppoly(MINUS) nwell(B) CMACRO RES_PRO_3TSAB_MIS RES_RPPOSAB_3T_NW_CKT ppoly 680.6 2.3e-08 -8.5e-08
DEVICE rpposab_3t_ckt RES_RPPOSAB_3T_PW_CKT ppoly(PLUS) ppoly(MINUS) pwell(B) CMACRO RES_PRO_3TSAB_MIS RES_RPPOSAB_3T_PW_CKT ppoly 680.6 2.3e-08 -8.5e-08
CMACRO RES_REDUCE rpposab_3t_ckt

DEVICE rnpo_3t_ckt RES_RNPO_3T_NW_CKT npoly(PLUS) npoly(MINUS) nwell(B) CMACRO RES_PRO_3TNOSAB RES_RNPO_3T_NW_CKT npoly 11.45 -6.6e-09 0
DEVICE rnpo_3t_ckt RES_RNPO_3T_PW_CKT npoly(PLUS) npoly(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB RES_RNPO_3T_PW_CKT npoly 11.45 -6.6e-09 0
CMACRO RES_REDUCE rnpo_3t_ckt

DEVICE rppo_3t_ckt RES_RPPO_3T_NW_CKT ppoly(PLUS) ppoly(MINUS) nwell(B) CMACRO RES_PRO_3TNOSAB RES_RPPO_3T_NW_CKT ppoly 10.62 -5.5e-09 0
DEVICE rppo_3t_ckt RES_RPPO_3T_PW_CKT ppoly(PLUS) ppoly(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB RES_RPPO_3T_PW_CKT ppoly 10.62 -5.5e-09 0
CMACRO RES_REDUCE rppo_3t_ckt

DEVICE rhrpo_ckt RES_RHRPO_CKT ppoly(PLUS) ppoly(MINUS) CMACRO HRES_PRO_SAB_MIS RES_RHRPO_CKT ppoly 962.13 3.586E-8 8.865E-8
CMACRO RES_REDUCE rhrpo_ckt
DEVICE rhrpo_3t_ckt RES_RHRPO_3T_CKT_NW ppoly(PLUS) ppoly(MINUS) nwell(B) CMACRO HRES_PRO_3TSAB_MIS RES_RHRPO_3T_CKT_NW ppoly 962.13 3.586E-8 8.865E-8
DEVICE rhrpo_3t_ckt RES_RHRPO_3T_CKT_PW ppoly(PLUS) ppoly(MINUS) pwell(B) CMACRO HRES_PRO_3TSAB_MIS RES_RHRPO_3T_CKT_PW ppoly 962.13 3.586E-8 8.865E-8
CMACRO RES_REDUCE rhrpo_3t_ckt

DEVICE rm1_ckt rm1_ckt metal1(PLUS) metal1(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm1_ckt metal1 0.132 1.2e-08 0
CMACRO RES_REDUCE rm1_ckt

DEVICE rm2_ckt rm2_ckt metal2(PLUS) metal2(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm2_ckt metal2 0.099 1.8e-08 0
CMACRO RES_REDUCE rm2_ckt

DEVICE rm3_ckt rm3_ckt metal3(PLUS) metal3(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm3_ckt metal3 0.099 1.8e-08 0
CMACRO RES_REDUCE rm3_ckt

#IFDEF ALPA_THICK THIN
DEVICE ralpa_ckt rdl_res_ckt ALPA(PLUS) ALPA(MINUS) pwell(B) <RDL> CMACRO RES_PRO_3TNOSAB rdl_res_ckt RDL 0.0179 1.3e-08 0
CMACRO RES_REDUCE ralpa_ckt
#ELSE
DEVICE ralpa_utm_ckt rdl_res_ckt ALPA(PLUS) ALPA(MINUS) pwell(B) <RDL> CMACRO RES_PRO_3TNOSAB rdl_res_ckt RDL 0.0119 1.3e-08 0
CMACRO RES_REDUCE ralpa_utm_ckt
#ENDIF

#IFDEF TOPMETAL  10
DEVICE rm4_ckt rm4_ckt metal4(PLUS) metal4(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm4_ckt metal4 0.099 1.8e-08 0
CMACRO RES_REDUCE rm4_ckt

DEVICE rm5_ckt rm5_ckt metal5(PLUS) metal5(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm5_ckt metal5 0.099 1.8e-08 0
CMACRO RES_REDUCE rm5_ckt

DEVICE rm6_ckt rm6_ckt metal6(PLUS) metal6(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm6_ckt metal6 0.099 1.8e-08 0
CMACRO RES_REDUCE rm6_ckt

DEVICE rm7_ckt rm7_ckt metal7(PLUS) metal7(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm7_ckt metal7 0.099 1.8e-08 0
CMACRO RES_REDUCE rm7_ckt

DEVICE rm8_ckt rm8_ckt metal8(PLUS) metal8(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm8_ckt metal8 0.099 1.8e-08 0
CMACRO RES_REDUCE rm8_ckt

#IFDEF TOP_METAL_NUM double

#IFDEF TM1_WIDTH 2
DEVICE rtm1_d2_ckt rm9_ckt metal9(PLUS) metal9(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm9_ckt metal9 0.0589 1.8e-08 0
CMACRO RES_REDUCE rtm1_d2_ckt

#IFDEF TM2_WIDTH 2
DEVICE rtm2_d2_ckt rm10_ckt metal10(PLUS) metal10(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm10_ckt metal10 0.0589 1.8e-08 0
CMACRO RES_REDUCE rtm2_d2_ckt
#ENDIF

#IFDEF TM2_WIDTH 4
DEVICE rtm2_ckt rm10_ckt metal10(PLUS) metal10(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm10_ckt metal10 0.0177 1.8e-08 0
CMACRO RES_REDUCE rtm2_ckt
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 4
DEVICE rtm1_ckt rm9_ckt metal9(PLUS) metal9(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm9_ckt metal9 0.0177 1.8e-08 0
CMACRO RES_REDUCE rtm1_ckt

#IFDEF TM2_WIDTH 4
DEVICE rtm2_ckt rm10_ckt metal10(PLUS) metal10(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm10_ckt metal10 0.0177 1.8e-08 0
CMACRO RES_REDUCE rtm2_ckt
#ENDIF
#ENDIF

#ENDIF
#ENDIF

#IFDEF TOPMETAL 9
DEVICE rm4_ckt rm4_ckt metal4(PLUS) metal4(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm4_ckt metal4 0.099 1.8e-08 0
CMACRO RES_REDUCE rm4_ckt

DEVICE rm5_ckt rm5_ckt metal5(PLUS) metal5(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm5_ckt metal5 0.099 1.8e-08 0
CMACRO RES_REDUCE rm5_ckt

DEVICE rm6_ckt rm6_ckt metal6(PLUS) metal6(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm6_ckt metal6 0.099 1.8e-08 0
CMACRO RES_REDUCE rm6_ckt

DEVICE rm7_ckt rm7_ckt metal7(PLUS) metal7(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm7_ckt metal7 0.099 1.8e-08 0
CMACRO RES_REDUCE rm7_ckt

#IFDEF TOP_METAL_NUM double

#IFDEF TM1_WIDTH 2
DEVICE rtm1_d2_ckt rm8_ckt metal8(PLUS) metal8(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm8_ckt metal8 0.0589 1.8e-08 0
CMACRO RES_REDUCE rtm1_d2_ckt

#IFDEF TM2_WIDTH 2
DEVICE rtm2_d2_ckt rm9_ckt metal9(PLUS) metal9(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm9_ckt metal9 0.0589 1.8e-08 0
CMACRO RES_REDUCE rtm2_d2_ckt
#ENDIF
#IFDEF TM2_WIDTH 4
DEVICE rtm2_ckt rm9_ckt metal9(PLUS) metal9(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm9_ckt metal9 0.0177 1.8e-08 0
CMACRO RES_REDUCE rtm2_ckt
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 4
DEVICE rtm1_ckt rm8_ckt metal8(PLUS) metal8(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm8_ckt metal8 0.0177 1.8e-08 0
CMACRO RES_REDUCE rtm1_ckt

#IFDEF TM2_WIDTH 4
DEVICE rtm2_ckt rm9_ckt metal9(PLUS) metal9(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm9_ckt metal9 0.0177 1.8e-08 0
CMACRO RES_REDUCE rtm2_ckt
#ENDIF
#ENDIF

#ENDIF

#IFDEF TOP_METAL_NUM single
DEVICE rm8_ckt rm8_ckt metal8(PLUS) metal8(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm8_ckt metal8 0.099 1.8e-08 0
CMACRO RES_REDUCE rm8_ckt

#IFDEF TM2_WIDTH 2
DEVICE rtm2_d2_ckt rm9_ckt metal9(PLUS) metal9(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm9_ckt metal9 0.0589 1.8e-08 0
CMACRO RES_REDUCE rtm2_d2_ckt
#ENDIF
#IFDEF TM2_WIDTH 4
DEVICE rtm2_ckt rm9_ckt metal9(PLUS) metal9(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm9_ckt metal9 0.0177 1.8e-08 0
CMACRO RES_REDUCE rtm2_ckt
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOPMETAL 8
DEVICE rm4_ckt rm4_ckt metal4(PLUS) metal4(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm4_ckt metal4 0.099 1.8e-08 0
CMACRO RES_REDUCE rm4_ckt

DEVICE rm5_ckt rm5_ckt metal5(PLUS) metal5(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm5_ckt metal5 0.099 1.8e-08 0
CMACRO RES_REDUCE rm5_ckt

DEVICE rm6_ckt rm6_ckt metal6(PLUS) metal6(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm6_ckt metal6 0.099 1.8e-08 0
CMACRO RES_REDUCE rm6_ckt

#IFDEF TOP_METAL_NUM double

#IFDEF TM1_WIDTH 2
DEVICE rtm1_d2_ckt rm7_ckt metal7(PLUS) metal7(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm7_ckt metal7 0.0589 1.8e-08 0
CMACRO RES_REDUCE rtm1_d2_ckt

#IFDEF TM2_WIDTH 2
DEVICE rtm2_d2_ckt rm8_ckt metal8(PLUS) metal8(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm8_ckt metal8 0.0589 1.8e-08 0
CMACRO RES_REDUCE rtm2_d2_ckt
#ENDIF
#IFDEF TM2_WIDTH 4
DEVICE rtm2_ckt rm8_ckt metal8(PLUS) metal8(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm8_ckt metal8 0.0177 1.8e-08 0
CMACRO RES_REDUCE rtm2_ckt
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 4
DEVICE rtm1_ckt rm7_ckt metal7(PLUS) metal7(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm7_ckt metal7 0.0177 1.8e-08 0
CMACRO RES_REDUCE rtm1_ckt

#IFDEF TM2_WIDTH 4
DEVICE rtm2_ckt rm8_ckt metal8(PLUS) metal8(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm8_ckt metal8 0.0177 1.8e-08 0
CMACRO RES_REDUCE rtm2_ckt
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM single
DEVICE rm7_ckt rm7_ckt metal7(PLUS) metal7(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm7_ckt metal7 0.099 1.8e-08 0
CMACRO RES_REDUCE rm7_ckt

#IFDEF TM2_WIDTH 2
DEVICE rtm2_d2_ckt rm8_ckt metal8(PLUS) metal8(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm8_ckt metal8 0.0589 1.8e-08 0
CMACRO RES_REDUCE rtm2_d2_ckt
#ENDIF
#IFDEF TM2_WIDTH 4
DEVICE rtm2_ckt rm8_ckt metal8(PLUS) metal8(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm8_ckt metal8 0.0177 1.8e-08 0
CMACRO RES_REDUCE rtm2_ckt
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOPMETAL 7
DEVICE rm4_ckt rm4_ckt metal4(PLUS) metal4(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm4_ckt metal4 0.099 1.8e-08 0
CMACRO RES_REDUCE rm4_ckt

DEVICE rm5_ckt rm5_ckt metal5(PLUS) metal5(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm5_ckt metal5 0.099 1.8e-08 0
CMACRO RES_REDUCE rm5_ckt

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 2
DEVICE rtm1_d2_ckt rm6_ckt metal6(PLUS) metal6(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm6_ckt metal6 0.0589 1.8e-08 0
CMACRO RES_REDUCE rtm1_d2_ckt

#IFDEF TM2_WIDTH 2
DEVICE rtm2_d2_ckt rm7_ckt metal7(PLUS) metal7(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm7_ckt metal7 0.0589 1.8e-08 0
CMACRO RES_REDUCE rtm2_d2_ckt
#ENDIF
#IFDEF TM2_WIDTH 4
DEVICE rtm2_ckt rm7_ckt metal7(PLUS) metal7(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm7_ckt metal7 0.0177 1.8e-08 0
CMACRO RES_REDUCE rtm2_ckt
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 4
DEVICE rtm1_ckt rm6_ckt metal6(PLUS) metal6(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm6_ckt metal6 0.0177 1.8e-08 0
CMACRO RES_REDUCE rtm1_ckt

#IFDEF TM2_WIDTH 4
DEVICE rtm2_ckt rm7_ckt metal7(PLUS) metal7(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm7_ckt metal7 0.0177 1.8e-08 0
CMACRO RES_REDUCE rtm2_ckt
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM single
DEVICE rm6_ckt rm6_ckt metal6(PLUS) metal6(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm6_ckt metal6 0.099 1.8e-08 0
CMACRO RES_REDUCE rm6_ckt

#IFDEF TM2_WIDTH 2
DEVICE rtm2_d2_ckt rm7_ckt metal7(PLUS) metal7(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm7_ckt metal7 0.0589 1.8e-08 0
CMACRO RES_REDUCE rtm2_d2_ckt
#ENDIF
#IFDEF TM2_WIDTH 4
DEVICE rtm2_ckt rm7_ckt metal7(PLUS) metal7(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm7_ckt metal7 0.0177 1.8e-08 0
CMACRO RES_REDUCE rtm2_ckt
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOPMETAL 6
DEVICE rm4_ckt rm4_ckt metal4(PLUS) metal4(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm4_ckt metal4 0.099 1.8e-08 0
CMACRO RES_REDUCE rm4_ckt

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 2
DEVICE rtm1_d2_ckt rm5_ckt metal5(PLUS) metal5(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm5_ckt metal5 0.0589 1.8e-08 0
CMACRO RES_REDUCE rtm1_d2_ckt

#IFDEF TM2_WIDTH 2
DEVICE rtm2_d2_ckt rm6_ckt metal6(PLUS) metal6(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm6_ckt metal6 0.0589 1.8e-08 0
CMACRO RES_REDUCE rtm2_d2_ckt
#ENDIF
#IFDEF TM2_WIDTH 4
DEVICE rtm2_ckt rm6_ckt metal6(PLUS) metal6(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm6_ckt metal6 0.0177 1.8e-08 0
CMACRO RES_REDUCE rtm2_ckt
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 4
DEVICE rtm1_ckt rm5_ckt metal5(PLUS) metal5(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm5_ckt metal5 0.0177 1.8e-08 0
CMACRO RES_REDUCE rtm1_ckt

#IFDEF TM2_WIDTH 4
DEVICE rtm2_ckt rm6_ckt metal6(PLUS) metal6(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm6_ckt metal6 0.0177 1.8e-08 0
CMACRO RES_REDUCE rtm2_ckt
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM single
DEVICE rm5_ckt rm5_ckt metal5(PLUS) metal5(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm5_ckt metal5 0.099 1.8e-08 0
CMACRO RES_REDUCE rm5_ckt

#IFDEF TM2_WIDTH 2
DEVICE rtm2_d2_ckt rm6_ckt metal6(PLUS) metal6(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm6_ckt metal6 0.0589 1.8e-08 0
CMACRO RES_REDUCE rtm2_d2_ckt
#ENDIF
#IFDEF TM2_WIDTH 4
DEVICE rtm2_ckt rm6_ckt metal6(PLUS) metal6(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm6_ckt metal6 0.0177 1.8e-08 0
CMACRO RES_REDUCE rtm2_ckt
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOPMETAL 5
#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 2
DEVICE rtm1_d2_ckt rm4_ckt metal4(PLUS) metal4(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm4_ckt metal4 0.0589 1.8e-08 0
CMACRO RES_REDUCE rtm1_d2_ckt

#IFDEF TM2_WIDTH 2
DEVICE rtm2_d2_ckt rm5_ckt metal5(PLUS) metal5(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm5_ckt metal5 0.0589 1.8e-08 0
CMACRO RES_REDUCE rtm2_d2_ckt
#ENDIF
#IFDEF TM2_WIDTH 4
DEVICE rtm2_ckt rm5_ckt metal5(PLUS) metal5(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm5_ckt metal5 0.0177 1.8e-08 0
CMACRO RES_REDUCE rtm2_ckt
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 4
DEVICE rtm1_ckt rm4_ckt metal4(PLUS) metal4(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm4_ckt metal4 0.0177 1.8e-08 0
CMACRO RES_REDUCE rtm1_ckt

#IFDEF TM2_WIDTH 4
DEVICE rtm2_ckt rm5_ckt metal5(PLUS) metal5(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm5_ckt metal5 0.0177 1.8e-08 0
CMACRO RES_REDUCE rtm2_ckt
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM single
DEVICE rm4_ckt rm4_ckt metal4(PLUS) metal4(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm4_ckt metal4 0.099 1.8e-08 0
CMACRO RES_REDUCE rm4_ckt

#IFDEF TM2_WIDTH 2
DEVICE rtm2_d2_ckt rm5_ckt metal5(PLUS) metal5(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm5_ckt metal5 0.0589 1.8e-08 0
CMACRO RES_REDUCE rtm2_d2_ckt
#ENDIF
#IFDEF TM2_WIDTH 4
DEVICE rtm2_ckt rm5_ckt metal5(PLUS) metal5(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm5_ckt metal5 0.0177 1.8e-08 0
CMACRO RES_REDUCE rtm2_ckt
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOPMETAL 4
#IFDEF TOP_METAL_NUM single
#IFDEF TM2_WIDTH 2
DEVICE rtm2_d2_ckt rm4_ckt metal4(PLUS) metal4(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm4_ckt metal4 0.0589 1.8e-08 0
CMACRO RES_REDUCE rtm2_d2_ckt
#ENDIF
#IFDEF TM2_WIDTH 4
DEVICE rtm2_ckt rm4_ckt metal4(PLUS) metal4(MINUS) pwell(B) CMACRO RES_PRO_3TNOSAB rm4_ckt metal4 0.0177 1.8e-08 0
CMACRO RES_REDUCE rtm2_ckt
#ENDIF
#ENDIF
#ENDIF


DMACRO R_RES_PRO seed term rsh_value dw_value dl_value {
        [
        #IFDEF RC_RUN FALSE
          PROPERTY R,M
        #ENDIF
        #IFDEF RC_RUN TRUE
          #IFDEF BACK_ANNOTATION_FLOW 1
          PROPERTY W,L,M,FR
          #ENDIF
          #IFDEF BACK_ANNOTATION_FLOW 2
          PROPERTY W,L,M
          #ENDIF
        #ENDIF
        RS    = rsh_value
        DW    = dw_value
        W     = PERIM_CO(seed,term)/2
        L     = AREA(seed)/W
        DL    = dl_value
        R     = (L*0.9-2*DL)*RS/(W*0.9-2*DW)
        FR    = R
        M     = 1
        ]
}

DEVICE R(rndif) RES_RNDIF nsd(pos) nsd(neg) CMACRO R_RES_PRO RES_RNDIF nsd 12.36 -2.6E-8 0
DEVICE R(rpdif) RES_RPDIF psd(pos) psd(neg) CMACRO R_RES_PRO RES_RPDIF psd 10.75 -2.15E-8 0
DEVICE R(rnpo) RES_RNPO npoly(pos) npoly(neg) CMACRO R_RES_PRO RES_RNPO npoly 11.45 -6.6E-9 0
DEVICE R(rnpo_3t) RES_RNPO_3T npoly(pos) npoly(neg) CMACRO R_RES_PRO RES_RNPO_3T npoly 11.45 -6.6E-9 0
DEVICE R(rppo) RES_RPPO ppoly(pos) ppoly(neg) CMACRO R_RES_PRO RES_RPPO ppoly 10.62 -5.5E-9 0
DEVICE R(rppo_3t) RES_RPPO_3T ppoly(pos) ppoly(neg) CMACRO R_RES_PRO RES_RPPO_3T ppoly 10.62 -5.5E-9 0
DEVICE R(rnwsti) RES_RNWSTI nwell(pos) nwell(neg) CMACRO R_RES_PRO RES_RNWSTI nwell 606.1 1.4E-7 0
DEVICE R(rnwaa) RES_RNWAA nwell(pos) nwell(neg) CMACRO R_RES_PRO RES_RNWAA nwell 365 1.18E-7 0
DEVICE R(rndifsab) RES_RNDIFSAB nsd(pos) nsd(neg) CMACRO R_RES_PRO RES_RNDIFSAB nsd 117.8 1.3E-8 -1.8e-07
DEVICE R(rpdifsab) RES_RPDIFSAB psd(pos) psd(neg) CMACRO R_RES_PRO RES_RPDIFSAB psd 233.5 2.2E-8 -1.3E-7
DEVICE R(rnposab) RES_RNPOSAB npoly(pos) npoly(neg) CMACRO R_RES_PRO RES_RNPOSAB npoly 308.8 3E-8 -1E-7
DEVICE R(rnposab_3t) RES_RNPOSAB_3T npoly(pos) npoly(neg) CMACRO R_RES_PRO RES_RNPOSAB_3T npoly 308.8 3E-8 -1E-7
DEVICE R(rpposab) RES_RPPOSAB ppoly(pos) ppoly(neg) CMACRO R_RES_PRO RES_RPPOSAB ppoly 680.6 2.3E-8 -8.5E-8
DEVICE R(rpposab_3t) RES_RPPOSAB_3T ppoly(pos) ppoly(neg) CMACRO R_RES_PRO RES_RPPOSAB_3T ppoly 680.6 2.3E-8 -8.5E-8
DEVICE R(rm1)    rm1 metal1(pos) metal1(neg) CMACRO R_RES_PRO rm1 metal1 0.131 1.2E-8 0
DEVICE R(rm2)    rm2 metal2(pos) metal2(neg) CMACRO R_RES_PRO rm2 metal2 0.098 1.8E-8 0
DEVICE R(rhrpo) RES_RHRPO ppoly(pos) ppoly(neg) CMACRO R_RES_PRO RES_RHRPO ppoly 962.13 3.586E-8 8.865E-8
DEVICE R(rhrpo_3t) RES_RHRPO_3T ppoly(pos) ppoly(neg) CMACRO R_RES_PRO RES_RHRPO_3T ppoly 962.13 3.586E-8 8.865E-8

#IFDEF ALPA_THICK THIN
DEVICE R(ralpa)    rdl_res ALPA(pos) ALPA(neg) <RDL> CMACRO R_RES_PRO rdl_res RDL 0.0179 1.3E-8 0
#ELSE
DEVICE R(ralpa_utm)    rdl_res ALPA(pos) ALPA(neg) <RDL> CMACRO R_RES_PRO rdl_res RDL 0.0119 1.3E-8 0
#ENDIF

#IFDEF TOPMETAL 10 
DEVICE R(rm3)    rm3 metal3(pos) metal3(neg) CMACRO R_RES_PRO rm3 metal3 0.098 1.8E-8 0
DEVICE R(rm4)    rm4 metal4(pos) metal4(neg) CMACRO R_RES_PRO rm4 metal4 0.098 1.8E-8 0
DEVICE R(rm5)    rm5 metal5(pos) metal5(neg) CMACRO R_RES_PRO rm5 metal5 0.098 1.8E-8 0
DEVICE R(rm6)    rm6 metal6(pos) metal6(neg) CMACRO R_RES_PRO rm6 metal6 0.098 1.8E-8 0
DEVICE R(rm7)    rm7 metal7(pos) metal7(neg) CMACRO R_RES_PRO rm7 metal7 0.098 1.8E-8 0
DEVICE R(rm8)    rm8 metal8(pos) metal8(neg) CMACRO R_RES_PRO rm8 metal8 0.098 1.8E-8 0

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 2
DEVICE R(rtm1_d2)   rm9 metal9(pos) metal9(neg) CMACRO R_RES_PRO rm9 metal9 0.0589 1.80E-8 0
#IFDEF TM2_WIDTH 2
DEVICE R(rtm2_d2)   rm10 metal10(pos) metal10(neg) CMACRO R_RES_PRO rm10 metal10 0.0589 1.80E-8 0
#ENDIF
#IFDEF TM2_WIDTH 4
DEVICE R(rtm2)   rm10 metal10(pos) metal10(neg) CMACRO R_RES_PRO rm10 metal10 0.0177 1.80E-8 0
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 4
DEVICE R(rtm1)   rm9 metal9(pos) metal9(neg) CMACRO R_RES_PRO rm9 metal9 0.0177 1.80E-8 0
#IFDEF TM2_WIDTH 4
DEVICE R(rtm2)   rm10 metal10(pos) metal10(neg) CMACRO R_RES_PRO rm10 metal10 0.0177 1.80E-8 0
#ENDIF
#ENDIF
#ENDIF
#ENDIF


#IFDEF TOPMETAL 9
DEVICE R(rm3)    rm3 metal3(pos) metal3(neg) CMACRO R_RES_PRO rm3 metal3 0.098 1.8E-8 0
DEVICE R(rm4)    rm4 metal4(pos) metal4(neg) CMACRO R_RES_PRO rm4 metal4 0.098 1.8E-8 0
DEVICE R(rm5)    rm5 metal5(pos) metal5(neg) CMACRO R_RES_PRO rm5 metal5 0.098 1.8E-8 0
DEVICE R(rm6)    rm6 metal6(pos) metal6(neg) CMACRO R_RES_PRO rm6 metal6 0.098 1.8E-8 0
DEVICE R(rm7)    rm7 metal7(pos) metal7(neg) CMACRO R_RES_PRO rm7 metal7 0.098 1.8E-8 0

#IFDEF TOP_METAL_NUM single
DEVICE R(rm8)   rm8 metal8(pos) metal8(neg) CMACRO R_RES_PRO rm8 metal8 0.098 1.8E-8 0

#IFDEF TM2_WIDTH 2
DEVICE R(rtm2_d2)   rm9 metal9(pos) metal9(neg) CMACRO R_RES_PRO rm9 metal9 0.0589 1.80E-8 0
#ENDIF
#IFDEF TM2_WIDTH 4
DEVICE R(rtm2)   rm9 metal9(pos) metal9(neg) CMACRO R_RES_PRO rm9 metal9 0.0177 1.80E-8 0
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 2
DEVICE R(rtm1_d2)   rm8 metal8(pos) metal8(neg) CMACRO R_RES_PRO rm8 metal8 0.0589 1.80E-8 0
#IFDEF TM2_WIDTH 2
DEVICE R(rtm2_d2)   rm9 metal9(pos) metal9(neg) CMACRO R_RES_PRO rm9 metal9 0.0589 1.80E-8 0
#ENDIF
#IFDEF TM2_WIDTH 4
DEVICE R(rtm2)   rm9 metal9(pos) metal9(neg) CMACRO R_RES_PRO rm9 metal9 0.0177 1.80E-8 0
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 4
DEVICE R(rtm1)   rm8 metal8(pos) metal8(neg) CMACRO R_RES_PRO rm8 metal8 0.0177 1.80E-8 0
#IFDEF TM2_WIDTH 4
DEVICE R(rtm2)   rm9 metal9(pos) metal9(neg) CMACRO R_RES_PRO rm9 metal9 0.0177 1.80E-8 0
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOPMETAL 8
DEVICE R(rm3)    rm3 metal3(pos) metal3(neg) CMACRO R_RES_PRO rm3 metal3 0.098 1.8E-8 0
DEVICE R(rm4)    rm4 metal4(pos) metal4(neg) CMACRO R_RES_PRO rm4 metal4 0.098 1.8E-8 0
DEVICE R(rm5)    rm5 metal5(pos) metal5(neg) CMACRO R_RES_PRO rm5 metal5 0.098 1.8E-8 0
DEVICE R(rm6)    rm6 metal6(pos) metal6(neg) CMACRO R_RES_PRO rm6 metal6 0.098 1.8E-8 0

#IFDEF TOP_METAL_NUM single
DEVICE R(rm7)    rm7 metal7(pos) metal7(neg) CMACRO R_RES_PRO rm7 metal7 0.098 1.8E-8 0

#IFDEF TM2_WIDTH 2
DEVICE R(rtm2_d2)   rm8 metal8(pos) metal8(neg) CMACRO R_RES_PRO rm8 metal8 0.0589 1.80E-8 0
#ENDIF
#IFDEF TM2_WIDTH 4
DEVICE R(rtm2)   rm8 metal8(pos) metal8(neg) CMACRO R_RES_PRO rm8 metal8 0.0177 1.80E-8 0
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 2
DEVICE R(rtm1_d2)   rm7 metal7(pos) metal7(neg) CMACRO R_RES_PRO rm7 metal7 0.0589 1.80E-8 0
#IFDEF TM2_WIDTH 2
DEVICE R(rtm2_d2)   rm8 metal8(pos) metal8(neg) CMACRO R_RES_PRO rm8 metal8 0.0589 1.80E-8 0
#ELSE
DEVICE R(rtm2)   rm8 metal8(pos) metal8(neg) CMACRO R_RES_PRO rm8 metal8 0.0177 1.80E-8 0
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 4
DEVICE R(rtm1)   rm7 metal7(pos) metal7(neg) CMACRO R_RES_PRO rm7 metal7 0.0177 1.80E-8 0
#IFDEF TM2_WIDTH 4
DEVICE R(rtm2)   rm8 metal8(pos) metal8(neg) CMACRO R_RES_PRO rm8 metal8 0.0177 1.80E-8 0
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOPMETAL 7
DEVICE R(rm3)    rm3 metal3(pos) metal3(neg) CMACRO R_RES_PRO rm3 metal3 0.098 1.8E-8 0
DEVICE R(rm4)    rm4 metal4(pos) metal4(neg) CMACRO R_RES_PRO rm4 metal4 0.098 1.8E-8 0
DEVICE R(rm5)    rm5 metal5(pos) metal5(neg) CMACRO R_RES_PRO rm5 metal5 0.098 1.8E-8 0

#IFDEF TOP_METAL_NUM single
DEVICE R(rm6)    rm6 metal6(pos) metal6(neg) CMACRO R_RES_PRO rm6 metal6 0.098 1.8E-8 0

#IFDEF TM2_WIDTH 2
DEVICE R(rtm2_d2)   rm7 metal7(pos) metal7(neg) CMACRO R_RES_PRO rm7 metal7 0.0589 1.80E-8 0
#ENDIF
#IFDEF TM2_WIDTH 4
DEVICE R(rtm2)   rm7 metal7(pos) metal7(neg) CMACRO R_RES_PRO rm7 metal7 0.0177 1.80E-8 0
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 2
DEVICE R(rtm1_d2)   rm6 metal6(pos) metal6(neg) CMACRO R_RES_PRO rm6 metal6 0.0589 1.80E-8 0
#IFDEF TM2_WIDTH 2
DEVICE R(rtm2_d2)   rm7 metal7(pos) metal7(neg) CMACRO R_RES_PRO rm7 metal7 0.0589 1.80E-8 0
#ENDIF
#IFDEF TM2_WIDTH 4
DEVICE R(rtm2)   rm7 metal7(pos) metal7(neg) CMACRO R_RES_PRO rm7 metal7 0.0177 1.80E-8 0
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 4
DEVICE R(rtm1)   rm6 metal6(pos) metal6(neg) CMACRO R_RES_PRO rm6 metal6 0.0177 1.80E-8 0
#IFDEF TM2_WIDTH 4
DEVICE R(rtm2)   rm7 metal7(pos) metal7(neg) CMACRO R_RES_PRO rm7 metal7 0.0177 1.80E-8 0
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOPMETAL 6
DEVICE R(rm3)    rm3 metal3(pos) metal3(neg) CMACRO R_RES_PRO rm3 metal3 0.098 1.8E-8 0
DEVICE R(rm4)    rm4 metal4(pos) metal4(neg) CMACRO R_RES_PRO rm4 metal4 0.098 1.8E-8 0

#IFDEF TOP_METAL_NUM single
DEVICE R(rm5)    rm5 metal5(pos) metal5(neg) CMACRO R_RES_PRO rm5 metal5 0.098 1.8E-8 0

#IFDEF TM2_WIDTH 2
DEVICE R(rtm2_d2)   rm6 metal6(pos) metal6(neg) CMACRO R_RES_PRO rm6 metal6 0.0589 1.80E-8 0
#ENDIF
#IFDEF TM2_WIDTH 4
DEVICE R(rtm2)   rm6 metal6(pos) metal6(neg) CMACRO R_RES_PRO rm6 metal6 0.0177 1.80E-8 0
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 2
DEVICE R(rtm1_d2)   rm5 metal5(pos) metal5(neg) CMACRO R_RES_PRO rm5 metal5 0.0589 1.80E-8 0
#IFDEF TM2_WIDTH 2
DEVICE R(rtm2_d2)   rm6 metal6(pos) metal6(neg) CMACRO R_RES_PRO rm6 metal6 0.0589 1.80E-8 0
#ENDIF
#IFDEF TM2_WIDTH 4
DEVICE R(rtm2)   rm6 metal6(pos) metal6(neg) CMACRO R_RES_PRO rm6 metal6 0.0177 1.80E-8 0
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 4
DEVICE R(rtm1)   rm5 metal5(pos) metal5(neg) CMACRO R_RES_PRO rm5 metal5 0.0177 1.80E-8 0
#IFDEF TM2_WIDTH 4
DEVICE R(rtm2)   rm6 metal6(pos) metal6(neg) CMACRO R_RES_PRO rm6 metal6 0.0177 1.80E-8 0
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOPMETAL 5
DEVICE R(rm3)    rm3 metal3(pos) metal3(neg) CMACRO R_RES_PRO rm3 metal3 0.098 1.8E-8 0

#IFDEF TOP_METAL_NUM single
DEVICE R(rm4)    rm4 metal4(pos) metal4(neg) CMACRO R_RES_PRO rm4 metal4 0.098 1.8E-8 0

#IFDEF TM2_WIDTH 2
DEVICE R(rtm2_d2)   rm5 metal5(pos) metal5(neg) CMACRO R_RES_PRO rm5 metal5 0.0589 1.80E-8 0
#ENDIF
#IFDEF TM2_WIDTH 4
DEVICE R(rtm2)   rm5 metal5(pos) metal5(neg) CMACRO R_RES_PRO rm5 metal5 0.0177 1.80E-8 0
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 2
DEVICE R(rtm1_d2)   rm4 metal4(pos) metal4(neg) CMACRO R_RES_PRO rm4 metal4 0.0589 1.80E-8 0
#IFDEF TM2_WIDTH 2
DEVICE R(rtm2_d2)   rm5 metal5(pos) metal5(neg) CMACRO R_RES_PRO rm5 metal5 0.0589 1.80E-8 0
#ENDIF
#IFDEF TM2_WIDTH 4
DEVICE R(rtm2)   rm5 metal5(pos) metal5(neg) CMACRO R_RES_PRO rm5 metal5 0.0177 1.80E-8 0
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 4
DEVICE R(rtm1)   rm4 metal4(pos) metal4(neg) CMACRO R_RES_PRO rm4 metal4 0.0177 1.80E-8 0
#IFDEF TM2_WIDTH 4
DEVICE R(rtm2)   rm5 metal5(pos) metal5(neg) CMACRO R_RES_PRO rm5 metal5 0.0177 1.80E-8 0
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOPMETAL 4
#IFDEF TOP_METAL_NUM single
DEVICE R(rm3)    rm3 metal3(pos) metal3(neg) CMACRO R_RES_PRO rm3 metal3 0.098 1.8E-8 0

#IFDEF TM2_WIDTH 2
DEVICE R(rtm2_d2)   rm4 metal4(pos) metal4(neg) CMACRO R_RES_PRO rm4 metal4 0.0589 1.80E-8 0
#ENDIF
#IFDEF TM2_WIDTH 4
DEVICE R(rtm2)   rm4 metal4(pos) metal4(neg) CMACRO R_RES_PRO rm4 metal4 0.0177 1.80E-8 0
#ENDIF
#ENDIF
#ENDIF


/////////////////Define RF Resistor//////////////////////////////////
DEVICE rndifsab_ckt_rf RES_RNDIFSAB_RF nsd(PLUS) nsd(MINUS) pwell(B) CMACRO RES_PRO_SAB_MIS RES_RNDIFSAB_RF nsd 117.8 1.3e-08 -1.8e-07
CMACRO RES_REDUCE rndifsab_ckt_rf

DEVICE rpdifsab_ckt_rf RES_RPDIFSAB_RF psd(PLUS) psd(MINUS) nwell(B) CMACRO RES_PRO_SAB_MIS RES_RPDIFSAB_RF psd 233.5 2.2e-08 -1.3e-07
CMACRO RES_REDUCE rpdifsab_ckt_rf

DEVICE rnposab_ckt_rf RES_RNPOSAB_RF npoly(PLUS) npoly(MINUS) CMACRO RES_PRO_SAB_MIS RES_RNPOSAB_RF npoly 308.8 3.0e-08 -1.0e-07
CMACRO RES_REDUCE rnposab_ckt_rf

DEVICE rnposab_ckt_rf_3t RES_RNPOSAB_RF3T_PW npoly(PLUS) npoly(MINUS) pwell(B) CMACRO RES_PRO_SAB_MIS RES_RNPOSAB_RF3T_PW npoly 308.8 3.0e-08 -1.0e-07
DEVICE rnposab_ckt_rf_3t RES_RNPOSAB_RF3T_NW npoly(PLUS) npoly(MINUS) nwell(B) CMACRO RES_PRO_SAB_MIS RES_RNPOSAB_RF3T_NW npoly 308.8 3.0e-08 -1.0e-07
CMACRO RES_REDUCE rnposab_ckt_rf_3t

DEVICE rpposab_ckt_rf RES_RPPOSAB_RF ppoly(PLUS) ppoly(MINUS) CMACRO RES_PRO_SAB_MIS RES_RPPOSAB_RF ppoly 680.6 2.3e-08 -8.5e-08
CMACRO RES_REDUCE rpposab_ckt_rf

DEVICE rpposab_ckt_rf_3t RES_RPPOSAB_RF3T_PW ppoly(PLUS) ppoly(MINUS) pwell(B) CMACRO RES_PRO_SAB_MIS RES_RPPOSAB_RF3T_PW ppoly 680.6 2.3e-08 -8.5e-08
DEVICE rpposab_ckt_rf_3t RES_RPPOSAB_RF3T_NW ppoly(PLUS) ppoly(MINUS) nwell(B) CMACRO RES_PRO_SAB_MIS RES_RPPOSAB_RF3T_NW ppoly 680.6 2.3e-08 -8.5e-08
CMACRO RES_REDUCE rpposab_ckt_rf_3t

DEVICE rhrpo_ckt_rf RES_RHRPO_RF ppoly(PLUS) ppoly(MINUS) CMACRO HRES_PRO_SAB_MIS RES_RHRPO_RF ppoly 962.13 3.59E-08 8.87E-08
CMACRO RES_REDUCE rhrpo_ckt_rf

DEVICE rhrpo_ckt_rf_3t RES_RHRPO_RF_3T_PW ppoly(PLUS) ppoly(MINUS) pwell(B) CMACRO HRES_PRO_SAB_MIS RES_RHRPO_RF_3T_PW ppoly 962.13 3.59E-08 8.87E-08
DEVICE rhrpo_ckt_rf_3t RES_RHRPO_RF_3T_NW ppoly(PLUS) ppoly(MINUS) nwell(B) CMACRO HRES_PRO_SAB_MIS RES_RHRPO_RF_3T_NW ppoly 962.13 3.59E-08 8.87E-08
CMACRO RES_REDUCE rhrpo_ckt_rf_3t

#IFDEF TM2_WIDTH 15
#IFDEF TOPMETAL 10
#IFDEF TOP_METAL_NUM double
DEVICE rtm2_ckt_rf rm10_rf metal10(PLUS) metal10(MINUS) pwell(B) CMACRO RES_PRO rm10_rf metal10 4.958e-03 6.67e-08 0
CMACRO RES_REDUCE rtm2_ckt_rf
#ENDIF
#ENDIF

#IFDEF TOPMETAL 9
DEVICE rtm2_ckt_rf rm9_rf metal9(PLUS) metal9(MINUS) pwell(B) CMACRO RES_PRO rm9_rf metal9 4.958e-03 6.67e-08 0
CMACRO RES_REDUCE rtm2_ckt_rf
#ENDIF

#IFDEF TOPMETAL 8
DEVICE rtm2_ckt_rf rm8_rf metal8(PLUS) metal8(MINUS) pwell(B) CMACRO RES_PRO rm8_rf metal8 4.958e-03 6.67e-08 0
CMACRO RES_REDUCE rtm2_ckt_rf
#ENDIF

#IFDEF TOPMETAL 7
DEVICE rtm2_ckt_rf rm7_rf metal7(PLUS) metal7(MINUS) pwell(B) CMACRO RES_PRO rm7_rf metal7 4.958e-03 6.67e-08 0
CMACRO RES_REDUCE rtm2_ckt_rf
#ENDIF

#IFDEF TOPMETAL 6
DEVICE rtm2_ckt_rf rm6_rf metal6(PLUS) metal6(MINUS) pwell(B) CMACRO RES_PRO rm6_rf metal6 4.958e-03 6.67e-08 0
CMACRO RES_REDUCE rtm2_ckt_rf
#ENDIF

#IFDEF TOPMETAL 5
DEVICE rtm2_ckt_rf rm5_rf metal5(PLUS) metal5(MINUS) pwell(B) CMACRO RES_PRO rm5_rf metal5 4.958e-03 6.67e-08 0
CMACRO RES_REDUCE rtm2_ckt_rf
#ENDIF

#IFDEF TOPMETAL 4
DEVICE rtm2_ckt_rf rm4_rf metal4(PLUS) metal4(MINUS) pwell(B) CMACRO RES_PRO rm4_rf metal4 4.958e-03 6.67e-08 0
CMACRO RES_REDUCE rtm2_ckt_rf
#ENDIF
#ENDIF

#IFDEF EFUSE_RES TRUE
DMACRO RES_PRO_EFUSE res_seed res_ter {
       [PROPERTY W,L,R
       W = PERIM_CO(res_seed,res_ter)/2
       L = AREA(res_seed)/W
       RS= 500
       R=(L*RS)/W
       ]
}

DEVICE EFUSE_res efgate ppoly(PLUS) ppoly(MINUS) CMACRO RES_PRO_EFUSE efgate ppoly
#ENDIF


////////////////////////////////////Define MOM///////////////////////
//=======MOM==============

DMACRO MOM_MIS_PRO_2T  mom_finger TMM BMM {
        [PROPERTY LF,NF,mismod_mom,tm,bm,mr
        NF= count(mom_finger)
        A = AREA(mom_finger)/NF
        LF= A/1.0E-07+1.0E-07
        tm=TMM 
        bm=BMM
        mr=1
        #IFDEF MOM_MIS_MODE 0
         mismod_mom = 0
        #ELSE
         #IFDEF MOM_MIS_MODE 1
         mismod_mom = 1
         #ENDIF
        #ENDIF
        ]
}

DMACRO MOM_MIS_PRO_4T_MESH  mom_finger mom_aux TMM BMM {
        #IFDEF BACK_ANNOTATION_FLOW 1
        [PROPERTY LF,NF,mismod_mom,tm,bm,mr,col,row
        #ENDIF
        #IFDEF BACK_ANNOTATION_FLOW 2
        [PROPERTY LF,NF,mismod_mom,tm,bm,mr
        #ENDIF
        MES_NUM = count(MOMDMY)
        NF= count(mom_finger)/MES_NUM
        A = (AREA(mom_finger)/NF)/MES_NUM
        LF= A/1.0E-07+1.0E-07
        tm=TMM 
        bm=BMM
        mr =count(mom_aux)/2
        col=count(mom_col)
        row=count(mom_row)
        #IFDEF MOM_MIS_MODE 0
         mismod_mom = 0
        #ELSE
         #IFDEF MOM_MIS_MODE 1
         mismod_mom = 1
         #ENDIF
        #ENDIF
        ]
}

DMACRO MOM_MIS_PRO  mom_finger TMM BMM SHD {
        [PROPERTY LF,NF,mismod_mom,tm,bm,mr,shielding
        NF= count(mom_finger)
        A = AREA(mom_finger)/NF
        LF= A/1.0E-07+1.0E-07
        tm=TMM 
        bm=BMM
        shielding=SHD
        mr=1
        #IFDEF MOM_MIS_MODE 0
         mismod_mom = 0
        #ELSE
         #IFDEF MOM_MIS_MODE 1
         mismod_mom = 1
         #ENDIF
        #ENDIF
        ]
}

DMACRO MOM_MIS_PRO_MESH  mom_finger mom_aux TMM BMM SHD {
        #IFDEF BACK_ANNOTATION_FLOW 1
        [PROPERTY LF,NF,mismod_mom,tm,bm,mr,shielding,col,row
        #ENDIF
        #IFDEF BACK_ANNOTATION_FLOW 2
        [PROPERTY LF,NF,mismod_mom,tm,bm,mr,shielding
        #ENDIF
        MES_NUM = count(MOMDMY)
        NF= count(mom_finger)/MES_NUM
        A = (AREA(mom_finger)/NF)/MES_NUM
        LF= A/1.0E-07+1.0E-07
        tm=TMM 
        bm=BMM
        shielding=SHD
        mr =count(mom_aux)/2
        col=count(mom_col)
        row=count(mom_row)
        #IFDEF MOM_MIS_MODE 0
         mismod_mom = 0
        #ELSE
         #IFDEF MOM_MIS_MODE 1
         mismod_mom = 1
         #ENDIF
        #ENDIF
        ]
}

DMACRO MOMRF_PRO  mom_finger TMM BMM SHD {
        [PROPERTY LR,NR,tm,bm,shielding,mismod_mom,mr
        NR = count(mom_finger)
        A = AREA(mom_finger)/NR
        LR = A/1.0E-07+1.0E-07
        tm=TMM
        bm=BMM
        shielding=SHD
        mr =1
        #IFDEF MOM_MIS_MODE 0
         mismod_mom = 0
        #ELSE
         #IFDEF MOM_MIS_MODE 1
         mismod_mom = 1
         #ENDIF
        #ENDIF
        ]
}

#IFDEF TOPMETAL 4
#IFDEF TOP_METAL_NUM single
Device mom_2t_ckt momcap12 mom_terminal12(PLUS) mom_terminal12(MINUS) <mom12f> CMACRO MOM_MIS_PRO_2T mom12f 2 1
Device mom_2t_ckt momcap23 mom_terminal23(PLUS) mom_terminal23(MINUS) <mom23f> CMACRO MOM_MIS_PRO_2T mom23f 3 2
Device mom_3t_ckt momcap12_3t_wips mom_terminal12(PLUS) mom_terminal12(MINUS) ppoly(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 1
Device mom_3t_ckt momcap23_3t_wips mom_terminal23(PLUS) mom_terminal23(MINUS) ppoly(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 1
Device mom_3t_ckt momcap12_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) mom_nw(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 0
Device mom_3t_ckt momcap12_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) mom_pw(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 0
Device mom_3t_ckt momcap23_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) mom_nw(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 0
Device mom_3t_ckt momcap23_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) mom_pw(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 0

Device mom_2t_ckt momcap13 mom_terminal13(PLUS) mom_terminal13(MINUS) <mom13f> CMACRO MOM_MIS_PRO_2T mom13f 3 1

Device mom_3t_ckt momcap13_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) mom_nw(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 0
Device mom_3t_ckt momcap13_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) mom_pw(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 0
 
Device mom_3t_ckt momcap13_3t_wips mom_terminal13(PLUS) mom_terminal13(MINUS) ppoly(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 1

Device mom_rf momcap12rf_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) nwell(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 0
Device mom_rf momcap12rf_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) pwell(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 0
Device mom_rf momcap13rf_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) nwell(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 0
Device mom_rf momcap13rf_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) pwell(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 0
Device mom_rf momcap23rf_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) nwell(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 0
Device mom_rf momcap23rf_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) pwell(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 0

Device mom_rf momcap12rf_3t_wips mom_terminal12(PLUS) mom_terminal12(MINUS) ppoly(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 1
Device mom_rf momcap13rf_3t_wips mom_terminal13(PLUS) mom_terminal13(MINUS) ppoly(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 1
Device mom_rf momcap23rf_3t_wips mom_terminal23(PLUS) mom_terminal23(MINUS) ppoly(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 1

Device mom_rf momcap23rf_3t_wim mom_terminal23(PLUS) mom_terminal23(MINUS) metal1(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 2
#ENDIF
#ENDIF

#IFDEF TOPMETAL 5
#IFDEF TOP_METAL_NUM double
Device mom_2t_ckt momcap12 mom_terminal12(PLUS) mom_terminal12(MINUS) <mom12f> CMACRO MOM_MIS_PRO_2T mom12f 2 1
Device mom_2t_ckt momcap23 mom_terminal23(PLUS) mom_terminal23(MINUS) <mom23f> CMACRO MOM_MIS_PRO_2T mom23f 3 2
Device mom_3t_ckt momcap12_3t_wips mom_terminal12(PLUS) mom_terminal12(MINUS) ppoly(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 1
Device mom_3t_ckt momcap23_3t_wips mom_terminal23(PLUS) mom_terminal23(MINUS) ppoly(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 1
Device mom_3t_ckt momcap12_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) mom_nw(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 0
Device mom_3t_ckt momcap12_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) mom_pw(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 0
Device mom_3t_ckt momcap23_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) mom_nw(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 0
Device mom_3t_ckt momcap23_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) mom_pw(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 0

Device mom_2t_ckt momcap13 mom_terminal13(PLUS) mom_terminal13(MINUS) <mom13f> CMACRO MOM_MIS_PRO_2T mom13f 3 1

Device mom_3t_ckt momcap13_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) mom_nw(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 0
Device mom_3t_ckt momcap13_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) mom_pw(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 0

Device mom_3t_ckt momcap13_3t_wips mom_terminal13(PLUS) mom_terminal13(MINUS) ppoly(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 1

Device mom_rf momcap12rf_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) nwell(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 0
Device mom_rf momcap12rf_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) pwell(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 0
Device mom_rf momcap13rf_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) nwell(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 0
Device mom_rf momcap13rf_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) pwell(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 0
Device mom_rf momcap23rf_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) nwell(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 0
Device mom_rf momcap23rf_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) pwell(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 0

Device mom_rf momcap12rf_3t_wips mom_terminal12(PLUS) mom_terminal12(MINUS) ppoly(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 1
Device mom_rf momcap13rf_3t_wips mom_terminal13(PLUS) mom_terminal13(MINUS) ppoly(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 1
Device mom_rf momcap23rf_3t_wips mom_terminal23(PLUS) mom_terminal23(MINUS) ppoly(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 1

Device mom_rf momcap23rf_3t_wim mom_terminal23(PLUS) mom_terminal23(MINUS) metal1(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 2
#ENDIF
#ENDIF

#IFDEF TOPMETAL 5
#IFDEF TOP_METAL_NUM single
Device mom_2t_ckt momcap12 mom_terminal12(PLUS) mom_terminal12(MINUS) <mom12f> CMACRO MOM_MIS_PRO_2T mom12f 2 1
Device mom_2t_ckt momcap23 mom_terminal23(PLUS) mom_terminal23(MINUS) <mom23f> CMACRO MOM_MIS_PRO_2T mom23f 3 2
Device mom_2t_ckt momcap34 mom_terminal34(PLUS) mom_terminal34(MINUS) <mom34f> CMACRO MOM_MIS_PRO_2T mom34f 4 3
Device mom_3t_ckt momcap12_3t_wips mom_terminal12(PLUS) mom_terminal12(MINUS) ppoly(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 1
Device mom_3t_ckt momcap23_3t_wips mom_terminal23(PLUS) mom_terminal23(MINUS) ppoly(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 1
Device mom_3t_ckt momcap34_3t_wips mom_terminal34(PLUS) mom_terminal34(MINUS) ppoly(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 1
Device mom_3t_ckt momcap12_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) mom_nw(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 0
Device mom_3t_ckt momcap12_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) mom_pw(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 0
Device mom_3t_ckt momcap23_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) mom_nw(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 0
Device mom_3t_ckt momcap23_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) mom_pw(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 0
Device mom_3t_ckt momcap34_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) mom_nw(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 0
Device mom_3t_ckt momcap34_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) mom_pw(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 0

Device mom_2t_ckt momcap13 mom_terminal13(PLUS) mom_terminal13(MINUS) <mom13f> CMACRO MOM_MIS_PRO_2T mom13f 3 1

Device mom_2t_ckt momcap24 mom_terminal24(PLUS) mom_terminal24(MINUS) <mom24f> CMACRO MOM_MIS_PRO_2T mom24f 4 2

Device mom_2t_ckt momcap14 mom_terminal14(PLUS) mom_terminal14(MINUS) <mom14f> CMACRO MOM_MIS_PRO_2T mom14f 4 1

Device mom_3t_ckt momcap13_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) mom_nw(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 0
Device mom_3t_ckt momcap13_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) mom_pw(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 0
Device mom_3t_ckt momcap14_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) mom_nw(B) <mom14f> CMACRO MOM_MIS_PRO mom14f 4 1 0
Device mom_3t_ckt momcap14_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) mom_pw(B) <mom14f> CMACRO MOM_MIS_PRO mom14f 4 1 0
Device mom_3t_ckt momcap24_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) mom_nw(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 0
Device mom_3t_ckt momcap24_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) mom_pw(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 0

Device mom_3t_ckt momcap13_3t_wips mom_terminal13(PLUS) mom_terminal13(MINUS) ppoly(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 1
Device mom_3t_ckt momcap14_3t_wips mom_terminal14(PLUS) mom_terminal14(MINUS) ppoly(B) <mom14f> CMACRO MOM_MIS_PRO mom14f 4 1 1
Device mom_3t_ckt momcap24_3t_wips mom_terminal24(PLUS) mom_terminal24(MINUS) ppoly(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 1

Device mom_rf momcap12rf_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) nwell(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 0
Device mom_rf momcap12rf_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) pwell(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 0
Device mom_rf momcap13rf_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) nwell(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 0
Device mom_rf momcap13rf_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) pwell(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 0
Device mom_rf momcap23rf_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) nwell(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 0
Device mom_rf momcap23rf_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) pwell(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 0
Device mom_rf momcap14rf_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) nwell(B) <mom14f> CMACRO MOMRF_PRO mom14f 4 1 0
Device mom_rf momcap14rf_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) pwell(B) <mom14f> CMACRO MOMRF_PRO mom14f 4 1 0
Device mom_rf momcap24rf_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) nwell(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 0
Device mom_rf momcap24rf_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) pwell(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 0
Device mom_rf momcap34rf_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) nwell(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 0
Device mom_rf momcap34rf_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) pwell(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 0

Device mom_rf momcap12rf_3t_wips mom_terminal12(PLUS) mom_terminal12(MINUS) ppoly(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 1
Device mom_rf momcap13rf_3t_wips mom_terminal13(PLUS) mom_terminal13(MINUS) ppoly(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 1
Device mom_rf momcap23rf_3t_wips mom_terminal23(PLUS) mom_terminal23(MINUS) ppoly(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 1
Device mom_rf momcap14rf_3t_wips mom_terminal14(PLUS) mom_terminal14(MINUS) ppoly(B) <mom14f> CMACRO MOMRF_PRO mom14f 4 1 1
Device mom_rf momcap24rf_3t_wips mom_terminal24(PLUS) mom_terminal24(MINUS) ppoly(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 1
Device mom_rf momcap34rf_3t_wips mom_terminal34(PLUS) mom_terminal34(MINUS) ppoly(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 1

Device mom_rf momcap23rf_3t_wim mom_terminal23(PLUS) mom_terminal23(MINUS) metal1(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 2
Device mom_rf momcap24rf_3t_wim mom_terminal24(PLUS) mom_terminal24(MINUS) metal1(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 2
Device mom_rf momcap34rf_3t_wim mom_terminal34(PLUS) mom_terminal34(MINUS) metal2(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 2
#ENDIF
#ENDIF

#IFDEF TOPMETAL 6
#IFDEF TOP_METAL_NUM double
Device mom_2t_ckt momcap12 mom_terminal12(PLUS) mom_terminal12(MINUS) <mom12f> CMACRO MOM_MIS_PRO_2T mom12f 2 1
Device mom_2t_ckt momcap23 mom_terminal23(PLUS) mom_terminal23(MINUS) <mom23f> CMACRO MOM_MIS_PRO_2T mom23f 3 2
Device mom_2t_ckt momcap34 mom_terminal34(PLUS) mom_terminal34(MINUS) <mom34f> CMACRO MOM_MIS_PRO_2T mom34f 4 3
Device mom_3t_ckt momcap12_3t_wips mom_terminal12(PLUS) mom_terminal12(MINUS) ppoly(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 1
Device mom_3t_ckt momcap23_3t_wips mom_terminal23(PLUS) mom_terminal23(MINUS) ppoly(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 1
Device mom_3t_ckt momcap34_3t_wips mom_terminal34(PLUS) mom_terminal34(MINUS) ppoly(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 1
Device mom_3t_ckt momcap12_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) mom_nw(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 0
Device mom_3t_ckt momcap12_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) mom_pw(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 0
Device mom_3t_ckt momcap23_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) mom_nw(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 0
Device mom_3t_ckt momcap23_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) mom_pw(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 0
Device mom_3t_ckt momcap34_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) mom_nw(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 0
Device mom_3t_ckt momcap34_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) mom_pw(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 0

Device mom_2t_ckt momcap13 mom_terminal13(PLUS) mom_terminal13(MINUS) <mom13f> CMACRO MOM_MIS_PRO_2T mom13f 3 1
Device mom_2t_ckt momcap24 mom_terminal24(PLUS) mom_terminal24(MINUS) <mom24f> CMACRO MOM_MIS_PRO_2T mom24f 4 2
Device mom_2t_ckt momcap14 mom_terminal14(PLUS) mom_terminal14(MINUS) <mom14f> CMACRO MOM_MIS_PRO_2T mom14f 4 1

Device mom_3t_ckt momcap13_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) mom_nw(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 0
Device mom_3t_ckt momcap13_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) mom_pw(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 0
Device mom_3t_ckt momcap14_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) mom_nw(B) <mom14f> CMACRO MOM_MIS_PRO mom14f 4 1 0
Device mom_3t_ckt momcap14_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) mom_pw(B) <mom14f> CMACRO MOM_MIS_PRO mom14f 4 1 0
Device mom_3t_ckt momcap24_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) mom_nw(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 0
Device mom_3t_ckt momcap24_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) mom_pw(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 0

Device mom_3t_ckt momcap13_3t_wips mom_terminal13(PLUS) mom_terminal13(MINUS) ppoly(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 1
Device mom_3t_ckt momcap14_3t_wips mom_terminal14(PLUS) mom_terminal14(MINUS) ppoly(B) <mom14f> CMACRO MOM_MIS_PRO mom14f 4 1 1
Device mom_3t_ckt momcap24_3t_wips mom_terminal24(PLUS) mom_terminal24(MINUS) ppoly(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 1

Device mom_rf momcap12rf_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) nwell(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 0
Device mom_rf momcap12rf_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) pwell(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 0
Device mom_rf momcap13rf_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) nwell(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 0
Device mom_rf momcap13rf_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) pwell(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 0
Device mom_rf momcap23rf_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) nwell(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 0
Device mom_rf momcap23rf_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) pwell(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 0
Device mom_rf momcap14rf_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) nwell(B) <mom14f> CMACRO MOMRF_PRO mom14f 4 1 0
Device mom_rf momcap14rf_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) pwell(B) <mom14f> CMACRO MOMRF_PRO mom14f 4 1 0
Device mom_rf momcap24rf_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) nwell(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 0
Device mom_rf momcap24rf_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) pwell(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 0
Device mom_rf momcap34rf_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) nwell(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 0
Device mom_rf momcap34rf_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) pwell(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 0

Device mom_rf momcap12rf_3t_wips mom_terminal12(PLUS) mom_terminal12(MINUS) ppoly(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 1
Device mom_rf momcap13rf_3t_wips mom_terminal13(PLUS) mom_terminal13(MINUS) ppoly(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 1
Device mom_rf momcap23rf_3t_wips mom_terminal23(PLUS) mom_terminal23(MINUS) ppoly(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 1
Device mom_rf momcap14rf_3t_wips mom_terminal14(PLUS) mom_terminal14(MINUS) ppoly(B) <mom14f> CMACRO MOMRF_PRO mom14f 4 1 1
Device mom_rf momcap24rf_3t_wips mom_terminal24(PLUS) mom_terminal24(MINUS) ppoly(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 1
Device mom_rf momcap34rf_3t_wips mom_terminal34(PLUS) mom_terminal34(MINUS) ppoly(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 1

Device mom_rf momcap23rf_3t_wim mom_terminal23(PLUS) mom_terminal23(MINUS) metal1(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 2
Device mom_rf momcap24rf_3t_wim mom_terminal24(PLUS) mom_terminal24(MINUS) metal1(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 2
Device mom_rf momcap34rf_3t_wim mom_terminal34(PLUS) mom_terminal34(MINUS) metal2(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 2
#ENDIF
#ENDIF

#IFDEF TOPMETAL 6
#IFDEF TOP_METAL_NUM single
Device mom_2t_ckt momcap12 mom_terminal12(PLUS) mom_terminal12(MINUS) <mom12f> CMACRO MOM_MIS_PRO_2T mom12f 2 1
Device mom_2t_ckt momcap23 mom_terminal23(PLUS) mom_terminal23(MINUS) <mom23f> CMACRO MOM_MIS_PRO_2T mom23f 3 2
Device mom_2t_ckt momcap34 mom_terminal34(PLUS) mom_terminal34(MINUS) <mom34f> CMACRO MOM_MIS_PRO_2T mom34f 4 3
Device mom_2t_ckt momcap45 mom_terminal45(PLUS) mom_terminal45(MINUS) <mom45f> CMACRO MOM_MIS_PRO_2T mom45f 5 4
Device mom_3t_ckt momcap12_3t_wips mom_terminal12(PLUS) mom_terminal12(MINUS) ppoly(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 1
Device mom_3t_ckt momcap23_3t_wips mom_terminal23(PLUS) mom_terminal23(MINUS) ppoly(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 1
Device mom_3t_ckt momcap34_3t_wips mom_terminal34(PLUS) mom_terminal34(MINUS) ppoly(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 1
Device mom_3t_ckt momcap45_3t_wips mom_terminal45(PLUS) mom_terminal45(MINUS) ppoly(B) <mom45f> CMACRO MOM_MIS_PRO mom45f 5 4 1
Device mom_3t_ckt momcap12_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) mom_nw(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 0
Device mom_3t_ckt momcap12_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) mom_pw(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 0
Device mom_3t_ckt momcap23_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) mom_nw(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 0
Device mom_3t_ckt momcap23_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) mom_pw(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 0
Device mom_3t_ckt momcap34_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) mom_nw(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 0
Device mom_3t_ckt momcap34_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) mom_pw(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 0
Device mom_3t_ckt momcap45_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) mom_nw(B) <mom45f> CMACRO MOM_MIS_PRO mom45f 5 4 0
Device mom_3t_ckt momcap45_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) mom_pw(B) <mom45f> CMACRO MOM_MIS_PRO mom45f 5 4 0

Device mom_2t_ckt momcap13 mom_terminal13(PLUS) mom_terminal13(MINUS) <mom13f> CMACRO MOM_MIS_PRO_2T mom13f 3 1
Device mom_2t_ckt momcap24 mom_terminal24(PLUS) mom_terminal24(MINUS) <mom24f> CMACRO MOM_MIS_PRO_2T mom24f 4 2
Device mom_2t_ckt momcap14 mom_terminal14(PLUS) mom_terminal14(MINUS) <mom14f> CMACRO MOM_MIS_PRO_2T mom14f 4 1
Device mom_2t_ckt momcap15 mom_terminal15(PLUS) mom_terminal15(MINUS) <mom15f> CMACRO MOM_MIS_PRO_2T mom15f 5 1
Device mom_2t_ckt momcap25 mom_terminal25(PLUS) mom_terminal25(MINUS) <mom25f> CMACRO MOM_MIS_PRO_2T mom25f 5 2
Device mom_2t_ckt momcap35 mom_terminal35(PLUS) mom_terminal35(MINUS) <mom35f> CMACRO MOM_MIS_PRO_2T mom35f 5 3

Device mom_3t_ckt momcap13_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) mom_nw(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 0
Device mom_3t_ckt momcap13_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) mom_pw(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 0
Device mom_3t_ckt momcap14_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) mom_nw(B) <mom14f> CMACRO MOM_MIS_PRO mom14f 4 1 0
Device mom_3t_ckt momcap14_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) mom_pw(B) <mom14f> CMACRO MOM_MIS_PRO mom14f 4 1 0
Device mom_3t_ckt momcap24_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) mom_nw(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 0
Device mom_3t_ckt momcap24_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) mom_pw(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 0
Device mom_3t_ckt momcap15_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) mom_nw(B) <mom15f> CMACRO MOM_MIS_PRO mom15f 5 1 0
Device mom_3t_ckt momcap15_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) mom_pw(B) <mom15f> CMACRO MOM_MIS_PRO mom15f 5 1 0
Device mom_3t_ckt momcap25_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) mom_nw(B) <mom25f> CMACRO MOM_MIS_PRO mom25f 5 2 0
Device mom_3t_ckt momcap25_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) mom_pw(B) <mom25f> CMACRO MOM_MIS_PRO mom25f 5 2 0
Device mom_3t_ckt momcap35_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) mom_nw(B) <mom35f> CMACRO MOM_MIS_PRO mom35f 5 3 0
Device mom_3t_ckt momcap35_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) mom_pw(B) <mom35f> CMACRO MOM_MIS_PRO mom35f 5 3 0

Device mom_3t_ckt momcap13_3t_wips mom_terminal13(PLUS) mom_terminal13(MINUS) ppoly(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 1
Device mom_3t_ckt momcap14_3t_wips mom_terminal14(PLUS) mom_terminal14(MINUS) ppoly(B) <mom14f> CMACRO MOM_MIS_PRO mom14f 4 1 1
Device mom_3t_ckt momcap24_3t_wips mom_terminal24(PLUS) mom_terminal24(MINUS) ppoly(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 1
Device mom_3t_ckt momcap15_3t_wips mom_terminal15(PLUS) mom_terminal15(MINUS) ppoly(B) <mom15f> CMACRO MOM_MIS_PRO mom15f 5 1 1
Device mom_3t_ckt momcap25_3t_wips mom_terminal25(PLUS) mom_terminal25(MINUS) ppoly(B) <mom25f> CMACRO MOM_MIS_PRO mom25f 5 2 1
Device mom_3t_ckt momcap35_3t_wips mom_terminal35(PLUS) mom_terminal35(MINUS) ppoly(B) <mom35f> CMACRO MOM_MIS_PRO mom35f 5 3 1

Device mom_rf momcap12rf_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) nwell(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 0
Device mom_rf momcap12rf_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) pwell(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 0
Device mom_rf momcap13rf_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) nwell(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 0
Device mom_rf momcap13rf_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) pwell(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 0
Device mom_rf momcap23rf_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) nwell(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 0
Device mom_rf momcap23rf_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) pwell(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 0
Device mom_rf momcap14rf_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) nwell(B) <mom14f> CMACRO MOMRF_PRO mom14f 4 1 0
Device mom_rf momcap14rf_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) pwell(B) <mom14f> CMACRO MOMRF_PRO mom14f 4 1 0
Device mom_rf momcap24rf_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) nwell(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 0
Device mom_rf momcap24rf_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) pwell(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 0
Device mom_rf momcap34rf_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) nwell(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 0
Device mom_rf momcap34rf_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) pwell(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 0
Device mom_rf momcap15rf_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) nwell(B) <mom15f> CMACRO MOMRF_PRO mom15f 5 1 0
Device mom_rf momcap15rf_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) pwell(B) <mom15f> CMACRO MOMRF_PRO mom15f 5 1 0
Device mom_rf momcap25rf_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) nwell(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 0
Device mom_rf momcap25rf_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) pwell(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 0
Device mom_rf momcap35rf_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) nwell(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 0
Device mom_rf momcap35rf_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) pwell(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 0
Device mom_rf momcap45rf_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) nwell(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 0
Device mom_rf momcap45rf_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) pwell(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 0

Device mom_rf momcap12rf_3t_wips mom_terminal12(PLUS) mom_terminal12(MINUS) ppoly(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 1
Device mom_rf momcap13rf_3t_wips mom_terminal13(PLUS) mom_terminal13(MINUS) ppoly(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 1
Device mom_rf momcap23rf_3t_wips mom_terminal23(PLUS) mom_terminal23(MINUS) ppoly(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 1
Device mom_rf momcap14rf_3t_wips mom_terminal14(PLUS) mom_terminal14(MINUS) ppoly(B) <mom14f> CMACRO MOMRF_PRO mom14f 4 1 1
Device mom_rf momcap24rf_3t_wips mom_terminal24(PLUS) mom_terminal24(MINUS) ppoly(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 1
Device mom_rf momcap34rf_3t_wips mom_terminal34(PLUS) mom_terminal34(MINUS) ppoly(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 1
Device mom_rf momcap15rf_3t_wips mom_terminal15(PLUS) mom_terminal15(MINUS) ppoly(B) <mom15f> CMACRO MOMRF_PRO mom15f 5 1 1
Device mom_rf momcap25rf_3t_wips mom_terminal25(PLUS) mom_terminal25(MINUS) ppoly(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 1
Device mom_rf momcap35rf_3t_wips mom_terminal35(PLUS) mom_terminal35(MINUS) ppoly(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 1
Device mom_rf momcap45rf_3t_wips mom_terminal45(PLUS) mom_terminal45(MINUS) ppoly(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 1

Device mom_rf momcap23rf_3t_wim mom_terminal23(PLUS) mom_terminal23(MINUS) metal1(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 2
Device mom_rf momcap24rf_3t_wim mom_terminal24(PLUS) mom_terminal24(MINUS) metal1(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 2
Device mom_rf momcap34rf_3t_wim mom_terminal34(PLUS) mom_terminal34(MINUS) metal2(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 2
Device mom_rf momcap25rf_3t_wim mom_terminal25(PLUS) mom_terminal25(MINUS) metal1(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 2
Device mom_rf momcap35rf_3t_wim mom_terminal35(PLUS) mom_terminal35(MINUS) metal2(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 2
Device mom_rf momcap45rf_3t_wim mom_terminal45(PLUS) mom_terminal45(MINUS) metal3(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 2
#ENDIF
#ENDIF

#IFDEF TOPMETAL 7
#IFDEF TOP_METAL_NUM double
Device mom_2t_ckt momcap12 mom_terminal12(PLUS) mom_terminal12(MINUS) <mom12f> CMACRO MOM_MIS_PRO_2T mom12f 2 1
Device mom_2t_ckt momcap23 mom_terminal23(PLUS) mom_terminal23(MINUS) <mom23f> CMACRO MOM_MIS_PRO_2T mom23f 3 2
Device mom_2t_ckt momcap34 mom_terminal34(PLUS) mom_terminal34(MINUS) <mom34f> CMACRO MOM_MIS_PRO_2T mom34f 4 3
Device mom_2t_ckt momcap45 mom_terminal45(PLUS) mom_terminal45(MINUS) <mom45f> CMACRO MOM_MIS_PRO_2T mom45f 5 4
Device mom_3t_ckt momcap12_3t_wips mom_terminal12(PLUS) mom_terminal12(MINUS) ppoly(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 1
Device mom_3t_ckt momcap23_3t_wips mom_terminal23(PLUS) mom_terminal23(MINUS) ppoly(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 1
Device mom_3t_ckt momcap34_3t_wips mom_terminal34(PLUS) mom_terminal34(MINUS) ppoly(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 1
Device mom_3t_ckt momcap45_3t_wips mom_terminal45(PLUS) mom_terminal45(MINUS) ppoly(B) <mom45f> CMACRO MOM_MIS_PRO mom45f 5 4 1
Device mom_3t_ckt momcap12_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) mom_nw(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 0
Device mom_3t_ckt momcap12_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) mom_pw(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 0
Device mom_3t_ckt momcap23_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) mom_nw(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 0
Device mom_3t_ckt momcap23_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) mom_pw(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 0
Device mom_3t_ckt momcap34_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) mom_nw(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 0
Device mom_3t_ckt momcap34_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) mom_pw(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 0
Device mom_3t_ckt momcap45_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) mom_nw(B) <mom45f> CMACRO MOM_MIS_PRO mom45f 5 4 0
Device mom_3t_ckt momcap45_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) mom_pw(B) <mom45f> CMACRO MOM_MIS_PRO mom45f 5 4 0

Device mom_2t_ckt momcap13 mom_terminal13(PLUS) mom_terminal13(MINUS) <mom13f> CMACRO MOM_MIS_PRO_2T mom13f 3 1
Device mom_2t_ckt momcap24 mom_terminal24(PLUS) mom_terminal24(MINUS) <mom24f> CMACRO MOM_MIS_PRO_2T mom24f 4 2
Device mom_2t_ckt momcap14 mom_terminal14(PLUS) mom_terminal14(MINUS) <mom14f> CMACRO MOM_MIS_PRO_2T mom14f 4 1
Device mom_2t_ckt momcap15 mom_terminal15(PLUS) mom_terminal15(MINUS) <mom15f> CMACRO MOM_MIS_PRO_2T mom15f 5 1
Device mom_2t_ckt momcap25 mom_terminal25(PLUS) mom_terminal25(MINUS) <mom25f> CMACRO MOM_MIS_PRO_2T mom25f 5 2
Device mom_2t_ckt momcap35 mom_terminal35(PLUS) mom_terminal35(MINUS) <mom35f> CMACRO MOM_MIS_PRO_2T mom35f 5 3

Device mom_3t_ckt momcap13_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) mom_nw(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 0
Device mom_3t_ckt momcap13_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) mom_pw(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 0
Device mom_3t_ckt momcap14_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) mom_nw(B) <mom14f> CMACRO MOM_MIS_PRO mom14f 4 1 0
Device mom_3t_ckt momcap14_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) mom_pw(B) <mom14f> CMACRO MOM_MIS_PRO mom14f 4 1 0
Device mom_3t_ckt momcap24_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) mom_nw(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 0
Device mom_3t_ckt momcap24_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) mom_pw(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 0
Device mom_3t_ckt momcap15_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) mom_nw(B) <mom15f> CMACRO MOM_MIS_PRO mom15f 5 1 0
Device mom_3t_ckt momcap15_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) mom_pw(B) <mom15f> CMACRO MOM_MIS_PRO mom15f 5 1 0
Device mom_3t_ckt momcap25_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) mom_nw(B) <mom25f> CMACRO MOM_MIS_PRO mom25f 5 2 0
Device mom_3t_ckt momcap25_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) mom_pw(B) <mom25f> CMACRO MOM_MIS_PRO mom25f 5 2 0
Device mom_3t_ckt momcap35_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) mom_nw(B) <mom35f> CMACRO MOM_MIS_PRO mom35f 5 3 0
Device mom_3t_ckt momcap35_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) mom_pw(B) <mom35f> CMACRO MOM_MIS_PRO mom35f 5 3 0

Device mom_3t_ckt momcap13_3t_wips mom_terminal13(PLUS) mom_terminal13(MINUS) ppoly(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 1
Device mom_3t_ckt momcap14_3t_wips mom_terminal14(PLUS) mom_terminal14(MINUS) ppoly(B) <mom14f> CMACRO MOM_MIS_PRO mom14f 4 1 1
Device mom_3t_ckt momcap24_3t_wips mom_terminal24(PLUS) mom_terminal24(MINUS) ppoly(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 1
Device mom_3t_ckt momcap15_3t_wips mom_terminal15(PLUS) mom_terminal15(MINUS) ppoly(B) <mom15f> CMACRO MOM_MIS_PRO mom15f 5 1 1
Device mom_3t_ckt momcap25_3t_wips mom_terminal25(PLUS) mom_terminal25(MINUS) ppoly(B) <mom25f> CMACRO MOM_MIS_PRO mom25f 5 2 1
Device mom_3t_ckt momcap35_3t_wips mom_terminal35(PLUS) mom_terminal35(MINUS) ppoly(B) <mom35f> CMACRO MOM_MIS_PRO mom35f 5 3 1

Device mom_rf momcap12rf_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) nwell(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 0
Device mom_rf momcap12rf_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) pwell(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 0
Device mom_rf momcap13rf_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) nwell(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 0
Device mom_rf momcap13rf_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) pwell(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 0
Device mom_rf momcap23rf_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) nwell(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 0
Device mom_rf momcap23rf_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) pwell(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 0
Device mom_rf momcap14rf_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) nwell(B) <mom14f> CMACRO MOMRF_PRO mom14f 4 1 0
Device mom_rf momcap14rf_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) pwell(B) <mom14f> CMACRO MOMRF_PRO mom14f 4 1 0
Device mom_rf momcap24rf_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) nwell(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 0
Device mom_rf momcap24rf_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) pwell(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 0
Device mom_rf momcap34rf_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) nwell(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 0
Device mom_rf momcap34rf_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) pwell(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 0
Device mom_rf momcap15rf_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) nwell(B) <mom15f> CMACRO MOMRF_PRO mom15f 5 1 0
Device mom_rf momcap15rf_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) pwell(B) <mom15f> CMACRO MOMRF_PRO mom15f 5 1 0
Device mom_rf momcap25rf_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) nwell(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 0
Device mom_rf momcap25rf_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) pwell(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 0
Device mom_rf momcap35rf_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) nwell(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 0
Device mom_rf momcap35rf_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) pwell(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 0
Device mom_rf momcap45rf_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) nwell(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 0
Device mom_rf momcap45rf_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) pwell(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 0

Device mom_rf momcap12rf_3t_wips mom_terminal12(PLUS) mom_terminal12(MINUS) ppoly(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 1
Device mom_rf momcap13rf_3t_wips mom_terminal13(PLUS) mom_terminal13(MINUS) ppoly(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 1
Device mom_rf momcap23rf_3t_wips mom_terminal23(PLUS) mom_terminal23(MINUS) ppoly(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 1
Device mom_rf momcap14rf_3t_wips mom_terminal14(PLUS) mom_terminal14(MINUS) ppoly(B) <mom14f> CMACRO MOMRF_PRO mom14f 4 1 1
Device mom_rf momcap24rf_3t_wips mom_terminal24(PLUS) mom_terminal24(MINUS) ppoly(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 1
Device mom_rf momcap34rf_3t_wips mom_terminal34(PLUS) mom_terminal34(MINUS) ppoly(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 1
Device mom_rf momcap15rf_3t_wips mom_terminal15(PLUS) mom_terminal15(MINUS) ppoly(B) <mom15f> CMACRO MOMRF_PRO mom15f 5 1 1
Device mom_rf momcap25rf_3t_wips mom_terminal25(PLUS) mom_terminal25(MINUS) ppoly(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 1
Device mom_rf momcap35rf_3t_wips mom_terminal35(PLUS) mom_terminal35(MINUS) ppoly(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 1
Device mom_rf momcap45rf_3t_wips mom_terminal45(PLUS) mom_terminal45(MINUS) ppoly(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 1

Device mom_rf momcap23rf_3t_wim mom_terminal23(PLUS) mom_terminal23(MINUS) metal1(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 2
Device mom_rf momcap24rf_3t_wim mom_terminal24(PLUS) mom_terminal24(MINUS) metal1(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 2
Device mom_rf momcap34rf_3t_wim mom_terminal34(PLUS) mom_terminal34(MINUS) metal2(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 2
Device mom_rf momcap25rf_3t_wim mom_terminal25(PLUS) mom_terminal25(MINUS) metal1(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 2
Device mom_rf momcap35rf_3t_wim mom_terminal35(PLUS) mom_terminal35(MINUS) metal2(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 2
Device mom_rf momcap45rf_3t_wim mom_terminal45(PLUS) mom_terminal45(MINUS) metal3(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 2
#ENDIF
#ENDIF

#IFDEF TOPMETAL 7
#IFDEF TOP_METAL_NUM single
Device mom_2t_ckt momcap12 mom_terminal12(PLUS) mom_terminal12(MINUS) <mom12f> CMACRO MOM_MIS_PRO_2T mom12f 2 1
Device mom_2t_ckt momcap23 mom_terminal23(PLUS) mom_terminal23(MINUS) <mom23f> CMACRO MOM_MIS_PRO_2T mom23f 3 2
Device mom_2t_ckt momcap34 mom_terminal34(PLUS) mom_terminal34(MINUS) <mom34f> CMACRO MOM_MIS_PRO_2T mom34f 4 3
Device mom_2t_ckt momcap45 mom_terminal45(PLUS) mom_terminal45(MINUS) <mom45f> CMACRO MOM_MIS_PRO_2T mom45f 5 4
Device mom_2t_ckt momcap56 mom_terminal56(PLUS) mom_terminal56(MINUS) <mom56f> CMACRO MOM_MIS_PRO_2T mom56f 6 5
Device mom_3t_ckt momcap12_3t_wips mom_terminal12(PLUS) mom_terminal12(MINUS) ppoly(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 1
Device mom_3t_ckt momcap23_3t_wips mom_terminal23(PLUS) mom_terminal23(MINUS) ppoly(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 1
Device mom_3t_ckt momcap34_3t_wips mom_terminal34(PLUS) mom_terminal34(MINUS) ppoly(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 1
Device mom_3t_ckt momcap45_3t_wips mom_terminal45(PLUS) mom_terminal45(MINUS) ppoly(B) <mom45f> CMACRO MOM_MIS_PRO mom45f 5 4 1
Device mom_3t_ckt momcap56_3t_wips mom_terminal56(PLUS) mom_terminal56(MINUS) ppoly(B) <mom56f> CMACRO MOM_MIS_PRO mom56f 6 5 1
Device mom_3t_ckt momcap12_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) mom_nw(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 0
Device mom_3t_ckt momcap12_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) mom_pw(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 0
Device mom_3t_ckt momcap23_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) mom_nw(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 0
Device mom_3t_ckt momcap23_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) mom_pw(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 0
Device mom_3t_ckt momcap34_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) mom_nw(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 0
Device mom_3t_ckt momcap34_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) mom_pw(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 0
Device mom_3t_ckt momcap45_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) mom_nw(B) <mom45f> CMACRO MOM_MIS_PRO mom45f 5 4 0
Device mom_3t_ckt momcap45_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) mom_pw(B) <mom45f> CMACRO MOM_MIS_PRO mom45f 5 4 0
Device mom_3t_ckt momcap56_3t_wops mom_terminal56(PLUS) mom_terminal56(MINUS) mom_nw(B) <mom56f> CMACRO MOM_MIS_PRO mom56f 6 5 0
Device mom_3t_ckt momcap56_3t_wops mom_terminal56(PLUS) mom_terminal56(MINUS) mom_pw(B) <mom56f> CMACRO MOM_MIS_PRO mom56f 6 5 0

Device mom_2t_ckt momcap13 mom_terminal13(PLUS) mom_terminal13(MINUS) <mom13f> CMACRO MOM_MIS_PRO_2T mom13f 3 1
Device mom_2t_ckt momcap24 mom_terminal24(PLUS) mom_terminal24(MINUS) <mom24f> CMACRO MOM_MIS_PRO_2T mom24f 4 2
Device mom_2t_ckt momcap14 mom_terminal14(PLUS) mom_terminal14(MINUS) <mom14f> CMACRO MOM_MIS_PRO_2T mom14f 4 1
Device mom_2t_ckt momcap15 mom_terminal15(PLUS) mom_terminal15(MINUS) <mom15f> CMACRO MOM_MIS_PRO_2T mom15f 5 1
Device mom_2t_ckt momcap25 mom_terminal25(PLUS) mom_terminal25(MINUS) <mom25f> CMACRO MOM_MIS_PRO_2T mom25f 5 2
Device mom_2t_ckt momcap35 mom_terminal35(PLUS) mom_terminal35(MINUS) <mom35f> CMACRO MOM_MIS_PRO_2T mom35f 5 3
Device mom_2t_ckt momcap16 mom_terminal16(PLUS) mom_terminal16(MINUS) <mom16f> CMACRO MOM_MIS_PRO_2T mom16f 6 1
Device mom_2t_ckt momcap26 mom_terminal26(PLUS) mom_terminal26(MINUS) <mom26f> CMACRO MOM_MIS_PRO_2T mom26f 6 2
Device mom_2t_ckt momcap36 mom_terminal36(PLUS) mom_terminal36(MINUS) <mom36f> CMACRO MOM_MIS_PRO_2T mom36f 6 3
Device mom_2t_ckt momcap46 mom_terminal46(PLUS) mom_terminal46(MINUS) <mom46f> CMACRO MOM_MIS_PRO_2T mom46f 6 4

Device mom_3t_ckt momcap13_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) mom_nw(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 0
Device mom_3t_ckt momcap13_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) mom_pw(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 0
Device mom_3t_ckt momcap14_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) mom_nw(B) <mom14f> CMACRO MOM_MIS_PRO mom14f 4 1 0
Device mom_3t_ckt momcap14_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) mom_pw(B) <mom14f> CMACRO MOM_MIS_PRO mom14f 4 1 0
Device mom_3t_ckt momcap24_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) mom_nw(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 0
Device mom_3t_ckt momcap24_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) mom_pw(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 0
Device mom_3t_ckt momcap15_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) mom_nw(B) <mom15f> CMACRO MOM_MIS_PRO mom15f 5 1 0
Device mom_3t_ckt momcap15_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) mom_pw(B) <mom15f> CMACRO MOM_MIS_PRO mom15f 5 1 0
Device mom_3t_ckt momcap25_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) mom_nw(B) <mom25f> CMACRO MOM_MIS_PRO mom25f 5 2 0
Device mom_3t_ckt momcap25_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) mom_pw(B) <mom25f> CMACRO MOM_MIS_PRO mom25f 5 2 0
Device mom_3t_ckt momcap35_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) mom_nw(B) <mom35f> CMACRO MOM_MIS_PRO mom35f 5 3 0
Device mom_3t_ckt momcap35_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) mom_pw(B) <mom35f> CMACRO MOM_MIS_PRO mom35f 5 3 0
Device mom_3t_ckt momcap16_3t_wops mom_terminal16(PLUS) mom_terminal16(MINUS) mom_nw(B) <mom16f> CMACRO MOM_MIS_PRO mom16f 6 1 0
Device mom_3t_ckt momcap16_3t_wops mom_terminal16(PLUS) mom_terminal16(MINUS) mom_pw(B) <mom16f> CMACRO MOM_MIS_PRO mom16f 6 1 0
Device mom_3t_ckt momcap26_3t_wops mom_terminal26(PLUS) mom_terminal26(MINUS) mom_nw(B) <mom26f> CMACRO MOM_MIS_PRO mom26f 6 2 0
Device mom_3t_ckt momcap26_3t_wops mom_terminal26(PLUS) mom_terminal26(MINUS) mom_pw(B) <mom26f> CMACRO MOM_MIS_PRO mom26f 6 2 0
Device mom_3t_ckt momcap36_3t_wops mom_terminal36(PLUS) mom_terminal36(MINUS) mom_nw(B) <mom36f> CMACRO MOM_MIS_PRO mom36f 6 3 0
Device mom_3t_ckt momcap36_3t_wops mom_terminal36(PLUS) mom_terminal36(MINUS) mom_pw(B) <mom36f> CMACRO MOM_MIS_PRO mom36f 6 3 0
Device mom_3t_ckt momcap46_3t_wops mom_terminal46(PLUS) mom_terminal46(MINUS) mom_nw(B) <mom46f> CMACRO MOM_MIS_PRO mom46f 6 4 0
Device mom_3t_ckt momcap46_3t_wops mom_terminal46(PLUS) mom_terminal46(MINUS) mom_pw(B) <mom46f> CMACRO MOM_MIS_PRO mom46f 6 4 0

Device mom_3t_ckt momcap13_3t_wips mom_terminal13(PLUS) mom_terminal13(MINUS) ppoly(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 1
Device mom_3t_ckt momcap14_3t_wips mom_terminal14(PLUS) mom_terminal14(MINUS) ppoly(B) <mom14f> CMACRO MOM_MIS_PRO mom14f 4 1 1
Device mom_3t_ckt momcap24_3t_wips mom_terminal24(PLUS) mom_terminal24(MINUS) ppoly(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 1
Device mom_3t_ckt momcap15_3t_wips mom_terminal15(PLUS) mom_terminal15(MINUS) ppoly(B) <mom15f> CMACRO MOM_MIS_PRO mom15f 5 1 1
Device mom_3t_ckt momcap25_3t_wips mom_terminal25(PLUS) mom_terminal25(MINUS) ppoly(B) <mom25f> CMACRO MOM_MIS_PRO mom25f 5 2 1
Device mom_3t_ckt momcap35_3t_wips mom_terminal35(PLUS) mom_terminal35(MINUS) ppoly(B) <mom35f> CMACRO MOM_MIS_PRO mom35f 5 3 1
Device mom_3t_ckt momcap16_3t_wips mom_terminal16(PLUS) mom_terminal16(MINUS) ppoly(B) <mom16f> CMACRO MOM_MIS_PRO mom16f 6 1 1
Device mom_3t_ckt momcap26_3t_wips mom_terminal26(PLUS) mom_terminal26(MINUS) ppoly(B) <mom26f> CMACRO MOM_MIS_PRO mom26f 6 2 1
Device mom_3t_ckt momcap36_3t_wips mom_terminal36(PLUS) mom_terminal36(MINUS) ppoly(B) <mom36f> CMACRO MOM_MIS_PRO mom36f 6 3 1
Device mom_3t_ckt momcap46_3t_wips mom_terminal46(PLUS) mom_terminal46(MINUS) ppoly(B) <mom46f> CMACRO MOM_MIS_PRO mom46f 6 4 1

Device mom_rf momcap12rf_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) nwell(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 0
Device mom_rf momcap12rf_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) pwell(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 0
Device mom_rf momcap13rf_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) nwell(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 0
Device mom_rf momcap13rf_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) pwell(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 0
Device mom_rf momcap23rf_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) nwell(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 0
Device mom_rf momcap23rf_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) pwell(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 0
Device mom_rf momcap14rf_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) nwell(B) <mom14f> CMACRO MOMRF_PRO mom14f 4 1 0
Device mom_rf momcap14rf_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) pwell(B) <mom14f> CMACRO MOMRF_PRO mom14f 4 1 0
Device mom_rf momcap24rf_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) nwell(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 0
Device mom_rf momcap24rf_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) pwell(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 0
Device mom_rf momcap34rf_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) nwell(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 0
Device mom_rf momcap34rf_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) pwell(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 0
Device mom_rf momcap15rf_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) nwell(B) <mom15f> CMACRO MOMRF_PRO mom15f 5 1 0
Device mom_rf momcap15rf_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) pwell(B) <mom15f> CMACRO MOMRF_PRO mom15f 5 1 0
Device mom_rf momcap25rf_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) nwell(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 0
Device mom_rf momcap25rf_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) pwell(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 0
Device mom_rf momcap35rf_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) nwell(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 0
Device mom_rf momcap35rf_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) pwell(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 0
Device mom_rf momcap45rf_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) nwell(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 0
Device mom_rf momcap45rf_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) pwell(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 0
Device mom_rf momcap16rf_3t_wops mom_terminal16(PLUS) mom_terminal16(MINUS) nwell(B) <mom16f> CMACRO MOMRF_PRO mom16f 6 1 0
Device mom_rf momcap16rf_3t_wops mom_terminal16(PLUS) mom_terminal16(MINUS) pwell(B) <mom16f> CMACRO MOMRF_PRO mom16f 6 1 0
Device mom_rf momcap26rf_3t_wops mom_terminal26(PLUS) mom_terminal26(MINUS) nwell(B) <mom26f_rf> CMACRO MOMRF_PRO mom26f_rf 6 2 0
Device mom_rf momcap26rf_3t_wops mom_terminal26(PLUS) mom_terminal26(MINUS) pwell(B) <mom26f_rf> CMACRO MOMRF_PRO mom26f_rf 6 2 0
Device mom_rf momcap36rf_3t_wops mom_terminal36(PLUS) mom_terminal36(MINUS) nwell(B) <mom36f_rf> CMACRO MOMRF_PRO mom36f_rf 6 3 0
Device mom_rf momcap36rf_3t_wops mom_terminal36(PLUS) mom_terminal36(MINUS) pwell(B) <mom36f_rf> CMACRO MOMRF_PRO mom36f_rf 6 3 0
Device mom_rf momcap46rf_3t_wops mom_terminal46(PLUS) mom_terminal46(MINUS) nwell(B) <mom46f_rf> CMACRO MOMRF_PRO mom46f_rf 6 4 0
Device mom_rf momcap46rf_3t_wops mom_terminal46(PLUS) mom_terminal46(MINUS) pwell(B) <mom46f_rf> CMACRO MOMRF_PRO mom46f_rf 6 4 0
Device mom_rf momcap56rf_3t_wops mom_terminal56(PLUS) mom_terminal56(MINUS) nwell(B) <mom56f_rf> CMACRO MOMRF_PRO mom56f_rf 6 5 0
Device mom_rf momcap56rf_3t_wops mom_terminal56(PLUS) mom_terminal56(MINUS) pwell(B) <mom56f_rf> CMACRO MOMRF_PRO mom56f_rf 6 5 0

Device mom_rf momcap12rf_3t_wips mom_terminal12(PLUS) mom_terminal12(MINUS) ppoly(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 1
Device mom_rf momcap13rf_3t_wips mom_terminal13(PLUS) mom_terminal13(MINUS) ppoly(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 1
Device mom_rf momcap23rf_3t_wips mom_terminal23(PLUS) mom_terminal23(MINUS) ppoly(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 1
Device mom_rf momcap14rf_3t_wips mom_terminal14(PLUS) mom_terminal14(MINUS) ppoly(B) <mom14f> CMACRO MOMRF_PRO mom14f 4 1 1
Device mom_rf momcap24rf_3t_wips mom_terminal24(PLUS) mom_terminal24(MINUS) ppoly(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 1
Device mom_rf momcap34rf_3t_wips mom_terminal34(PLUS) mom_terminal34(MINUS) ppoly(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 1
Device mom_rf momcap15rf_3t_wips mom_terminal15(PLUS) mom_terminal15(MINUS) ppoly(B) <mom15f> CMACRO MOMRF_PRO mom15f 5 1 1
Device mom_rf momcap25rf_3t_wips mom_terminal25(PLUS) mom_terminal25(MINUS) ppoly(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 1
Device mom_rf momcap35rf_3t_wips mom_terminal35(PLUS) mom_terminal35(MINUS) ppoly(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 1
Device mom_rf momcap45rf_3t_wips mom_terminal45(PLUS) mom_terminal45(MINUS) ppoly(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 1
Device mom_rf momcap16rf_3t_wips mom_terminal16(PLUS) mom_terminal16(MINUS) ppoly(B) <mom16f> CMACRO MOMRF_PRO mom16f 6 1 1
Device mom_rf momcap26rf_3t_wips mom_terminal26(PLUS) mom_terminal26(MINUS) ppoly(B) <mom26f_rf> CMACRO MOMRF_PRO mom26f_rf 6 2 1
Device mom_rf momcap36rf_3t_wips mom_terminal36(PLUS) mom_terminal36(MINUS) ppoly(B) <mom36f_rf> CMACRO MOMRF_PRO mom36f_rf 6 3 1
Device mom_rf momcap46rf_3t_wips mom_terminal46(PLUS) mom_terminal46(MINUS) ppoly(B) <mom46f_rf> CMACRO MOMRF_PRO mom46f_rf 6 4 1
Device mom_rf momcap56rf_3t_wips mom_terminal56(PLUS) mom_terminal56(MINUS) ppoly(B) <mom56f_rf> CMACRO MOMRF_PRO mom56f_rf 6 5 1

Device mom_rf momcap23rf_3t_wim mom_terminal23(PLUS) mom_terminal23(MINUS) metal1(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 2
Device mom_rf momcap24rf_3t_wim mom_terminal24(PLUS) mom_terminal24(MINUS) metal1(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 2
Device mom_rf momcap34rf_3t_wim mom_terminal34(PLUS) mom_terminal34(MINUS) metal2(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 2
Device mom_rf momcap25rf_3t_wim mom_terminal25(PLUS) mom_terminal25(MINUS) metal1(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 2
Device mom_rf momcap35rf_3t_wim mom_terminal35(PLUS) mom_terminal35(MINUS) metal2(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 2
Device mom_rf momcap45rf_3t_wim mom_terminal45(PLUS) mom_terminal45(MINUS) metal3(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 2
Device mom_rf momcap26rf_3t_wim mom_terminal26(PLUS) mom_terminal26(MINUS) metal1(B) <mom26f_rf> CMACRO MOMRF_PRO mom26f_rf 6 2 2
Device mom_rf momcap36rf_3t_wim mom_terminal36(PLUS) mom_terminal36(MINUS) metal2(B) <mom36f_rf> CMACRO MOMRF_PRO mom36f_rf 6 3 2
Device mom_rf momcap46rf_3t_wim mom_terminal46(PLUS) mom_terminal46(MINUS) metal3(B) <mom46f_rf> CMACRO MOMRF_PRO mom46f_rf 6 4 2
Device mom_rf momcap56rf_3t_wim mom_terminal56(PLUS) mom_terminal56(MINUS) metal4(B) <mom56f_rf> CMACRO MOMRF_PRO mom56f_rf 6 5 2
#ENDIF
#ENDIF

#IFDEF TOPMETAL 8
#IFDEF TOP_METAL_NUM double
Device mom_2t_ckt momcap12 mom_terminal12(PLUS) mom_terminal12(MINUS) <mom12f> CMACRO MOM_MIS_PRO_2T mom12f 2 1
Device mom_2t_ckt momcap23 mom_terminal23(PLUS) mom_terminal23(MINUS) <mom23f> CMACRO MOM_MIS_PRO_2T mom23f 3 2
Device mom_2t_ckt momcap34 mom_terminal34(PLUS) mom_terminal34(MINUS) <mom34f> CMACRO MOM_MIS_PRO_2T mom34f 4 3
Device mom_2t_ckt momcap45 mom_terminal45(PLUS) mom_terminal45(MINUS) <mom45f> CMACRO MOM_MIS_PRO_2T mom45f 5 4
Device mom_2t_ckt momcap56 mom_terminal56(PLUS) mom_terminal56(MINUS) <mom56f> CMACRO MOM_MIS_PRO_2T mom56f 6 5
Device mom_3t_ckt momcap12_3t_wips mom_terminal12(PLUS) mom_terminal12(MINUS) ppoly(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 1
Device mom_3t_ckt momcap23_3t_wips mom_terminal23(PLUS) mom_terminal23(MINUS) ppoly(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 1
Device mom_3t_ckt momcap34_3t_wips mom_terminal34(PLUS) mom_terminal34(MINUS) ppoly(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 1
Device mom_3t_ckt momcap45_3t_wips mom_terminal45(PLUS) mom_terminal45(MINUS) ppoly(B) <mom45f> CMACRO MOM_MIS_PRO mom45f 5 4 1
Device mom_3t_ckt momcap56_3t_wips mom_terminal56(PLUS) mom_terminal56(MINUS) ppoly(B) <mom56f> CMACRO MOM_MIS_PRO mom56f 6 5 1

Device mom_3t_ckt momcap12_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) mom_nw(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 0
Device mom_3t_ckt momcap12_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) mom_pw(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 0
Device mom_3t_ckt momcap23_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) mom_nw(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 0
Device mom_3t_ckt momcap23_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) mom_pw(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 0
Device mom_3t_ckt momcap34_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) mom_nw(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 0
Device mom_3t_ckt momcap34_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) mom_pw(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 0
Device mom_3t_ckt momcap45_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) mom_nw(B) <mom45f> CMACRO MOM_MIS_PRO mom45f 5 4 0
Device mom_3t_ckt momcap45_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) mom_pw(B) <mom45f> CMACRO MOM_MIS_PRO mom45f 5 4 0
Device mom_3t_ckt momcap56_3t_wops mom_terminal56(PLUS) mom_terminal56(MINUS) mom_nw(B) <mom56f> CMACRO MOM_MIS_PRO mom56f 6 5 0
Device mom_3t_ckt momcap56_3t_wops mom_terminal56(PLUS) mom_terminal56(MINUS) mom_pw(B) <mom56f> CMACRO MOM_MIS_PRO mom56f 6 5 0

Device mom_2t_ckt momcap13 mom_terminal13(PLUS) mom_terminal13(MINUS) <mom13f> CMACRO MOM_MIS_PRO_2T mom13f 3 1
Device mom_2t_ckt momcap24 mom_terminal24(PLUS) mom_terminal24(MINUS) <mom24f> CMACRO MOM_MIS_PRO_2T mom24f 4 2
Device mom_2t_ckt momcap14 mom_terminal14(PLUS) mom_terminal14(MINUS) <mom14f> CMACRO MOM_MIS_PRO_2T mom14f 4 1
Device mom_2t_ckt momcap15 mom_terminal15(PLUS) mom_terminal15(MINUS) <mom15f> CMACRO MOM_MIS_PRO_2T mom15f 5 1
Device mom_2t_ckt momcap25 mom_terminal25(PLUS) mom_terminal25(MINUS) <mom25f> CMACRO MOM_MIS_PRO_2T mom25f 5 2
Device mom_2t_ckt momcap35 mom_terminal35(PLUS) mom_terminal35(MINUS) <mom35f> CMACRO MOM_MIS_PRO_2T mom35f 5 3
Device mom_2t_ckt momcap16 mom_terminal16(PLUS) mom_terminal16(MINUS) <mom16f> CMACRO MOM_MIS_PRO_2T mom16f 6 1
Device mom_2t_ckt momcap26 mom_terminal26(PLUS) mom_terminal26(MINUS) <mom26f> CMACRO MOM_MIS_PRO_2T mom26f 6 2
Device mom_2t_ckt momcap36 mom_terminal36(PLUS) mom_terminal36(MINUS) <mom36f> CMACRO MOM_MIS_PRO_2T mom36f 6 3
Device mom_2t_ckt momcap46 mom_terminal46(PLUS) mom_terminal46(MINUS) <mom46f> CMACRO MOM_MIS_PRO_2T mom46f 6 4

Device mom_3t_ckt momcap13_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) mom_nw(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 0
Device mom_3t_ckt momcap13_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) mom_pw(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 0
Device mom_3t_ckt momcap14_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) mom_nw(B) <mom14f> CMACRO MOM_MIS_PRO mom14f 4 1 0
Device mom_3t_ckt momcap14_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) mom_pw(B) <mom14f> CMACRO MOM_MIS_PRO mom14f 4 1 0
Device mom_3t_ckt momcap24_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) mom_nw(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 0
Device mom_3t_ckt momcap24_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) mom_pw(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 0
Device mom_3t_ckt momcap15_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) mom_nw(B) <mom15f> CMACRO MOM_MIS_PRO mom15f 5 1 0
Device mom_3t_ckt momcap15_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) mom_pw(B) <mom15f> CMACRO MOM_MIS_PRO mom15f 5 1 0
Device mom_3t_ckt momcap25_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) mom_nw(B) <mom25f> CMACRO MOM_MIS_PRO mom25f 5 2 0
Device mom_3t_ckt momcap25_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) mom_pw(B) <mom25f> CMACRO MOM_MIS_PRO mom25f 5 2 0
Device mom_3t_ckt momcap35_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) mom_nw(B) <mom35f> CMACRO MOM_MIS_PRO mom35f 5 3 0
Device mom_3t_ckt momcap35_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) mom_pw(B) <mom35f> CMACRO MOM_MIS_PRO mom35f 5 3 0
Device mom_3t_ckt momcap16_3t_wops mom_terminal16(PLUS) mom_terminal16(MINUS) mom_nw(B) <mom16f> CMACRO MOM_MIS_PRO mom16f 6 1 0
Device mom_3t_ckt momcap16_3t_wops mom_terminal16(PLUS) mom_terminal16(MINUS) mom_pw(B) <mom16f> CMACRO MOM_MIS_PRO mom16f 6 1 0
Device mom_3t_ckt momcap26_3t_wops mom_terminal26(PLUS) mom_terminal26(MINUS) mom_nw(B) <mom26f> CMACRO MOM_MIS_PRO mom26f 6 2 0
Device mom_3t_ckt momcap26_3t_wops mom_terminal26(PLUS) mom_terminal26(MINUS) mom_pw(B) <mom26f> CMACRO MOM_MIS_PRO mom26f 6 2 0
Device mom_3t_ckt momcap36_3t_wops mom_terminal36(PLUS) mom_terminal36(MINUS) mom_nw(B) <mom36f> CMACRO MOM_MIS_PRO mom36f 6 3 0
Device mom_3t_ckt momcap36_3t_wops mom_terminal36(PLUS) mom_terminal36(MINUS) mom_pw(B) <mom36f> CMACRO MOM_MIS_PRO mom36f 6 3 0
Device mom_3t_ckt momcap46_3t_wops mom_terminal46(PLUS) mom_terminal46(MINUS) mom_nw(B) <mom46f> CMACRO MOM_MIS_PRO mom46f 6 4 0
Device mom_3t_ckt momcap46_3t_wops mom_terminal46(PLUS) mom_terminal46(MINUS) mom_pw(B) <mom46f> CMACRO MOM_MIS_PRO mom46f 6 4 0

Device mom_3t_ckt momcap13_3t_wips mom_terminal13(PLUS) mom_terminal13(MINUS) ppoly(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 1
Device mom_3t_ckt momcap14_3t_wips mom_terminal14(PLUS) mom_terminal14(MINUS) ppoly(B) <mom14f> CMACRO MOM_MIS_PRO mom14f 4 1 1
Device mom_3t_ckt momcap24_3t_wips mom_terminal24(PLUS) mom_terminal24(MINUS) ppoly(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 1
Device mom_3t_ckt momcap15_3t_wips mom_terminal15(PLUS) mom_terminal15(MINUS) ppoly(B) <mom15f> CMACRO MOM_MIS_PRO mom15f 5 1 1
Device mom_3t_ckt momcap25_3t_wips mom_terminal25(PLUS) mom_terminal25(MINUS) ppoly(B) <mom25f> CMACRO MOM_MIS_PRO mom25f 5 2 1
Device mom_3t_ckt momcap35_3t_wips mom_terminal35(PLUS) mom_terminal35(MINUS) ppoly(B) <mom35f> CMACRO MOM_MIS_PRO mom35f 5 3 1
Device mom_3t_ckt momcap16_3t_wips mom_terminal16(PLUS) mom_terminal16(MINUS) ppoly(B) <mom16f> CMACRO MOM_MIS_PRO mom16f 6 1 1
Device mom_3t_ckt momcap26_3t_wips mom_terminal26(PLUS) mom_terminal26(MINUS) ppoly(B) <mom26f> CMACRO MOM_MIS_PRO mom26f 6 2 1
Device mom_3t_ckt momcap36_3t_wips mom_terminal36(PLUS) mom_terminal36(MINUS) ppoly(B) <mom36f> CMACRO MOM_MIS_PRO mom36f 6 3 1
Device mom_3t_ckt momcap46_3t_wips mom_terminal46(PLUS) mom_terminal46(MINUS) ppoly(B) <mom46f> CMACRO MOM_MIS_PRO mom46f 6 4 1

Device mom_rf momcap12rf_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) nwell(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 0
Device mom_rf momcap12rf_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) pwell(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 0
Device mom_rf momcap13rf_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) nwell(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 0
Device mom_rf momcap13rf_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) pwell(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 0
Device mom_rf momcap23rf_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) nwell(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 0
Device mom_rf momcap23rf_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) pwell(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 0
Device mom_rf momcap14rf_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) nwell(B) <mom14f> CMACRO MOMRF_PRO mom14f 4 1 0
Device mom_rf momcap14rf_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) pwell(B) <mom14f> CMACRO MOMRF_PRO mom14f 4 1 0
Device mom_rf momcap24rf_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) nwell(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 0
Device mom_rf momcap24rf_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) pwell(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 0
Device mom_rf momcap34rf_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) nwell(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 0
Device mom_rf momcap34rf_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) pwell(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 0
Device mom_rf momcap15rf_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) nwell(B) <mom15f> CMACRO MOMRF_PRO mom15f 5 1 0
Device mom_rf momcap15rf_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) pwell(B) <mom15f> CMACRO MOMRF_PRO mom15f 5 1 0
Device mom_rf momcap25rf_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) nwell(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 0
Device mom_rf momcap25rf_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) pwell(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 0
Device mom_rf momcap35rf_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) nwell(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 0
Device mom_rf momcap35rf_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) pwell(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 0
Device mom_rf momcap45rf_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) nwell(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 0
Device mom_rf momcap45rf_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) pwell(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 0
Device mom_rf momcap16rf_3t_wops mom_terminal16(PLUS) mom_terminal16(MINUS) nwell(B) <mom16f> CMACRO MOMRF_PRO mom16f 6 1 0
Device mom_rf momcap16rf_3t_wops mom_terminal16(PLUS) mom_terminal16(MINUS) pwell(B) <mom16f> CMACRO MOMRF_PRO mom16f 6 1 0
Device mom_rf momcap26rf_3t_wops mom_terminal26(PLUS) mom_terminal26(MINUS) nwell(B) <mom26f_rf> CMACRO MOMRF_PRO mom26f_rf 6 2 0
Device mom_rf momcap26rf_3t_wops mom_terminal26(PLUS) mom_terminal26(MINUS) pwell(B) <mom26f_rf> CMACRO MOMRF_PRO mom26f_rf 6 2 0
Device mom_rf momcap36rf_3t_wops mom_terminal36(PLUS) mom_terminal36(MINUS) nwell(B) <mom36f_rf> CMACRO MOMRF_PRO mom36f_rf 6 3 0
Device mom_rf momcap36rf_3t_wops mom_terminal36(PLUS) mom_terminal36(MINUS) pwell(B) <mom36f_rf> CMACRO MOMRF_PRO mom36f_rf 6 3 0
Device mom_rf momcap46rf_3t_wops mom_terminal46(PLUS) mom_terminal46(MINUS) nwell(B) <mom46f_rf> CMACRO MOMRF_PRO mom46f_rf 6 4 0
Device mom_rf momcap46rf_3t_wops mom_terminal46(PLUS) mom_terminal46(MINUS) pwell(B) <mom46f_rf> CMACRO MOMRF_PRO mom46f_rf 6 4 0
Device mom_rf momcap56rf_3t_wops mom_terminal56(PLUS) mom_terminal56(MINUS) nwell(B) <mom56f_rf> CMACRO MOMRF_PRO mom56f_rf 6 5 0
Device mom_rf momcap56rf_3t_wops mom_terminal56(PLUS) mom_terminal56(MINUS) pwell(B) <mom56f_rf> CMACRO MOMRF_PRO mom56f_rf 6 5 0

Device mom_rf momcap12rf_3t_wips mom_terminal12(PLUS) mom_terminal12(MINUS) ppoly(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 1
Device mom_rf momcap13rf_3t_wips mom_terminal13(PLUS) mom_terminal13(MINUS) ppoly(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 1
Device mom_rf momcap23rf_3t_wips mom_terminal23(PLUS) mom_terminal23(MINUS) ppoly(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 1
Device mom_rf momcap14rf_3t_wips mom_terminal14(PLUS) mom_terminal14(MINUS) ppoly(B) <mom14f> CMACRO MOMRF_PRO mom14f 4 1 1
Device mom_rf momcap24rf_3t_wips mom_terminal24(PLUS) mom_terminal24(MINUS) ppoly(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 1
Device mom_rf momcap34rf_3t_wips mom_terminal34(PLUS) mom_terminal34(MINUS) ppoly(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 1
Device mom_rf momcap15rf_3t_wips mom_terminal15(PLUS) mom_terminal15(MINUS) ppoly(B) <mom15f> CMACRO MOMRF_PRO mom15f 5 1 1
Device mom_rf momcap25rf_3t_wips mom_terminal25(PLUS) mom_terminal25(MINUS) ppoly(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 1
Device mom_rf momcap35rf_3t_wips mom_terminal35(PLUS) mom_terminal35(MINUS) ppoly(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 1
Device mom_rf momcap45rf_3t_wips mom_terminal45(PLUS) mom_terminal45(MINUS) ppoly(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 1
Device mom_rf momcap16rf_3t_wips mom_terminal16(PLUS) mom_terminal16(MINUS) ppoly(B) <mom16f> CMACRO MOMRF_PRO mom16f 6 1 1
Device mom_rf momcap26rf_3t_wips mom_terminal26(PLUS) mom_terminal26(MINUS) ppoly(B) <mom26f_rf> CMACRO MOMRF_PRO mom26f_rf 6 2 1
Device mom_rf momcap36rf_3t_wips mom_terminal36(PLUS) mom_terminal36(MINUS) ppoly(B) <mom36f_rf> CMACRO MOMRF_PRO mom36f_rf 6 3 1
Device mom_rf momcap46rf_3t_wips mom_terminal46(PLUS) mom_terminal46(MINUS) ppoly(B) <mom46f_rf> CMACRO MOMRF_PRO mom46f_rf 6 4 1
Device mom_rf momcap56rf_3t_wips mom_terminal56(PLUS) mom_terminal56(MINUS) ppoly(B) <mom56f_rf> CMACRO MOMRF_PRO mom56f_rf 6 5 1

Device mom_rf momcap23rf_3t_wim mom_terminal23(PLUS) mom_terminal23(MINUS) metal1(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 2
Device mom_rf momcap24rf_3t_wim mom_terminal24(PLUS) mom_terminal24(MINUS) metal1(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 2
Device mom_rf momcap34rf_3t_wim mom_terminal34(PLUS) mom_terminal34(MINUS) metal2(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 2
Device mom_rf momcap25rf_3t_wim mom_terminal25(PLUS) mom_terminal25(MINUS) metal1(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 2
Device mom_rf momcap35rf_3t_wim mom_terminal35(PLUS) mom_terminal35(MINUS) metal2(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 2
Device mom_rf momcap45rf_3t_wim mom_terminal45(PLUS) mom_terminal45(MINUS) metal3(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 2
Device mom_rf momcap26rf_3t_wim mom_terminal26(PLUS) mom_terminal26(MINUS) metal1(B) <mom26f_rf> CMACRO MOMRF_PRO mom26f_rf 6 2 2
Device mom_rf momcap36rf_3t_wim mom_terminal36(PLUS) mom_terminal36(MINUS) metal2(B) <mom36f_rf> CMACRO MOMRF_PRO mom36f_rf 6 3 2
Device mom_rf momcap46rf_3t_wim mom_terminal46(PLUS) mom_terminal46(MINUS) metal3(B) <mom46f_rf> CMACRO MOMRF_PRO mom46f_rf 6 4 2
Device mom_rf momcap56rf_3t_wim mom_terminal56(PLUS) mom_terminal56(MINUS) metal4(B) <mom56f_rf> CMACRO MOMRF_PRO mom56f_rf 6 5 2
#ENDIF
#ENDIF

#IFDEF TOPMETAL 8
#IFDEF TOP_METAL_NUM single
Device mom_2t_ckt momcap12 mom_terminal12(PLUS) mom_terminal12(MINUS) <mom12f> CMACRO MOM_MIS_PRO_2T mom12f 2 1
Device mom_2t_ckt momcap23 mom_terminal23(PLUS) mom_terminal23(MINUS) <mom23f> CMACRO MOM_MIS_PRO_2T mom23f 3 2
Device mom_2t_ckt momcap34 mom_terminal34(PLUS) mom_terminal34(MINUS) <mom34f> CMACRO MOM_MIS_PRO_2T mom34f 4 3
Device mom_2t_ckt momcap45 mom_terminal45(PLUS) mom_terminal45(MINUS) <mom45f> CMACRO MOM_MIS_PRO_2T mom45f 5 4
Device mom_2t_ckt momcap56 mom_terminal56(PLUS) mom_terminal56(MINUS) <mom56f> CMACRO MOM_MIS_PRO_2T mom56f 6 5
Device mom_3t_ckt momcap12_3t_wips mom_terminal12(PLUS) mom_terminal12(MINUS) ppoly(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 1
Device mom_3t_ckt momcap23_3t_wips mom_terminal23(PLUS) mom_terminal23(MINUS) ppoly(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 1
Device mom_3t_ckt momcap34_3t_wips mom_terminal34(PLUS) mom_terminal34(MINUS) ppoly(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 1
Device mom_3t_ckt momcap45_3t_wips mom_terminal45(PLUS) mom_terminal45(MINUS) ppoly(B) <mom45f> CMACRO MOM_MIS_PRO mom45f 5 4 1
Device mom_3t_ckt momcap56_3t_wips mom_terminal56(PLUS) mom_terminal56(MINUS) ppoly(B) <mom56f> CMACRO MOM_MIS_PRO mom56f 6 5 1
Device mom_3t_ckt momcap12_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) mom_nw(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 0
Device mom_3t_ckt momcap12_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) mom_pw(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 0
Device mom_3t_ckt momcap23_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) mom_nw(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 0
Device mom_3t_ckt momcap23_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) mom_pw(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 0
Device mom_3t_ckt momcap34_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) mom_nw(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 0
Device mom_3t_ckt momcap34_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) mom_pw(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 0
Device mom_3t_ckt momcap45_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) mom_nw(B) <mom45f> CMACRO MOM_MIS_PRO mom45f 5 4 0
Device mom_3t_ckt momcap45_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) mom_pw(B) <mom45f> CMACRO MOM_MIS_PRO mom45f 5 4 0
Device mom_3t_ckt momcap56_3t_wops mom_terminal56(PLUS) mom_terminal56(MINUS) mom_nw(B) <mom56f> CMACRO MOM_MIS_PRO mom56f 6 5 0
Device mom_3t_ckt momcap56_3t_wops mom_terminal56(PLUS) mom_terminal56(MINUS) mom_pw(B) <mom56f> CMACRO MOM_MIS_PRO mom56f 6 5 0

Device mom_2t_ckt momcap13 mom_terminal13(PLUS) mom_terminal13(MINUS) <mom13f> CMACRO MOM_MIS_PRO_2T mom13f 3 1 
Device mom_2t_ckt momcap24 mom_terminal24(PLUS) mom_terminal24(MINUS) <mom24f> CMACRO MOM_MIS_PRO_2T mom24f 4 2
Device mom_2t_ckt momcap14 mom_terminal14(PLUS) mom_terminal14(MINUS) <mom14f> CMACRO MOM_MIS_PRO_2T mom14f 4 1
Device mom_2t_ckt momcap15 mom_terminal15(PLUS) mom_terminal15(MINUS) <mom15f> CMACRO MOM_MIS_PRO_2T mom15f 5 1
Device mom_2t_ckt momcap25 mom_terminal25(PLUS) mom_terminal25(MINUS) <mom25f> CMACRO MOM_MIS_PRO_2T mom25f 5 2
Device mom_2t_ckt momcap35 mom_terminal35(PLUS) mom_terminal35(MINUS) <mom35f> CMACRO MOM_MIS_PRO_2T mom35f 5 3
Device mom_2t_ckt momcap16 mom_terminal16(PLUS) mom_terminal16(MINUS) <mom16f> CMACRO MOM_MIS_PRO_2T mom16f 6 1
Device mom_2t_ckt momcap26 mom_terminal26(PLUS) mom_terminal26(MINUS) <mom26f> CMACRO MOM_MIS_PRO_2T mom26f 6 2
Device mom_2t_ckt momcap36 mom_terminal36(PLUS) mom_terminal36(MINUS) <mom36f> CMACRO MOM_MIS_PRO_2T mom36f 6 3
Device mom_2t_ckt momcap46 mom_terminal46(PLUS) mom_terminal46(MINUS) <mom46f> CMACRO MOM_MIS_PRO_2T mom46f 6 4

Device mom_3t_ckt momcap13_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) mom_nw(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 0
Device mom_3t_ckt momcap13_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) mom_pw(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 0
Device mom_3t_ckt momcap14_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) mom_nw(B) <mom14f> CMACRO MOM_MIS_PRO mom14f 4 1 0
Device mom_3t_ckt momcap14_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) mom_pw(B) <mom14f> CMACRO MOM_MIS_PRO mom14f 4 1 0
Device mom_3t_ckt momcap24_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) mom_nw(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 0
Device mom_3t_ckt momcap24_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) mom_pw(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 0
Device mom_3t_ckt momcap15_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) mom_nw(B) <mom15f> CMACRO MOM_MIS_PRO mom15f 5 1 0
Device mom_3t_ckt momcap15_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) mom_pw(B) <mom15f> CMACRO MOM_MIS_PRO mom15f 5 1 0
Device mom_3t_ckt momcap25_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) mom_nw(B) <mom25f> CMACRO MOM_MIS_PRO mom25f 5 2 0
Device mom_3t_ckt momcap25_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) mom_pw(B) <mom25f> CMACRO MOM_MIS_PRO mom25f 5 2 0
Device mom_3t_ckt momcap35_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) mom_nw(B) <mom35f> CMACRO MOM_MIS_PRO mom35f 5 3 0
Device mom_3t_ckt momcap35_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) mom_pw(B) <mom35f> CMACRO MOM_MIS_PRO mom35f 5 3 0
Device mom_3t_ckt momcap16_3t_wops mom_terminal16(PLUS) mom_terminal16(MINUS) mom_nw(B) <mom16f> CMACRO MOM_MIS_PRO mom16f 6 1 0
Device mom_3t_ckt momcap16_3t_wops mom_terminal16(PLUS) mom_terminal16(MINUS) mom_pw(B) <mom16f> CMACRO MOM_MIS_PRO mom16f 6 1 0
Device mom_3t_ckt momcap26_3t_wops mom_terminal26(PLUS) mom_terminal26(MINUS) mom_nw(B) <mom26f> CMACRO MOM_MIS_PRO mom26f 6 2 0
Device mom_3t_ckt momcap26_3t_wops mom_terminal26(PLUS) mom_terminal26(MINUS) mom_pw(B) <mom26f> CMACRO MOM_MIS_PRO mom26f 6 2 0
Device mom_3t_ckt momcap36_3t_wops mom_terminal36(PLUS) mom_terminal36(MINUS) mom_nw(B) <mom36f> CMACRO MOM_MIS_PRO mom36f 6 3 0
Device mom_3t_ckt momcap36_3t_wops mom_terminal36(PLUS) mom_terminal36(MINUS) mom_pw(B) <mom36f> CMACRO MOM_MIS_PRO mom36f 6 3 0
Device mom_3t_ckt momcap46_3t_wops mom_terminal46(PLUS) mom_terminal46(MINUS) mom_nw(B) <mom46f> CMACRO MOM_MIS_PRO mom46f 6 4 0
Device mom_3t_ckt momcap46_3t_wops mom_terminal46(PLUS) mom_terminal46(MINUS) mom_pw(B) <mom46f> CMACRO MOM_MIS_PRO mom46f 6 4 0

Device mom_3t_ckt momcap13_3t_wips mom_terminal13(PLUS) mom_terminal13(MINUS) ppoly(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 1
Device mom_3t_ckt momcap14_3t_wips mom_terminal14(PLUS) mom_terminal14(MINUS) ppoly(B) <mom14f> CMACRO MOM_MIS_PRO mom14f 4 1 1
Device mom_3t_ckt momcap24_3t_wips mom_terminal24(PLUS) mom_terminal24(MINUS) ppoly(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 1
Device mom_3t_ckt momcap15_3t_wips mom_terminal15(PLUS) mom_terminal15(MINUS) ppoly(B) <mom15f> CMACRO MOM_MIS_PRO mom15f 5 1 1
Device mom_3t_ckt momcap25_3t_wips mom_terminal25(PLUS) mom_terminal25(MINUS) ppoly(B) <mom25f> CMACRO MOM_MIS_PRO mom25f 5 2 1
Device mom_3t_ckt momcap35_3t_wips mom_terminal35(PLUS) mom_terminal35(MINUS) ppoly(B) <mom35f> CMACRO MOM_MIS_PRO mom35f 5 3 1
Device mom_3t_ckt momcap16_3t_wips mom_terminal16(PLUS) mom_terminal16(MINUS) ppoly(B) <mom16f> CMACRO MOM_MIS_PRO mom16f 6 1 1
Device mom_3t_ckt momcap26_3t_wips mom_terminal26(PLUS) mom_terminal26(MINUS) ppoly(B) <mom26f> CMACRO MOM_MIS_PRO mom26f 6 2 1
Device mom_3t_ckt momcap36_3t_wips mom_terminal36(PLUS) mom_terminal36(MINUS) ppoly(B) <mom36f> CMACRO MOM_MIS_PRO mom36f 6 3 1
Device mom_3t_ckt momcap46_3t_wips mom_terminal46(PLUS) mom_terminal46(MINUS) ppoly(B) <mom46f> CMACRO MOM_MIS_PRO mom46f 6 4 1

Device mom_rf momcap12rf_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) nwell(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 0
Device mom_rf momcap12rf_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) pwell(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 0
Device mom_rf momcap13rf_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) nwell(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 0
Device mom_rf momcap13rf_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) pwell(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 0
Device mom_rf momcap23rf_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) nwell(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 0
Device mom_rf momcap23rf_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) pwell(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 0
Device mom_rf momcap14rf_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) nwell(B) <mom14f> CMACRO MOMRF_PRO mom14f 4 1 0
Device mom_rf momcap14rf_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) pwell(B) <mom14f> CMACRO MOMRF_PRO mom14f 4 1 0
Device mom_rf momcap24rf_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) nwell(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 0
Device mom_rf momcap24rf_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) pwell(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 0
Device mom_rf momcap34rf_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) nwell(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 0
Device mom_rf momcap34rf_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) pwell(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 0
Device mom_rf momcap15rf_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) nwell(B) <mom15f> CMACRO MOMRF_PRO mom15f 5 1 0
Device mom_rf momcap15rf_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) pwell(B) <mom15f> CMACRO MOMRF_PRO mom15f 5 1 0
Device mom_rf momcap25rf_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) nwell(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 0
Device mom_rf momcap25rf_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) pwell(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 0
Device mom_rf momcap35rf_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) nwell(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 0
Device mom_rf momcap35rf_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) pwell(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 0
Device mom_rf momcap45rf_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) nwell(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 0
Device mom_rf momcap45rf_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) pwell(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 0
Device mom_rf momcap16rf_3t_wops mom_terminal16(PLUS) mom_terminal16(MINUS) nwell(B) <mom16f> CMACRO MOMRF_PRO mom16f 6 1 0
Device mom_rf momcap16rf_3t_wops mom_terminal16(PLUS) mom_terminal16(MINUS) pwell(B) <mom16f> CMACRO MOMRF_PRO mom16f 6 1 0
Device mom_rf momcap26rf_3t_wops mom_terminal26(PLUS) mom_terminal26(MINUS) nwell(B) <mom26f_rf> CMACRO MOMRF_PRO mom26f_rf 6 2 0
Device mom_rf momcap26rf_3t_wops mom_terminal26(PLUS) mom_terminal26(MINUS) pwell(B) <mom26f_rf> CMACRO MOMRF_PRO mom26f_rf 6 2 0
Device mom_rf momcap36rf_3t_wops mom_terminal36(PLUS) mom_terminal36(MINUS) nwell(B) <mom36f_rf> CMACRO MOMRF_PRO mom36f_rf 6 3 0
Device mom_rf momcap36rf_3t_wops mom_terminal36(PLUS) mom_terminal36(MINUS) pwell(B) <mom36f_rf> CMACRO MOMRF_PRO mom36f_rf 6 3 0
Device mom_rf momcap46rf_3t_wops mom_terminal46(PLUS) mom_terminal46(MINUS) nwell(B) <mom46f_rf> CMACRO MOMRF_PRO mom46f_rf 6 4 0
Device mom_rf momcap46rf_3t_wops mom_terminal46(PLUS) mom_terminal46(MINUS) pwell(B) <mom46f_rf> CMACRO MOMRF_PRO mom46f_rf 6 4 0
Device mom_rf momcap56rf_3t_wops mom_terminal56(PLUS) mom_terminal56(MINUS) nwell(B) <mom56f_rf> CMACRO MOMRF_PRO mom56f_rf 6 5 0
Device mom_rf momcap56rf_3t_wops mom_terminal56(PLUS) mom_terminal56(MINUS) pwell(B) <mom56f_rf> CMACRO MOMRF_PRO mom56f_rf 6 5 0

Device mom_rf momcap12rf_3t_wips mom_terminal12(PLUS) mom_terminal12(MINUS) ppoly(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 1
Device mom_rf momcap13rf_3t_wips mom_terminal13(PLUS) mom_terminal13(MINUS) ppoly(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 1
Device mom_rf momcap23rf_3t_wips mom_terminal23(PLUS) mom_terminal23(MINUS) ppoly(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 1
Device mom_rf momcap14rf_3t_wips mom_terminal14(PLUS) mom_terminal14(MINUS) ppoly(B) <mom14f> CMACRO MOMRF_PRO mom14f 4 1 1
Device mom_rf momcap24rf_3t_wips mom_terminal24(PLUS) mom_terminal24(MINUS) ppoly(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 1
Device mom_rf momcap34rf_3t_wips mom_terminal34(PLUS) mom_terminal34(MINUS) ppoly(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 1
Device mom_rf momcap15rf_3t_wips mom_terminal15(PLUS) mom_terminal15(MINUS) ppoly(B) <mom15f> CMACRO MOMRF_PRO mom15f 5 1 1
Device mom_rf momcap25rf_3t_wips mom_terminal25(PLUS) mom_terminal25(MINUS) ppoly(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 1
Device mom_rf momcap35rf_3t_wips mom_terminal35(PLUS) mom_terminal35(MINUS) ppoly(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 1
Device mom_rf momcap45rf_3t_wips mom_terminal45(PLUS) mom_terminal45(MINUS) ppoly(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 1
Device mom_rf momcap16rf_3t_wips mom_terminal16(PLUS) mom_terminal16(MINUS) ppoly(B) <mom16f> CMACRO MOMRF_PRO mom16f 6 1 1
Device mom_rf momcap26rf_3t_wips mom_terminal26(PLUS) mom_terminal26(MINUS) ppoly(B) <mom26f_rf> CMACRO MOMRF_PRO mom26f_rf 6 2 1
Device mom_rf momcap36rf_3t_wips mom_terminal36(PLUS) mom_terminal36(MINUS) ppoly(B) <mom36f_rf> CMACRO MOMRF_PRO mom36f_rf 6 3 1
Device mom_rf momcap46rf_3t_wips mom_terminal46(PLUS) mom_terminal46(MINUS) ppoly(B) <mom46f_rf> CMACRO MOMRF_PRO mom46f_rf 6 4 1
Device mom_rf momcap56rf_3t_wips mom_terminal56(PLUS) mom_terminal56(MINUS) ppoly(B) <mom56f_rf> CMACRO MOMRF_PRO mom56f_rf 6 5 1

Device mom_rf momcap23rf_3t_wim mom_terminal23(PLUS) mom_terminal23(MINUS) metal1(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 2
Device mom_rf momcap24rf_3t_wim mom_terminal24(PLUS) mom_terminal24(MINUS) metal1(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 2
Device mom_rf momcap34rf_3t_wim mom_terminal34(PLUS) mom_terminal34(MINUS) metal2(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 2
Device mom_rf momcap25rf_3t_wim mom_terminal25(PLUS) mom_terminal25(MINUS) metal1(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 2
Device mom_rf momcap35rf_3t_wim mom_terminal35(PLUS) mom_terminal35(MINUS) metal2(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 2
Device mom_rf momcap45rf_3t_wim mom_terminal45(PLUS) mom_terminal45(MINUS) metal3(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 2
Device mom_rf momcap26rf_3t_wim mom_terminal26(PLUS) mom_terminal26(MINUS) metal1(B) <mom26f_rf> CMACRO MOMRF_PRO mom26f_rf 6 2 2
Device mom_rf momcap36rf_3t_wim mom_terminal36(PLUS) mom_terminal36(MINUS) metal2(B) <mom36f_rf> CMACRO MOMRF_PRO mom36f_rf 6 3 2
Device mom_rf momcap46rf_3t_wim mom_terminal46(PLUS) mom_terminal46(MINUS) metal3(B) <mom46f_rf> CMACRO MOMRF_PRO mom46f_rf 6 4 2
Device mom_rf momcap56rf_3t_wim mom_terminal56(PLUS) mom_terminal56(MINUS) metal4(B) <mom56f_rf> CMACRO MOMRF_PRO mom56f_rf 6 5 2
#ENDIF
#ENDIF

#IFDEF TOPMETAL 9
#IFDEF TOP_METAL_NUM double
Device mom_2t_ckt momcap12 mom_terminal12(PLUS) mom_terminal12(MINUS) <mom12f> CMACRO MOM_MIS_PRO_2T mom12f 2 1
Device mom_2t_ckt momcap23 mom_terminal23(PLUS) mom_terminal23(MINUS) <mom23f> CMACRO MOM_MIS_PRO_2T mom23f 3 2
Device mom_2t_ckt momcap34 mom_terminal34(PLUS) mom_terminal34(MINUS) <mom34f> CMACRO MOM_MIS_PRO_2T mom34f 4 3
Device mom_2t_ckt momcap45 mom_terminal45(PLUS) mom_terminal45(MINUS) <mom45f> CMACRO MOM_MIS_PRO_2T mom45f 5 4
Device mom_2t_ckt momcap56 mom_terminal56(PLUS) mom_terminal56(MINUS) <mom56f> CMACRO MOM_MIS_PRO_2T mom56f 6 5
Device mom_3t_ckt momcap12_3t_wips mom_terminal12(PLUS) mom_terminal12(MINUS) ppoly(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 1
Device mom_3t_ckt momcap23_3t_wips mom_terminal23(PLUS) mom_terminal23(MINUS) ppoly(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 1
Device mom_3t_ckt momcap34_3t_wips mom_terminal34(PLUS) mom_terminal34(MINUS) ppoly(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 1
Device mom_3t_ckt momcap45_3t_wips mom_terminal45(PLUS) mom_terminal45(MINUS) ppoly(B) <mom45f> CMACRO MOM_MIS_PRO mom45f 5 4 1
Device mom_3t_ckt momcap56_3t_wips mom_terminal56(PLUS) mom_terminal56(MINUS) ppoly(B) <mom56f> CMACRO MOM_MIS_PRO mom56f 6 5 1
Device mom_3t_ckt momcap12_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) mom_nw(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 0
Device mom_3t_ckt momcap12_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) mom_pw(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 0
Device mom_3t_ckt momcap23_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) mom_nw(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 0
Device mom_3t_ckt momcap23_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) mom_pw(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 0
Device mom_3t_ckt momcap34_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) mom_nw(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 0
Device mom_3t_ckt momcap34_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) mom_pw(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 0
Device mom_3t_ckt momcap45_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) mom_nw(B) <mom45f> CMACRO MOM_MIS_PRO mom45f 5 4 0
Device mom_3t_ckt momcap45_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) mom_pw(B) <mom45f> CMACRO MOM_MIS_PRO mom45f 5 4 0
Device mom_3t_ckt momcap56_3t_wops mom_terminal56(PLUS) mom_terminal56(MINUS) mom_nw(B) <mom56f> CMACRO MOM_MIS_PRO mom56f 6 5 0
Device mom_3t_ckt momcap56_3t_wops mom_terminal56(PLUS) mom_terminal56(MINUS) mom_pw(B) <mom56f> CMACRO MOM_MIS_PRO mom56f 6 5 0

Device mom_2t_ckt momcap13 mom_terminal13(PLUS) mom_terminal13(MINUS) <mom13f> CMACRO MOM_MIS_PRO_2T mom13f 3 1
Device mom_2t_ckt momcap24 mom_terminal24(PLUS) mom_terminal24(MINUS) <mom24f> CMACRO MOM_MIS_PRO_2T mom24f 4 2
Device mom_2t_ckt momcap14 mom_terminal14(PLUS) mom_terminal14(MINUS) <mom14f> CMACRO MOM_MIS_PRO_2T mom14f 4 1
Device mom_2t_ckt momcap15 mom_terminal15(PLUS) mom_terminal15(MINUS) <mom15f> CMACRO MOM_MIS_PRO_2T mom15f 5 1
Device mom_2t_ckt momcap25 mom_terminal25(PLUS) mom_terminal25(MINUS) <mom25f> CMACRO MOM_MIS_PRO_2T mom25f 5 2
Device mom_2t_ckt momcap35 mom_terminal35(PLUS) mom_terminal35(MINUS) <mom35f> CMACRO MOM_MIS_PRO_2T mom35f 5 3
Device mom_2t_ckt momcap16 mom_terminal16(PLUS) mom_terminal16(MINUS) <mom16f> CMACRO MOM_MIS_PRO_2T mom16f 6 1
Device mom_2t_ckt momcap26 mom_terminal26(PLUS) mom_terminal26(MINUS) <mom26f> CMACRO MOM_MIS_PRO_2T mom26f 6 2
Device mom_2t_ckt momcap36 mom_terminal36(PLUS) mom_terminal36(MINUS) <mom36f> CMACRO MOM_MIS_PRO_2T mom36f 6 3
Device mom_2t_ckt momcap46 mom_terminal46(PLUS) mom_terminal46(MINUS) <mom46f> CMACRO MOM_MIS_PRO_2T mom46f 6 4

Device mom_3t_ckt momcap13_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) mom_nw(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 0
Device mom_3t_ckt momcap13_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) mom_pw(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 0
Device mom_3t_ckt momcap14_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) mom_nw(B) <mom14f> CMACRO MOM_MIS_PRO mom14f 4 1 0
Device mom_3t_ckt momcap14_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) mom_pw(B) <mom14f> CMACRO MOM_MIS_PRO mom14f 4 1 0
Device mom_3t_ckt momcap24_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) mom_nw(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 0
Device mom_3t_ckt momcap24_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) mom_pw(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 0
Device mom_3t_ckt momcap15_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) mom_nw(B) <mom15f> CMACRO MOM_MIS_PRO mom15f 5 1 0
Device mom_3t_ckt momcap15_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) mom_pw(B) <mom15f> CMACRO MOM_MIS_PRO mom15f 5 1 0
Device mom_3t_ckt momcap25_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) mom_nw(B) <mom25f> CMACRO MOM_MIS_PRO mom25f 5 2 0
Device mom_3t_ckt momcap25_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) mom_pw(B) <mom25f> CMACRO MOM_MIS_PRO mom25f 5 2 0
Device mom_3t_ckt momcap35_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) mom_nw(B) <mom35f> CMACRO MOM_MIS_PRO mom35f 5 3 0
Device mom_3t_ckt momcap35_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) mom_pw(B) <mom35f> CMACRO MOM_MIS_PRO mom35f 5 3 0
Device mom_3t_ckt momcap16_3t_wops mom_terminal16(PLUS) mom_terminal16(MINUS) mom_nw(B) <mom16f> CMACRO MOM_MIS_PRO mom16f 6 1 0
Device mom_3t_ckt momcap16_3t_wops mom_terminal16(PLUS) mom_terminal16(MINUS) mom_pw(B) <mom16f> CMACRO MOM_MIS_PRO mom16f 6 1 0
Device mom_3t_ckt momcap26_3t_wops mom_terminal26(PLUS) mom_terminal26(MINUS) mom_nw(B) <mom26f> CMACRO MOM_MIS_PRO mom26f 6 2 0
Device mom_3t_ckt momcap26_3t_wops mom_terminal26(PLUS) mom_terminal26(MINUS) mom_pw(B) <mom26f> CMACRO MOM_MIS_PRO mom26f 6 2 0
Device mom_3t_ckt momcap36_3t_wops mom_terminal36(PLUS) mom_terminal36(MINUS) mom_nw(B) <mom36f> CMACRO MOM_MIS_PRO mom36f 6 3 0
Device mom_3t_ckt momcap36_3t_wops mom_terminal36(PLUS) mom_terminal36(MINUS) mom_pw(B) <mom36f> CMACRO MOM_MIS_PRO mom36f 6 3 0
Device mom_3t_ckt momcap46_3t_wops mom_terminal46(PLUS) mom_terminal46(MINUS) mom_nw(B) <mom46f> CMACRO MOM_MIS_PRO mom46f 6 4 0
Device mom_3t_ckt momcap46_3t_wops mom_terminal46(PLUS) mom_terminal46(MINUS) mom_pw(B) <mom46f> CMACRO MOM_MIS_PRO mom46f 6 4 0

Device mom_3t_ckt momcap13_3t_wips mom_terminal13(PLUS) mom_terminal13(MINUS) ppoly(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 1
Device mom_3t_ckt momcap14_3t_wips mom_terminal14(PLUS) mom_terminal14(MINUS) ppoly(B) <mom14f> CMACRO MOM_MIS_PRO mom14f 4 1 1
Device mom_3t_ckt momcap24_3t_wips mom_terminal24(PLUS) mom_terminal24(MINUS) ppoly(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 1
Device mom_3t_ckt momcap15_3t_wips mom_terminal15(PLUS) mom_terminal15(MINUS) ppoly(B) <mom15f> CMACRO MOM_MIS_PRO mom15f 5 1 1
Device mom_3t_ckt momcap25_3t_wips mom_terminal25(PLUS) mom_terminal25(MINUS) ppoly(B) <mom25f> CMACRO MOM_MIS_PRO mom25f 5 2 1
Device mom_3t_ckt momcap35_3t_wips mom_terminal35(PLUS) mom_terminal35(MINUS) ppoly(B) <mom35f> CMACRO MOM_MIS_PRO mom35f 5 3 1
Device mom_3t_ckt momcap16_3t_wips mom_terminal16(PLUS) mom_terminal16(MINUS) ppoly(B) <mom16f> CMACRO MOM_MIS_PRO mom16f 6 1 1
Device mom_3t_ckt momcap26_3t_wips mom_terminal26(PLUS) mom_terminal26(MINUS) ppoly(B) <mom26f> CMACRO MOM_MIS_PRO mom26f 6 2 1
Device mom_3t_ckt momcap36_3t_wips mom_terminal36(PLUS) mom_terminal36(MINUS) ppoly(B) <mom36f> CMACRO MOM_MIS_PRO mom36f 6 3 1
Device mom_3t_ckt momcap46_3t_wips mom_terminal46(PLUS) mom_terminal46(MINUS) ppoly(B) <mom46f> CMACRO MOM_MIS_PRO mom46f 6 4 1

Device mom_rf momcap12rf_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) nwell(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 0
Device mom_rf momcap12rf_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) pwell(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 0
Device mom_rf momcap13rf_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) nwell(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 0
Device mom_rf momcap13rf_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) pwell(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 0
Device mom_rf momcap23rf_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) nwell(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 0
Device mom_rf momcap23rf_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) pwell(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 0
Device mom_rf momcap14rf_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) nwell(B) <mom14f> CMACRO MOMRF_PRO mom14f 4 1 0
Device mom_rf momcap14rf_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) pwell(B) <mom14f> CMACRO MOMRF_PRO mom14f 4 1 0
Device mom_rf momcap24rf_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) nwell(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 0
Device mom_rf momcap24rf_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) pwell(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 0
Device mom_rf momcap34rf_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) nwell(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 0
Device mom_rf momcap34rf_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) pwell(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 0
Device mom_rf momcap15rf_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) nwell(B) <mom15f> CMACRO MOMRF_PRO mom15f 5 1 0
Device mom_rf momcap15rf_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) pwell(B) <mom15f> CMACRO MOMRF_PRO mom15f 5 1 0
Device mom_rf momcap25rf_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) nwell(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 0
Device mom_rf momcap25rf_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) pwell(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 0
Device mom_rf momcap35rf_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) nwell(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 0
Device mom_rf momcap35rf_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) pwell(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 0
Device mom_rf momcap45rf_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) nwell(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 0
Device mom_rf momcap45rf_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) pwell(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 0
Device mom_rf momcap16rf_3t_wops mom_terminal16(PLUS) mom_terminal16(MINUS) nwell(B) <mom16f> CMACRO MOMRF_PRO mom16f 6 1 0
Device mom_rf momcap16rf_3t_wops mom_terminal16(PLUS) mom_terminal16(MINUS) pwell(B) <mom16f> CMACRO MOMRF_PRO mom16f 6 1 0
Device mom_rf momcap26rf_3t_wops mom_terminal26(PLUS) mom_terminal26(MINUS) nwell(B) <mom26f_rf> CMACRO MOMRF_PRO mom26f_rf 6 2 0
Device mom_rf momcap26rf_3t_wops mom_terminal26(PLUS) mom_terminal26(MINUS) pwell(B) <mom26f_rf> CMACRO MOMRF_PRO mom26f_rf 6 2 0
Device mom_rf momcap36rf_3t_wops mom_terminal36(PLUS) mom_terminal36(MINUS) nwell(B) <mom36f_rf> CMACRO MOMRF_PRO mom36f_rf 6 3 0
Device mom_rf momcap36rf_3t_wops mom_terminal36(PLUS) mom_terminal36(MINUS) pwell(B) <mom36f_rf> CMACRO MOMRF_PRO mom36f_rf 6 3 0
Device mom_rf momcap46rf_3t_wops mom_terminal46(PLUS) mom_terminal46(MINUS) nwell(B) <mom46f_rf> CMACRO MOMRF_PRO mom46f_rf 6 4 0
Device mom_rf momcap46rf_3t_wops mom_terminal46(PLUS) mom_terminal46(MINUS) pwell(B) <mom46f_rf> CMACRO MOMRF_PRO mom46f_rf 6 4 0
Device mom_rf momcap56rf_3t_wops mom_terminal56(PLUS) mom_terminal56(MINUS) nwell(B) <mom56f_rf> CMACRO MOMRF_PRO mom56f_rf 6 5 0
Device mom_rf momcap56rf_3t_wops mom_terminal56(PLUS) mom_terminal56(MINUS) pwell(B) <mom56f_rf> CMACRO MOMRF_PRO mom56f_rf 6 5 0

Device mom_rf momcap12rf_3t_wips mom_terminal12(PLUS) mom_terminal12(MINUS) ppoly(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 1
Device mom_rf momcap13rf_3t_wips mom_terminal13(PLUS) mom_terminal13(MINUS) ppoly(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 1
Device mom_rf momcap23rf_3t_wips mom_terminal23(PLUS) mom_terminal23(MINUS) ppoly(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 1
Device mom_rf momcap14rf_3t_wips mom_terminal14(PLUS) mom_terminal14(MINUS) ppoly(B) <mom14f> CMACRO MOMRF_PRO mom14f 4 1 1
Device mom_rf momcap24rf_3t_wips mom_terminal24(PLUS) mom_terminal24(MINUS) ppoly(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 1
Device mom_rf momcap34rf_3t_wips mom_terminal34(PLUS) mom_terminal34(MINUS) ppoly(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 1
Device mom_rf momcap15rf_3t_wips mom_terminal15(PLUS) mom_terminal15(MINUS) ppoly(B) <mom15f> CMACRO MOMRF_PRO mom15f 5 1 1
Device mom_rf momcap25rf_3t_wips mom_terminal25(PLUS) mom_terminal25(MINUS) ppoly(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 1
Device mom_rf momcap35rf_3t_wips mom_terminal35(PLUS) mom_terminal35(MINUS) ppoly(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 1
Device mom_rf momcap45rf_3t_wips mom_terminal45(PLUS) mom_terminal45(MINUS) ppoly(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 1
Device mom_rf momcap16rf_3t_wips mom_terminal16(PLUS) mom_terminal16(MINUS) ppoly(B) <mom16f> CMACRO MOMRF_PRO mom16f 6 1 1
Device mom_rf momcap26rf_3t_wips mom_terminal26(PLUS) mom_terminal26(MINUS) ppoly(B) <mom26f_rf> CMACRO MOMRF_PRO mom26f_rf 6 2 1
Device mom_rf momcap36rf_3t_wips mom_terminal36(PLUS) mom_terminal36(MINUS) ppoly(B) <mom36f_rf> CMACRO MOMRF_PRO mom36f_rf 6 3 1
Device mom_rf momcap46rf_3t_wips mom_terminal46(PLUS) mom_terminal46(MINUS) ppoly(B) <mom46f_rf> CMACRO MOMRF_PRO mom46f_rf 6 4 1
Device mom_rf momcap56rf_3t_wips mom_terminal56(PLUS) mom_terminal56(MINUS) ppoly(B) <mom56f_rf> CMACRO MOMRF_PRO mom56f_rf 6 5 1

Device mom_rf momcap23rf_3t_wim mom_terminal23(PLUS) mom_terminal23(MINUS) metal1(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 2
Device mom_rf momcap24rf_3t_wim mom_terminal24(PLUS) mom_terminal24(MINUS) metal1(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 2
Device mom_rf momcap34rf_3t_wim mom_terminal34(PLUS) mom_terminal34(MINUS) metal2(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 2
Device mom_rf momcap25rf_3t_wim mom_terminal25(PLUS) mom_terminal25(MINUS) metal1(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 2
Device mom_rf momcap35rf_3t_wim mom_terminal35(PLUS) mom_terminal35(MINUS) metal2(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 2
Device mom_rf momcap45rf_3t_wim mom_terminal45(PLUS) mom_terminal45(MINUS) metal3(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 2
Device mom_rf momcap26rf_3t_wim mom_terminal26(PLUS) mom_terminal26(MINUS) metal1(B) <mom26f_rf> CMACRO MOMRF_PRO mom26f_rf 6 2 2
Device mom_rf momcap36rf_3t_wim mom_terminal36(PLUS) mom_terminal36(MINUS) metal2(B) <mom36f_rf> CMACRO MOMRF_PRO mom36f_rf 6 3 2
Device mom_rf momcap46rf_3t_wim mom_terminal46(PLUS) mom_terminal46(MINUS) metal3(B) <mom46f_rf> CMACRO MOMRF_PRO mom46f_rf 6 4 2
Device mom_rf momcap56rf_3t_wim mom_terminal56(PLUS) mom_terminal56(MINUS) metal4(B) <mom56f_rf> CMACRO MOMRF_PRO mom56f_rf 6 5 2
#ENDIF 
#ENDIF

#IFDEF TOPMETAL 9
#IFDEF TOP_METAL_NUM single
Device mom_2t_ckt momcap12 mom_terminal12(PLUS) mom_terminal12(MINUS) <mom12f> CMACRO MOM_MIS_PRO_2T mom12f 2 1
Device mom_2t_ckt momcap23 mom_terminal23(PLUS) mom_terminal23(MINUS) <mom23f> CMACRO MOM_MIS_PRO_2T mom23f 3 2
Device mom_2t_ckt momcap34 mom_terminal34(PLUS) mom_terminal34(MINUS) <mom34f> CMACRO MOM_MIS_PRO_2T mom34f 4 3
Device mom_2t_ckt momcap45 mom_terminal45(PLUS) mom_terminal45(MINUS) <mom45f> CMACRO MOM_MIS_PRO_2T mom45f 5 4
Device mom_2t_ckt momcap56 mom_terminal56(PLUS) mom_terminal56(MINUS) <mom56f> CMACRO MOM_MIS_PRO_2T mom56f 6 5
Device mom_3t_ckt momcap12_3t_wips mom_terminal12(PLUS) mom_terminal12(MINUS) ppoly(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 1
Device mom_3t_ckt momcap23_3t_wips mom_terminal23(PLUS) mom_terminal23(MINUS) ppoly(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 1
Device mom_3t_ckt momcap34_3t_wips mom_terminal34(PLUS) mom_terminal34(MINUS) ppoly(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 1
Device mom_3t_ckt momcap45_3t_wips mom_terminal45(PLUS) mom_terminal45(MINUS) ppoly(B) <mom45f> CMACRO MOM_MIS_PRO mom45f 5 4 1
Device mom_3t_ckt momcap56_3t_wips mom_terminal56(PLUS) mom_terminal56(MINUS) ppoly(B) <mom56f> CMACRO MOM_MIS_PRO mom56f 6 5 1
Device mom_3t_ckt momcap12_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) mom_nw(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 0
Device mom_3t_ckt momcap12_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) mom_pw(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 0
Device mom_3t_ckt momcap23_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) mom_nw(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 0
Device mom_3t_ckt momcap23_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) mom_pw(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 0
Device mom_3t_ckt momcap34_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) mom_nw(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 0
Device mom_3t_ckt momcap34_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) mom_pw(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 0
Device mom_3t_ckt momcap45_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) mom_nw(B) <mom45f> CMACRO MOM_MIS_PRO mom45f 5 4 0
Device mom_3t_ckt momcap45_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) mom_pw(B) <mom45f> CMACRO MOM_MIS_PRO mom45f 5 4 0
Device mom_3t_ckt momcap56_3t_wops mom_terminal56(PLUS) mom_terminal56(MINUS) mom_nw(B) <mom56f> CMACRO MOM_MIS_PRO mom56f 6 5 0
Device mom_3t_ckt momcap56_3t_wops mom_terminal56(PLUS) mom_terminal56(MINUS) mom_pw(B) <mom56f> CMACRO MOM_MIS_PRO mom56f 6 5 0

Device mom_2t_ckt momcap13 mom_terminal13(PLUS) mom_terminal13(MINUS) <mom13f> CMACRO MOM_MIS_PRO_2T mom13f 3 1
Device mom_2t_ckt momcap24 mom_terminal24(PLUS) mom_terminal24(MINUS) <mom24f> CMACRO MOM_MIS_PRO_2T mom24f 4 2
Device mom_2t_ckt momcap14 mom_terminal14(PLUS) mom_terminal14(MINUS) <mom14f> CMACRO MOM_MIS_PRO_2T mom14f 4 1
Device mom_2t_ckt momcap15 mom_terminal15(PLUS) mom_terminal15(MINUS) <mom15f> CMACRO MOM_MIS_PRO_2T mom15f 5 1
Device mom_2t_ckt momcap25 mom_terminal25(PLUS) mom_terminal25(MINUS) <mom25f> CMACRO MOM_MIS_PRO_2T mom25f 5 2
Device mom_2t_ckt momcap35 mom_terminal35(PLUS) mom_terminal35(MINUS) <mom35f> CMACRO MOM_MIS_PRO_2T mom35f 5 3
Device mom_2t_ckt momcap16 mom_terminal16(PLUS) mom_terminal16(MINUS) <mom16f> CMACRO MOM_MIS_PRO_2T mom16f 6 1
Device mom_2t_ckt momcap26 mom_terminal26(PLUS) mom_terminal26(MINUS) <mom26f> CMACRO MOM_MIS_PRO_2T mom26f 6 2
Device mom_2t_ckt momcap36 mom_terminal36(PLUS) mom_terminal36(MINUS) <mom36f> CMACRO MOM_MIS_PRO_2T mom36f 6 3
Device mom_2t_ckt momcap46 mom_terminal46(PLUS) mom_terminal46(MINUS) <mom46f> CMACRO MOM_MIS_PRO_2T mom46f 6 4

Device mom_3t_ckt momcap13_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) mom_nw(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 0
Device mom_3t_ckt momcap13_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) mom_pw(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 0
Device mom_3t_ckt momcap14_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) mom_nw(B) <mom14f> CMACRO MOM_MIS_PRO mom14f 4 1 0
Device mom_3t_ckt momcap14_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) mom_pw(B) <mom14f> CMACRO MOM_MIS_PRO mom14f 4 1 0
Device mom_3t_ckt momcap24_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) mom_nw(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 0
Device mom_3t_ckt momcap24_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) mom_pw(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 0
Device mom_3t_ckt momcap15_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) mom_nw(B) <mom15f> CMACRO MOM_MIS_PRO mom15f 5 1 0
Device mom_3t_ckt momcap15_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) mom_pw(B) <mom15f> CMACRO MOM_MIS_PRO mom15f 5 1 0
Device mom_3t_ckt momcap25_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) mom_nw(B) <mom25f> CMACRO MOM_MIS_PRO mom25f 5 2 0
Device mom_3t_ckt momcap25_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) mom_pw(B) <mom25f> CMACRO MOM_MIS_PRO mom25f 5 2 0
Device mom_3t_ckt momcap35_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) mom_nw(B) <mom35f> CMACRO MOM_MIS_PRO mom35f 5 3 0
Device mom_3t_ckt momcap35_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) mom_pw(B) <mom35f> CMACRO MOM_MIS_PRO mom35f 5 3 0
Device mom_3t_ckt momcap16_3t_wops mom_terminal16(PLUS) mom_terminal16(MINUS) mom_nw(B) <mom16f> CMACRO MOM_MIS_PRO mom16f 6 1 0
Device mom_3t_ckt momcap16_3t_wops mom_terminal16(PLUS) mom_terminal16(MINUS) mom_pw(B) <mom16f> CMACRO MOM_MIS_PRO mom16f 6 1 0
Device mom_3t_ckt momcap26_3t_wops mom_terminal26(PLUS) mom_terminal26(MINUS) mom_nw(B) <mom26f> CMACRO MOM_MIS_PRO mom26f 6 2 0
Device mom_3t_ckt momcap26_3t_wops mom_terminal26(PLUS) mom_terminal26(MINUS) mom_pw(B) <mom26f> CMACRO MOM_MIS_PRO mom26f 6 2 0
Device mom_3t_ckt momcap36_3t_wops mom_terminal36(PLUS) mom_terminal36(MINUS) mom_nw(B) <mom36f> CMACRO MOM_MIS_PRO mom36f 6 3 0
Device mom_3t_ckt momcap36_3t_wops mom_terminal36(PLUS) mom_terminal36(MINUS) mom_pw(B) <mom36f> CMACRO MOM_MIS_PRO mom36f 6 3 0
Device mom_3t_ckt momcap46_3t_wops mom_terminal46(PLUS) mom_terminal46(MINUS) mom_nw(B) <mom46f> CMACRO MOM_MIS_PRO mom46f 6 4 0
Device mom_3t_ckt momcap46_3t_wops mom_terminal46(PLUS) mom_terminal46(MINUS) mom_pw(B) <mom46f> CMACRO MOM_MIS_PRO mom46f 6 4 0

Device mom_3t_ckt momcap13_3t_wips mom_terminal13(PLUS) mom_terminal13(MINUS) ppoly(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 1
Device mom_3t_ckt momcap14_3t_wips mom_terminal14(PLUS) mom_terminal14(MINUS) ppoly(B) <mom14f> CMACRO MOM_MIS_PRO mom14f 4 1 1
Device mom_3t_ckt momcap24_3t_wips mom_terminal24(PLUS) mom_terminal24(MINUS) ppoly(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 1
Device mom_3t_ckt momcap15_3t_wips mom_terminal15(PLUS) mom_terminal15(MINUS) ppoly(B) <mom15f> CMACRO MOM_MIS_PRO mom15f 5 1 1
Device mom_3t_ckt momcap25_3t_wips mom_terminal25(PLUS) mom_terminal25(MINUS) ppoly(B) <mom25f> CMACRO MOM_MIS_PRO mom25f 5 2 1
Device mom_3t_ckt momcap35_3t_wips mom_terminal35(PLUS) mom_terminal35(MINUS) ppoly(B) <mom35f> CMACRO MOM_MIS_PRO mom35f 5 3 1
Device mom_3t_ckt momcap16_3t_wips mom_terminal16(PLUS) mom_terminal16(MINUS) ppoly(B) <mom16f> CMACRO MOM_MIS_PRO mom16f 6 1 1
Device mom_3t_ckt momcap26_3t_wips mom_terminal26(PLUS) mom_terminal26(MINUS) ppoly(B) <mom26f> CMACRO MOM_MIS_PRO mom26f 6 2 1
Device mom_3t_ckt momcap36_3t_wips mom_terminal36(PLUS) mom_terminal36(MINUS) ppoly(B) <mom36f> CMACRO MOM_MIS_PRO mom36f 6 3 1
Device mom_3t_ckt momcap46_3t_wips mom_terminal46(PLUS) mom_terminal46(MINUS) ppoly(B) <mom46f> CMACRO MOM_MIS_PRO mom46f 6 4 1

Device mom_rf momcap12rf_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) nwell(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 0
Device mom_rf momcap12rf_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) pwell(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 0
Device mom_rf momcap13rf_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) nwell(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 0
Device mom_rf momcap13rf_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) pwell(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 0
Device mom_rf momcap23rf_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) nwell(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 0
Device mom_rf momcap23rf_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) pwell(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 0
Device mom_rf momcap14rf_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) nwell(B) <mom14f> CMACRO MOMRF_PRO mom14f 4 1 0
Device mom_rf momcap14rf_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) pwell(B) <mom14f> CMACRO MOMRF_PRO mom14f 4 1 0
Device mom_rf momcap24rf_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) nwell(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 0
Device mom_rf momcap24rf_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) pwell(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 0
Device mom_rf momcap34rf_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) nwell(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 0
Device mom_rf momcap34rf_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) pwell(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 0
Device mom_rf momcap15rf_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) nwell(B) <mom15f> CMACRO MOMRF_PRO mom15f 5 1 0
Device mom_rf momcap15rf_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) pwell(B) <mom15f> CMACRO MOMRF_PRO mom15f 5 1 0
Device mom_rf momcap25rf_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) nwell(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 0
Device mom_rf momcap25rf_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) pwell(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 0
Device mom_rf momcap35rf_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) nwell(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 0
Device mom_rf momcap35rf_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) pwell(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 0
Device mom_rf momcap45rf_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) nwell(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 0
Device mom_rf momcap45rf_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) pwell(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 0
Device mom_rf momcap16rf_3t_wops mom_terminal16(PLUS) mom_terminal16(MINUS) nwell(B) <mom16f> CMACRO MOMRF_PRO mom16f 6 1 0
Device mom_rf momcap16rf_3t_wops mom_terminal16(PLUS) mom_terminal16(MINUS) pwell(B) <mom16f> CMACRO MOMRF_PRO mom16f 6 1 0
Device mom_rf momcap26rf_3t_wops mom_terminal26(PLUS) mom_terminal26(MINUS) nwell(B) <mom26f_rf> CMACRO MOMRF_PRO mom26f_rf 6 2 0
Device mom_rf momcap26rf_3t_wops mom_terminal26(PLUS) mom_terminal26(MINUS) pwell(B) <mom26f_rf> CMACRO MOMRF_PRO mom26f_rf 6 2 0
Device mom_rf momcap36rf_3t_wops mom_terminal36(PLUS) mom_terminal36(MINUS) nwell(B) <mom36f_rf> CMACRO MOMRF_PRO mom36f_rf 6 3 0
Device mom_rf momcap36rf_3t_wops mom_terminal36(PLUS) mom_terminal36(MINUS) pwell(B) <mom36f_rf> CMACRO MOMRF_PRO mom36f_rf 6 3 0
Device mom_rf momcap46rf_3t_wops mom_terminal46(PLUS) mom_terminal46(MINUS) nwell(B) <mom46f_rf> CMACRO MOMRF_PRO mom46f_rf 6 4 0
Device mom_rf momcap46rf_3t_wops mom_terminal46(PLUS) mom_terminal46(MINUS) pwell(B) <mom46f_rf> CMACRO MOMRF_PRO mom46f_rf 6 4 0
Device mom_rf momcap56rf_3t_wops mom_terminal56(PLUS) mom_terminal56(MINUS) nwell(B) <mom56f_rf> CMACRO MOMRF_PRO mom56f_rf 6 5 0
Device mom_rf momcap56rf_3t_wops mom_terminal56(PLUS) mom_terminal56(MINUS) pwell(B) <mom56f_rf> CMACRO MOMRF_PRO mom56f_rf 6 5 0

Device mom_rf momcap12rf_3t_wips mom_terminal12(PLUS) mom_terminal12(MINUS) ppoly(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 1
Device mom_rf momcap13rf_3t_wips mom_terminal13(PLUS) mom_terminal13(MINUS) ppoly(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 1
Device mom_rf momcap23rf_3t_wips mom_terminal23(PLUS) mom_terminal23(MINUS) ppoly(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 1
Device mom_rf momcap14rf_3t_wips mom_terminal14(PLUS) mom_terminal14(MINUS) ppoly(B) <mom14f> CMACRO MOMRF_PRO mom14f 4 1 1
Device mom_rf momcap24rf_3t_wips mom_terminal24(PLUS) mom_terminal24(MINUS) ppoly(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 1
Device mom_rf momcap34rf_3t_wips mom_terminal34(PLUS) mom_terminal34(MINUS) ppoly(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 1
Device mom_rf momcap15rf_3t_wips mom_terminal15(PLUS) mom_terminal15(MINUS) ppoly(B) <mom15f> CMACRO MOMRF_PRO mom15f 5 1 1
Device mom_rf momcap25rf_3t_wips mom_terminal25(PLUS) mom_terminal25(MINUS) ppoly(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 1
Device mom_rf momcap35rf_3t_wips mom_terminal35(PLUS) mom_terminal35(MINUS) ppoly(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 1
Device mom_rf momcap45rf_3t_wips mom_terminal45(PLUS) mom_terminal45(MINUS) ppoly(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 1
Device mom_rf momcap16rf_3t_wips mom_terminal16(PLUS) mom_terminal16(MINUS) ppoly(B) <mom16f> CMACRO MOMRF_PRO mom16f 6 1 1
Device mom_rf momcap26rf_3t_wips mom_terminal26(PLUS) mom_terminal26(MINUS) ppoly(B) <mom26f_rf> CMACRO MOMRF_PRO mom26f_rf 6 2 1
Device mom_rf momcap36rf_3t_wips mom_terminal36(PLUS) mom_terminal36(MINUS) ppoly(B) <mom36f_rf> CMACRO MOMRF_PRO mom36f_rf 6 3 1
Device mom_rf momcap46rf_3t_wips mom_terminal46(PLUS) mom_terminal46(MINUS) ppoly(B) <mom46f_rf> CMACRO MOMRF_PRO mom46f_rf 6 4 1
Device mom_rf momcap56rf_3t_wips mom_terminal56(PLUS) mom_terminal56(MINUS) ppoly(B) <mom56f_rf> CMACRO MOMRF_PRO mom56f_rf 6 5 1

Device mom_rf momcap23rf_3t_wim mom_terminal23(PLUS) mom_terminal23(MINUS) metal1(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 2
Device mom_rf momcap24rf_3t_wim mom_terminal24(PLUS) mom_terminal24(MINUS) metal1(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 2
Device mom_rf momcap34rf_3t_wim mom_terminal34(PLUS) mom_terminal34(MINUS) metal2(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 2
Device mom_rf momcap25rf_3t_wim mom_terminal25(PLUS) mom_terminal25(MINUS) metal1(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 2
Device mom_rf momcap35rf_3t_wim mom_terminal35(PLUS) mom_terminal35(MINUS) metal2(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 2
Device mom_rf momcap45rf_3t_wim mom_terminal45(PLUS) mom_terminal45(MINUS) metal3(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 2
Device mom_rf momcap26rf_3t_wim mom_terminal26(PLUS) mom_terminal26(MINUS) metal1(B) <mom26f_rf> CMACRO MOMRF_PRO mom26f_rf 6 2 2
Device mom_rf momcap36rf_3t_wim mom_terminal36(PLUS) mom_terminal36(MINUS) metal2(B) <mom36f_rf> CMACRO MOMRF_PRO mom36f_rf 6 3 2
Device mom_rf momcap46rf_3t_wim mom_terminal46(PLUS) mom_terminal46(MINUS) metal3(B) <mom46f_rf> CMACRO MOMRF_PRO mom46f_rf 6 4 2
Device mom_rf momcap56rf_3t_wim mom_terminal56(PLUS) mom_terminal56(MINUS) metal4(B) <mom56f_rf> CMACRO MOMRF_PRO mom56f_rf 6 5 2
#ENDIF
#ENDIF

#IFDEF TOPMETAL 10
#IFDEF TOP_METAL_NUM double
Device mom_2t_ckt momcap12 mom_terminal12(PLUS) mom_terminal12(MINUS) <mom12f> CMACRO MOM_MIS_PRO_2T mom12f 2 1
Device mom_2t_ckt momcap23 mom_terminal23(PLUS) mom_terminal23(MINUS) <mom23f> CMACRO MOM_MIS_PRO_2T mom23f 3 2
Device mom_2t_ckt momcap34 mom_terminal34(PLUS) mom_terminal34(MINUS) <mom34f> CMACRO MOM_MIS_PRO_2T mom34f 4 3
Device mom_2t_ckt momcap45 mom_terminal45(PLUS) mom_terminal45(MINUS) <mom45f> CMACRO MOM_MIS_PRO_2T mom45f 5 4
Device mom_2t_ckt momcap56 mom_terminal56(PLUS) mom_terminal56(MINUS) <mom56f> CMACRO MOM_MIS_PRO_2T mom56f 6 5
Device mom_3t_ckt momcap12_3t_wips mom_terminal12(PLUS) mom_terminal12(MINUS) ppoly(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 1
Device mom_3t_ckt momcap23_3t_wips mom_terminal23(PLUS) mom_terminal23(MINUS) ppoly(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 1
Device mom_3t_ckt momcap34_3t_wips mom_terminal34(PLUS) mom_terminal34(MINUS) ppoly(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 1
Device mom_3t_ckt momcap45_3t_wips mom_terminal45(PLUS) mom_terminal45(MINUS) ppoly(B) <mom45f> CMACRO MOM_MIS_PRO mom45f 5 4 1
Device mom_3t_ckt momcap56_3t_wips mom_terminal56(PLUS) mom_terminal56(MINUS) ppoly(B) <mom56f> CMACRO MOM_MIS_PRO mom56f 6 5 1
Device mom_3t_ckt momcap12_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) mom_nw(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 0
Device mom_3t_ckt momcap12_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) mom_pw(B) <mom12f> CMACRO MOM_MIS_PRO mom12f 2 1 0
Device mom_3t_ckt momcap23_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) mom_nw(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 0
Device mom_3t_ckt momcap23_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) mom_pw(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 0
Device mom_3t_ckt momcap34_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) mom_nw(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 0
Device mom_3t_ckt momcap34_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) mom_pw(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 0
Device mom_3t_ckt momcap45_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) mom_nw(B) <mom45f> CMACRO MOM_MIS_PRO mom45f 5 4 0
Device mom_3t_ckt momcap45_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) mom_pw(B) <mom45f> CMACRO MOM_MIS_PRO mom45f 5 4 0
Device mom_3t_ckt momcap56_3t_wops mom_terminal56(PLUS) mom_terminal56(MINUS) mom_nw(B) <mom56f> CMACRO MOM_MIS_PRO mom56f 6 5 0
Device mom_3t_ckt momcap56_3t_wops mom_terminal56(PLUS) mom_terminal56(MINUS) mom_pw(B) <mom56f> CMACRO MOM_MIS_PRO mom56f 6 5 0

Device mom_2t_ckt momcap13 mom_terminal13(PLUS) mom_terminal13(MINUS) <mom13f> CMACRO MOM_MIS_PRO_2T mom13f 3 1 
Device mom_2t_ckt momcap24 mom_terminal24(PLUS) mom_terminal24(MINUS) <mom24f> CMACRO MOM_MIS_PRO_2T mom24f 4 2
Device mom_2t_ckt momcap14 mom_terminal14(PLUS) mom_terminal14(MINUS) <mom14f> CMACRO MOM_MIS_PRO_2T mom14f 4 1
Device mom_2t_ckt momcap15 mom_terminal15(PLUS) mom_terminal15(MINUS) <mom15f> CMACRO MOM_MIS_PRO_2T mom15f 5 1
Device mom_2t_ckt momcap25 mom_terminal25(PLUS) mom_terminal25(MINUS) <mom25f> CMACRO MOM_MIS_PRO_2T mom25f 5 2
Device mom_2t_ckt momcap35 mom_terminal35(PLUS) mom_terminal35(MINUS) <mom35f> CMACRO MOM_MIS_PRO_2T mom35f 5 3
Device mom_2t_ckt momcap16 mom_terminal16(PLUS) mom_terminal16(MINUS) <mom16f> CMACRO MOM_MIS_PRO_2T mom16f 6 1
Device mom_2t_ckt momcap26 mom_terminal26(PLUS) mom_terminal26(MINUS) <mom26f> CMACRO MOM_MIS_PRO_2T mom26f 6 2
Device mom_2t_ckt momcap36 mom_terminal36(PLUS) mom_terminal36(MINUS) <mom36f> CMACRO MOM_MIS_PRO_2T mom36f 6 3
Device mom_2t_ckt momcap46 mom_terminal46(PLUS) mom_terminal46(MINUS) <mom46f> CMACRO MOM_MIS_PRO_2T mom46f 6 4

Device mom_3t_ckt momcap13_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) mom_nw(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 0
Device mom_3t_ckt momcap13_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) mom_pw(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 0
Device mom_3t_ckt momcap14_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) mom_nw(B) <mom14f> CMACRO MOM_MIS_PRO mom14f 4 1 0
Device mom_3t_ckt momcap14_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) mom_pw(B) <mom14f> CMACRO MOM_MIS_PRO mom14f 4 1 0
Device mom_3t_ckt momcap24_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) mom_nw(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 0
Device mom_3t_ckt momcap24_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) mom_pw(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 0
Device mom_3t_ckt momcap15_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) mom_nw(B) <mom15f> CMACRO MOM_MIS_PRO mom15f 5 1 0
Device mom_3t_ckt momcap15_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) mom_pw(B) <mom15f> CMACRO MOM_MIS_PRO mom15f 5 1 0
Device mom_3t_ckt momcap25_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) mom_nw(B) <mom25f> CMACRO MOM_MIS_PRO mom25f 5 2 0
Device mom_3t_ckt momcap25_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) mom_pw(B) <mom25f> CMACRO MOM_MIS_PRO mom25f 5 2 0
Device mom_3t_ckt momcap35_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) mom_nw(B) <mom35f> CMACRO MOM_MIS_PRO mom35f 5 3 0
Device mom_3t_ckt momcap35_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) mom_pw(B) <mom35f> CMACRO MOM_MIS_PRO mom35f 5 3 0
Device mom_3t_ckt momcap16_3t_wops mom_terminal16(PLUS) mom_terminal16(MINUS) mom_nw(B) <mom16f> CMACRO MOM_MIS_PRO mom16f 6 1 0
Device mom_3t_ckt momcap16_3t_wops mom_terminal16(PLUS) mom_terminal16(MINUS) mom_pw(B) <mom16f> CMACRO MOM_MIS_PRO mom16f 6 1 0
Device mom_3t_ckt momcap26_3t_wops mom_terminal26(PLUS) mom_terminal26(MINUS) mom_nw(B) <mom26f> CMACRO MOM_MIS_PRO mom26f 6 2 0
Device mom_3t_ckt momcap26_3t_wops mom_terminal26(PLUS) mom_terminal26(MINUS) mom_pw(B) <mom26f> CMACRO MOM_MIS_PRO mom26f 6 2 0
Device mom_3t_ckt momcap36_3t_wops mom_terminal36(PLUS) mom_terminal36(MINUS) mom_nw(B) <mom36f> CMACRO MOM_MIS_PRO mom36f 6 3 0
Device mom_3t_ckt momcap36_3t_wops mom_terminal36(PLUS) mom_terminal36(MINUS) mom_pw(B) <mom36f> CMACRO MOM_MIS_PRO mom36f 6 3 0
Device mom_3t_ckt momcap46_3t_wops mom_terminal46(PLUS) mom_terminal46(MINUS) mom_nw(B) <mom46f> CMACRO MOM_MIS_PRO mom46f 6 4 0
Device mom_3t_ckt momcap46_3t_wops mom_terminal46(PLUS) mom_terminal46(MINUS) mom_pw(B) <mom46f> CMACRO MOM_MIS_PRO mom46f 6 4 0

Device mom_3t_ckt momcap13_3t_wips mom_terminal13(PLUS) mom_terminal13(MINUS) ppoly(B) <mom13f> CMACRO MOM_MIS_PRO mom13f 3 1 1
Device mom_3t_ckt momcap14_3t_wips mom_terminal14(PLUS) mom_terminal14(MINUS) ppoly(B) <mom14f> CMACRO MOM_MIS_PRO mom14f 4 1 1
Device mom_3t_ckt momcap24_3t_wips mom_terminal24(PLUS) mom_terminal24(MINUS) ppoly(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 1
Device mom_3t_ckt momcap15_3t_wips mom_terminal15(PLUS) mom_terminal15(MINUS) ppoly(B) <mom15f> CMACRO MOM_MIS_PRO mom15f 5 1 1
Device mom_3t_ckt momcap25_3t_wips mom_terminal25(PLUS) mom_terminal25(MINUS) ppoly(B) <mom25f> CMACRO MOM_MIS_PRO mom25f 5 2 1
Device mom_3t_ckt momcap35_3t_wips mom_terminal35(PLUS) mom_terminal35(MINUS) ppoly(B) <mom35f> CMACRO MOM_MIS_PRO mom35f 5 3 1
Device mom_3t_ckt momcap16_3t_wips mom_terminal16(PLUS) mom_terminal16(MINUS) ppoly(B) <mom16f> CMACRO MOM_MIS_PRO mom16f 6 1 1
Device mom_3t_ckt momcap26_3t_wips mom_terminal26(PLUS) mom_terminal26(MINUS) ppoly(B) <mom26f> CMACRO MOM_MIS_PRO mom26f 6 2 1
Device mom_3t_ckt momcap36_3t_wips mom_terminal36(PLUS) mom_terminal36(MINUS) ppoly(B) <mom36f> CMACRO MOM_MIS_PRO mom36f 6 3 1
Device mom_3t_ckt momcap46_3t_wips mom_terminal46(PLUS) mom_terminal46(MINUS) ppoly(B) <mom46f> CMACRO MOM_MIS_PRO mom46f 6 4 1

Device mom_rf momcap12rf_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) nwell(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 0
Device mom_rf momcap12rf_3t_wops mom_terminal12(PLUS) mom_terminal12(MINUS) pwell(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 0
Device mom_rf momcap13rf_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) nwell(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 0
Device mom_rf momcap13rf_3t_wops mom_terminal13(PLUS) mom_terminal13(MINUS) pwell(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 0
Device mom_rf momcap23rf_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) nwell(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 0
Device mom_rf momcap23rf_3t_wops mom_terminal23(PLUS) mom_terminal23(MINUS) pwell(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 0
Device mom_rf momcap14rf_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) nwell(B) <mom14f> CMACRO MOMRF_PRO mom14f 4 1 0
Device mom_rf momcap14rf_3t_wops mom_terminal14(PLUS) mom_terminal14(MINUS) pwell(B) <mom14f> CMACRO MOMRF_PRO mom14f 4 1 0
Device mom_rf momcap24rf_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) nwell(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 0
Device mom_rf momcap24rf_3t_wops mom_terminal24(PLUS) mom_terminal24(MINUS) pwell(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 0
Device mom_rf momcap34rf_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) nwell(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 0
Device mom_rf momcap34rf_3t_wops mom_terminal34(PLUS) mom_terminal34(MINUS) pwell(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 0
Device mom_rf momcap15rf_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) nwell(B) <mom15f> CMACRO MOMRF_PRO mom15f 5 1 0
Device mom_rf momcap15rf_3t_wops mom_terminal15(PLUS) mom_terminal15(MINUS) pwell(B) <mom15f> CMACRO MOMRF_PRO mom15f 5 1 0
Device mom_rf momcap25rf_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) nwell(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 0
Device mom_rf momcap25rf_3t_wops mom_terminal25(PLUS) mom_terminal25(MINUS) pwell(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 0
Device mom_rf momcap35rf_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) nwell(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 0
Device mom_rf momcap35rf_3t_wops mom_terminal35(PLUS) mom_terminal35(MINUS) pwell(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 0
Device mom_rf momcap45rf_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) nwell(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 0
Device mom_rf momcap45rf_3t_wops mom_terminal45(PLUS) mom_terminal45(MINUS) pwell(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 0
Device mom_rf momcap16rf_3t_wops mom_terminal16(PLUS) mom_terminal16(MINUS) nwell(B) <mom16f> CMACRO MOMRF_PRO mom16f 6 1 0
Device mom_rf momcap16rf_3t_wops mom_terminal16(PLUS) mom_terminal16(MINUS) pwell(B) <mom16f> CMACRO MOMRF_PRO mom16f 6 1 0
Device mom_rf momcap26rf_3t_wops mom_terminal26(PLUS) mom_terminal26(MINUS) nwell(B) <mom26f_rf> CMACRO MOMRF_PRO mom26f_rf 6 2 0
Device mom_rf momcap26rf_3t_wops mom_terminal26(PLUS) mom_terminal26(MINUS) pwell(B) <mom26f_rf> CMACRO MOMRF_PRO mom26f_rf 6 2 0
Device mom_rf momcap36rf_3t_wops mom_terminal36(PLUS) mom_terminal36(MINUS) nwell(B) <mom36f_rf> CMACRO MOMRF_PRO mom36f_rf 6 3 0
Device mom_rf momcap36rf_3t_wops mom_terminal36(PLUS) mom_terminal36(MINUS) pwell(B) <mom36f_rf> CMACRO MOMRF_PRO mom36f_rf 6 3 0
Device mom_rf momcap46rf_3t_wops mom_terminal46(PLUS) mom_terminal46(MINUS) nwell(B) <mom46f_rf> CMACRO MOMRF_PRO mom46f_rf 6 4 0
Device mom_rf momcap46rf_3t_wops mom_terminal46(PLUS) mom_terminal46(MINUS) pwell(B) <mom46f_rf> CMACRO MOMRF_PRO mom46f_rf 6 4 0
Device mom_rf momcap56rf_3t_wops mom_terminal56(PLUS) mom_terminal56(MINUS) nwell(B) <mom56f_rf> CMACRO MOMRF_PRO mom56f_rf 6 5 0
Device mom_rf momcap56rf_3t_wops mom_terminal56(PLUS) mom_terminal56(MINUS) pwell(B) <mom56f_rf> CMACRO MOMRF_PRO mom56f_rf 6 5 0

Device mom_rf momcap12rf_3t_wips mom_terminal12(PLUS) mom_terminal12(MINUS) ppoly(B) <mom12f> CMACRO MOMRF_PRO mom12f 2 1 1
Device mom_rf momcap13rf_3t_wips mom_terminal13(PLUS) mom_terminal13(MINUS) ppoly(B) <mom13f> CMACRO MOMRF_PRO mom13f 3 1 1
Device mom_rf momcap23rf_3t_wips mom_terminal23(PLUS) mom_terminal23(MINUS) ppoly(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 1
Device mom_rf momcap14rf_3t_wips mom_terminal14(PLUS) mom_terminal14(MINUS) ppoly(B) <mom14f> CMACRO MOMRF_PRO mom14f 4 1 1
Device mom_rf momcap24rf_3t_wips mom_terminal24(PLUS) mom_terminal24(MINUS) ppoly(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 1
Device mom_rf momcap34rf_3t_wips mom_terminal34(PLUS) mom_terminal34(MINUS) ppoly(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 1
Device mom_rf momcap15rf_3t_wips mom_terminal15(PLUS) mom_terminal15(MINUS) ppoly(B) <mom15f> CMACRO MOMRF_PRO mom15f 5 1 1
Device mom_rf momcap25rf_3t_wips mom_terminal25(PLUS) mom_terminal25(MINUS) ppoly(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 1
Device mom_rf momcap35rf_3t_wips mom_terminal35(PLUS) mom_terminal35(MINUS) ppoly(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 1
Device mom_rf momcap45rf_3t_wips mom_terminal45(PLUS) mom_terminal45(MINUS) ppoly(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 1
Device mom_rf momcap16rf_3t_wips mom_terminal16(PLUS) mom_terminal16(MINUS) ppoly(B) <mom16f> CMACRO MOMRF_PRO mom16f 6 1 1
Device mom_rf momcap26rf_3t_wips mom_terminal26(PLUS) mom_terminal26(MINUS) ppoly(B) <mom26f_rf> CMACRO MOMRF_PRO mom26f_rf 6 2 1
Device mom_rf momcap36rf_3t_wips mom_terminal36(PLUS) mom_terminal36(MINUS) ppoly(B) <mom36f_rf> CMACRO MOMRF_PRO mom36f_rf 6 3 1
Device mom_rf momcap46rf_3t_wips mom_terminal46(PLUS) mom_terminal46(MINUS) ppoly(B) <mom46f_rf> CMACRO MOMRF_PRO mom46f_rf 6 4 1
Device mom_rf momcap56rf_3t_wips mom_terminal56(PLUS) mom_terminal56(MINUS) ppoly(B) <mom56f_rf> CMACRO MOMRF_PRO mom56f_rf 6 5 1

Device mom_rf momcap23rf_3t_wim mom_terminal23(PLUS) mom_terminal23(MINUS) metal1(B) <mom23f_rf> CMACRO MOMRF_PRO mom23f_rf 3 2 2
Device mom_rf momcap24rf_3t_wim mom_terminal24(PLUS) mom_terminal24(MINUS) metal1(B) <mom24f_rf> CMACRO MOMRF_PRO mom24f_rf 4 2 2
Device mom_rf momcap34rf_3t_wim mom_terminal34(PLUS) mom_terminal34(MINUS) metal2(B) <mom34f_rf> CMACRO MOMRF_PRO mom34f_rf 4 3 2
Device mom_rf momcap25rf_3t_wim mom_terminal25(PLUS) mom_terminal25(MINUS) metal1(B) <mom25f_rf> CMACRO MOMRF_PRO mom25f_rf 5 2 2
Device mom_rf momcap35rf_3t_wim mom_terminal35(PLUS) mom_terminal35(MINUS) metal2(B) <mom35f_rf> CMACRO MOMRF_PRO mom35f_rf 5 3 2
Device mom_rf momcap45rf_3t_wim mom_terminal45(PLUS) mom_terminal45(MINUS) metal3(B) <mom45f_rf> CMACRO MOMRF_PRO mom45f_rf 5 4 2
Device mom_rf momcap26rf_3t_wim mom_terminal26(PLUS) mom_terminal26(MINUS) metal1(B) <mom26f_rf> CMACRO MOMRF_PRO mom26f_rf 6 2 2
Device mom_rf momcap36rf_3t_wim mom_terminal36(PLUS) mom_terminal36(MINUS) metal2(B) <mom36f_rf> CMACRO MOMRF_PRO mom36f_rf 6 3 2
Device mom_rf momcap46rf_3t_wim mom_terminal46(PLUS) mom_terminal46(MINUS) metal3(B) <mom46f_rf> CMACRO MOMRF_PRO mom46f_rf 6 4 2
Device mom_rf momcap56rf_3t_wim mom_terminal56(PLUS) mom_terminal56(MINUS) metal4(B) <mom56f_rf> CMACRO MOMRF_PRO mom56f_rf 6 5 2
#ENDIF
#ENDIF

//add mom_3t_ckt(metal shielding),mom_4t_ckt and mom_5t_ckt
Device mom_3t_ckt momcap23_3t_wims mom_terminal23(PLUS) mom_terminal23(MINUS) metal1(B) <mom23f> CMACRO MOM_MIS_PRO mom23f 3 2 2
Device mom_4t_ckt momcap12_4t mom_terminal12_one(P1) mom_terminal12_one(M1) mom_terminal12_two(P2) mom_terminal12_two(M2) <mom12f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_4T_MESH mom12f MOMP1 2 1
Device mom_4t_ckt momcap23_4t mom_terminal23_one(P1) mom_terminal23_one(M1) mom_terminal23_two(P2) mom_terminal23_two(M2) <mom23f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_4T_MESH mom23f MOMP1 3 2
Device mom_4t_ckt momcap13_4t mom_terminal13_one(P1) mom_terminal13_one(M1) mom_terminal13_two(P2) mom_terminal13_two(M2) <mom13f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_4T_MESH mom13f MOMP1 3 1
Device mom_5t_ckt momcap12_5t_wops_nw mom_terminal12_one(P1) mom_terminal12_one(M1) mom_terminal12_two(P2) mom_terminal12_two(M2) mom_nw(B) <mom12f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom12f MOMP1 2 1 0
Device mom_5t_ckt momcap12_5t_wops_pw mom_terminal12_one(P1) mom_terminal12_one(M1) mom_terminal12_two(P2) mom_terminal12_two(M2) mom_pw(B) <mom12f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom12f MOMP1 2 1 0
Device mom_5t_ckt momcap23_5t_wops_nw mom_terminal23_one(P1) mom_terminal23_one(M1) mom_terminal23_two(P2) mom_terminal23_two(M2) mom_nw(B) <mom23f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom23f MOMP1 3 2 0
Device mom_5t_ckt momcap23_5t_wops_pw mom_terminal23_one(P1) mom_terminal23_one(M1) mom_terminal23_two(P2) mom_terminal23_two(M2) mom_pw(B) <mom23f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom23f MOMP1 3 2 0
Device mom_5t_ckt momcap13_5t_wops_nw mom_terminal13_one(P1) mom_terminal13_one(M1) mom_terminal13_two(P2) mom_terminal13_two(M2) mom_nw(B) <mom13f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom13f MOMP1 3 1 0
Device mom_5t_ckt momcap13_5t_wops_pw mom_terminal13_one(P1) mom_terminal13_one(M1) mom_terminal13_two(P2) mom_terminal13_two(M2) mom_pw(B) <mom13f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom13f MOMP1 3 1 0
Device mom_5t_ckt momcap12_5t_wips mom_terminal12_one(P1) mom_terminal12_one(M1) mom_terminal12_two(P2) mom_terminal12_two(M2) ppoly(B) <mom12f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom12f MOMP1 2 1 1
Device mom_5t_ckt momcap23_5t_wips mom_terminal23_one(P1) mom_terminal23_one(M1) mom_terminal23_two(P2) mom_terminal23_two(M2) ppoly(B) <mom23f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom23f MOMP1 3 2 1
Device mom_5t_ckt momcap13_5t_wips mom_terminal13_one(P1) mom_terminal13_one(M1) mom_terminal13_two(P2) mom_terminal13_two(M2) ppoly(B) <mom13f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom13f MOMP1 3 1 1
Device mom_5t_ckt momcap23_5t_wims mom_terminal23_one(P1) mom_terminal23_one(M1) mom_terminal23_two(P2) mom_terminal23_two(M2) metal1(B) <mom23f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom23f MOMP1 3 2 2

#IFDEF MOM14 TRUE
Device mom_4t_ckt momcap14_4t mom_terminal14_one(P1) mom_terminal14_one(M1) mom_terminal14_two(P2) mom_terminal14_two(M2) <mom14f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_4T_MESH mom14f MOMP1 4 1
Device mom_5t_ckt momcap14_5t_wops_nw mom_terminal14_one(P1) mom_terminal14_one(M1) mom_terminal14_two(P2) mom_terminal14_two(M2) mom_nw(B) <mom14f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom14f MOMP1 4 1 0
Device mom_5t_ckt momcap14_5t_wops_pw mom_terminal14_one(P1) mom_terminal14_one(M1) mom_terminal14_two(P2) mom_terminal14_two(M2) mom_pw(B) <mom14f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom14f MOMP1 4 1 0
Device mom_5t_ckt momcap14_5t_wips mom_terminal14_one(P1) mom_terminal14_one(M1) mom_terminal14_two(P2) mom_terminal14_two(M2) ppoly(B) <mom14f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom14f MOMP1 4 1 1
#ENDIF

#IFDEF MOM15 TRUE
device mom_4t_ckt momcap15_4t mom_terminal15_one(P1) mom_terminal15_one(M1) mom_terminal15_two(P2) mom_terminal15_two(M2) <mom15f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_4T_MESH mom15f MOMP1 5 1
Device mom_5t_ckt momcap15_5t_wops_nw mom_terminal15_one(P1) mom_terminal15_one(M1) mom_terminal15_two(P2) mom_terminal15_two(M2) mom_nw(B) <mom15f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom15f MOMP1 5 1 0
Device mom_5t_ckt momcap15_5t_wops_pw mom_terminal15_one(P1) mom_terminal15_one(M1) mom_terminal15_two(P2) mom_terminal15_two(M2) mom_pw(B) <mom15f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom15f MOMP1 5 1 0
Device mom_5t_ckt momcap15_5t_wips mom_terminal15_one(P1) mom_terminal15_one(M1) mom_terminal15_two(P2) mom_terminal15_two(M2) ppoly(B) <mom15f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom15f MOMP1 5 1 1
#ENDIF

#IFDEF MOM16 TRUE
Device mom_4t_ckt momcap16_4t mom_terminal16_one(P1) mom_terminal16_one(M1) mom_terminal16_two(P2) mom_terminal16_two(M2) <mom16f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_4T_MESH mom16f MOMP1 6 1
Device mom_5t_ckt momcap16_5t_wops_nw mom_terminal16_one(P1) mom_terminal16_one(M1) mom_terminal16_two(P2) mom_terminal16_two(M2) mom_nw(B) <mom16f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom16f MOMP1 6 1 0
Device mom_5t_ckt momcap16_5t_wops_pw mom_terminal16_one(P1) mom_terminal16_one(M1) mom_terminal16_two(P2) mom_terminal16_two(M2) mom_pw(B) <mom16f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom16f MOMP1 6 1 0
Device mom_5t_ckt momcap16_5t_wips mom_terminal16_one(P1) mom_terminal16_one(M1) mom_terminal16_two(P2) mom_terminal16_two(M2) ppoly(B) <mom16f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom16f MOMP1 6 1 1
#ENDIF


#IFDEF MOM24 TRUE
Device mom_3t_ckt momcap24_3t_wims mom_terminal24(PLUS) mom_terminal24(MINUS) metal1(B) <mom24f> CMACRO MOM_MIS_PRO mom24f 4 2 2
Device mom_4t_ckt momcap24_4t mom_terminal24_one(P1) mom_terminal24_one(M1) mom_terminal24_two(P2) mom_terminal24_two(M2) <mom24f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_4T_MESH mom24f MOMP1 4 2
Device mom_5t_ckt momcap24_5t_wops_nw mom_terminal24_one(P1) mom_terminal24_one(M1) mom_terminal24_two(P2) mom_terminal24_two(M2) mom_nw(B) <mom24f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom24f MOMP1 4 2 0
Device mom_5t_ckt momcap24_5t_wops_pw mom_terminal24_one(P1) mom_terminal24_one(M1) mom_terminal24_two(P2) mom_terminal24_two(M2) mom_pw(B) <mom24f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom24f MOMP1 4 2 0
Device mom_5t_ckt momcap24_5t_wips mom_terminal24_one(P1) mom_terminal24_one(M1) mom_terminal24_two(P2) mom_terminal24_two(M2) ppoly(B) <mom24f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom24f MOMP1 4 2 1
Device mom_5t_ckt momcap24_5t_wims mom_terminal24_one(P1) mom_terminal24_one(M1) mom_terminal24_two(P2) mom_terminal24_two(M2) metal1(B) <mom24f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom24f MOMP1 4 2 2
#ENDIF

#IFDEF MOM25 TRUE
Device mom_3t_ckt momcap25_3t_wims mom_terminal25(PLUS) mom_terminal25(MINUS) metal1(B) <mom25f> CMACRO MOM_MIS_PRO mom25f 5 2 2
Device mom_4t_ckt momcap25_4t mom_terminal25_one(P1) mom_terminal25_one(M1) mom_terminal25_two(P2) mom_terminal25_two(M2) <mom25f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_4T_MESH mom25f MOMP1 5 2
Device mom_5t_ckt momcap25_5t_wops_nw mom_terminal25_one(P1) mom_terminal25_one(M1) mom_terminal25_two(P2) mom_terminal25_two(M2) mom_nw(B) <mom25f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom25f MOMP1 5 2 0
Device mom_5t_ckt momcap25_5t_wops_pw mom_terminal25_one(P1) mom_terminal25_one(M1) mom_terminal25_two(P2) mom_terminal25_two(M2) mom_pw(B) <mom25f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom25f MOMP1 5 2 0
Device mom_5t_ckt momcap25_5t_wips mom_terminal25_one(P1) mom_terminal25_one(M1) mom_terminal25_two(P2) mom_terminal25_two(M2) ppoly(B) <mom25f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom25f MOMP1 5 2 1
Device mom_5t_ckt momcap25_5t_wims mom_terminal25_one(P1) mom_terminal25_one(M1) mom_terminal25_two(P2) mom_terminal25_two(M2) metal1(B) <mom25f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom25f MOMP1 5 2 2
#ENDIF

#IFDEF MOM26 TRUE
Device mom_3t_ckt momcap26_3t_wims mom_terminal26(PLUS) mom_terminal26(MINUS) metal1(B) <mom26f> CMACRO MOM_MIS_PRO mom26f 6 2 2
Device mom_4t_ckt momcap26_4t mom_terminal26_one(P1) mom_terminal26_one(M1) mom_terminal26_two(P2) mom_terminal26_two(M2) <mom26f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_4T_MESH mom26f MOMP1 6 2
Device mom_5t_ckt momcap26_5t_wops_nw mom_terminal26_one(P1) mom_terminal26_one(M1) mom_terminal26_two(P2) mom_terminal26_two(M2) mom_nw(B) <mom26f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom26f MOMP1 6 2 0
Device mom_5t_ckt momcap26_5t_wops_pw mom_terminal26_one(P1) mom_terminal26_one(M1) mom_terminal26_two(P2) mom_terminal26_two(M2) mom_pw(B) <mom26f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom26f MOMP1 6 2 0
Device mom_5t_ckt momcap26_5t_wips mom_terminal26_one(P1) mom_terminal26_one(M1) mom_terminal26_two(P2) mom_terminal26_two(M2) ppoly(B) <mom26f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom26f MOMP1 6 2 1
Device mom_5t_ckt momcap26_5t_wims mom_terminal26_one(P1) mom_terminal26_one(M1) mom_terminal26_two(P2) mom_terminal26_two(M2) metal1(B) <mom26f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom26f MOMP1 6 2 2
#ENDIF

#IFDEF MOM34 TRUE
Device mom_3t_ckt momcap34_3t_wims mom_terminal34(PLUS) mom_terminal34(MINUS) metal2(B) <mom34f> CMACRO MOM_MIS_PRO mom34f 4 3 2
Device mom_4t_ckt momcap34_4t mom_terminal34_one(P1) mom_terminal34_one(M1) mom_terminal34_two(P2) mom_terminal34_two(M2) <mom34f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_4T_MESH mom34f MOMP1 4 3
Device mom_5t_ckt momcap34_5t_wops_nw mom_terminal34_one(P1) mom_terminal34_one(M1) mom_terminal34_two(P2) mom_terminal34_two(M2) mom_nw(B) <mom34f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom34f MOMP1 4 3 0
Device mom_5t_ckt momcap34_5t_wops_pw mom_terminal34_one(P1) mom_terminal34_one(M1) mom_terminal34_two(P2) mom_terminal34_two(M2) mom_pw(B) <mom34f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom34f MOMP1 4 3 0
Device mom_5t_ckt momcap34_5t_wips mom_terminal34_one(P1) mom_terminal34_one(M1) mom_terminal34_two(P2) mom_terminal34_two(M2) ppoly(B) <mom34f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom34f MOMP1 4 3 1
Device mom_5t_ckt momcap34_5t_wims mom_terminal34_one(P1) mom_terminal34_one(M1) mom_terminal34_two(P2) mom_terminal34_two(M2) metal2(B) <mom34f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom34f MOMP1 4 3 2
#ENDIF

#IFDEF MOM35 TRUE
Device mom_3t_ckt momcap35_3t_wims mom_terminal35(PLUS) mom_terminal35(MINUS) metal2(B) <mom35f> CMACRO MOM_MIS_PRO mom35f 5 3 2
Device mom_4t_ckt momcap35_4t mom_terminal35_one(P1) mom_terminal35_one(M1) mom_terminal35_two(P2) mom_terminal35_two(M2) <mom35f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_4T_MESH mom35f MOMP1 5 3
Device mom_5t_ckt momcap35_5t_wops_nw mom_terminal35_one(P1) mom_terminal35_one(M1) mom_terminal35_two(P2) mom_terminal35_two(M2) mom_nw(B) <mom35f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom35f MOMP1 5 3 0
Device mom_5t_ckt momcap35_5t_wops_pw mom_terminal35_one(P1) mom_terminal35_one(M1) mom_terminal35_two(P2) mom_terminal35_two(M2) mom_pw(B) <mom35f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom35f MOMP1 5 3 0
Device mom_5t_ckt momcap35_5t_wips mom_terminal35_one(P1) mom_terminal35_one(M1) mom_terminal35_two(P2) mom_terminal35_two(M2) ppoly(B) <mom35f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom35f MOMP1 5 3 1
Device mom_5t_ckt momcap35_5t_wims mom_terminal35_one(P1) mom_terminal35_one(M1) mom_terminal35_two(P2) mom_terminal35_two(M2) metal2(B) <mom35f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom35f MOMP1 5 3 2
#ENDIF

#IFDEF MOM36 TRUE
Device mom_3t_ckt momcap36_3t_wims mom_terminal36(PLUS) mom_terminal36(MINUS) metal2(B) <mom36f> CMACRO MOM_MIS_PRO mom36f 6 3 2
Device mom_4t_ckt momcap36_4t mom_terminal36_one(P1) mom_terminal36_one(M1) mom_terminal36_two(P2) mom_terminal36_two(M2) <mom36f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_4T_MESH mom36f MOMP1 6 3
Device mom_5t_ckt momcap36_5t_wops_nw mom_terminal36_one(P1) mom_terminal36_one(M1) mom_terminal36_two(P2) mom_terminal36_two(M2) mom_nw(B) <mom36f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom36f MOMP1 6 3 0
Device mom_5t_ckt momcap36_5t_wops_pw mom_terminal36_one(P1) mom_terminal36_one(M1) mom_terminal36_two(P2) mom_terminal36_two(M2) mom_pw(B) <mom36f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom36f MOMP1 6 3 0
Device mom_5t_ckt momcap36_5t_wips mom_terminal36_one(P1) mom_terminal36_one(M1) mom_terminal36_two(P2) mom_terminal36_two(M2) ppoly(B) <mom36f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom36f MOMP1 6 3 1
Device mom_5t_ckt momcap36_5t_wims mom_terminal36_one(P1) mom_terminal36_one(M1) mom_terminal36_two(P2) mom_terminal36_two(M2) metal2(B) <mom36f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom36f MOMP1 6 3 2
#ENDIF

#IFDEF MOM45 TRUE
Device mom_3t_ckt momcap45_3t_wims mom_terminal45(PLUS) mom_terminal45(MINUS) metal3(B) <mom45f> CMACRO MOM_MIS_PRO mom45f 5 4 2
Device mom_4t_ckt momcap45_4t mom_terminal45_one(P1) mom_terminal45_one(M1) mom_terminal45_two(P2) mom_terminal45_two(M2) <mom45f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_4T_MESH mom45f MOMP1 5 4
Device mom_5t_ckt momcap45_5t_wops_nw mom_terminal45_one(P1) mom_terminal45_one(M1) mom_terminal45_two(P2) mom_terminal45_two(M2) mom_nw(B) <mom45f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom45f MOMP1 5 4 0
Device mom_5t_ckt momcap45_5t_wops_pw mom_terminal45_one(P1) mom_terminal45_one(M1) mom_terminal45_two(P2) mom_terminal45_two(M2) mom_pw(B) <mom45f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom45f MOMP1 5 4 0
Device mom_5t_ckt momcap45_5t_wips mom_terminal45_one(P1) mom_terminal45_one(M1) mom_terminal45_two(P2) mom_terminal45_two(M2) ppoly(B) <mom45f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom45f MOMP1 5 4 1
Device mom_5t_ckt momcap45_5t_wims mom_terminal45_one(P1) mom_terminal45_one(M1) mom_terminal45_two(P2) mom_terminal45_two(M2) metal3(B) <mom45f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom45f MOMP1 5 4 2
#ENDIF

#IFDEF MOM46 TRUE
Device mom_3t_ckt momcap46_3t_wims mom_terminal46(PLUS) mom_terminal46(MINUS) metal3(B) <mom46f> CMACRO MOM_MIS_PRO mom46f 6 4 2
Device mom_4t_ckt momcap46_4t mom_terminal46_one(P1) mom_terminal46_one(M1) mom_terminal46_two(P2) mom_terminal46_two(M2) <mom46f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_4T_MESH mom46f MOMP1 6 4
Device mom_5t_ckt momcap46_5t_wops_nw mom_terminal46_one(P1) mom_terminal46_one(M1) mom_terminal46_two(P2) mom_terminal46_two(M2) mom_nw(B) <mom46f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom46f MOMP1 6 4 0
Device mom_5t_ckt momcap46_5t_wops_pw mom_terminal46_one(P1) mom_terminal46_one(M1) mom_terminal46_two(P2) mom_terminal46_two(M2) mom_pw(B) <mom46f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom46f MOMP1 6 4 0
Device mom_5t_ckt momcap46_5t_wips mom_terminal46_one(P1) mom_terminal46_one(M1) mom_terminal46_two(P2) mom_terminal46_two(M2) ppoly(B) <mom46f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom46f MOMP1 6 4 1
Device mom_5t_ckt momcap46_5t_wims mom_terminal46_one(P1) mom_terminal46_one(M1) mom_terminal46_two(P2) mom_terminal46_two(M2) metal3(B) <mom46f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom46f MOMP1 6 4 2
#ENDIF

#IFDEF MOM56 TRUE
Device mom_3t_ckt momcap56_3t_wims mom_terminal56(PLUS) mom_terminal56(MINUS) metal4(B) <mom56f> CMACRO MOM_MIS_PRO mom56f 6 5 2
Device mom_4t_ckt momcap56_4t mom_terminal56_one(P1) mom_terminal56_one(M1) mom_terminal56_two(P2) mom_terminal56_two(M2) <mom56f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_4T_MESH mom56f MOMP1 6 5
Device mom_5t_ckt momcap56_5t_wops_nw mom_terminal56_one(P1) mom_terminal56_one(M1) mom_terminal56_two(P2) mom_terminal56_two(M2) mom_nw(B) <mom56f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom56f MOMP1 6 5 0
Device mom_5t_ckt momcap56_5t_wops_pw mom_terminal56_one(P1) mom_terminal56_one(M1) mom_terminal56_two(P2) mom_terminal56_two(M2) mom_pw(B) <mom56f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom56f MOMP1 6 5 0
Device mom_5t_ckt momcap56_5t_wips mom_terminal56_one(P1) mom_terminal56_one(M1) mom_terminal56_two(P2) mom_terminal56_two(M2) ppoly(B) <mom56f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom56f MOMP1 6 5 1
Device mom_5t_ckt momcap56_5t_wims mom_terminal56_one(P1) mom_terminal56_one(M1) mom_terminal56_two(P2) mom_terminal56_two(M2) metal4(B) <mom56f> <MOMDMY> <MOMP1> <mom_col> <mom_row> CMACRO MOM_MIS_PRO_MESH mom56f MOMP1 6 5 2
#ENDIF

///////////////////////////Define Inductors///////////////////////////

DMACRO IND_RF_PRO  {
        [PROPERTY R,N
        P=PERIMETER(metal_ind_hole)
        A=AREA(metal_ind_hole)
        W=(P+SQRT(abs(P*P-16*A)))/4
        R=(W-1.11E-05)/2*0.9
        N=COUNT(metal_ind_touch)-1]
}

DMACRO IND_RF_RDL_PRO  {
        [PROPERTY R,N
        P=PERIMETER(metal_ind_hole_rdl)
        A=AREA(metal_ind_hole_rdl)
        W=(P+SQRT(abs(P*P-16*A)))/4
        R=(W-1.11E-05)/2*0.9
        N=COUNT(metal_ind_touch)-1]
}

DMACRO IND_RF_RDL_T1_PRO {
        [PROPERTY R,N
        P=PERIMETER(metal_ind_hole_rdl)
        A=AREA(metal_ind_hole_rdl)
        W=(P+SQRT(abs(P*P-16*A)))/4
        R=(W-1.11E-05)/2*0.9
        N=COUNT(metal_ind_touch)-1]
}


#IFDEF TOPMETAL 4
#ELSE
#IFDEF TOPMETAL 5
#ELSE
#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 4
#IFDEF TM2_WIDTH 15
DEVICE ind_rf_t2 ind_rf_t2 dind_pm_PI(PLUS) dind_pm_MI(MINUS) <metal_ind_hole> <metal_ind_touch> CMACRO IND_RF_PRO
DEVICE ind_rf_t3 ind_rf_t3 dind_pm_PI(PLUS) dind_pm_MI(MINUS) <metal_ind_hole> <metal_ind_touch> CMACRO IND_RF_PRO
DEVICE ind_rf_t4 ind_rf_t4 dind_pm_PI(PLUS) dind_pm_MI(MINUS) <metal_ind_hole> <metal_ind_touch> CMACRO IND_RF_PRO
DEVICE ind_rf_t5 ind_rf_t5 dind_pm_PI(PLUS) dind_pm_MI(MINUS) <metal_ind_hole> <metal_ind_touch> CMACRO IND_RF_PRO
DEVICE ind_rf_t6 ind_rf_t6 dind_pm_PI(PLUS) dind_pm_MI(MINUS) <metal_ind_hole> <metal_ind_touch> CMACRO IND_RF_PRO

DEVICE ind_rf_t2_psub ind_rf_t2_psub dind_pm_PI(PLUS) dind_pm_MI(MINUS) pwell(B) <metal_ind_hole> <metal_ind_touch> CMACRO IND_RF_PRO
DEVICE ind_rf_t3_psub ind_rf_t3_psub dind_pm_PI(PLUS) dind_pm_MI(MINUS) pwell(B) <metal_ind_hole> <metal_ind_touch> CMACRO IND_RF_PRO
DEVICE ind_rf_t4_psub ind_rf_t4_psub dind_pm_PI(PLUS) dind_pm_MI(MINUS) pwell(B) <metal_ind_hole> <metal_ind_touch> CMACRO IND_RF_PRO
DEVICE ind_rf_t5_psub ind_rf_t5_psub dind_pm_PI(PLUS) dind_pm_MI(MINUS) pwell(B) <metal_ind_hole> <metal_ind_touch> CMACRO IND_RF_PRO
DEVICE ind_rf_t6_psub ind_rf_t6_psub dind_pm_PI(PLUS) dind_pm_MI(MINUS) pwell(B) <metal_ind_hole> <metal_ind_touch> CMACRO IND_RF_PRO

DEVICE ind_diff_t2 ind_diff_t2 dind_pm(PLUS) dind_pm(MINUS) dind_B(B) <metal_ind_hole> <metal_ind_touch> CMACRO IND_DIFF_PRO
DEVICE ind_diff_t3 ind_diff_t3 dind_pm(PLUS) dind_pm(MINUS) dind_B(B) <metal_ind_hole> <metal_ind_touch> CMACRO IND_DIFF_PRO
DEVICE ind_diff_t4 ind_diff_t4 dind_pm(PLUS) dind_pm(MINUS) dind_B(B) <metal_ind_hole> <metal_ind_touch> CMACRO IND_DIFF_PRO
DEVICE ind_diff_t5 ind_diff_t5 dind_pm(PLUS) dind_pm(MINUS) dind_B(B) <metal_ind_hole> <metal_ind_touch> CMACRO IND_DIFF_PRO
DEVICE ind_diff_t6 ind_diff_t6 dind_pm(PLUS) dind_pm(MINUS) dind_B(B) <metal_ind_hole> <metal_ind_touch> CMACRO IND_DIFF_PRO

DEVICE ind_diff_t2_psub ind_diff_t2_psub dind_pm(PLUS) dind_pm(MINUS) dind_B(B1) pwell(B2) <metal_ind_hole> <metal_ind_touch> CMACRO IND_DIFF_PRO
DEVICE ind_diff_t3_psub ind_diff_t3_psub dind_pm(PLUS) dind_pm(MINUS) dind_B(B1) pwell(B2) <metal_ind_hole> <metal_ind_touch> CMACRO IND_DIFF_PRO
DEVICE ind_diff_t4_psub ind_diff_t4_psub dind_pm(PLUS) dind_pm(MINUS) dind_B(B1) pwell(B2) <metal_ind_hole> <metal_ind_touch> CMACRO IND_DIFF_PRO
DEVICE ind_diff_t5_psub ind_diff_t5_psub dind_pm(PLUS) dind_pm(MINUS) dind_B(B1) pwell(B2) <metal_ind_hole> <metal_ind_touch> CMACRO IND_DIFF_PRO
DEVICE ind_diff_t6_psub ind_diff_t6_psub dind_pm(PLUS) dind_pm(MINUS) dind_B(B1) pwell(B2) <metal_ind_hole> <metal_ind_touch> CMACRO IND_DIFF_PRO
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM single
#IFDEF TM2_WIDTH 15
DEVICE ind_rf_1tm_t2 ind_rf_1tm_t2 dind_pm_PI(PLUS) dind_pm_MI(MINUS) <metal_ind_hole> <metal_ind_touch> CMACRO IND_RF_PRO
DEVICE ind_rf_1tm_t3 ind_rf_1tm_t3 dind_pm_PI(PLUS) dind_pm_MI(MINUS) <metal_ind_hole> <metal_ind_touch> CMACRO IND_RF_PRO
DEVICE ind_rf_1tm_t4 ind_rf_1tm_t4 dind_pm_PI(PLUS) dind_pm_MI(MINUS) <metal_ind_hole> <metal_ind_touch> CMACRO IND_RF_PRO
DEVICE ind_rf_1tm_t5 ind_rf_1tm_t5 dind_pm_PI(PLUS) dind_pm_MI(MINUS) <metal_ind_hole> <metal_ind_touch> CMACRO IND_RF_PRO
//DEVICE ind_rf_1tm_t6 ind_rf_1tm_t6 dind_pm_PI(PLUS) dind_pm_MI(MINUS) <metal_ind_hole> <metal_ind_touch> CMACRO IND_RF_PRO

DEVICE ind_rf_1tm_t2_psub ind_rf_1tm_t2_psub dind_pm_PI(PLUS) dind_pm_MI(MINUS) pwell(B) <metal_ind_hole> <metal_ind_touch> CMACRO IND_RF_PRO
DEVICE ind_rf_1tm_t3_psub ind_rf_1tm_t3_psub dind_pm_PI(PLUS) dind_pm_MI(MINUS) pwell(B) <metal_ind_hole> <metal_ind_touch> CMACRO IND_RF_PRO
DEVICE ind_rf_1tm_t4_psub ind_rf_1tm_t4_psub dind_pm_PI(PLUS) dind_pm_MI(MINUS) pwell(B) <metal_ind_hole> <metal_ind_touch> CMACRO IND_RF_PRO
DEVICE ind_rf_1tm_t5_psub ind_rf_1tm_t5_psub dind_pm_PI(PLUS) dind_pm_MI(MINUS) pwell(B) <metal_ind_hole> <metal_ind_touch> CMACRO IND_RF_PRO
//DEVICE ind_rf_1tm_t6_psub ind_rf_1tm_t6_psub dind_pm_PI(PLUS) dind_pm_MI(MINUS) pwell(B) <metal_ind_hole> <metal_ind_touch> CMACRO IND_RF_PRO

DEVICE ind_diff_1tm_t2 ind_diff_1tm_t2 dind_pm(PLUS) dind_pm(MINUS) dind_B(B) <metal_ind_hole> <metal_ind_touch> CMACRO IND_DIFF_PRO
DEVICE ind_diff_1tm_t3 ind_diff_1tm_t3 dind_pm(PLUS) dind_pm(MINUS) dind_B(B) <metal_ind_hole> <metal_ind_touch> CMACRO IND_DIFF_PRO
DEVICE ind_diff_1tm_t4 ind_diff_1tm_t4 dind_pm(PLUS) dind_pm(MINUS) dind_B(B) <metal_ind_hole> <metal_ind_touch> CMACRO IND_DIFF_PRO
DEVICE ind_diff_1tm_t5 ind_diff_1tm_t5 dind_pm(PLUS) dind_pm(MINUS) dind_B(B) <metal_ind_hole> <metal_ind_touch> CMACRO IND_DIFF_PRO
//DEVICE ind_diff_1tm_t6 ind_diff_1tm_t6 dind_pm(PLUS) dind_pm(MINUS) dind_B(B) <metal_ind_hole> <metal_ind_touch> CMACRO IND_DIFF_PRO

DEVICE ind_diff_1tm_t2_psub ind_diff_1tm_t2_psub dind_pm(PLUS) dind_pm(MINUS) dind_B(B1) pwell(B2) <metal_ind_hole> <metal_ind_touch> CMACRO IND_DIFF_PRO
DEVICE ind_diff_1tm_t3_psub ind_diff_1tm_t3_psub dind_pm(PLUS) dind_pm(MINUS) dind_B(B1) pwell(B2) <metal_ind_hole> <metal_ind_touch> CMACRO IND_DIFF_PRO
DEVICE ind_diff_1tm_t4_psub ind_diff_1tm_t4_psub dind_pm(PLUS) dind_pm(MINUS) dind_B(B1) pwell(B2) <metal_ind_hole> <metal_ind_touch> CMACRO IND_DIFF_PRO
DEVICE ind_diff_1tm_t5_psub ind_diff_1tm_t5_psub dind_pm(PLUS) dind_pm(MINUS) dind_B(B1) pwell(B2) <metal_ind_hole> <metal_ind_touch> CMACRO IND_DIFF_PRO
//DEVICE ind_diff_1tm_t6_psub ind_diff_1tm_t6_psub dind_pm(PLUS) dind_pm(MINUS) dind_B(B1) pwell(B2) <metal_ind_hole> <metal_ind_touch> CMACRO IND_DIFF_PRO
#ENDIF

#IFDEF TM2_WIDTH 4
#IFDEF ALPA_THICK THIN
DEVICE ind_rf_t1alpa_t1 ind_rf_t1alpa_t1 dind_pm_PI_rdl(PLUS) dind_pm_MI_rdl(MINUS) <metal_ind_hole_rdl> <metal_ind_touch> CMACRO IND_RF_RDL_T1_PRO
DEVICE ind_rf_t1alpa_t2 ind_rf_t1alpa_t2 dind_pm_PI_rdl(PLUS) dind_pm_MI_rdl(MINUS) <metal_ind_hole_rdl> <metal_ind_touch> CMACRO IND_RF_RDL_PRO
DEVICE ind_rf_t1alpa_t3 ind_rf_t1alpa_t3 dind_pm_PI_rdl(PLUS) dind_pm_MI_rdl(MINUS) <metal_ind_hole_rdl> <metal_ind_touch> CMACRO IND_RF_RDL_PRO
DEVICE ind_rf_t1alpa_t4 ind_rf_t1alpa_t4 dind_pm_PI_rdl(PLUS) dind_pm_MI_rdl(MINUS) <metal_ind_hole_rdl> <metal_ind_touch> CMACRO IND_RF_RDL_PRO
DEVICE ind_rf_t1alpa_t5 ind_rf_t1alpa_t5 dind_pm_PI_rdl(PLUS) dind_pm_MI_rdl(MINUS) <metal_ind_hole_rdl> <metal_ind_touch> CMACRO IND_RF_RDL_PRO

DEVICE ind_rf_t1alpa_psub_t1 ind_rf_t1alpa_psub_t1 dind_pm_PI_rdl(PLUS) dind_pm_MI_rdl(MINUS) pwell(B) <metal_ind_hole_rdl> <metal_ind_touch> CMACRO IND_RF_RDL_T1_PRO
DEVICE ind_rf_t1alpa_psub_t2 ind_rf_t1alpa_psub_t2 dind_pm_PI_rdl(PLUS) dind_pm_MI_rdl(MINUS) pwell(B) <metal_ind_hole_rdl> <metal_ind_touch> CMACRO IND_RF_RDL_PRO
DEVICE ind_rf_t1alpa_psub_t3 ind_rf_t1alpa_psub_t3 dind_pm_PI_rdl(PLUS) dind_pm_MI_rdl(MINUS) pwell(B) <metal_ind_hole_rdl> <metal_ind_touch> CMACRO IND_RF_RDL_PRO
DEVICE ind_rf_t1alpa_psub_t4 ind_rf_t1alpa_psub_t4 dind_pm_PI_rdl(PLUS) dind_pm_MI_rdl(MINUS) pwell(B) <metal_ind_hole_rdl> <metal_ind_touch> CMACRO IND_RF_RDL_PRO
DEVICE ind_rf_t1alpa_psub_t5 ind_rf_t1alpa_psub_t5 dind_pm_PI_rdl(PLUS) dind_pm_MI_rdl(MINUS) pwell(B) <metal_ind_hole_rdl> <metal_ind_touch> CMACRO IND_RF_RDL_PRO

DEVICE ind_rf_diff_t1alpa_t1 ind_rf_diff_t1alpa_t1 dind_pm_rdl(PLUS) dind_pm_rdl(MINUS) dind_B(B) <metal_ind_hole_rdl> <metal_ind_touch> CMACRO IND_DIFF_RDL_T1_PRO
DEVICE ind_rf_diff_t1alpa_t2 ind_rf_diff_t1alpa_t2 dind_pm_rdl(PLUS) dind_pm_rdl(MINUS) dind_B(B) <metal_ind_hole_rdl> <metal_ind_touch> CMACRO IND_DIFF_RDL_PRO
DEVICE ind_rf_diff_t1alpa_t3 ind_rf_diff_t1alpa_t3 dind_pm_rdl(PLUS) dind_pm_rdl(MINUS) dind_B(B) <metal_ind_hole_rdl> <metal_ind_touch> CMACRO IND_DIFF_RDL_PRO
DEVICE ind_rf_diff_t1alpa_t4 ind_rf_diff_t1alpa_t4 dind_pm_rdl(PLUS) dind_pm_rdl(MINUS) dind_B(B) <metal_ind_hole_rdl> <metal_ind_touch> CMACRO IND_DIFF_RDL_PRO
DEVICE ind_rf_diff_t1alpa_t5 ind_rf_diff_t1alpa_t5 dind_pm_rdl(PLUS) dind_pm_rdl(MINUS) dind_B(B) <metal_ind_hole_rdl> <metal_ind_touch> CMACRO IND_DIFF_RDL_PRO

DEVICE diff_t1alpa_psub_t1 diff_t1alpa_psub_t1 dind_pm_rdl(PLUS) dind_pm_rdl(MINUS) dind_B(B1) pwell(B2) <metal_ind_hole_rdl> <metal_ind_touch> CMACRO IND_DIFF_RDL_T1_PRO
DEVICE diff_t1alpa_psub_t2 diff_t1alpa_psub_t2 dind_pm_rdl(PLUS) dind_pm_rdl(MINUS) dind_B(B1) pwell(B2) <metal_ind_hole_rdl> <metal_ind_touch> CMACRO IND_DIFF_RDL_PRO
DEVICE diff_t1alpa_psub_t3 diff_t1alpa_psub_t3 dind_pm_rdl(PLUS) dind_pm_rdl(MINUS) dind_B(B1) pwell(B2) <metal_ind_hole_rdl> <metal_ind_touch> CMACRO IND_DIFF_RDL_PRO
DEVICE diff_t1alpa_psub_t4 diff_t1alpa_psub_t4 dind_pm_rdl(PLUS) dind_pm_rdl(MINUS) dind_B(B1) pwell(B2) <metal_ind_hole_rdl> <metal_ind_touch> CMACRO IND_DIFF_RDL_PRO
DEVICE diff_t1alpa_psub_t5 diff_t1alpa_psub_t5 dind_pm_rdl(PLUS) dind_pm_rdl(MINUS) dind_B(B1) pwell(B2) <metal_ind_hole_rdl> <metal_ind_touch> CMACRO IND_DIFF_RDL_PRO
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM single
#IFDEF TM2_WIDTH 15
#IFDEF ALPA_THICK THIN
DEVICE spi_ind_rf_1p1 spi_ind_rf_1p1  spi_pm_PI(PLUS) spi_pm_MI(MINUS) <tm2ind_hole> CMACRO SPI_PRO tm2ind_hole
DEVICE spi_ind_rf_1p2 spi_ind_rf_1p2  spi_pm_PI(PLUS) spi_pm_MI(MINUS) <tm2ind_hole> CMACRO SPI_PRO tm2ind_hole
DEVICE spi_ind_rf_1p3 spi_ind_rf_1p3  spi_pm_PI(PLUS) spi_pm_MI(MINUS) <tm2ind_hole> CMACRO SPI_PRO tm2ind_hole

DEVICE spi_ind_rf_psub_1p1 spi_ind_rf_psub_1p1  spi_pm_PI(PLUS) spi_pm_MI(MINUS) pwell(B) <tm2ind_hole> CMACRO SPI_PRO tm2ind_hole
DEVICE spi_ind_rf_psub_1p2 spi_ind_rf_psub_1p2  spi_pm_PI(PLUS) spi_pm_MI(MINUS) pwell(B) <tm2ind_hole> CMACRO SPI_PRO tm2ind_hole
DEVICE spi_ind_rf_psub_1p3 spi_ind_rf_psub_1p3  spi_pm_PI(PLUS) spi_pm_MI(MINUS) pwell(B) <tm2ind_hole> CMACRO SPI_PRO tm2ind_hole
#ENDIF

#IFDEF ALPA_THICK THICK
DEVICE spi_ind_rf_RDL2d8_psub_1p1 spi_ind_rf_RDL2d8_psub_1p1 spi_2d8_PI(PLUS) spi_2d8_MI(MINUS) pwell(B) <tm2ind_hole> CMACRO SPI_PRO tm2ind_hole
DEVICE spi_ind_rf_RDL2d8_psub_1p2 spi_ind_rf_RDL2d8_psub_1p2 spi_2d8_PI(PLUS) spi_2d8_MI(MINUS) pwell(B) <tm2ind_hole> CMACRO SPI_PRO tm2ind_hole
DEVICE spi_ind_rf_RDL2d8_psub_1p3 spi_ind_rf_RDL2d8_psub_1p3 spi_2d8_PI(PLUS) spi_2d8_MI(MINUS) pwell(B) <tm2ind_hole> CMACRO SPI_PRO tm2ind_hole
DEVICE spi_ind_rf_RDL2d8_psub_2p3 spi_ind_rf_RDL2d8_psub_2p3 spi_2d8_PI(PLUS) spi_2d8_MI(MINUS) pwell(B) <tm2ind_hole> CMACRO SPI_PRO tm2ind_hole
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 4
#IFDEF TM2_WIDTH 15
#IFDEF ALPA_THICK THIN
DEVICE spi_ind_rf_1p1 spi_ind_rf_1p1  spi_pm_PI(PLUS) spi_pm_MI(MINUS) <tm2ind_hole> CMACRO SPI_PRO tm2ind_hole
DEVICE spi_ind_rf_1p2 spi_ind_rf_1p2  spi_pm_PI(PLUS) spi_pm_MI(MINUS) <tm2ind_hole> CMACRO SPI_PRO tm2ind_hole
DEVICE spi_ind_rf_1p3 spi_ind_rf_1p3  spi_pm_PI(PLUS) spi_pm_MI(MINUS) <tm2ind_hole> CMACRO SPI_PRO tm2ind_hole

DEVICE spi_ind_rf_psub_1p1 spi_ind_rf_psub_1p1  spi_pm_PI(PLUS) spi_pm_MI(MINUS) pwell(B) <tm2ind_hole> CMACRO SPI_PRO tm2ind_hole
DEVICE spi_ind_rf_psub_1p2 spi_ind_rf_psub_1p2  spi_pm_PI(PLUS) spi_pm_MI(MINUS) pwell(B) <tm2ind_hole> CMACRO SPI_PRO tm2ind_hole
DEVICE spi_ind_rf_psub_1p3 spi_ind_rf_psub_1p3  spi_pm_PI(PLUS) spi_pm_MI(MINUS) pwell(B) <tm2ind_hole> CMACRO SPI_PRO tm2ind_hole
#ENDIF

#IFDEF ALPA_THICK THICK
DEVICE spi_ind_rf_RDL2d8_psub_1p1 spi_ind_rf_RDL2d8_psub_1p1 spi_2d8_PI(PLUS) spi_2d8_MI(MINUS) pwell(B) <tm2ind_hole> CMACRO SPI_PRO tm2ind_hole
DEVICE spi_ind_rf_RDL2d8_psub_1p2 spi_ind_rf_RDL2d8_psub_1p2 spi_2d8_PI(PLUS) spi_2d8_MI(MINUS) pwell(B) <tm2ind_hole> CMACRO SPI_PRO tm2ind_hole
DEVICE spi_ind_rf_RDL2d8_psub_1p3 spi_ind_rf_RDL2d8_psub_1p3 spi_2d8_PI(PLUS) spi_2d8_MI(MINUS) pwell(B) <tm2ind_hole> CMACRO SPI_PRO tm2ind_hole
DEVICE spi_ind_rf_RDL2d8_psub_2p3 spi_ind_rf_RDL2d8_psub_2p3 spi_2d8_PI(PLUS) spi_2d8_MI(MINUS) pwell(B) <tm2ind_hole> CMACRO SPI_PRO tm2ind_hole
#ENDIF
#ENDIF
#ENDIF
#ENDIF


#IFDEF TOP_METAL_NUM single
#IFDEF TM2_WIDTH 15

#IFDEF ALPA_THICK THIN
#IFDEF TOPMETAL 9
DEVICE ind_3Tdiff_alutm ind_3Tdiff_alutm dind_2D8(PLUS) dind_2D8(MINUS) dind_CEN(B) <INDR_Radius> <rf_m9_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m9_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_3Tdiff_alutm_psub ind_3Tdiff_alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) dind_CEN(B1) pwell(B2) <INDR_Radius> <rf_m9_count> <TM2TXT> 
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m9_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_2Tdiff_alutm ind_2Tdiff_alutm dind_2D8(PLUS) dind_2D8(MINUS) <INDR_Radius> <rf_m9_count> <TM2TXT> 
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m9_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_2Tdiff_alutm_psub ind_2Tdiff_alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m9_count> <TM2TXT> 
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m9_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE rf_ind_alutm_psub rf_ind_alutm_psub dind_ALPA(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m9_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m9_count)/2
       W = PERIMETER(TM2TXT)/(4*1.11)]
#ENDIF

#IFDEF TOPMETAL 8
DEVICE ind_3Tdiff_alutm ind_3Tdiff_alutm dind_2D8(PLUS) dind_2D8(MINUS) dind_CEN(B) <INDR_Radius> <rf_m8_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m8_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_3Tdiff_alutm_psub ind_3Tdiff_alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) dind_CEN(B1) pwell(B2) <INDR_Radius> <rf_m8_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m8_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_2Tdiff_alutm ind_2Tdiff_alutm dind_2D8(PLUS) dind_2D8(MINUS) <INDR_Radius> <rf_m8_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m8_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_2Tdiff_alutm_psub ind_2Tdiff_alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m8_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m8_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE rf_ind_alutm_psub rf_ind_alutm_psub dind_ALPA(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m8_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m8_count)/2
       W = PERIMETER(TM2TXT)/(4*1.11)]
#ENDIF

#IFDEF TOPMETAL 7
DEVICE ind_3Tdiff_alutm ind_3Tdiff_alutm dind_2D8(PLUS) dind_2D8(MINUS) dind_CEN(B) <INDR_Radius> <rf_m7_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m7_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_3Tdiff_alutm_psub ind_3Tdiff_alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) dind_CEN(B1) pwell(B2) <INDR_Radius> <rf_m7_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m7_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_2Tdiff_alutm ind_2Tdiff_alutm dind_2D8(PLUS) dind_2D8(MINUS) <INDR_Radius> <rf_m7_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m7_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_2Tdiff_alutm_psub ind_2Tdiff_alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m7_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m7_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE rf_ind_alutm_psub rf_ind_alutm_psub dind_ALPA(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m7_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m7_count)/2
       W = PERIMETER(TM2TXT)/(4*1.11)]
#ENDIF

#IFDEF TOPMETAL 6
DEVICE ind_3Tdiff_alutm ind_3Tdiff_alutm dind_2D8(PLUS) dind_2D8(MINUS) dind_CEN(B) <INDR_Radius> <rf_m6_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m6_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_3Tdiff_alutm_psub ind_3Tdiff_alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) dind_CEN(B1) pwell(B2) <INDR_Radius> <rf_m6_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m6_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_2Tdiff_alutm ind_2Tdiff_alutm dind_2D8(PLUS) dind_2D8(MINUS) <INDR_Radius> <rf_m6_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m6_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_2Tdiff_alutm_psub ind_2Tdiff_alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m6_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m6_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE rf_ind_alutm_psub rf_ind_alutm_psub dind_ALPA(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m6_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m6_count)/2
       W = PERIMETER(TM2TXT)/(4*1.11)]
#ENDIF
#ENDIF

#IFDEF ALPA_THICK THICK
#IFDEF TOPMETAL 9
DEVICE ind_3Tdiff_2d8alutm_psub ind_3Tdiff_2d8alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) dind_CEN(B1) pwell(B2) <INDR_Radius> <rf_m9_count> <TM2TXT> 
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m9_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_2Tdiff_2d8alutm_psub ind_2Tdiff_2d8alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m9_count> <TM2TXT>  
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m9_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE rf_ind_2d8alutm_psub rf_ind_2d8alutm_psub dind_ALPA(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m9_count> <TM2TXT>
      [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m9_count)/2
       W = PERIMETER(TM2TXT)/(4*1.11)]
#ENDIF

#IFDEF TOPMETAL 8
DEVICE ind_3Tdiff_2d8alutm_psub ind_3Tdiff_2d8alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) dind_CEN(B1) pwell(B2) <INDR_Radius> <rf_m8_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m8_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_2Tdiff_2d8alutm_psub ind_2Tdiff_2d8alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m8_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m8_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE rf_ind_2d8alutm_psub rf_ind_2d8alutm_psub dind_ALPA(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m8_count> <TM2TXT>
      [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m8_count)/2
       W = PERIMETER(TM2TXT)/(4*1.11)]
#ENDIF

#IFDEF TOPMETAL 7
DEVICE ind_3Tdiff_2d8alutm_psub ind_3Tdiff_2d8alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) dind_CEN(B1) pwell(B2) <INDR_Radius> <rf_m7_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m7_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_2Tdiff_2d8alutm_psub ind_2Tdiff_2d8alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m7_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m7_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE rf_ind_2d8alutm_psub rf_ind_2d8alutm_psub dind_ALPA(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m7_count> <TM2TXT>
      [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m7_count)/2
       W = PERIMETER(TM2TXT)/(4*1.11)]

#ENDIF

#IFDEF TOPMETAL 6
DEVICE ind_3Tdiff_2d8alutm_psub ind_3Tdiff_2d8alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) dind_CEN(B1) pwell(B2) <INDR_Radius> <rf_m6_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m6_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_2Tdiff_2d8alutm_psub ind_2Tdiff_2d8alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m6_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m6_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE rf_ind_2d8alutm_psub rf_ind_2d8alutm_psub dind_ALPA(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m6_count> <TM2TXT>
      [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m6_count)/2
       W = PERIMETER(TM2TXT)/(4*1.11)]
#ENDIF
#ENDIF

#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 4
#IFDEF TM2_WIDTH 15

#IFDEF ALPA_THICK THIN
#IFDEF TOPMETAL 10
DEVICE ind_3Tdiff_alutm ind_3Tdiff_alutm dind_2D8(PLUS) dind_2D8(MINUS) dind_CEN(B) <INDR_Radius> <rf_m10_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m10_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_3Tdiff_alutm_psub ind_3Tdiff_alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) dind_CEN(B1) pwell(B2) <INDR_Radius> <rf_m10_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m10_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_2Tdiff_alutm ind_2Tdiff_alutm dind_2D8(PLUS) dind_2D8(MINUS) <INDR_Radius> <rf_m10_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m10_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_2Tdiff_alutm_psub ind_2Tdiff_alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m10_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m10_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE rf_ind_alutm_psub rf_ind_alutm_psub dind_ALPA(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m10_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m10_count)/2
       W = PERIMETER(TM2TXT)/(4*1.11)]
#ENDIF

#IFDEF TOPMETAL 9
DEVICE ind_3Tdiff_alutm ind_3Tdiff_alutm dind_2D8(PLUS) dind_2D8(MINUS) dind_CEN(B) <INDR_Radius> <rf_m9_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m9_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_3Tdiff_alutm_psub ind_3Tdiff_alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) dind_CEN(B1) pwell(B2) <INDR_Radius> <rf_m9_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m9_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_2Tdiff_alutm ind_2Tdiff_alutm dind_2D8(PLUS) dind_2D8(MINUS) <INDR_Radius> <rf_m9_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m9_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_2Tdiff_alutm_psub ind_2Tdiff_alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m9_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m9_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE rf_ind_alutm_psub rf_ind_alutm_psub dind_ALPA(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m9_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m9_count)/2
       W = PERIMETER(TM2TXT)/(4*1.11)]
#ENDIF

#IFDEF TOPMETAL 8
DEVICE ind_3Tdiff_alutm ind_3Tdiff_alutm dind_2D8(PLUS) dind_2D8(MINUS) dind_CEN(B) <INDR_Radius> <rf_m8_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m8_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_3Tdiff_alutm_psub ind_3Tdiff_alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) dind_CEN(B1) pwell(B2) <INDR_Radius> <rf_m8_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m8_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_2Tdiff_alutm ind_2Tdiff_alutm dind_2D8(PLUS) dind_2D8(MINUS) <INDR_Radius> <rf_m8_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m8_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_2Tdiff_alutm_psub ind_2Tdiff_alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m8_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m8_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE rf_ind_alutm_psub rf_ind_alutm_psub dind_ALPA(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m8_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m8_count)/2
       W = PERIMETER(TM2TXT)/(4*1.11)]

#ENDIF

#IFDEF TOPMETAL 7
DEVICE ind_3Tdiff_alutm ind_3Tdiff_alutm dind_2D8(PLUS) dind_2D8(MINUS) dind_CEN(B) <INDR_Radius> <rf_m7_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m7_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_3Tdiff_alutm_psub ind_3Tdiff_alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) dind_CEN(B1) pwell(B2) <INDR_Radius> <rf_m7_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m7_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_2Tdiff_alutm ind_2Tdiff_alutm dind_2D8(PLUS) dind_2D8(MINUS) <INDR_Radius> <rf_m7_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m7_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_2Tdiff_alutm_psub ind_2Tdiff_alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m7_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m7_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE rf_ind_alutm_psub rf_ind_alutm_psub dind_ALPA(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m7_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m7_count)/2
       W = PERIMETER(TM2TXT)/(4*1.11)]
#ENDIF

#IFDEF TOPMETAL 6
DEVICE ind_3Tdiff_alutm ind_3Tdiff_alutm dind_2D8(PLUS) dind_2D8(MINUS) dind_CEN(B) <INDR_Radius> <rf_m6_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m6_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_3Tdiff_alutm_psub ind_3Tdiff_alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) dind_CEN(B1) pwell(B2) <INDR_Radius> <rf_m6_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m6_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_2Tdiff_alutm ind_2Tdiff_alutm dind_2D8(PLUS) dind_2D8(MINUS) <INDR_Radius> <rf_m6_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m6_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_2Tdiff_alutm_psub ind_2Tdiff_alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m6_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m6_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE rf_ind_alutm_psub rf_ind_alutm_psub dind_ALPA(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m6_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m6_count)/2
       W = PERIMETER(TM2TXT)/(4*1.11)]
#ENDIF
#ENDIF

#IFDEF ALPA_THICK THICK
#IFDEF TOPMETAL 10
DEVICE ind_3Tdiff_2d8alutm_psub ind_3Tdiff_2d8alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) dind_CEN(B1) pwell(B2) <INDR_Radius> <rf_m10_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m10_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_2Tdiff_2d8alutm_psub ind_2Tdiff_2d8alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m10_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m10_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE rf_ind_2d8alutm_psub rf_ind_2d8alutm_psub dind_ALPA(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m10_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m10_count)/2
       W = PERIMETER(TM2TXT)/(4*1.11)]
#ENDIF

#IFDEF TOPMETAL 9
DEVICE ind_3Tdiff_2d8alutm_psub ind_3Tdiff_2d8alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) dind_CEN(B1) pwell(B2) <INDR_Radius> <rf_m9_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m9_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_2Tdiff_2d8alutm_psub ind_2Tdiff_2d8alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m9_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m9_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE rf_ind_2d8alutm_psub rf_ind_2d8alutm_psub dind_ALPA(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m9_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m9_count)/2
       W = PERIMETER(TM2TXT)/(4*1.11)]
#ENDIF

#IFDEF TOPMETAL 8
DEVICE ind_3Tdiff_2d8alutm_psub ind_3Tdiff_2d8alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) dind_CEN(B1) pwell(B2) <INDR_Radius> <rf_m8_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m8_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_2Tdiff_2d8alutm_psub ind_2Tdiff_2d8alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m8_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m8_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE rf_ind_2d8alutm_psub rf_ind_2d8alutm_psub dind_ALPA(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m8_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m8_count)/2
       W = PERIMETER(TM2TXT)/(4*1.11)]
#ENDIF

#IFDEF TOPMETAL 7
DEVICE ind_3Tdiff_2d8alutm_psub ind_3Tdiff_2d8alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) dind_CEN(B1) pwell(B2) <INDR_Radius> <rf_m7_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m7_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_2Tdiff_2d8alutm_psub ind_2Tdiff_2d8alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m7_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m7_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE rf_ind_2d8alutm_psub rf_ind_2d8alutm_psub dind_ALPA(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m7_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m7_count)/2
       W = PERIMETER(TM2TXT)/(4*1.11)]
#ENDIF

#IFDEF TOPMETAL 6
DEVICE ind_3Tdiff_2d8alutm_psub ind_3Tdiff_2d8alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) dind_CEN(B1) pwell(B2) <INDR_Radius> <rf_m6_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m6_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE ind_2Tdiff_2d8alutm_psub ind_2Tdiff_2d8alutm_psub dind_2D8(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m6_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m6_count)/2
       W = PERIMETER(TM2TXT)/(8*1.11)]
DEVICE rf_ind_2d8alutm_psub rf_ind_2d8alutm_psub dind_ALPA(PLUS) dind_2D8(MINUS) pwell(B) <INDR_Radius> <rf_m6_count> <TM2TXT>
       [PROPERTY R,N,W
       R = (PERIMETER(INDR_Radius))/(8*1.11)
       N = count(rf_m6_count)/2
       W = PERIMETER(TM2TXT)/(4*1.11)]
#ENDIF
#ENDIF

#ENDIF
#ENDIF
#ENDIF

#ENDIF
#ENDIF

DMACRO IND_ALUTM_PRO txtlayer index ind_hole {
        [PROPERTY R,N,W
        N = (COUNT(index))/7
        W = 0.901*PERIMETER(txtlayer)/8
        R=  0.901*((PERIMETER(ind_hole)-2*3.71e-6)/8)
        ]
}

DMACRO IND_DIFF_PRO {
        [PROPERTY R,N
        R=PERIMETER(metal_ind_hole)/8*0.9
        N=(COUNT(metal_ind_touch)+2)/3]
}

DMACRO IND_DIFF_RDL_PRO {
        [PROPERTY R,N
        R=PERIMETER(metal_ind_hole_rdl)/8*0.9
        N=(COUNT(metal_ind_touch)+2)/3]
}

DMACRO IND_DIFF_RDL_T1_PRO {
        [PROPERTY R,N
        R=PERIMETER(metal_ind_hole_rdl)/8*0.9
        N=(COUNT(metal_ind_touch)+2)/3]
}

DMACRO SPI_PRO ind_hole {
        [PROPERTY R
        R=0.901*(PERIMETER(ind_hole)-(2*2.085E-06))/8
        ]
}

///////////////////////////Define MOS XRC////////////////////////////////
#IFDEF RC_RUN TRUE
DEVICE MN(n12ll) ngate_core ngate_core(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> <ngate_wpe_core> CMACRO MOS_WPE_PRO ngate_core nsd ndif AA ngate_wpe_core 
DEVICE MN(n18ll) ngate_IO1 ngate_IO1(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> <ngate_wpe_IO1> CMACRO MOS_WPE_PRO  ngate_IO1 nsd ndif AA ngate_wpe_IO1 
DEVICE MN(nhvt12ll) ngate_core_hvt ngate_core_hvt(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> <ngate_wpe_core> CMACRO MOS_WPE_PRO  ngate_core_hvt nsd ndif AA ngate_wpe_core 
DEVICE MN(nlvt12ll) ngate_core_lvt ngate_core_lvt(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> <ngate_wpe_core> CMACRO MOS_WPE_PRO  ngate_core_lvt nsd ndif AA ngate_wpe_core 
DEVICE MP(p12ll) pgate_core pgate_core(G) psd(S) psd(D) nwell(B) <pdif> <AA> <pgate_wpe_core> CMACRO MOS_WPE_PRO pgate_core psd pdif AA pgate_wpe_core 
DEVICE MP(p18ll) pgate_IO1 pgate_IO1(G) psd(S) psd(D) nwell(B) <pdif> <AA> <pgate_wpe_IO1> CMACRO MOS_WPE_PRO  pgate_IO1 psd pdif AA pgate_wpe_IO1 
DEVICE MP(phvt12ll) pgate_core_hvt pgate_core_hvt(G) psd(S) psd(D) nwell(B) <pdif> <AA> <pgate_wpe_core> CMACRO MOS_WPE_PRO  pgate_core_hvt psd pdif AA pgate_wpe_core 
DEVICE MP(plvt12ll) pgate_core_lvt pgate_core_lvt(G) psd(S) psd(D) nwell(B) <pdif> <AA> <pgate_wpe_core> CMACRO MOS_WPE_PRO  pgate_core_lvt psd pdif AA pgate_wpe_core 
DEVICE MN(nt12ll) ntgate_core ntgate_core(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> <ngate_wpe_core> CMACRO MOS_XRC_PRO ntgate_core nsd ndif AA ngate_wpe_core 
DEVICE MN(nt18ll) ntgate_IO1 ntgate_IO1(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> <ngate_wpe_IO1>  CMACRO MOS_XRC_PRO ntgate_IO1 nsd ndif AA ngate_wpe_IO1 
DEVICE M(ulln) ngate_core_ull ngate_core_ull(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> <ngate_wpe_core> CMACRO MOS_WPE_PRO ngate_core_ull nsd ndif AA ngate_wpe_core
DEVICE M(ullp) pgate_core_ull pgate_core_ull(G) psd(S) psd(D) nwell(B) <pdif> <AA> <pgate_wpe_core> CMACRO MOS_WPE_PRO pgate_core_ull psd pdif AA pgate_wpe_core

DEVICE n12ll_egl4 ngate_core_egl4 nsd(DRN) ngate_core_egl4(GATE) nsd(SRC) pwell(BULK) <AA> <EGL4_GT> <EGL4_GT2> <EGL4_SD> <poly1_egl4_box> <ngate_egl4_box_wpe_core> <ndif> CMACRO MOS_EGL4_WPE_PRO ngate_core_egl4 nsd AA ndif poly1_egl4_box EGL4_GT EGL4_GT2 EGL4_SD ngate_egl4_box_wpe_core
CMACRO MOS_EGL4_REDUCE n12ll_egl4

DEVICE p12ll_egl4 pgate_core_egl4 psd(DRN) pgate_core_egl4(GATE) psd(SRC) nwell(BULK) <AA> <EGL4_GT> <EGL4_GT2> <EGL4_SD> <poly1_egl4_box> <pgate_egl4_box_wpe_core> <pdif> CMACRO MOS_EGL4_WPE_PRO pgate_core_egl4 psd AA pdif poly1_egl4_box EGL4_GT EGL4_GT2 EGL4_SD pgate_egl4_box_wpe_core
CMACRO MOS_EGL4_REDUCE p12ll_egl4

DEVICE n12ll_egl1 ngate_core_egl1 nsd(DRN) ngate_core_egl1(GATE) nsd(SRC) pwell(BULK) <AA> <EGL1_GT1> <EGL1_GT2> <ngate_egl1_box_wpe_core> CMACRO MOS_EGL1_WPE_PRO ngate_core_egl1 nsd AA EGL1_GT1 EGL1_GT2 ngate_egl1_box_wpe_core
CMACRO MOS_EGL1_REDUCE n12ll_egl1

DEVICE p12ll_egl1 pgate_core_egl1 psd(DRN) pgate_core_egl1(GATE) psd(SRC) nwell(BULK) <AA> <EGL1_GT1> <EGL1_GT2> <pgate_egl1_box_wpe_core> CMACRO MOS_EGL1_WPE_PRO pgate_core_egl1 psd AA EGL1_GT1 EGL1_GT2 pgate_egl1_box_wpe_core
CMACRO MOS_EGL1_REDUCE p12ll_egl1

DEVICE n12ll_sab_egl4 ngate_core_sab_egl4 nsd(DRN) ngate_core_sab_egl4(GATE) nsd(SRC) pwell(BULK) <AA> <EGL4_GT> <EGL4_GT2> <EGL4_SD> <poly1_egl4_box> <ngate_egl4_box_wpe_core> <ndif> CMACRO MOS_EGL4_WPE_PRO ngate_core_sab_egl4 nsd AA ndif poly1_egl4_box EGL4_GT EGL4_GT2 EGL4_SD ngate_egl4_box_wpe_core
CMACRO MOS_EGL4_REDUCE n12ll_sab_egl4

DEVICE p12ll_sab_egl4 pgate_core_sab_egl4 psd(DRN) pgate_core_sab_egl4(GATE) psd(SRC) nwell(BULK) <AA> <EGL4_GT> <EGL4_GT2> <EGL4_SD> <poly1_egl4_box> <pgate_egl4_box_wpe_core> <pdif> CMACRO MOS_EGL4_WPE_PRO pgate_core_sab_egl4 psd AA pdif poly1_egl4_box EGL4_GT EGL4_GT2 EGL4_SD pgate_egl4_box_wpe_core
CMACRO MOS_EGL4_REDUCE p12ll_sab_egl4

DEVICE n12ll_mis_ckt ngate_core_mis nsd(D) ngate_core_mis(G) nsd(S) pwell(B) <ndif> <AA> <ngate_wpe_core> CMACRO MOS_WPE_MIS_PRO ngate_core_mis nsd ndif AA ngate_wpe_core 
CMACRO MOS_REDUCE n12ll_mis_ckt
DEVICE n18ll_mis_ckt ngate_IO1_mis nsd(D) ngate_IO1_mis(G) nsd(S) pwell(B) <ndif> <AA> <ngate_wpe_IO1> CMACRO MOS_WPE_MIS_PRO ngate_IO1_mis nsd ndif AA ngate_wpe_IO1 
CMACRO MOS_REDUCE n18ll_mis_ckt
DEVICE nhvt12ll_mis_ckt ngate_core_hvt_mis nsd(D) ngate_core_hvt_mis(G) nsd(S) pwell(B) <ndif> <AA> <ngate_wpe_core> CMACRO MOS_WPE_MIS_PRO ngate_core_hvt_mis nsd ndif AA ngate_wpe_core 
CMACRO MOS_REDUCE nhvt12ll_mis_ckt
DEVICE nlvt12ll_mis_ckt ngate_core_lvt_mis nsd(D) ngate_core_lvt_mis(G) nsd(S) pwell(B) <ndif> <AA> <ngate_wpe_core> CMACRO MOS_WPE_MIS_PRO ngate_core_lvt_mis nsd ndif AA ngate_wpe_core 
CMACRO MOS_REDUCE nlvt12ll_mis_ckt
DEVICE p12ll_mis_ckt pgate_core_mis psd(D) pgate_core_mis(G) psd(S) nwell(B) <pdif> <AA> <pgate_wpe_core> CMACRO MOS_WPE_MIS_PRO pgate_core_mis psd pdif AA pgate_wpe_core 
CMACRO MOS_REDUCE p12ll_mis_ckt
DEVICE p18ll_mis_ckt pgate_IO1_mis psd(D) pgate_IO1_mis(G) psd(S) nwell(B) <pdif> <AA> <pgate_wpe_IO1> CMACRO MOS_WPE_MIS_PRO pgate_IO1_mis psd pdif AA pgate_wpe_IO1 
CMACRO MOS_REDUCE p18ll_mis_ckt
DEVICE phvt12ll_mis_ckt pgate_core_hvt_mis psd(D) pgate_core_hvt_mis(G) psd(S) nwell(B) <pdif> <AA> <pgate_wpe_core> CMACRO MOS_WPE_MIS_PRO pgate_core_hvt_mis psd pdif AA pgate_wpe_core 
CMACRO MOS_REDUCE phvt12ll_mis_ckt
DEVICE plvt12ll_mis_ckt pgate_core_lvt_mis psd(D) pgate_core_lvt_mis(G) psd(S) nwell(B) <pdif> <AA> <pgate_wpe_core> CMACRO MOS_WPE_MIS_PRO pgate_core_lvt_mis psd pdif AA pgate_wpe_core 
CMACRO MOS_REDUCE plvt12ll_mis_ckt
DEVICE nt12ll_mis_ckt ntgate_core_mis nsd(D) ntgate_core_mis(G) nsd(S) pwell(B) <ndif> <AA> <ngate_wpe_core> CMACRO MOS_XRC_MIS_PRO ntgate_core_mis nsd ndif AA ngate_wpe_core 
CMACRO MOS_REDUCE nt12ll_mis_ckt
DEVICE nt18ll_mis_ckt ntgate_IO1_mis nsd(D) ntgate_IO1_mis(G) nsd(S) pwell(B) <ndif> <AA> <ngate_wpe_IO1>  CMACRO MOS_XRC_MIS_PRO ntgate_IO1_mis nsd ndif AA ngate_wpe_IO1 
CMACRO MOS_REDUCE nt18ll_mis_ckt
DEVICE ulln_mis_ckt ngate_core_ull_mis nsd(D) ngate_core_ull_mis(G) nsd(S) pwell(B) <ndif> <AA> <ngate_wpe_core> CMACRO MOS_WPE_MIS_PRO ngate_core_ull_mis nsd ndif AA ngate_wpe_core
CMACRO MOS_REDUCE ulln_mis_ckt
DEVICE ullp_mis_ckt pgate_core_ull_mis psd(D) pgate_core_ull_mis(G) psd(S) nwell(B) <pdif> <AA> <pgate_wpe_core> CMACRO MOS_WPE_MIS_PRO pgate_core_ull_mis psd pdif AA pgate_wpe_core
CMACRO MOS_REDUCE ullp_mis_ckt

DEVICE dnw12ll_ckt dnwngate12 nsd(D) dnwngate12(G) nsd(S) rwell(B) <AA> <dnwngate_wpe_core> <ndifd> CMACRO DNW_MOS_WPE_PRO dnwngate12 AA  nsd dnwngate_wpe_core ndifd 
CMACRO DNW_MOS_REDUCE dnw12ll_ckt

DEVICE dnwulln_ckt dnwullngate nsd(D) dnwullngate(G) nsd(S) rwell(B) <AA> <dnwngate_wpe_core> <ndifd> CMACRO DNW_MOS_WPE_PRO dnwullngate AA nsd dnwngate_wpe_core ndifd
CMACRO DNW_MOS_REDUCE dnwulln_ckt
DEVICE dnw18ll_ckt dnwngate18 nsd(D) dnwngate18(G) nsd(S) rwell(B) <AA> <dnwngate_wpe_IO1> <ndifd> CMACRO DNW_MOS_WPE_PRO dnwngate18 AA  nsd dnwngate_wpe_IO1 ndifd 
CMACRO DNW_MOS_REDUCE dnw18ll_ckt

DEVICE dnwhvt12ll_ckt dnwhvtgate12 nsd(D) dnwhvtgate12(G) nsd(S) rwell(B) <AA> <dnwngate_wpe_core> <ndifd> CMACRO DNW_MOS_WPE_PRO dnwhvtgate12 AA nsd dnwngate_wpe_core ndifd 
CMACRO DNW_MOS_REDUCE dnwhvt12ll_ckt

DEVICE dnwlvt12ll_ckt dnwlvtgate12 nsd(D) dnwlvtgate12(G) nsd(S) rwell(B) <AA> <dnwngate_wpe_core> <ndifd> CMACRO DNW_MOS_WPE_PRO dnwlvtgate12 AA nsd dnwngate_wpe_core ndifd 
CMACRO DNW_MOS_REDUCE dnwlvt12ll_ckt

#IFDEF IO 1825
DEVICE MN(n25ll) ngate_IO2 ngate_IO2(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> <ngate_wpe_IO2> CMACRO MOS_WPE_PRO ngate_IO2 nsd ndif AA ngate_wpe_IO2 
DEVICE MN(nt25ll) ntgate_IO2 ntgate_IO2(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> <ngate_wpe_IO2> CMACRO MOS_XRC_PRO ntgate_IO2 nsd ndif AA ngate_wpe_IO2 
DEVICE MP(p25ll) pgate_IO2 pgate_IO2(G) psd(S) psd(D) nwell(B) <pdif> <AA> <pgate_wpe_IO2> CMACRO MOS_WPE_PRO pgate_IO2 psd pdif AA pgate_wpe_IO2 
DEVICE MN(nod33ll) ngate_IO2_over ngate_IO2_over(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> <ngate_wpe_IO2> CMACRO MOS_WPE_PRO ngate_IO2_over nsd ndif AA ngate_wpe_IO2 
DEVICE MP(pod33ll) pgate_IO2_over pgate_IO2_over(G) psd(S) psd(D) nwell(B)  <pdif> <AA> <pgate_wpe_IO2> CMACRO MOS_WPE_PRO pgate_IO2_over psd pdif AA pgate_wpe_IO2 
DEVICE MN(ntod33ll) ntgate_IO2_over ntgate_IO2_over(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> <ngate_wpe_IO2> CMACRO MOS_XRC_PRO ntgate_IO2_over nsd ndif AA ngate_wpe_IO2 
DEVICE MN(nud18ll) ngate_IO2_under ngate_IO2_under(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> <ngate_wpe_IO2> CMACRO MOS_WPE_PRO ngate_IO2_under nsd ndif AA ngate_wpe_IO2 
DEVICE MN(ntud18ll) ntgate_IO2_under ntgate_IO2_under(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> <ngate_wpe_IO2> CMACRO MOS_XRC_PRO ntgate_IO2_under nsd ndif AA ngate_wpe_IO2 
DEVICE MP(pud18ll) pgate_IO2_under pgate_IO2_under(G) psd(S) psd(D) nwell(B) <pdif> <AA> <pgate_wpe_IO2> CMACRO MOS_WPE_PRO pgate_IO2_under psd pdif AA pgate_wpe_IO2 
DEVICE n25ll_mis_ckt ngate_IO2_mis nsd(D) ngate_IO2_mis(G) nsd(S) pwell(B) <ndif> <AA> <ngate_wpe_IO2> CMACRO MOS_WPE_MIS_PRO ngate_IO2_mis nsd ndif AA ngate_wpe_IO2 
CMACRO MOS_REDUCE n25ll_mis_ckt
DEVICE nod33ll_mis_ckt ngate_IO2_over_mis nsd(D) ngate_IO2_over_mis(G) nsd(S) pwell(B) <ndif> <AA> <ngate_wpe_IO2> CMACRO MOS_WPE_MIS_PRO ngate_IO2_over_mis nsd ndif AA ngate_wpe_IO2 
CMACRO MOS_REDUCE nod33ll_mis_ckt
DEVICE ntod33ll_mis_ckt ntgate_IO2_over_mis nsd(D) ntgate_IO2_over_mis(G) nsd(S) pwell(B) <ndif> <AA> <ngate_wpe_IO2> CMACRO MOS_XRC_MIS_PRO ntgate_IO2_over_mis nsd ndif AA ngate_wpe_IO2 
CMACRO MOS_REDUCE ntod33ll_mis_ckt
DEVICE p25ll_mis_ckt pgate_IO2_mis psd(D) pgate_IO2_mis(G) psd(S) nwell(B) <pdif> <AA> <pgate_wpe_IO2> CMACRO MOS_WPE_MIS_PRO pgate_IO2_mis psd pdif AA pgate_wpe_IO2 
CMACRO MOS_REDUCE p25ll_mis_ckt
DEVICE pod33ll_mis_ckt pgate_IO2_over_mis psd(D) pgate_IO2_over_mis(G) psd(S) nwell(B) <pdif> <AA> <pgate_wpe_IO2> CMACRO MOS_WPE_MIS_PRO pgate_IO2_over_mis psd pdif AA pgate_wpe_IO2 
CMACRO MOS_REDUCE pod33ll_mis_ckt
DEVICE nt25ll_mis_ckt  ntgate_IO2_mis nsd(D) ntgate_IO2_mis(G) nsd(S) pwell(B) <ndif> <AA> <ngate_wpe_IO2> CMACRO MOS_XRC_MIS_PRO ntgate_IO2_mis nsd ndif AA ngate_wpe_IO2 
CMACRO MOS_REDUCE nt25ll_mis_ckt
DEVICE nud18ll_mis_ckt  ngate_IO2_under_mis nsd(D) ngate_IO2_under_mis(G) nsd(S) pwell(B) <ndif> <AA> <ngate_wpe_IO2> CMACRO MOS_WPE_MIS_PRO ngate_IO2_under_mis nsd ndif AA ngate_wpe_IO2 
CMACRO MOS_REDUCE nud18ll_mis_ckt
DEVICE ntud18ll_mis_ckt  ntgate_IO2_under_mis nsd(D) ntgate_IO2_under_mis(G) nsd(S) pwell(B) <ndif> <AA> <ngate_wpe_IO2> CMACRO MOS_XRC_MIS_PRO ntgate_IO2_under_mis nsd ndif AA ngate_wpe_IO2 
CMACRO MOS_REDUCE ntud18ll_mis_ckt
DEVICE pud18ll_mis_ckt  pgate_IO2_under_mis psd(D) pgate_IO2_under_mis(G) psd(S) nwell(B) <pdif> <AA> <pgate_wpe_IO2> CMACRO MOS_WPE_MIS_PRO pgate_IO2_under_mis psd pdif AA pgate_wpe_IO2 
CMACRO MOS_REDUCE pud18ll_mis_ckt

DEVICE n25ll_egl4 ngate_IO2_egl4 nsd(DRN) ngate_IO2_egl4(GATE) nsd(SRC) pwell(BULK) <AA> <ndif> <EGL4_GT> <EGL4_GT2> <EGL4_SD> <poly1_egl4_box> <ngate_egl4_box_wpe_IO2> CMACRO MOS_EGL4_WPE_PRO ngate_IO2_egl4 nsd AA ndif poly1_egl4_box EGL4_GT EGL4_GT2 EGL4_SD ngate_egl4_box_wpe_IO2
CMACRO MOS_EGL4_REDUCE n25ll_egl4

DEVICE p25ll_egl4 pgate_IO2_egl4 psd(DRN) pgate_IO2_egl4(GATE) psd(SRC) nwell(BULK) <AA> <pdif> <EGL4_GT> <EGL4_GT2> <EGL4_SD> <poly1_egl4_box> <pgate_egl4_box_wpe_IO2> CMACRO MOS_EGL4_WPE_PRO pgate_IO2_egl4 psd AA pdif poly1_egl4_box EGL4_GT EGL4_GT2 EGL4_SD pgate_egl4_box_wpe_IO2
CMACRO MOS_EGL4_REDUCE p25ll_egl4

DEVICE n25ll_sab_egl4 ngate_IO2_sab_egl4 nsd(DRN) ngate_IO2_sab_egl4(GATE) nsd(SRC) pwell(BULK) <AA> <ndif> <EGL4_GT> <EGL4_GT2> <EGL4_SD> <poly1_egl4_box> <ngate_egl4_box_wpe_IO2> CMACRO MOS_EGL4_WPE_PRO ngate_IO2_sab_egl4 nsd AA ndif poly1_egl4_box EGL4_GT EGL4_GT2 EGL4_SD ngate_egl4_box_wpe_IO2
CMACRO MOS_EGL4_REDUCE n25ll_sab_egl4

DEVICE p25ll_sab_egl4 pgate_IO2_sab_egl4 psd(DRN) pgate_IO2_sab_egl4(GATE) psd(SRC) nwell(BULK) <AA> <pdif> <EGL4_GT> <EGL4_GT2> <EGL4_SD> <poly1_egl4_box> <pgate_egl4_box_wpe_IO2> CMACRO MOS_EGL4_WPE_PRO pgate_IO2_sab_egl4 psd AA pdif poly1_egl4_box EGL4_GT EGL4_GT2 EGL4_SD pgate_egl4_box_wpe_IO2
CMACRO MOS_EGL4_REDUCE p25ll_sab_egl4

DEVICE nod33ll_egl4 ngate_IO2_egl4_over nsd(DRN) ngate_IO2_egl4_over(GATE) nsd(SRC) pwell(BULK) <AA> <ndif> <EGL4_GT> <EGL4_GT2> <EGL4_SD> <poly1_egl4_box> <ngate_egl4_box_wpe_IO2> CMACRO MOS_EGL4_WPE_PRO ngate_IO2_egl4_over nsd AA ndif poly1_egl4_box EGL4_GT EGL4_GT2 EGL4_SD ngate_egl4_box_wpe_IO2
CMACRO MOS_EGL4_REDUCE nod33ll_egl4

DEVICE pod33ll_egl4 pgate_IO2_egl4_over psd(DRN) pgate_IO2_egl4_over(GATE) psd(SRC) nwell(BULK) <AA> <pdif> <EGL4_GT> <EGL4_GT2> <EGL4_SD> <poly1_egl4_box> <pgate_egl4_box_wpe_IO2> CMACRO MOS_EGL4_WPE_PRO pgate_IO2_egl4_over psd AA pdif poly1_egl4_box EGL4_GT EGL4_GT2 EGL4_SD pgate_egl4_box_wpe_IO2
CMACRO MOS_EGL4_REDUCE pod33ll_egl4

DEVICE nod33ll_sab_egl4 ngate_IO2_sab_egl4_over nsd(DRN) ngate_IO2_sab_egl4_over(GATE) nsd(SRC) pwell(BULK) <AA> <ndif> <EGL4_GT> <EGL4_GT2> <EGL4_SD> <poly1_egl4_box> <ngate_egl4_box_wpe_IO2> CMACRO MOS_EGL4_WPE_PRO ngate_IO2_sab_egl4_over nsd AA ndif poly1_egl4_box EGL4_GT EGL4_GT2 EGL4_SD ngate_egl4_box_wpe_IO2
CMACRO MOS_EGL4_REDUCE nod33ll_sab_egl4

DEVICE pod33ll_sab_egl4 pgate_IO2_sab_egl4_over psd(DRN) pgate_IO2_sab_egl4_over(GATE) psd(SRC) nwell(BULK) <AA> <pdif> <EGL4_GT> <EGL4_GT2> <EGL4_SD> <poly1_egl4_box> <pgate_egl4_box_wpe_IO2> CMACRO MOS_EGL4_WPE_PRO pgate_IO2_sab_egl4_over psd AA pdif poly1_egl4_box EGL4_GT EGL4_GT2 EGL4_SD pgate_egl4_box_wpe_IO2
CMACRO MOS_EGL4_REDUCE pod33ll_sab_egl4

DEVICE n25ll_egl1 ngate_IO2_egl1 nsd(DRN) ngate_IO2_egl1(GATE) nsd(SRC) pwell(BULK) <AA> <EGL1_GT1> <EGL1_GT2> <ngate_egl1_box_wpe_IO2> CMACRO MOS_EGL1_WPE_PRO ngate_IO2_egl1 nsd AA EGL1_GT1 EGL1_GT2 ngate_egl1_box_wpe_IO2
CMACRO MOS_EGL1_REDUCE n25ll_egl1

DEVICE p25ll_egl1 pgate_IO2_egl1 psd(DRN) pgate_IO2_egl1(GATE) psd(SRC) nwell(BULK) <AA> <EGL1_GT1> <EGL1_GT2> <pgate_egl1_box_wpe_IO2> CMACRO MOS_EGL1_WPE_PRO pgate_IO2_egl1 psd AA EGL1_GT1 EGL1_GT2 pgate_egl1_box_wpe_IO2
CMACRO MOS_EGL1_REDUCE p25ll_egl1

DEVICE nod33ll_egl1 ngate_IO2_egl1_over nsd(DRN) ngate_IO2_egl1_over(GATE) nsd(SRC) pwell(BULK) <AA> <EGL1_GT1> <EGL1_GT2> <ngate_egl1_box_wpe_IO2> CMACRO MOS_EGL1_WPE_PRO ngate_IO2_egl1_over nsd AA EGL1_GT1 EGL1_GT2 ngate_egl1_box_wpe_IO2
CMACRO MOS_EGL1_REDUCE nod33ll_egl1

DEVICE pod33ll_egl1 pgate_IO2_egl1_over psd(DRN) pgate_IO2_egl1_over(GATE) psd(SRC) nwell(BULK) <AA> <EGL1_GT1> <EGL1_GT2> <pgate_egl1_box_wpe_IO2> CMACRO MOS_EGL1_WPE_PRO pgate_IO2_egl1_over psd AA EGL1_GT1 EGL1_GT2 pgate_egl1_box_wpe_IO2
CMACRO MOS_EGL1_REDUCE pod33ll_egl1
#ENDIF

#IFDEF IO 1825
DEVICE dnw25ll_ckt dnwngate25 nsd(D) dnwngate25(G) nsd(S) rwell(B) <AA> <dnwngate_wpe_IO2> <ndifd> CMACRO DNW_MOS_WPE_PRO dnwngate25 AA nsd dnwngate_wpe_IO2 ndifd 
CMACRO DNW_MOS_REDUCE dnw25ll_ckt

DEVICE dnwod33ll_ckt dnwodgate33 nsd(D) dnwodgate33(G) nsd(S) rwell(B) <AA> <dnwngate_wpe_IO2> <ndifd> CMACRO DNW_MOS_WPE_PRO dnwodgate33 AA nsd dnwngate_wpe_IO2 ndifd 
CMACRO DNW_MOS_REDUCE dnwod33ll_ckt

DEVICE dnwud18ll_ckt dnwudgate18 nsd(D) dnwudgate18(G) nsd(S) rwell(B) <AA> <dnwngate_wpe_IO2> <ndifd> CMACRO DNW_MOS_WPE_PRO dnwudgate18 AA nsd dnwngate_wpe_IO2 ndifd 
CMACRO DNW_MOS_REDUCE dnwud18ll_ckt
#ENDIF
#ENDIF

//////////////////////Define BITCELL XRC/////////////////////////////
#IFDEF RC_RUN TRUE
#IFDEF SRAM DEV 
/*Define 0.499
DEVICE M(UDNPGSVT) npgsp_0.499_svt npgsp_0.499_svt(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> CMACRO SRAM_PRO npgsp_0.499_svt nsd ndif AA
DEVICE M(UDNPDSVT) npdsp_0.499_svt npdsp_0.499_svt(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> CMACRO SRAM_PRO npdsp_0.499_svt nsd ndif AA
DEVICE M(UDPLSVT)  plsp_0.499_svt plsp_0.499_svt(G) psd(S) psd(D) nwell(B) <pdif> <AA> CMACRO SRAM_PRO plsp_0.499_svt psd pdif AA
DEVICE M(UDNPGHVT) npgsp_0.499_hvt npgsp_0.499_hvt(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> CMACRO SRAM_PRO npgsp_0.499_hvt nsd ndif AA
DEVICE M(UDNPDHVT) npdsp_0.499_hvt npdsp_0.499_hvt(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> CMACRO SRAM_PRO npdsp_0.499_hvt nsd ndif AA
DEVICE M(UDPLHVT)  plsp_0.499_hvt plsp_0.499_hvt(G) psd(S) psd(D) nwell(B) <pdif> <AA> CMACRO SRAM_PRO plsp_0.499_hvt psd pdif AA
*/

//Define 0.525
DEVICE M(STNPDSVT) npdsp_0.525_svt npdsp_0.525_svt(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> CMACRO SRAM_PRO npdsp_0.525_svt nsd ndif AA
DEVICE M(STNPGSVT) npgsp_0.525_svt npgsp_0.525_svt(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> CMACRO SRAM_PRO npgsp_0.525_svt nsd ndif AA
DEVICE M(STPLSVT)  plsp_0.525_svt plsp_0.525_svt(G) psd(S) psd(D) nwell(B) <pdif> <AA> CMACRO SRAM_PRO plsp_0.525_svt psd pdif AA
DEVICE M(STNPDHVT) npdsp_0.525_hvt npdsp_0.525_hvt(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> CMACRO SRAM_PRO npdsp_0.525_hvt nsd ndif AA
DEVICE M(STNPGHVT) npgsp_0.525_hvt npgsp_0.525_hvt(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> CMACRO SRAM_PRO npgsp_0.525_hvt nsd ndif AA
DEVICE M(STPLHVT)  plsp_0.525_hvt plsp_0.525_hvt(G) psd(S) psd(D) nwell(B) <pdif> <AA> CMACRO SRAM_PRO plsp_0.525_hvt psd pdif AA
//Define 0.62
DEVICE MD(DNNPDSVT) npdsp_0.62_svt npdsp_0.62_svt(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> CMACRO SRAM_PRO npdsp_0.62_svt nsd ndif AA
DEVICE MD(DNNPGSVT) npgsp_0.62_svt npgsp_0.62_svt(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> CMACRO SRAM_PRO npgsp_0.62_svt nsd ndif AA
DEVICE MD(DNPLSVT)  plsp_0.62_svt plsp_0.62_svt(G) psd(S) psd(D) nwell(B) <pdif> <AA> CMACRO SRAM_PRO plsp_0.62_svt psd pdif AA
DEVICE MD(DNNPDHVT) npdsp_0.62_hvt npdsp_0.62_hvt(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> CMACRO SRAM_PRO npdsp_0.62_hvt nsd ndif AA
DEVICE MD(DNNPGHVT) npgsp_0.62_hvt npgsp_0.62_hvt(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> CMACRO SRAM_PRO npgsp_0.62_hvt nsd ndif AA
DEVICE MD(DNPLHVT)  plsp_0.62_hvt plsp_0.62_hvt(G) psd(S) psd(D) nwell(B) <pdif> <AA> CMACRO SRAM_PRO plsp_0.62_hvt psd pdif AA
/*
DEVICE MD(DNNPDULL) npdsp_0.62_ull npdsp_0.62_ull(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npdsp_0.62_ull nsd ndif AA NETLIST ELEMENT X
DEVICE MD(DNNPGULL) npgsp_0.62_ull npgsp_0.62_ull(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npgsp_0.62_ull nsd ndif AA NETLIST ELEMENT X
DEVICE MD(DNPLULL)  plsp_0.62_ull plsp_0.62_ull(G) psd(S) psd(D) nwell(B) <pdif> <AA> CMACRO SRAM_PRO_MIS plsp_0.62_ull psd pdif AA NETLIST ELEMENT X
*/

//Define 0.974
DEVICE MD(DPNPDSVT) npddp_0.974_svt npddp_0.974_svt(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> CMACRO SRAM_PRO npddp_0.974_svt nsd ndif AA
DEVICE MD(DPNPGASVT) npgadp_0.974_svt npgadp_0.974_svt(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> CMACRO SRAM_PRO npgadp_0.974_svt nsd ndif AA
DEVICE MD(DPNPGBSVT) npgbdp_0.974_svt npgbdp_0.974_svt(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> CMACRO SRAM_PRO npgbdp_0.974_svt nsd ndif AA
DEVICE MD(DPPLSVT)  pldp_0.974_svt pldp_0.974_svt(G) psd(S) psd(D) nwell(B) <pdif> <AA> CMACRO SRAM_PRO pldp_0.974_svt psd pdif AA
DEVICE MD(DPNPDHVT) npddp_0.974_hvt npddp_0.974_hvt(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> CMACRO SRAM_PRO npddp_0.974_hvt nsd ndif AA
DEVICE MD(DPNPGAHVT) npgadp_0.974_hvt npgadp_0.974_hvt(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> CMACRO SRAM_PRO npgadp_0.974_hvt nsd ndif AA
DEVICE MD(DPNPGBHVT) npgbdp_0.974_hvt npgbdp_0.974_hvt(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> CMACRO SRAM_PRO npgbdp_0.974_hvt nsd ndif AA
DEVICE MD(DPPLHVT)  pldp_0.974_hvt pldp_0.974_hvt(G) psd(S) psd(D) nwell(B) <pdif> <AA> CMACRO SRAM_PRO pldp_0.974_hvt psd pdif AA
/*
DEVICE MD(DPNPDULL) npddp_0.974_ull npddp_0.974_ull(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npddp_0.974_ull nsd ndif AA NETLIST ELEMENT X
DEVICE MD(DPNPGAULL) npgadp_0.974_ull npgadp_0.974_ull(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npgadp_0.974_ull nsd ndif AA NETLIST ELEMENT X
DEVICE MD(DPNPGBULL) npgbdp_0.974_ull npgbdp_0.974_ull(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npgbdp_0.974_ull nsd ndif AA NETLIST ELEMENT X
DEVICE MD(DPPLULL)  pldp_0.974_ull pldp_0.974_ull(G) psd(S) psd(D) nwell(B) <pdif> <AA> CMACRO SRAM_PRO_MIS pldp_0.974_ull psd pdif AA NETLIST ELEMENT X
*/

//Define 1.158
/*
DEVICE M(RFNPDSVT) npddp_1.158_svt npddp_1.158_svt(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> CMACRO SRAM_PRO npddp_1.158_svt nsd ndif AA
DEVICE M(RFNPGASVT) npgadp_1.158_svt npgadp_1.158_svt(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> CMACRO SRAM_PRO npgadp_1.158_svt nsd ndif AA
DEVICE M(RFNPGBSVT) npgbdp_1.158_svt npgbdp_1.158_svt(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> CMACRO SRAM_PRO npgbdp_1.158_svt nsd ndif AA
DEVICE M(RFPLSVT)  pldp_1.158_svt pldp_1.158_svt(G) psd(S) psd(D) nwell(B) <pdif> <AA> CMACRO SRAM_PRO pldp_1.158_svt psd pdif AA
*/
DEVICE M(RFNPDHVT) npddp_1.158_hvt npddp_1.158_hvt(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> CMACRO SRAM_PRO npddp_1.158_hvt nsd ndif AA
DEVICE M(RFNPGAHVT) npgadp_1.158_hvt npgadp_1.158_hvt(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> CMACRO SRAM_PRO npgadp_1.158_hvt nsd ndif AA
DEVICE M(RFNPGBHVT) npgbdp_1.158_hvt npgbdp_1.158_hvt(G) nsd(S) nsd(D) pwell(B) <ndif> <AA> CMACRO SRAM_PRO npgbdp_1.158_hvt nsd ndif AA
DEVICE M(RFPLHVT)  pldp_1.158_hvt pldp_1.158_hvt(G) psd(S) psd(D) nwell(B) <pdif> <AA> CMACRO SRAM_PRO pldp_1.158_hvt psd pdif AA
#ENDIF

#IFDEF SRAM SUBCKT
/*Define 0.499
DEVICE UDNPGSVT_ckt npgsp_0.499_svt nsd(D) npgsp_0.499_svt(G) nsd(S) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npgsp_0.499_svt nsd ndif AA
CMACRO MOS_REDUCE UDNPGSVT_ckt
DEVICE UDNPDSVT_ckt npdsp_0.499_svt nsd(D) npdsp_0.499_svt(G) nsd(S) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npdsp_0.499_svt nsd ndif AA
CMACRO MOS_REDUCE UDNPDSVT_ckt
DEVICE UDPLSVT_ckt  plsp_0.499_svt psd(D) plsp_0.499_svt(G) psd(S) nwell(B) <pdif> <AA> CMACRO SRAM_PRO_MIS plsp_0.499_svt psd pdif AA
CMACRO MOS_REDUCE UDPLSVT_ckt
DEVICE UDNPGHVT_ckt npgsp_0.499_hvt nsd(D) npgsp_0.499_hvt(G) nsd(S) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npgsp_0.499_hvt nsd ndif AA
CMACRO MOS_REDUCE UDNPGHVT_ckt
DEVICE UDNPDHVT_ckt npdsp_0.499_hvt nsd(D) npdsp_0.499_hvt(G) nsd(S) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npdsp_0.499_hvt nsd ndif AA
CMACRO MOS_REDUCE UDNPDHVT_ckt
DEVICE UDPLHVT_ckt  plsp_0.499_hvt psd(D) plsp_0.499_hvt(G) psd(S) nwell(B) <pdif> <AA> CMACRO SRAM_PRO_MIS plsp_0.499_hvt psd pdif AA
CMACRO MOS_REDUCE UDPLHVT_ckt
*/

//Define 0.525
DEVICE NPDSVT_ckt npdsp_0.525_svt nsd(D) npdsp_0.525_svt(G) nsd(S) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npdsp_0.525_svt nsd ndif AA
CMACRO MOS_REDUCE NPDSVT_ckt
DEVICE NPGSVT_ckt npgsp_0.525_svt nsd(D) npgsp_0.525_svt(G) nsd(S) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npgsp_0.525_svt nsd ndif AA
CMACRO MOS_REDUCE NPGSVT_ckt
DEVICE PLSVT_ckt  plsp_0.525_svt psd(D) plsp_0.525_svt(G) psd(S) nwell(B) <pdif> <AA> CMACRO SRAM_PRO_MIS plsp_0.525_svt psd pdif AA
CMACRO MOS_REDUCE PLSVT_ckt
DEVICE STNPDHVT_ckt npdsp_0.525_hvt nsd(D) npdsp_0.525_hvt(G) nsd(S) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npdsp_0.525_hvt nsd ndif AA
CMACRO MOS_REDUCE STNPDHVT_ckt
DEVICE STNPGHVT_ckt npgsp_0.525_hvt nsd(D) npgsp_0.525_hvt(G) nsd(S) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npgsp_0.525_hvt nsd ndif AA
CMACRO MOS_REDUCE STNPGHVT_ckt
DEVICE STPLHVT_ckt  plsp_0.525_hvt psd(D) plsp_0.525_hvt(G) psd(S) nwell(B) <pdif> <AA> CMACRO SRAM_PRO_MIS plsp_0.525_hvt psd pdif AA
CMACRO MOS_REDUCE STPLHVT_ckt
//Define 0.62
DEVICE DNNPDSVT_ckt npdsp_0.62_svt nsd(D) npdsp_0.62_svt(G) nsd(S) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npdsp_0.62_svt nsd ndif AA
CMACRO MOS_REDUCE DNNPDSVT_ckt
DEVICE DNNPGSVT_ckt npgsp_0.62_svt nsd(D) npgsp_0.62_svt(G) nsd(S) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npgsp_0.62_svt nsd ndif AA
CMACRO MOS_REDUCE DNNPGSVT_ckt
DEVICE DNPLSVT_ckt  plsp_0.62_svt psd(D) plsp_0.62_svt(G) psd(S) nwell(B) <pdif> <AA> CMACRO SRAM_PRO_MIS plsp_0.62_svt psd pdif AA
CMACRO MOS_REDUCE DNPLSVT_ckt

DEVICE DNNPDHVT_ckt npdsp_0.62_hvt nsd(D) npdsp_0.62_hvt(G) nsd(S) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npdsp_0.62_hvt nsd ndif AA
CMACRO MOS_REDUCE DNNPDHVT_ckt
DEVICE DNNPGHVT_ckt npgsp_0.62_hvt nsd(D) npgsp_0.62_hvt(G) nsd(S) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npgsp_0.62_hvt nsd ndif AA
CMACRO MOS_REDUCE DNNPGHVT_ckt
DEVICE DNPLHVT_ckt  plsp_0.62_hvt psd(D) plsp_0.62_hvt(G) psd(S) nwell(B) <pdif> <AA> CMACRO SRAM_PRO_MIS plsp_0.62_hvt psd pdif AA
CMACRO MOS_REDUCE DNPLHVT_ckt

DEVICE DNNPDULL_ckt npdsp_0.62_ull nsd(D) npdsp_0.62_ull(G) nsd(S) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npdsp_0.62_ull nsd ndif AA
CMACRO MOS_REDUCE DNNPDULL_ckt
DEVICE DNNPGULL_ckt npgsp_0.62_ull nsd(D) npgsp_0.62_ull(G) nsd(S) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npgsp_0.62_ull nsd ndif AA
CMACRO MOS_REDUCE DNNPGULL_ckt
DEVICE DNPLULL_ckt  plsp_0.62_ull psd(D) plsp_0.62_ull(G) psd(S) nwell(B) <pdif> <AA> CMACRO SRAM_PRO_MIS plsp_0.62_ull psd pdif AA
CMACRO MOS_REDUCE DNPLULL_ckt

//Define 0.974
DEVICE NPDDPSVT_ckt npddp_0.974_svt nsd(D) npddp_0.974_svt(G) nsd(S) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npddp_0.974_svt nsd ndif AA
CMACRO MOS_REDUCE NPDDPSVT_ckt
DEVICE NPGADPSVT_ckt npgadp_0.974_svt nsd(D) npgadp_0.974_svt(G) nsd(S) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npgadp_0.974_svt nsd ndif AA
CMACRO MOS_REDUCE NPGADPSVT_ckt
DEVICE NPGBDPSVT_ckt npgbdp_0.974_svt nsd(D) npgbdp_0.974_svt(G) nsd(S) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npgbdp_0.974_svt nsd ndif AA
CMACRO MOS_REDUCE NPGBDPSVT_ckt
DEVICE PLDPSVT_ckt  pldp_0.974_svt psd(D) pldp_0.974_svt(G) psd(S) nwell(B) <pdif> <AA> CMACRO SRAM_PRO_MIS pldp_0.974_svt psd pdif AA
CMACRO MOS_REDUCE PLDPSVT_ckt
DEVICE DPNPDHVT_ckt npddp_0.974_hvt nsd(D) npddp_0.974_hvt(G) nsd(S) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npddp_0.974_hvt nsd ndif AA
CMACRO MOS_REDUCE DPNPDHVT_ckt
DEVICE DPNPGAHVT_ckt npgadp_0.974_hvt nsd(D) npgadp_0.974_hvt(G) nsd(S) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npgadp_0.974_hvt nsd ndif AA
CMACRO MOS_REDUCE DPNPGAHVT_ckt
DEVICE DPNPGBHVT_ckt npgbdp_0.974_hvt nsd(D) npgbdp_0.974_hvt(G) nsd(S) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npgbdp_0.974_hvt nsd ndif AA
CMACRO MOS_REDUCE DPNPGBHVT_ckt
DEVICE DPPLHVT_ckt  pldp_0.974_hvt psd(D) pldp_0.974_hvt(G) psd(S) nwell(B) <pdif> <AA> CMACRO SRAM_PRO_MIS pldp_0.974_hvt psd pdif AA
CMACRO MOS_REDUCE DPPLHVT_ckt

DEVICE DPNPDULL_ckt npddp_0.974_ull nsd(D) npddp_0.974_ull(G) nsd(S) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npddp_0.974_ull nsd ndif AA
CMACRO MOS_REDUCE DPNPDULL_ckt
DEVICE DPNPGAULL_ckt npgadp_0.974_ull nsd(D) npgadp_0.974_ull(G) nsd(S) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npgadp_0.974_ull nsd ndif AA
CMACRO MOS_REDUCE DPNPGAULL_ckt
DEVICE DPNPGBULL_ckt npgbdp_0.974_ull nsd(D) npgbdp_0.974_ull(G) nsd(S) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npgbdp_0.974_ull nsd ndif AA
CMACRO MOS_REDUCE DPNPGBULL_ckt
DEVICE DPPLULL_ckt pldp_0.974_ull psd(D) pldp_0.974_ull(G) psd(S) nwell(B) <pdif> <AA> CMACRO SRAM_PRO_MIS pldp_0.974_ull psd pdif AA
CMACRO MOS_REDUCE DPPLULL_ckt


/*Define 1.158
DEVICE RFNPDSVT_ckt npddp_1.158_svt nsd(D) npddp_1.158_svt(G) nsd(S) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npddp_1.158_svt nsd ndif AA
CMACRO MOS_REDUCE RFNPDSVT_ckt
DEVICE RFNPGASVT_ckt npgadp_1.158_svt nsd(D) npgadp_1.158_svt(G) nsd(S) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npgadp_1.158_svt nsd ndif AA
CMACRO MOS_REDUCE RFNPGASVT_ckt
DEVICE RFNPGBSVT_ckt npgbdp_1.158_svt nsd(D) npgbdp_1.158_svt(G) nsd(S) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npgbdp_1.158_svt nsd ndif AA
CMACRO MOS_REDUCE RFNPGBSVT_ckt
DEVICE RFPLSVT_ckt  pldp_1.158_svt psd(D) pldp_1.158_svt(G) psd(S) nwell(B) <pdif> <AA> CMACRO SRAM_PRO_MIS pldp_1.158_svt psd pdif AA
CMACRO MOS_REDUCE RFPLSVT_ckt
*/
DEVICE RFNPDHVT_ckt npddp_1.158_hvt nsd(D) npddp_1.158_hvt(G) nsd(S) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npddp_1.158_hvt nsd ndif AA
CMACRO MOS_REDUCE RFNPDHVT_ckt
DEVICE RFNPGAHVT_ckt npgadp_1.158_hvt nsd(D) npgadp_1.158_hvt(G) nsd(S) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npgadp_1.158_hvt nsd ndif AA
CMACRO MOS_REDUCE RFNPGAHVT_ckt
DEVICE RFNPGBHVT_ckt npgbdp_1.158_hvt nsd(D) npgbdp_1.158_hvt(G) nsd(S) pwell(B) <ndif> <AA> CMACRO SRAM_PRO_MIS npgbdp_1.158_hvt nsd ndif AA
CMACRO MOS_REDUCE RFNPGBHVT_ckt
DEVICE RFPLHVT_ckt  pldp_1.158_hvt psd(D) pldp_1.158_hvt(G) psd(S) nwell(B) <pdif> <AA> CMACRO SRAM_PRO_MIS pldp_1.158_hvt psd pdif AA
CMACRO MOS_REDUCE RFPLHVT_ckt
#ENDIF
#ENDIF

////////////////////////Define RF MOS XRC////////////////////////////
#IFDEF RC_RUN TRUE

DEVICE n12ll_ckt_rf ngate_core_rf nsdrfd(DRN) ngate_core_rf(GATE) nsd(SRC) pwell(BULK) <ngate_core_rf_aux> <nsdrf> <nsdrf_sab> <sab_core> <s_core> <nsdrf_sd> <pwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(ngate_core_rf_aux)
        WR = PERIM_CO(ngate_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( ngate_core_rf_aux , pwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_core_rf_aux , pwell_wpe_core , nsd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE n12ll_ckt_rf ngate_core_rf nsdrfd(DRN) ngate_core_rf(GATE) nsd(SRC) pwell(BULK) <ngate_core_rf_aux> <nsdrf> <nsdrf_sab> <sab_core> <s_core> <pwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(ngate_core_rf_aux)
        WR = PERIM_CO(ngate_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        PAR = ENC_PAR_MUL ( ngate_core_rf_aux , pwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_core_rf_aux , pwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE n12ll_ckt_rf_sdc ngate_core_rf_sdc nsdrfd(DRN) ngate_core_rf_sdc(GATE) nsd(SRC) pwell(BULK) <ngate_core_rf_aux> <nsdrf> <nsdrf_sab> <pwell_wpe_core> <sab_core> <s_core> <nsdrf_sd>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(ngate_core_rf_aux)
        WR = PERIM_CO(ngate_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( ngate_core_rf_aux , pwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_core_rf_aux , pwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE n12ll_ckt_rf_sdc ngate_core_rf_sdc nsdrfd(DRN) ngate_core_rf_sdc(GATE) nsd(SRC) pwell(BULK) <ngate_core_rf_aux> <nsdrf> <nsdrf_sab> <pwell_wpe_core> <sab_core> <s_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(ngate_core_rf_aux)
        WR = PERIM_CO(ngate_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        PAR = ENC_PAR_MUL ( ngate_core_rf_aux , pwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_core_rf_aux , pwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]


DEVICE nlvt12ll_ckt_rf ngate_core_lvt_rf nsdrfd(DRN) ngate_core_lvt_rf(GATE) nsd(SRC) pwell(BULK) <ngate_core_lvt_rf_aux> <nsdrf> <nsdrf_sab> <pwell_wpe_core> <sab_core> <s_core> <nsdrf_sd>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(ngate_core_lvt_rf_aux)
        WR = PERIM_CO(ngate_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( ngate_core_lvt_rf_aux , pwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_core_lvt_rf_aux , pwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE nlvt12ll_ckt_rf ngate_core_lvt_rf nsdrfd(DRN) ngate_core_lvt_rf(GATE) nsd(SRC) pwell(BULK) <ngate_core_lvt_rf_aux> <nsdrf> <nsdrf_sab> <pwell_wpe_core> <sab_core> <s_core> 
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(ngate_core_lvt_rf_aux)
        WR = PERIM_CO(ngate_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        PAR = ENC_PAR_MUL ( ngate_core_lvt_rf_aux , pwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_core_lvt_rf_aux , pwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE nlvt12ll_ckt_rf_sdc ngate_core_lvt_rf_sdc nsdrfd(DRN) ngate_core_lvt_rf_sdc(GATE) nsd(SRC) pwell(BULK) <ngate_core_lvt_rf_aux> <nsdrf> <nsdrf_sab> <pwell_wpe_core> <sab_core> <s_core> <nsdrf_sd>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(ngate_core_lvt_rf_aux)
        WR = PERIM_CO(ngate_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( ngate_core_lvt_rf_aux , pwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_core_lvt_rf_aux , pwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE nlvt12ll_ckt_rf_sdc ngate_core_lvt_rf_sdc nsdrfd(DRN) ngate_core_lvt_rf_sdc(GATE) nsd(SRC) pwell(BULK) <ngate_core_lvt_rf_aux> <nsdrf> <nsdrf_sab> <pwell_wpe_core> <sab_core> <s_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(ngate_core_lvt_rf_aux)
        WR = PERIM_CO(ngate_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        PAR = ENC_PAR_MUL ( ngate_core_lvt_rf_aux , pwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_core_lvt_rf_aux , pwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE n18ll_ckt_rf ngate_IO1_rf nsdrfd(DRN) ngate_IO1_rf(GATE) nsd(SRC) pwell(BULK) <ngate_IO1_rf_aux> <nsdrf> <nsdrf_sab> <pwell_wpe_IO1> <sab_core> <s_core> <nsdrf_sd> 
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(ngate_IO1_rf_aux)
        WR = PERIM_CO(ngate_IO1_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_IO1_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( ngate_IO1_rf_aux , pwell_wpe_IO1 , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_IO1_rf_aux , pwell_wpe_IO1 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE n18ll_ckt_rf ngate_IO1_rf nsdrfd(DRN) ngate_IO1_rf(GATE) nsd(SRC) pwell(BULK) <ngate_IO1_rf_aux> <nsdrf> <nsdrf_sab> <pwell_wpe_IO1> <sab_core> <s_core> 
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(ngate_IO1_rf_aux)
        WR = PERIM_CO(ngate_IO1_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_IO1_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        PAR = ENC_PAR_MUL ( ngate_IO1_rf_aux , pwell_wpe_IO1 , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_IO1_rf_aux , pwell_wpe_IO1 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]


DEVICE dnw12ll_ckt_rf dnw_core_rf nsdrfd(DRN) dnw_core_rf(GATE) nsd(SRC) rwell(BULK) <nsdrf> <dnw_core_rf_aux> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(dnw_core_rf_aux)
        WR = PERIM_CO(dnw_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE dnw12ll_ckt_rf dnw_core_rf nsdrfd(DRN) dnw_core_rf(GATE) nsd(SRC) rwell(BULK) <nsdrf> <dnw_core_rf_aux> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(dnw_core_rf_aux)
        WR = PERIM_CO(dnw_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        PAR = ENC_PAR_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE dnw12ll_ckt_rf_6t dnw_core_rf_6t nsdrfd(DRN) dnw_core_rf_6t_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <nsdrf> <dnw_core_rf_aux> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(dnw_core_rf_aux)
        WR = PERIM_CO(dnw_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        M   = 1
        ]

DEVICE dnw12ll_ckt_rf_6t dnw_core_rf_6t nsdrfd(DRN) dnw_core_rf_6t_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <nsdrf> <dnw_core_rf_aux> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(dnw_core_rf_aux)
        WR = PERIM_CO(dnw_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        M   = 1
        ]

DEVICE dnw12ll_ckt_rf_sdc dnw_core_rf_sdc nsdrfd(DRN) dnw_core_rf_sdc(GATE) nsd(SRC) rwell(BULK) <nsdrf> <dnw_core_rf_aux> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(dnw_core_rf_aux)
        WR = PERIM_CO(dnw_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE dnw12ll_ckt_rf_sdc dnw_core_rf_sdc nsdrfd(DRN) dnw_core_rf_sdc(GATE) nsd(SRC) rwell(BULK) <nsdrf> <dnw_core_rf_aux> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(dnw_core_rf_aux)
        WR = PERIM_CO(dnw_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        PAR = ENC_PAR_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE dnw12ll_ckt_rf_6t_sdc dnw_core_rf_6t_sdc nsdrfd(DRN) dnw_core_rf_6t_sdc_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <nsdrf> <dnw_core_rf_aux> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(dnw_core_rf_aux)
        WR = PERIM_CO(dnw_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        M   = 1
        ]

DEVICE dnw12ll_ckt_rf_6t_sdc dnw_core_rf_6t_sdc nsdrfd(DRN) dnw_core_rf_6t_sdc_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <nsdrf> <dnw_core_rf_aux> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(dnw_core_rf_aux)
        WR = PERIM_CO(dnw_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        M   = 1
        ]

DEVICE dnwlvt12ll_ckt_rf dnw_core_lvt_rf nsdrfd(DRN) dnw_core_lvt_rf(GATE) nsd(SRC) rwell(BULK) <nsdrf> <dnw_core_lvt_rf_aux> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(dnw_core_lvt_rf_aux)
        WR = PERIM_CO(dnw_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( dnw_core_lvt_rf_aux , rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_lvt_rf_aux , rwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]


DEVICE dnwlvt12ll_ckt_rf dnw_core_lvt_rf nsdrfd(DRN) dnw_core_lvt_rf(GATE) nsd(SRC) rwell(BULK) <nsdrf> <dnw_core_lvt_rf_aux> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(dnw_core_lvt_rf_aux)
        WR = PERIM_CO(dnw_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        PAR = ENC_PAR_MUL ( dnw_core_lvt_rf_aux , rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_lvt_rf_aux, rwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE dnwlvt12ll_ckt_rf_6t dnw_core_lvt_rf_6t nsdrfd(DRN) dnw_core_lvt_rf_6t_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <nsdrf> <dnw_core_lvt_rf_aux> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab>  <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(dnw_core_lvt_rf_aux)
        WR = PERIM_CO(dnw_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( dnw_core_lvt_rf_aux , rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_lvt_rf_aux, rwell_wpe_core , nsd , 2.000 )
        M   = 1
        ]

DEVICE dnwlvt12ll_ckt_rf_6t dnw_core_lvt_rf_6t nsdrfd(DRN) dnw_core_lvt_rf_6t_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <nsdrf> <dnw_core_lvt_rf_aux> <sab_core> <s_core> <nsdrf_sab>  <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(dnw_core_lvt_rf_aux)
        WR = PERIM_CO(dnw_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( dnw_core_lvt_rf_aux , rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_lvt_rf_aux, rwell_wpe_core , nsd , 2.000 )
        M   = 1
        ]

DEVICE dnwlvt12ll_ckt_rf_sdc dnw_core_lvt_rf_sdc nsdrfd(DRN) dnw_core_lvt_rf_sdc(GATE) nsd(SRC) rwell(BULK) <nsdrf> <dnw_core_lvt_rf_aux> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(dnw_core_lvt_rf_aux)
        WR = PERIM_CO(dnw_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( dnw_core_lvt_rf_aux, rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_lvt_rf_aux, rwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE dnwlvt12ll_ckt_rf_sdc dnw_core_lvt_rf_sdc nsdrfd(DRN) dnw_core_lvt_rf_sdc(GATE) nsd(SRC) rwell(BULK) <nsdrf> <dnw_core_lvt_rf_aux> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(dnw_core_lvt_rf_aux)
        WR = PERIM_CO(dnw_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        PAR = ENC_PAR_MUL ( dnw_core_lvt_rf_aux, rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_lvt_rf_aux, rwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE dnwlvt12ll_ckt_rf_6t_sdc dnw_core_lvt_rf_6t_sdc nsdrfd(DRN) dnw_core_lvt_rf_6t_sdc_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <nsdrf> <dnw_core_lvt_rf_aux> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(dnw_core_lvt_rf_aux)
        WR = PERIM_CO(dnw_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( dnw_core_lvt_rf_aux, rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_lvt_rf_aux, rwell_wpe_core , nsd , 2.000 )
        M   = 1
        ]

DEVICE dnwlvt12ll_ckt_rf_6t_sdc dnw_core_lvt_rf_6t_sdc nsdrfd(DRN) dnw_core_lvt_rf_6t_sdc_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <nsdrf> <dnw_core_lvt_rf_aux> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(dnw_core_lvt_rf_aux)
        WR = PERIM_CO(dnw_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = 0       
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( dnw_core_lvt_rf_aux, rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_lvt_rf_aux, rwell_wpe_core , nsd , 2.000 )
        M   = 1
        ]

DEVICE dnw18ll_ckt_rf dnw_IO1_rf nsdrfd(DRN) dnw_IO1_rf(GATE) nsd(SRC) rwell(BULK) <dnw_IO1_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_IO1>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(dnw_IO1_rf_aux)
        WR = PERIM_CO(dnw_IO1_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO1_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( dnw_IO1_rf_aux, rwell_wpe_IO1 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO1_rf_aux, rwell_wpe_IO1 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE dnw18ll_ckt_rf dnw_IO1_rf nsdrfd(DRN) dnw_IO1_rf(GATE) nsd(SRC) rwell(BULK) <dnw_IO1_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_IO1>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(dnw_IO1_rf_aux)
        WR = PERIM_CO(dnw_IO1_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO1_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        PAR = ENC_PAR_MUL ( dnw_IO1_rf_aux , rwell_wpe_IO1 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO1_rf_aux , rwell_wpe_IO1 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE dnw18ll_ckt_rf_6t dnw_IO1_rf_6t nsdrfd(DRN) dnw_IO1_rf_6t_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <dnw_IO1_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab>  <rwell_wpe_IO1>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(dnw_IO1_rf_aux)
        WR = PERIM_CO(dnw_IO1_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO1_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( dnw_IO1_rf_aux , rwell_wpe_IO1 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO1_rf_aux , rwell_wpe_IO1 , nsd , 2.000 )
        M   = 1
        ]

DEVICE dnw18ll_ckt_rf_6t dnw_IO1_rf_6t nsdrfd(DRN) dnw_IO1_rf_6t_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <dnw_IO1_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_IO1>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(dnw_IO1_rf_aux)
        WR = PERIM_CO(dnw_IO1_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO1_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( dnw_IO1_rf_aux , rwell_wpe_IO1 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO1_rf_aux , rwell_wpe_IO1 , nsd , 2.000 )
        M   = 1
        ]

DEVICE p12ll_ckt_rf pgate_core_rf psdrfd(DRN) pgate_core_rf(GATE) psd(SRC) nwell(BULK) <pgate_core_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_core> 
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(pgate_core_rf_aux)
        WR = PERIM_CO(pgate_core_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( pgate_core_rf_aux , nwell_wpe_core , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_rf_aux , nwell_wpe_core , psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE p12ll_ckt_rf pgate_core_rf psdrfd(DRN) pgate_core_rf(GATE) psd(SRC) nwell(BULK) <pgate_core_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(pgate_core_rf_aux)
        WR = PERIM_CO(pgate_core_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        PAR = ENC_PAR_MUL ( pgate_core_rf_aux , nwell_wpe_core , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_rf_aux , nwell_wpe_core , psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE p12ll_ckt_rf_5t pgate_core_rf_5t psdrfd(DRN) pgate_core_rf_5t_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_core_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(pgate_core_rf_aux)
        WR = PERIM_CO(pgate_core_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( pgate_core_rf_aux , nwell_wpe_core , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_rf_aux , nwell_wpe_core , psd , 2.000 )
        M   = 1
        ]

DEVICE p12ll_ckt_rf_5t pgate_core_rf_5t psdrfd(DRN) pgate_core_rf_5t_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_core_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(pgate_core_rf_aux)
        WR = PERIM_CO(pgate_core_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( pgate_core_rf_aux , nwell_wpe_core , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_rf_aux , nwell_wpe_core , psd , 2.000 )
        M   = 1
        ]

DEVICE p12ll_ckt_rf_sdc pgate_core_rf_sdc psdrfd(DRN) pgate_core_rf_sdc(GATE) psd(SRC) nwell(BULK) <pgate_core_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(pgate_core_rf_aux)
        WR = PERIM_CO(pgate_core_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( pgate_core_rf_aux , nwell_wpe_core , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_rf_aux , nwell_wpe_core , psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE p12ll_ckt_rf_sdc pgate_core_rf_sdc psdrfd(DRN) pgate_core_rf_sdc(GATE) psd(SRC) nwell(BULK) <pgate_core_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(pgate_core_rf_aux)
        WR = PERIM_CO(pgate_core_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        PAR = ENC_PAR_MUL ( pgate_core_rf_aux , nwell_wpe_core , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_rf_aux , nwell_wpe_core , psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE p12ll_ckt_rf_5t_sdc pgate_core_rf_5t_sdc psdrfd(DRN) pgate_core_rf_5t_sdc_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_core_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(pgate_core_rf_aux)
        WR = PERIM_CO(pgate_core_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_rf_aux)/(WR*NF) 
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( pgate_core_rf_aux , nwell_wpe_core , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_rf_aux , nwell_wpe_core , psd , 2.000 )
        M   = 1
        ]

DEVICE p12ll_ckt_rf_5t_sdc pgate_core_rf_5t_sdc psdrfd(DRN) pgate_core_rf_5t_sdc_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_core_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(pgate_core_rf_aux)
        WR = PERIM_CO(pgate_core_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( pgate_core_rf_aux , nwell_wpe_core , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_rf_aux , nwell_wpe_core , psd , 2.000 )
        M   = 1
        ]


DEVICE plvt12ll_ckt_rf pgate_core_lvt_rf psdrfd(DRN) pgate_core_lvt_rf(GATE) psd(SRC) nwell(BULK) <pgate_core_lvt_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(pgate_core_lvt_rf_aux)
        WR = PERIM_CO(pgate_core_lvt_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( pgate_core_lvt_rf_aux , nwell_wpe_core , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_lvt_rf_aux , nwell_wpe_core , psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE plvt12ll_ckt_rf pgate_core_lvt_rf psdrfd(DRN) pgate_core_lvt_rf(GATE) psd(SRC) nwell(BULK) <pgate_core_lvt_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(pgate_core_lvt_rf_aux)
        WR = PERIM_CO(pgate_core_lvt_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        PAR = ENC_PAR_MUL ( pgate_core_lvt_rf_aux , nwell_wpe_core , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_lvt_rf_aux, nwell_wpe_core , psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE plvt12ll_ckt_rf_5t pgate_core_lvt_rf_5t psdrfd(DRN) pgate_core_lvt_rf_5t_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_core_lvt_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(pgate_core_lvt_rf_aux)
        WR = PERIM_CO(pgate_core_lvt_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( pgate_core_lvt_rf_aux , nwell_wpe_core , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_lvt_rf_aux, nwell_wpe_core , psd , 2.000 )
        M   = 1
        ]

DEVICE plvt12ll_ckt_rf_5t pgate_core_lvt_rf_5t psdrfd(DRN) pgate_core_lvt_rf_5t_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_core_lvt_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(pgate_core_lvt_rf_aux)
        WR = PERIM_CO(pgate_core_lvt_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( pgate_core_lvt_rf_aux , nwell_wpe_core , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_lvt_rf_aux, nwell_wpe_core , psd , 2.000 )
        M   = 1
        ]

DEVICE plvt12ll_ckt_rf_sdc pgate_core_lvt_rf_sdc psdrfd(DRN) pgate_core_lvt_rf_sdc(GATE) psd(SRC) nwell(BULK) <pgate_core_lvt_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(pgate_core_lvt_rf_aux)
        WR = PERIM_CO(pgate_core_lvt_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( pgate_core_lvt_rf_aux , nwell_wpe_core , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_lvt_rf_aux , nwell_wpe_core , psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE plvt12ll_ckt_rf_sdc pgate_core_lvt_rf_sdc psdrfd(DRN) pgate_core_lvt_rf_sdc(GATE) psd(SRC) nwell(BULK) <pgate_core_lvt_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(pgate_core_lvt_rf_aux)
        WR = PERIM_CO(pgate_core_lvt_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        PAR = ENC_PAR_MUL ( pgate_core_lvt_rf_aux , nwell_wpe_core , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_lvt_rf_aux , nwell_wpe_core , psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE plvt12ll_ckt_rf_5t_sdc pgate_core_lvt_rf_5t_sdc psdrfd(DRN) pgate_core_lvt_rf_5t_sdc_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_core_lvt_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(pgate_core_lvt_rf_aux)
        WR = PERIM_CO(pgate_core_lvt_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( pgate_core_lvt_rf_aux , nwell_wpe_core , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_lvt_rf_aux , nwell_wpe_core , psd , 2.000 )
        M   = 1
        ]

DEVICE plvt12ll_ckt_rf_5t_sdc pgate_core_lvt_rf_5t_sdc psdrfd(DRN) pgate_core_lvt_rf_5t_sdc_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_core_lvt_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(pgate_core_lvt_rf_aux)
        WR = PERIM_CO(pgate_core_lvt_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( pgate_core_lvt_rf_aux , nwell_wpe_core , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_lvt_rf_aux , nwell_wpe_core , psd , 2.000 )
        M   = 1
        ]

DEVICE p18ll_ckt_rf pgate_IO1_rf psdrfd(DRN) pgate_IO1_rf(GATE) psd(SRC) nwell(BULK) <pgate_IO1_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_IO1>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(pgate_IO1_rf_aux)
        WR = PERIM_CO(pgate_IO1_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO1_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( pgate_IO1_rf_aux , nwell_wpe_IO1 , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO1_rf_aux , nwell_wpe_IO1 , psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE p18ll_ckt_rf pgate_IO1_rf psdrfd(DRN) pgate_IO1_rf(GATE) psd(SRC) nwell(BULK) <pgate_IO1_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sab> <nwell_wpe_IO1>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(pgate_IO1_rf_aux)
        WR = PERIM_CO(pgate_IO1_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO1_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        PAR = ENC_PAR_MUL ( pgate_IO1_rf_aux , nwell_wpe_IO1 , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO1_rf_aux , nwell_wpe_IO1 , psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE p18ll_ckt_rf_5t pgate_IO1_rf_5t psdrfd(DRN) pgate_IO1_rf_5t_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_IO1_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_IO1>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(pgate_IO1_rf_aux)
        WR = PERIM_CO(pgate_IO1_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO1_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( pgate_IO1_rf_aux , nwell_wpe_IO1 , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO1_rf_aux , nwell_wpe_IO1 , psd , 2.000 )
        M   = 1
        ]

DEVICE p18ll_ckt_rf_5t pgate_IO1_rf_5t psdrfd(DRN) pgate_IO1_rf_5t_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_IO1_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sab> <nwell_wpe_IO1>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(pgate_IO1_rf_aux)
        WR = PERIM_CO(pgate_IO1_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO1_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( pgate_IO1_rf_aux , nwell_wpe_IO1 , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO1_rf_aux , nwell_wpe_IO1 , psd , 2.000 )
        M   = 1
        ]

#IFDEF IO 1825

DEVICE n25ll_ckt_rf ngate_IO2_rf nsdrfd(DRN) ngate_IO2_rf(GATE) nsd(SRC) pwell(BULK) <ngate_IO2_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <pwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(ngate_IO2_rf_aux)
        WR = PERIM_CO(ngate_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( ngate_IO2_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_IO2_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE n25ll_ckt_rf ngate_IO2_rf nsdrfd(DRN) ngate_IO2_rf(GATE) nsd(SRC) pwell(BULK) <ngate_IO2_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sab> <pwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(ngate_IO2_rf_aux)
        WR = PERIM_CO(ngate_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        PAR = ENC_PAR_MUL ( ngate_IO2_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_IO2_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE n25llod33_ckt_rf ngate_IO2_over_rf nsdrfd(DRN) ngate_IO2_over_rf(GATE) nsd(SRC) pwell(BULK) <ngate_IO2_over_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <pwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(ngate_IO2_over_rf_aux)
        WR = PERIM_CO(ngate_IO2_over_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_IO2_over_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( ngate_IO2_over_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_IO2_over_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE n25llod33_ckt_rf ngate_IO2_over_rf nsdrfd(DRN) ngate_IO2_over_rf(GATE) nsd(SRC) pwell(BULK) <ngate_IO2_over_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sab> <pwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(ngate_IO2_over_rf_aux)
        WR = PERIM_CO(ngate_IO2_over_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_IO2_over_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        PAR = ENC_PAR_MUL ( ngate_IO2_over_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_IO2_over_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE n25llud18_ckt_rf ngate_IO2_under_rf nsdrfd(DRN) ngate_IO2_under_rf(GATE) nsd(SRC) pwell(BULK) <ngate_IO2_under_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <pwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(ngate_IO2_under_rf_aux)
        WR = PERIM_CO(ngate_IO2_under_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_IO2_under_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( ngate_IO2_under_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_IO2_under_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE n25llud18_ckt_rf ngate_IO2_under_rf nsdrfd(DRN) ngate_IO2_under_rf(GATE) nsd(SRC) pwell(BULK) <ngate_IO2_under_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sab> <pwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(ngate_IO2_under_rf_aux)
        WR = PERIM_CO(ngate_IO2_under_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_IO2_under_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        PAR = ENC_PAR_MUL ( ngate_IO2_under_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_IO2_under_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE n25ll_ckt_rf_sdc ngate_IO2_rf_sdc nsdrfd(DRN) ngate_IO2_rf_sdc(GATE) nsd(SRC) pwell(BULK) <ngate_IO2_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <pwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(ngate_IO2_rf_aux)
        WR = PERIM_CO(ngate_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( ngate_IO2_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_IO2_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE n25ll_ckt_rf_sdc ngate_IO2_rf_sdc nsdrfd(DRN) ngate_IO2_rf_sdc(GATE) nsd(SRC) pwell(BULK) <ngate_IO2_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sab> <pwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(ngate_IO2_rf_aux)
        WR = PERIM_CO(ngate_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        PAR = ENC_PAR_MUL ( ngate_IO2_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_IO2_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE dnw25ll_ckt_rf dnw_IO2_rf nsdrfd(DRN) dnw_IO2_rf(GATE) nsd(SRC) rwell(BULK) <dnw_IO2_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(dnw_IO2_rf_aux)
        WR = PERIM_CO(dnw_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE dnw25ll_ckt_rf dnw_IO2_rf nsdrfd(DRN) dnw_IO2_rf(GATE) nsd(SRC) rwell(BULK) <dnw_IO2_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(dnw_IO2_rf_aux)
        WR = PERIM_CO(dnw_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        PAR = ENC_PAR_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE dnw25ll_ckt_rf_6t dnw_IO2_rf_6t nsdrfd(DRN) dnw_IO2_rf_6t_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <dnw_IO2_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(dnw_IO2_rf_aux)
        WR = PERIM_CO(dnw_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        M   = 1
        ]

DEVICE dnw25ll_ckt_rf_6t dnw_IO2_rf_6t nsdrfd(DRN) dnw_IO2_rf_6t_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <dnw_IO2_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(dnw_IO2_rf_aux)
        WR = PERIM_CO(dnw_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        M   = 1
        ]

DEVICE dnw25llod33_ckt_rf dnw_IO2_over_rf nsdrfd(DRN) dnw_IO2_over_rf(GATE) nsd(SRC) rwell(BULK) <dnw_IO2_over_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(dnw_IO2_over_rf_aux)
        WR = PERIM_CO(dnw_IO2_over_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_over_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( dnw_IO2_over_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_over_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE dnw25llod33_ckt_rf dnw_IO2_over_rf nsdrfd(DRN) dnw_IO2_over_rf(GATE) nsd(SRC) rwell(BULK) <dnw_IO2_over_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(dnw_IO2_over_rf_aux)
        WR = PERIM_CO(dnw_IO2_over_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_over_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        PAR = ENC_PAR_MUL ( dnw_IO2_over_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_over_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE dnw25llod33_ckt_rf_6t dnw_IO2_over_rf_6t nsdrfd(DRN) dnw_IO2_over_rf_6t_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <dnw_IO2_over_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(dnw_IO2_over_rf_aux)
        WR = PERIM_CO(dnw_IO2_over_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_over_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( dnw_IO2_over_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_over_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        M   = 1
        ]

DEVICE dnw25llod33_ckt_rf_6t dnw_IO2_over_rf_6t nsdrfd(DRN) dnw_IO2_over_rf_6t_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <dnw_IO2_over_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(dnw_IO2_over_rf_aux)
        WR = PERIM_CO(dnw_IO2_over_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_over_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( dnw_IO2_over_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_over_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        M   = 1
        ]

DEVICE dnw25llud18_ckt_rf dnw_IO2_under_rf nsdrfd(DRN) dnw_IO2_under_rf(GATE) nsd(SRC) rwell(BULK) <dnw_IO2_under_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(dnw_IO2_under_rf_aux)
        WR = PERIM_CO(dnw_IO2_under_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_under_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( dnw_IO2_under_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_under_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE dnw25llud18_ckt_rf dnw_IO2_under_rf nsdrfd(DRN) dnw_IO2_under_rf(GATE) nsd(SRC) rwell(BULK) <dnw_IO2_under_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(dnw_IO2_under_rf_aux)
        WR = PERIM_CO(dnw_IO2_under_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_under_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        PAR = ENC_PAR_MUL ( dnw_IO2_under_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_under_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE dnw25llud18_ckt_rf_6t dnw_IO2_under_rf_6t nsdrfd(DRN) dnw_IO2_under_rf_6t_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <dnw_IO2_under_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(dnw_IO2_under_rf_aux)
        WR = PERIM_CO(dnw_IO2_under_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_under_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( dnw_IO2_under_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_under_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        M   = 1
        ]

DEVICE dnw25llud18_ckt_rf_6t dnw_IO2_under_rf_6t nsdrfd(DRN) dnw_IO2_under_rf_6t_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <dnw_IO2_under_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(dnw_IO2_under_rf_aux)
        WR = PERIM_CO(dnw_IO2_under_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_under_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( dnw_IO2_under_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_under_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        M   = 1
        ]

DEVICE dnw25ll_ckt_rf_sdc dnw_IO2_rf_sdc nsdrfd(DRN) dnw_IO2_rf_sdc(GATE) nsd(SRC) rwell(BULK) <dnw_IO2_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(dnw_IO2_rf_aux)
        WR = PERIM_CO(dnw_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE dnw25ll_ckt_rf_sdc dnw_IO2_rf_sdc nsdrfd(DRN) dnw_IO2_rf_sdc(GATE) nsd(SRC) rwell(BULK) <dnw_IO2_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(dnw_IO2_rf_aux)
        WR = PERIM_CO(dnw_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        PAR = ENC_PAR_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE dnw25ll_ckt_rf_6t_sdc dnw_IO2_rf_6t_sdc nsdrfd(DRN) dnw_IO2_rf_6t_sdc_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <dnw_IO2_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(dnw_IO2_rf_aux)
        WR = PERIM_CO(dnw_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        M   = 1
        ]

DEVICE dnw25ll_ckt_rf_6t_sdc dnw_IO2_rf_6t_sdc nsdrfd(DRN) dnw_IO2_rf_6t_sdc_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <dnw_IO2_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(dnw_IO2_rf_aux)
        WR = PERIM_CO(dnw_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        M   = 1
        ]

DEVICE p25ll_ckt_rf pgate_IO2_rf psdrfd(DRN) pgate_IO2_rf(GATE) psd(SRC) nwell(BULK) <pgate_IO2_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(pgate_IO2_rf_aux)
        WR = PERIM_CO(pgate_IO2_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE p25ll_ckt_rf pgate_IO2_rf psdrfd(DRN) pgate_IO2_rf(GATE) psd(SRC) nwell(BULK) <pgate_IO2_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sab> <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(pgate_IO2_rf_aux)
        WR = PERIM_CO(pgate_IO2_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        PAR = ENC_PAR_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE p25ll_ckt_rf_5t pgate_IO2_rf_5t psdrfd(DRN) pgate_IO2_rf_5t_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_IO2_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(pgate_IO2_rf_aux)
        WR = PERIM_CO(pgate_IO2_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        M   = 1
        ]

DEVICE p25ll_ckt_rf_5t pgate_IO2_rf_5t psdrfd(DRN) pgate_IO2_rf_5t_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_IO2_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sab> <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(pgate_IO2_rf_aux)
        WR = PERIM_CO(pgate_IO2_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        M   = 1
        ]

DEVICE p25llod33_ckt_rf pgate_IO2_over_rf psdrfd(DRN) pgate_IO2_over_rf(GATE) psd(SRC) nwell(BULK) <pgate_IO2_over_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(pgate_IO2_over_rf_aux)
        WR = PERIM_CO(pgate_IO2_over_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_over_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( pgate_IO2_over_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_over_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE p25llod33_ckt_rf pgate_IO2_over_rf psdrfd(DRN) pgate_IO2_over_rf(GATE) psd(SRC) nwell(BULK) <pgate_IO2_over_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sab> <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(pgate_IO2_over_rf_aux)
        WR = PERIM_CO(pgate_IO2_over_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_over_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        PAR = ENC_PAR_MUL ( pgate_IO2_over_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_over_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE p25llod33_ckt_rf_5t pgate_IO2_over_rf_5t psdrfd(DRN) pgate_IO2_over_rf_5t_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_IO2_over_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(pgate_IO2_over_rf_aux)
        WR = PERIM_CO(pgate_IO2_over_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_over_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( pgate_IO2_over_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_over_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        M   = 1
        ]

DEVICE p25llod33_ckt_rf_5t pgate_IO2_over_rf_5t psdrfd(DRN) pgate_IO2_over_rf_5t_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_IO2_over_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sab> <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(pgate_IO2_over_rf_aux)
        WR = PERIM_CO(pgate_IO2_over_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_over_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( pgate_IO2_over_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_over_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        M   = 1
        ]

DEVICE p25llud18_ckt_rf pgate_IO2_under_rf psdrfd(DRN) pgate_IO2_under_rf(GATE) psd(SRC) nwell(BULK) <pgate_IO2_under_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(pgate_IO2_under_rf_aux)
        WR = PERIM_CO(pgate_IO2_under_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_under_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( pgate_IO2_under_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_under_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE p25llud18_ckt_rf pgate_IO2_under_rf psdrfd(DRN) pgate_IO2_under_rf(GATE) psd(SRC) nwell(BULK) <pgate_IO2_under_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sab> <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(pgate_IO2_under_rf_aux)
        WR = PERIM_CO(pgate_IO2_under_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_under_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        PAR = ENC_PAR_MUL ( pgate_IO2_under_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_under_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE p25llud18_ckt_rf_5t pgate_IO2_under_rf_5t psdrfd(DRN) pgate_IO2_under_rf_5t_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_IO2_under_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(pgate_IO2_under_rf_aux)
        WR = PERIM_CO(pgate_IO2_under_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_under_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( pgate_IO2_under_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_under_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        M   = 1
        ]

DEVICE p25llud18_ckt_rf_5t pgate_IO2_under_rf_5t psdrfd(DRN) pgate_IO2_under_rf_5t_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_IO2_under_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sab> <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(pgate_IO2_under_rf_aux)
        WR = PERIM_CO(pgate_IO2_under_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_under_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( pgate_IO2_under_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_under_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        M   = 1
        ]


DEVICE p25ll_ckt_rf_sdc pgate_IO2_rf_sdc psdrfd(DRN) pgate_IO2_rf_sdc(GATE) psd(SRC) nwell(BULK) <pgate_IO2_rf_aux> <psdrf> <sab_core_p><s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(pgate_IO2_rf_aux)
        WR = PERIM_CO(pgate_IO2_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE p25ll_ckt_rf_sdc pgate_IO2_rf_sdc psdrfd(DRN) pgate_IO2_rf_sdc(GATE) psd(SRC) nwell(BULK) <pgate_IO2_rf_aux> <psdrf> <sab_core_p><s_core_p> <psdrf_sab> <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,SCAR,SCBR,SCCR,M
        NF = COUNT(pgate_IO2_rf_aux)
        WR = PERIM_CO(pgate_IO2_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        PAR = ENC_PAR_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        M   = 1
        ]

DEVICE p25ll_ckt_rf_5t_sdc pgate_IO2_rf_5t_sdc psdrfd(DRN) pgate_IO2_rf_5t_sdc_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_IO2_rf_aux> <psdrf> <sab_core_p><s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(pgate_IO2_rf_aux)
        WR = PERIM_CO(pgate_IO2_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        M   = 1
        ]

DEVICE p25ll_ckt_rf_5t_sdc pgate_IO2_rf_5t_sdc psdrfd(DRN) pgate_IO2_rf_5t_sdc_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_IO2_rf_aux> <psdrf> <sab_core_p><s_core_p> <psdrf_sab>  <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,M
        NF = COUNT(pgate_IO2_rf_aux)
        WR = PERIM_CO(pgate_IO2_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        PAR = ENC_PAR_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 ,psd , 2.000 )
        M   = 1
        ]

#ENDIF

DEVICE n12ll_ckt_rf_mis ngate_core_rf_mis nsdrfd(DRN) ngate_core_rf_mis(GATE) nsd(SRC) pwell(BULK) <ngate_core_rf_aux> <nsdrf> <nsdrf_sab> <pwell_wpe_core> <sab_core> <s_core> <nsdrf_sd>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(ngate_core_rf_aux)
        WR = PERIM_CO(ngate_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( ngate_core_rf_aux , pwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_core_rf_aux , pwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE n12ll_ckt_rf_mis ngate_core_rf_mis nsdrfd(DRN) ngate_core_rf_mis(GATE) nsd(SRC) pwell(BULK) <ngate_core_rf_aux> <nsdrf> <nsdrf_sab> <pwell_wpe_core> <sab_core> <s_core> 
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(ngate_core_rf_aux)
        WR = PERIM_CO(ngate_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( ngate_core_rf_aux , pwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_core_rf_aux , pwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE n12ll_ckt_rf_sdc_mis ngate_core_rf_sdc_mis nsdrfd(DRN) ngate_core_rf_sdc_mis(GATE) nsd(SRC) pwell(BULK) <ngate_core_rf_aux> <nsdrf> <nsdrf_sab> <pwell_wpe_core> <sab_core> <s_core> <nsdrf_sd>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(ngate_core_rf_aux)
        WR = PERIM_CO(ngate_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( ngate_core_rf_aux , pwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_core_rf_aux , pwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE n12ll_ckt_rf_sdc_mis ngate_core_rf_sdc_mis nsdrfd(DRN) ngate_core_rf_sdc_mis(GATE) nsd(SRC) pwell(BULK) <ngate_core_rf_aux> <nsdrf> <nsdrf_sab> <pwell_wpe_core> <sab_core> <s_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(ngate_core_rf_aux)
        WR = PERIM_CO(ngate_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( ngate_core_rf_aux , pwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_core_rf_aux , pwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]


DEVICE nlvt12ll_ckt_rf_mis ngate_core_lvt_rf_mis nsdrfd(DRN) ngate_core_lvt_rf_mis(GATE) nsd(SRC) pwell(BULK) <ngate_core_lvt_rf_aux> <nsdrf> <nsdrf_sab> <pwell_wpe_core> <sab_core> <s_core> <nsdrf_sd>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(ngate_core_lvt_rf_aux)
        WR = PERIM_CO(ngate_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( ngate_core_lvt_rf_aux , pwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_core_lvt_rf_aux , pwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE nlvt12ll_ckt_rf_mis ngate_core_lvt_rf_mis nsdrfd(DRN) ngate_core_lvt_rf_mis(GATE) nsd(SRC) pwell(BULK) <ngate_core_lvt_rf_aux> <nsdrf> <nsdrf_sab> <pwell_wpe_core> <sab_core> <s_core> 
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(ngate_core_lvt_rf_aux)
        WR = PERIM_CO(ngate_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( ngate_core_lvt_rf_aux , pwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_core_lvt_rf_aux , pwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE nlvt12ll_ckt_rf_sdc_mis ngate_core_lvt_rf_sdc_mis nsdrfd(DRN) ngate_core_lvt_rf_sdc_mis(GATE) nsd(SRC) pwell(BULK) <ngate_core_lvt_rf_aux> <nsdrf> <nsdrf_sab> <pwell_wpe_core> <sab_core> <s_core> <nsdrf_sd>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(ngate_core_lvt_rf_aux)
        WR = PERIM_CO(ngate_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( ngate_core_lvt_rf_aux , pwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_core_lvt_rf_aux , pwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE nlvt12ll_ckt_rf_sdc_mis ngate_core_lvt_rf_sdc_mis nsdrfd(DRN) ngate_core_lvt_rf_sdc_mis(GATE) nsd(SRC) pwell(BULK) <ngate_core_lvt_rf_aux> <nsdrf> <nsdrf_sab> <pwell_wpe_core> <sab_core> <s_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(ngate_core_lvt_rf_aux)
        WR = PERIM_CO(ngate_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( ngate_core_lvt_rf_aux , pwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_core_lvt_rf_aux , pwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE dnw12ll_ckt_rf_mis dnw_core_rf_mis nsdrfd(DRN) dnw_core_rf_mis(GATE) nsd(SRC) rwell(BULK) <nsdrf> <dnw_core_rf_aux> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(dnw_core_rf_aux)
        WR = PERIM_CO(dnw_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE dnw12ll_ckt_rf_mis dnw_core_rf_mis nsdrfd(DRN) dnw_core_rf_mis(GATE) nsd(SRC) rwell(BULK) <nsdrf> <dnw_core_rf_aux> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(dnw_core_rf_aux)
        WR = PERIM_CO(dnw_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE dnw12ll_ckt_rf_6t_mis dnw_core_rf_6t_mis nsdrfd(DRN) dnw_core_rf_6t_mis_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <nsdrf> <dnw_core_rf_aux> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(dnw_core_rf_aux)
        WR = PERIM_CO(dnw_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        MR  = 1
        ]

DEVICE dnw12ll_ckt_rf_6t_mis dnw_core_rf_6t_mis nsdrfd(DRN) dnw_core_rf_6t_mis_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <nsdrf> <dnw_core_rf_aux> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(dnw_core_rf_aux)
        WR = PERIM_CO(dnw_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        MR  = 1
        ]

DEVICE dnw12ll_ckt_rf_sdc_mis dnw_core_rf_sdc_mis nsdrfd(DRN) dnw_core_rf_sdc_mis(GATE) nsd(SRC) rwell(BULK) <nsdrf> <dnw_core_rf_aux> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(dnw_core_rf_aux)
        WR = PERIM_CO(dnw_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE dnw12ll_ckt_rf_sdc_mis dnw_core_rf_sdc_mis nsdrfd(DRN) dnw_core_rf_sdc_mis(GATE) nsd(SRC) rwell(BULK) <nsdrf> <dnw_core_rf_aux> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(dnw_core_rf_aux)
        WR = PERIM_CO(dnw_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE dnw12ll_ckt_rf_6t_sdc_mis dnw_core_rf_6t_sdc_mis nsdrfd(DRN) dnw_core_rf_6t_sdc_mis_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <nsdrf> <dnw_core_rf_aux> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(dnw_core_rf_aux)
        WR = PERIM_CO(dnw_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        MR  = 1
        ]

DEVICE dnw12ll_ckt_rf_6t_sdc_mis dnw_core_rf_6t_sdc_mis nsdrfd(DRN) dnw_core_rf_6t_sdc_mis_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <nsdrf> <dnw_core_rf_aux> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(dnw_core_rf_aux)
        WR = PERIM_CO(dnw_core_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_rf_aux , rwell_wpe_core , nsd , 2.000 )
        MR  = 1
        ]

DEVICE dnwlvt12ll_ckt_rf_mis dnw_core_lvt_rf_mis nsdrfd(DRN) dnw_core_lvt_rf_mis(GATE) nsd(SRC) rwell(BULK) <nsdrf> <dnw_core_lvt_rf_aux> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(dnw_core_lvt_rf_aux)
        WR = PERIM_CO(dnw_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_core_lvt_rf_aux , rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_lvt_rf_aux , rwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE dnwlvt12ll_ckt_rf_mis dnw_core_lvt_rf_mis nsdrfd(DRN) dnw_core_lvt_rf_mis(GATE) nsd(SRC) rwell(BULK) <nsdrf> <dnw_core_lvt_rf_aux> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(dnw_core_lvt_rf_aux)
        WR = PERIM_CO(dnw_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_core_lvt_rf_aux , rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_lvt_rf_aux , rwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE dnwlvt12ll_ckt_rf_6t_mis dnw_core_lvt_rf_6t_mis nsdrfd(DRN) dnw_core_lvt_rf_6t_mis_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <nsdrf> <dnw_core_lvt_rf_aux> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(dnw_core_lvt_rf_aux)
        WR = PERIM_CO(dnw_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_core_lvt_rf_aux , rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_lvt_rf_aux , rwell_wpe_core , nsd , 2.000 )
        MR  = 1
        ]

DEVICE dnwlvt12ll_ckt_rf_6t_mis dnw_core_lvt_rf_6t_mis nsdrfd(DRN) dnw_core_lvt_rf_6t_mis_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <nsdrf> <dnw_core_lvt_rf_aux> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(dnw_core_lvt_rf_aux)
        WR = PERIM_CO(dnw_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_core_lvt_rf_aux , rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_lvt_rf_aux , rwell_wpe_core , nsd , 2.000 )
        MR  = 1
        ]

DEVICE dnwlvt12ll_ckt_rf_sdc_mis dnw_core_lvt_rf_sdc_mis nsdrfd(DRN) dnw_core_lvt_rf_sdc_mis(GATE) nsd(SRC) rwell(BULK) <nsdrf> <dnw_core_lvt_rf_aux> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(dnw_core_lvt_rf_aux)
        WR = PERIM_CO(dnw_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_core_lvt_rf_aux , rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_lvt_rf_aux , rwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]


DEVICE dnwlvt12ll_ckt_rf_sdc_mis dnw_core_lvt_rf_sdc_mis nsdrfd(DRN) dnw_core_lvt_rf_sdc_mis(GATE) nsd(SRC) rwell(BULK) <nsdrf> <dnw_core_lvt_rf_aux> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(dnw_core_lvt_rf_aux)
        WR = PERIM_CO(dnw_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_core_lvt_rf_aux , rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_lvt_rf_aux , rwell_wpe_core , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE dnwlvt12ll_ckt_rf_6t_sdc_mis dnw_core_lvt_rf_6t_sdc_mis nsdrfd(DRN) dnw_core_lvt_rf_6t_sdc_mis_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB)  <nsdrf> <dnw_core_lvt_rf_aux> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(dnw_core_lvt_rf_aux)
        WR = PERIM_CO(dnw_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_core_lvt_rf_aux , rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_lvt_rf_aux , rwell_wpe_core , nsd , 2.000 )
        MR  = 1
        ]

DEVICE dnwlvt12ll_ckt_rf_6t_sdc_mis dnw_core_lvt_rf_6t_sdc_mis nsdrfd(DRN) dnw_core_lvt_rf_6t_sdc_mis_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB)  <nsdrf> <dnw_core_lvt_rf_aux> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(dnw_core_lvt_rf_aux)
        WR = PERIM_CO(dnw_core_lvt_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_core_lvt_rf_aux , rwell_wpe_core , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_core_lvt_rf_aux , rwell_wpe_core , nsd , 2.000 )
        MR  = 1
        ]

DEVICE p12ll_ckt_rf_mis pgate_core_rf_mis psdrfd(DRN) pgate_core_rf_mis(GATE) psd(SRC) nwell(BULK) <pgate_core_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(pgate_core_rf_aux)
        WR = PERIM_CO(pgate_core_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_core_rf_aux , nwell_wpe_core ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_rf_aux , nwell_wpe_core ,psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE p12ll_ckt_rf_mis pgate_core_rf_mis psdrfd(DRN) pgate_core_rf_mis(GATE) psd(SRC) nwell(BULK) <pgate_core_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(pgate_core_rf_aux)
        WR = PERIM_CO(pgate_core_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_core_rf_aux , nwell_wpe_core ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_rf_aux , nwell_wpe_core ,psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE p12ll_ckt_rf_5t_mis pgate_core_rf_5t_mis psdrfd(DRN) pgate_core_rf_5t_mis_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_core_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(pgate_core_rf_aux)
        WR = PERIM_CO(pgate_core_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_core_rf_aux , nwell_wpe_core ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_rf_aux , nwell_wpe_core ,psd , 2.000 )
        MR  = 1
        ]

DEVICE p12ll_ckt_rf_5t_mis pgate_core_rf_5t_mis psdrfd(DRN) pgate_core_rf_5t_mis_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_core_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(pgate_core_rf_aux)
        WR = PERIM_CO(pgate_core_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_core_rf_aux , nwell_wpe_core ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_rf_aux , nwell_wpe_core ,psd , 2.000 )
        MR  = 1
        ]

DEVICE p12ll_ckt_rf_sdc_mis pgate_core_rf_sdc_mis psdrfd(DRN) pgate_core_rf_sdc_mis(GATE) psd(SRC) nwell(BULK) <pgate_core_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(pgate_core_rf_aux)
        WR = PERIM_CO(pgate_core_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_core_rf_aux , nwell_wpe_core ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_rf_aux , nwell_wpe_core ,psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE p12ll_ckt_rf_sdc_mis pgate_core_rf_sdc_mis psdrfd(DRN) pgate_core_rf_sdc_mis(GATE) psd(SRC) nwell(BULK) <pgate_core_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(pgate_core_rf_aux)
        WR = PERIM_CO(pgate_core_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_core_rf_aux , nwell_wpe_core ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_rf_aux , nwell_wpe_core ,psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE p12ll_ckt_rf_5t_sdc_mis pgate_core_rf_5t_sdc_mis psdrfd(DRN) pgate_core_rf_5t_sdc_mis_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_core_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(pgate_core_rf_aux)
        WR = PERIM_CO(pgate_core_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_core_rf_aux , nwell_wpe_core ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_rf_aux , nwell_wpe_core ,psd , 2.000 )
        MR  = 1
        ]

DEVICE p12ll_ckt_rf_5t_sdc_mis pgate_core_rf_5t_sdc_mis psdrfd(DRN) pgate_core_rf_5t_sdc_mis_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_core_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(pgate_core_rf_aux)
        WR = PERIM_CO(pgate_core_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_core_rf_aux , nwell_wpe_core ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_rf_aux , nwell_wpe_core ,psd , 2.000 )
        MR  = 1
        ]

DEVICE plvt12ll_ckt_rf_mis pgate_core_lvt_rf_mis psdrfd(DRN) pgate_core_lvt_rf_mis(GATE) psd(SRC) nwell(BULK) <pgate_core_lvt_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(pgate_core_lvt_rf_aux)
        WR = PERIM_CO(pgate_core_lvt_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_core_lvt_rf_aux , nwell_wpe_core ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_lvt_rf_aux , nwell_wpe_core ,psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE plvt12ll_ckt_rf_mis pgate_core_lvt_rf_mis psdrfd(DRN) pgate_core_lvt_rf_mis(GATE) psd(SRC) nwell(BULK) <pgate_core_lvt_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(pgate_core_lvt_rf_aux)
        WR = PERIM_CO(pgate_core_lvt_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_core_lvt_rf_aux , nwell_wpe_core ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_lvt_rf_aux , nwell_wpe_core ,psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE plvt12ll_ckt_rf_5t_mis pgate_core_lvt_rf_5t_mis psdrfd(DRN) pgate_core_lvt_rf_5t_mis_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_core_lvt_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(pgate_core_lvt_rf_aux)
        WR = PERIM_CO(pgate_core_lvt_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_core_lvt_rf_aux , nwell_wpe_core ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_lvt_rf_aux , nwell_wpe_core ,psd , 2.000 )
        MR  = 1
        ]

DEVICE plvt12ll_ckt_rf_5t_mis pgate_core_lvt_rf_5t_mis psdrfd(DRN) pgate_core_lvt_rf_5t_mis_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_core_lvt_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(pgate_core_lvt_rf_aux)
        WR = PERIM_CO(pgate_core_lvt_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_core_lvt_rf_aux , nwell_wpe_core ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_lvt_rf_aux , nwell_wpe_core ,psd , 2.000 )
        MR  = 1
        ]

DEVICE plvt12ll_ckt_rf_sdc_mis pgate_core_lvt_rf_sdc_mis psdrfd(DRN) pgate_core_lvt_rf_sdc_mis(GATE) psd(SRC) nwell(BULK) <pgate_core_lvt_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(pgate_core_lvt_rf_aux)
        WR = PERIM_CO(pgate_core_lvt_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_core_lvt_rf_aux , nwell_wpe_core ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_lvt_rf_aux , nwell_wpe_core ,psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE plvt12ll_ckt_rf_sdc_mis pgate_core_lvt_rf_sdc_mis psdrfd(DRN) pgate_core_lvt_rf_sdc_mis(GATE) psd(SRC) nwell(BULK) <pgate_core_lvt_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(pgate_core_lvt_rf_aux)
        WR = PERIM_CO(pgate_core_lvt_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_core_lvt_rf_aux , nwell_wpe_core ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_lvt_rf_aux , nwell_wpe_core ,psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE plvt12ll_ckt_rf_5t_sdc_mis pgate_core_lvt_rf_5t_sdc_mis psdrfd(DRN) pgate_core_lvt_rf_5t_sdc_mis_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_core_lvt_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(pgate_core_lvt_rf_aux)
        WR = PERIM_CO(pgate_core_lvt_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_core_lvt_rf_aux , nwell_wpe_core ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_lvt_rf_aux , nwell_wpe_core ,psd , 2.000 )
        MR  = 1 
        ]

DEVICE plvt12ll_ckt_rf_5t_sdc_mis pgate_core_lvt_rf_5t_sdc_mis psdrfd(DRN) pgate_core_lvt_rf_5t_sdc_mis_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_core_lvt_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sab> <nwell_wpe_core>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(pgate_core_lvt_rf_aux)
        WR = PERIM_CO(pgate_core_lvt_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_core_lvt_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_core_lvt_rf_aux , nwell_wpe_core ,psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_core_lvt_rf_aux , nwell_wpe_core ,psd , 2.000 )
        MR  = 1
        ]

#IFDEF IO 1825

DEVICE n25ll_ckt_rf_mis ngate_IO2_rf_mis nsdrfd(DRN) ngate_IO2_rf_mis(GATE) nsd(SRC) pwell(BULK) <ngate_IO2_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <pwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(ngate_IO2_rf_aux)
        WR = PERIM_CO(ngate_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( ngate_IO2_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_IO2_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE n25ll_ckt_rf_mis ngate_IO2_rf_mis nsdrfd(DRN) ngate_IO2_rf_mis(GATE) nsd(SRC) pwell(BULK) <ngate_IO2_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sab> <pwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(ngate_IO2_rf_aux)
        WR = PERIM_CO(ngate_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( ngate_IO2_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_IO2_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE n25llod33_ckt_rf_mis ngate_IO2_over_rf_mis nsdrfd(DRN) ngate_IO2_over_rf_mis(GATE) nsd(SRC) pwell(BULK) <ngate_IO2_over_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <pwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(ngate_IO2_over_rf_aux)
        WR = PERIM_CO(ngate_IO2_over_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_IO2_over_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( ngate_IO2_over_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_IO2_over_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE n25llod33_ckt_rf_mis ngate_IO2_over_rf_mis nsdrfd(DRN) ngate_IO2_over_rf_mis(GATE) nsd(SRC) pwell(BULK) <ngate_IO2_over_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sab> <pwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(ngate_IO2_over_rf_aux)
        WR = PERIM_CO(ngate_IO2_over_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_IO2_over_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( ngate_IO2_over_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_IO2_over_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE n25llud18_ckt_rf_mis ngate_IO2_under_rf_mis nsdrfd(DRN) ngate_IO2_under_rf_mis(GATE) nsd(SRC) pwell(BULK) <ngate_IO2_under_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <pwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(ngate_IO2_under_rf_aux)
        WR = PERIM_CO(ngate_IO2_under_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_IO2_under_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( ngate_IO2_under_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_IO2_under_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE n25llud18_ckt_rf_mis ngate_IO2_under_rf_mis nsdrfd(DRN) ngate_IO2_under_rf_mis(GATE) nsd(SRC) pwell(BULK) <ngate_IO2_under_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sab> <pwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(ngate_IO2_under_rf_aux)
        WR = PERIM_CO(ngate_IO2_under_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_IO2_under_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( ngate_IO2_under_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_IO2_under_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]


DEVICE n25ll_ckt_rf_sdc_mis ngate_IO2_rf_sdc_mis nsdrfd(DRN) ngate_IO2_rf_sdc_mis(GATE) nsd(SRC) pwell(BULK) <ngate_IO2_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <pwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(ngate_IO2_rf_aux)
        WR = PERIM_CO(ngate_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( ngate_IO2_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_IO2_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE n25ll_ckt_rf_sdc_mis ngate_IO2_rf_sdc_mis nsdrfd(DRN) ngate_IO2_rf_sdc_mis(GATE) nsd(SRC) pwell(BULK) <ngate_IO2_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sab> <pwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(ngate_IO2_rf_aux)
        WR = PERIM_CO(ngate_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(ngate_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( ngate_IO2_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( ngate_IO2_rf_aux , pwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]



DEVICE dnw25ll_ckt_rf_mis dnw_IO2_rf_mis nsdrfd(DRN) dnw_IO2_rf_mis(GATE) nsd(SRC) rwell(BULK) <dnw_IO2_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(dnw_IO2_rf_aux)
        WR = PERIM_CO(dnw_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]


DEVICE dnw25ll_ckt_rf_mis dnw_IO2_rf_mis nsdrfd(DRN) dnw_IO2_rf_mis(GATE) nsd(SRC) rwell(BULK) <dnw_IO2_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(dnw_IO2_rf_aux)
        WR = PERIM_CO(dnw_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE dnw25ll_ckt_rf_6t_mis dnw_IO2_rf_6t_mis nsdrfd(DRN) dnw_IO2_rf_6t_mis_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <dnw_IO2_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(dnw_IO2_rf_aux)
        WR = PERIM_CO(dnw_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        MR  = 1
        ]

DEVICE dnw25ll_ckt_rf_6t_mis dnw_IO2_rf_6t_mis nsdrfd(DRN) dnw_IO2_rf_6t_mis_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <dnw_IO2_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(dnw_IO2_rf_aux)
        WR = PERIM_CO(dnw_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        MR  = 1
        ]

DEVICE dnw25llod33_ckt_rf_mis dnw_IO2_over_rf_mis nsdrfd(DRN) dnw_IO2_over_rf_mis(GATE) nsd(SRC) rwell(BULK) <dnw_IO2_over_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(dnw_IO2_over_rf_aux)
        WR = PERIM_CO(dnw_IO2_over_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_over_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_IO2_over_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_over_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE dnw25llod33_ckt_rf_mis dnw_IO2_over_rf_mis nsdrfd(DRN) dnw_IO2_over_rf_mis(GATE) nsd(SRC) rwell(BULK) <dnw_IO2_over_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(dnw_IO2_over_rf_aux)
        WR = PERIM_CO(dnw_IO2_over_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_over_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_IO2_over_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_over_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE dnw25llod33_ckt_rf_6t_mis dnw_IO2_over_rf_6t_mis nsdrfd(DRN) dnw_IO2_over_rf_6t_mis_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <dnw_IO2_over_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(dnw_IO2_over_rf_aux)
        WR = PERIM_CO(dnw_IO2_over_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_over_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_IO2_over_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_over_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        MR  = 1
        ]

DEVICE dnw25llod33_ckt_rf_6t_mis dnw_IO2_over_rf_6t_mis nsdrfd(DRN) dnw_IO2_over_rf_6t_mis_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <dnw_IO2_over_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(dnw_IO2_over_rf_aux)
        WR = PERIM_CO(dnw_IO2_over_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_over_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_IO2_over_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_over_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        MR  = 1
        ]

DEVICE dnw25llud18_ckt_rf_mis dnw_IO2_under_rf_mis nsdrfd(DRN) dnw_IO2_under_rf_mis(GATE) nsd(SRC) rwell(BULK) <dnw_IO2_under_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(dnw_IO2_under_rf_aux)
        WR = PERIM_CO(dnw_IO2_under_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_under_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_IO2_under_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_under_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE dnw25llud18_ckt_rf_mis dnw_IO2_under_rf_mis nsdrfd(DRN) dnw_IO2_under_rf_mis(GATE) nsd(SRC) rwell(BULK) <dnw_IO2_under_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(dnw_IO2_under_rf_aux)
        WR = PERIM_CO(dnw_IO2_under_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_under_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_IO2_under_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_under_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE dnw25llud18_ckt_rf_6t_mis dnw_IO2_under_rf_6t_mis nsdrfd(DRN) dnw_IO2_under_rf_6t_mis_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <dnw_IO2_under_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(dnw_IO2_under_rf_aux)
        WR = PERIM_CO(dnw_IO2_under_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_under_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_IO2_under_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_under_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        MR  = 1
        ]

DEVICE dnw25llud18_ckt_rf_6t_mis dnw_IO2_under_rf_6t_mis nsdrfd(DRN) dnw_IO2_under_rf_6t_mis_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <dnw_IO2_under_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(dnw_IO2_under_rf_aux)
        WR = PERIM_CO(dnw_IO2_under_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_under_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_IO2_under_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_under_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        MR  = 1
        ]


DEVICE dnw25ll_ckt_rf_sdc_mis dnw_IO2_rf_sdc_mis nsdrfd(DRN) dnw_IO2_rf_sdc_mis(GATE) nsd(SRC) rwell(BULK) <dnw_IO2_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(dnw_IO2_rf_aux)
        WR = PERIM_CO(dnw_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE dnw25ll_ckt_rf_sdc_mis dnw_IO2_rf_sdc_mis nsdrfd(DRN) dnw_IO2_rf_sdc_mis(GATE) nsd(SRC) rwell(BULK) <dnw_IO2_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(dnw_IO2_rf_aux)
        WR = PERIM_CO(dnw_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        SCAR = TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR = TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR = TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE dnw25ll_ckt_rf_6t_sdc_mis dnw_IO2_rf_6t_sdc_mis nsdrfd(DRN) dnw_IO2_rf_6t_sdc_mis_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <dnw_IO2_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sd> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(dnw_IO2_rf_aux)
        WR = PERIM_CO(dnw_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = (PERIMETER(nsdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        MR  = 1
        ]

DEVICE dnw25ll_ckt_rf_6t_sdc_mis dnw_IO2_rf_6t_sdc_mis nsdrfd(DRN) dnw_IO2_rf_6t_sdc_mis_aux(GATE) nsd(SRC) rwell(BULK) dnwell(DNW) bulk_all(PSUB) <dnw_IO2_rf_aux> <nsdrf> <sab_core> <s_core> <nsdrf_sab> <rwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(dnw_IO2_rf_aux)
        WR = PERIM_CO(dnw_IO2_rf_aux,nsdrf)/(2*NF)
        LR = AREA(dnw_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core,s_core,nsdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        PER = ENC_PER_MUL ( dnw_IO2_rf_aux , rwell_wpe_IO2 , nsd , 2.000 )
        MR  = 1
        ]

DEVICE p25ll_ckt_rf_mis pgate_IO2_rf_mis psdrfd(DRN) pgate_IO2_rf_mis(GATE) psd(SRC) nwell(BULK) <pgate_IO2_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(pgate_IO2_rf_aux)
        WR = PERIM_CO(pgate_IO2_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE p25ll_ckt_rf_mis pgate_IO2_rf_mis psdrfd(DRN) pgate_IO2_rf_mis(GATE) psd(SRC) nwell(BULK) <pgate_IO2_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sab> <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(pgate_IO2_rf_aux)
        WR = PERIM_CO(pgate_IO2_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE p25ll_ckt_rf_5t_mis pgate_IO2_rf_5t_mis psdrfd(DRN) pgate_IO2_rf_5t_mis_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_IO2_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(pgate_IO2_rf_aux)
        WR = PERIM_CO(pgate_IO2_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        MR  = 1
        ]

DEVICE p25ll_ckt_rf_5t_mis pgate_IO2_rf_5t_mis psdrfd(DRN) pgate_IO2_rf_5t_mis_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_IO2_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sab>  <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(pgate_IO2_rf_aux)
        WR = PERIM_CO(pgate_IO2_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        MR  = 1
        ]

DEVICE p25llod33_ckt_rf_mis pgate_IO2_over_rf_mis psdrfd(DRN) pgate_IO2_over_rf_mis(GATE) psd(SRC) nwell(BULK) <pgate_IO2_over_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(pgate_IO2_over_rf_aux)
        WR = PERIM_CO(pgate_IO2_over_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_over_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_IO2_over_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_over_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE p25llod33_ckt_rf_mis pgate_IO2_over_rf_mis psdrfd(DRN) pgate_IO2_over_rf_mis(GATE) psd(SRC) nwell(BULK) <pgate_IO2_over_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sab> <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(pgate_IO2_over_rf_aux)
        WR = PERIM_CO(pgate_IO2_over_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_over_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_IO2_over_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_over_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE p25llod33_ckt_rf_5t_mis pgate_IO2_over_rf_5t_mis psdrfd(DRN) pgate_IO2_over_rf_5t_mis_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_IO2_over_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(pgate_IO2_over_rf_aux)
        WR = PERIM_CO(pgate_IO2_over_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_over_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_IO2_over_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_over_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        MR  = 1
        ]

DEVICE p25llod33_ckt_rf_5t_mis pgate_IO2_over_rf_5t_mis psdrfd(DRN) pgate_IO2_over_rf_5t_mis_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_IO2_over_rf_aux> <psdrf> <sab_core_p> <s_core_p>  <psdrf_sab> <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(pgate_IO2_over_rf_aux)
        WR = PERIM_CO(pgate_IO2_over_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_over_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_IO2_over_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_over_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        MR  = 1
        ]

DEVICE p25llud18_ckt_rf_mis pgate_IO2_under_rf_mis psdrfd(DRN) pgate_IO2_under_rf_mis(GATE) psd(SRC) nwell(BULK) <pgate_IO2_under_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(pgate_IO2_under_rf_aux)
        WR = PERIM_CO(pgate_IO2_under_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_under_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_IO2_under_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_under_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE p25llud18_ckt_rf_mis pgate_IO2_under_rf_mis psdrfd(DRN) pgate_IO2_under_rf_mis(GATE) psd(SRC) nwell(BULK) <pgate_IO2_under_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sab> <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(pgate_IO2_under_rf_aux)
        WR = PERIM_CO(pgate_IO2_under_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_under_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_IO2_under_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_under_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE p25llud18_ckt_rf_5t_mis pgate_IO2_under_rf_5t_mis psdrfd(DRN) pgate_IO2_under_rf_5t_mis_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_IO2_under_rf_aux> <psdrf> <sab_core_p> <s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(pgate_IO2_under_rf_aux)
        WR = PERIM_CO(pgate_IO2_under_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_under_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_IO2_under_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_under_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        MR  = 1
        ]

DEVICE p25llud18_ckt_rf_5t_mis pgate_IO2_under_rf_5t_mis psdrfd(DRN) pgate_IO2_under_rf_5t_mis_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_IO2_under_rf_aux> <psdrf> <sab_core_p> <s_core_p>  <psdrf_sab> <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(pgate_IO2_under_rf_aux)
        WR = PERIM_CO(pgate_IO2_under_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_under_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_IO2_under_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_under_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        MR  = 1
        ]


DEVICE p25ll_ckt_rf_sdc_mis pgate_IO2_rf_sdc_mis psdrfd(DRN) pgate_IO2_rf_sdc_mis(GATE) psd(SRC) nwell(BULK) <pgate_IO2_rf_aux> <psdrf> <sab_core_p><s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(pgate_IO2_rf_aux)
        WR = PERIM_CO(pgate_IO2_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE p25ll_ckt_rf_sdc_mis pgate_IO2_rf_sdc_mis psdrfd(DRN) pgate_IO2_rf_sdc_mis(GATE) psd(SRC) nwell(BULK) <pgate_IO2_rf_aux> <psdrf> <sab_core_p><s_core_p> <psdrf_sab> <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,SCAR,SCBR,SCCR,MR
        NF = COUNT(pgate_IO2_rf_aux)
        WR = PERIM_CO(pgate_IO2_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        SDR = 0
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        SCAR= TVF_NUM_FUN( "calc_sca_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCBR= TVF_NUM_FUN( "calc_scb_multi", "device_function", PER, PAR, WR, LR, 2.000)
        SCCR= TVF_NUM_FUN( "calc_scc_multi", "device_function", PER, PAR, WR, LR, 2.000)
        MR  = 1
        ]

DEVICE p25ll_ckt_rf_5t_sdc_mis pgate_IO2_rf_5t_sdc_mis psdrfd(DRN) pgate_IO2_rf_5t_sdc_mis_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_IO2_rf_aux> <psdrf> <sab_core_p><s_core_p> <psdrf_sd> <psdrf_sab> <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(pgate_IO2_rf_aux)
        WR = PERIM_CO(pgate_IO2_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = (PERIMETER(psdrf_sd)/((NF-1)*2)) - WR
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        MR  = 1
        ]

DEVICE p25ll_ckt_rf_5t_sdc_mis pgate_IO2_rf_5t_sdc_mis psdrfd(DRN) pgate_IO2_rf_5t_sdc_mis_aux(GATE) psd(SRC) nwell(BULK) bulk_all(PSUB) <pgate_IO2_rf_aux> <psdrf> <sab_core_p><s_core_p> <psdrf_sab> <nwell_wpe_IO2>
        [ PROPERTY LR,WR,NF,SAR,SBR,SDR,mismod,MR
        NF = COUNT(pgate_IO2_rf_aux)
        WR = PERIM_CO(pgate_IO2_rf_aux,psdrf)/(2*NF)
        LR = AREA(pgate_IO2_rf_aux)/(WR*NF)
        S   = ENC_PER(sab_core_p,s_core_p,psdrf_sab,5)
        SDR = 0
        SAR = SUM( s::a)
        SBR = SUM( s::b)
        #IFDEF RF_MOS_MIS_MODE 0
         mismod = 0
        #ELSE
         #IFDEF RF_MOS_MIS_MODE 1
          mismod = 1
         #ENDIF
        #ENDIF
        PAR = ENC_PAR_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        PER = ENC_PER_MUL ( pgate_IO2_rf_aux , nwell_wpe_IO2 , psd , 2.000 )
        MR  = 1
        ]

#ENDIF
#ENDIF


////////////////////////Define BJT XRC///////////////////////////////
#IFDEF RC_RUN TRUE
DEVICE Q(pnp12a100ll) PNPCOREA100 pnpcoll nwell PNPCOREA100 CMACRO BJT_PRO PNPCOREA100
DEVICE Q(pnp12a100ll_sh) PNPCOREA100_sh pnpcoll nwell PNPCOREA100_sh CMACRO BJT_PRO PNPCOREA100_sh
DEVICE Q(pnp12a25ll) PNPCOREA25 pnpcoll nwell PNPCOREA25 CMACRO BJT_PRO PNPCOREA25
DEVICE Q(pnp12a25ll_sh) PNPCOREA25_sh pnpcoll nwell PNPCOREA25_sh CMACRO BJT_PRO PNPCOREA25_sh
DEVICE Q(pnp12a4ll) PNPCOREA4 pnpcoll nwell PNPCOREA4 CMACRO BJT_PRO PNPCOREA4
DEVICE Q(pnp12a4ll_sh) PNPCOREA4_sh pnpcoll nwell PNPCOREA4_sh CMACRO BJT_PRO PNPCOREA4_sh
DEVICE Q(pnp18a100ll) PNPIO1A100 pnpcoll nwell PNPIO1A100 CMACRO BJT_PRO PNPIO1A100
DEVICE Q(pnp18a100ll_sh) PNPIO1A100_sh pnpcoll nwell PNPIO1A100_sh CMACRO BJT_PRO PNPIO1A100_sh
DEVICE Q(pnp18a25ll) PNPIO1A25 pnpcoll nwell PNPIO1A25 CMACRO BJT_PRO PNPIO1A25
DEVICE Q(pnp18a25ll_sh) PNPIO1A25_sh pnpcoll nwell PNPIO1A25_sh CMACRO BJT_PRO PNPIO1A25_sh
DEVICE Q(pnp18a4ll) PNPIO1A4 pnpcoll nwell PNPIO1A4 CMACRO BJT_PRO PNPIO1A4
DEVICE Q(pnp18a4ll_sh) PNPIO1A4_sh pnpcoll nwell PNPIO1A4_sh CMACRO BJT_PRO PNPIO1A4_sh
DEVICE Q(npn12a4ll) NPNCOREA4 dnwell pwell NPNCOREA4 bulk_all CMACRO BJT_PRO NPNCOREA4
DEVICE Q(npn12a4ll_sh) NPNCOREA4_sh dnwell pwell NPNCOREA4_sh bulk_all CMACRO BJT_PRO NPNCOREA4_sh
DEVICE Q(npn12a25ll) NPNCOREA25 dnwell pwell NPNCOREA25 bulk_all CMACRO BJT_PRO NPNCOREA25
DEVICE Q(npn12a25ll_sh) NPNCOREA25_sh dnwell pwell NPNCOREA25_sh bulk_all CMACRO BJT_PRO NPNCOREA25_sh
DEVICE Q(npn12a100ll) NPNCOREA100 dnwell pwell NPNCOREA100 bulk_all CMACRO BJT_PRO NPNCOREA100
DEVICE Q(npn12a100ll_sh) NPNCOREA100_sh dnwell pwell NPNCOREA100_sh bulk_all CMACRO BJT_PRO NPNCOREA100_sh
DEVICE Q(npn18a4ll) NPNIO1A4 dnwell pwell NPNIO1A4 bulk_all CMACRO BJT_PRO NPNIO1A4
DEVICE Q(npn18a4ll_sh) NPNIO1A4_sh dnwell pwell NPNIO1A4_sh bulk_all CMACRO BJT_PRO NPNIO1A4_sh
DEVICE Q(npn18a25ll) NPNIO1A25 dnwell pwell NPNIO1A25 bulk_all CMACRO BJT_PRO NPNIO1A25
DEVICE Q(npn18a25ll_sh) NPNIO1A25_sh dnwell pwell NPNIO1A25_sh bulk_all CMACRO BJT_PRO NPNIO1A25_sh
DEVICE Q(npn18a100ll) NPNIO1A100 dnwell pwell NPNIO1A100 bulk_all CMACRO BJT_PRO NPNIO1A100
DEVICE Q(npn18a100ll_sh) NPNIO1A100_sh dnwell pwell NPNIO1A100_sh bulk_all CMACRO BJT_PRO NPNIO1A100_sh

#IFDEF BJT_MIS_MODE 1
DEVICE pnp12a100ll_mis_ckt PNPCOREA100_mis pnpcoll(COLL) nwell(BASE) PNPCOREA100_mis(EMIT) CMACRO BJT_MIS_ON PNPCOREA100_mis
DEVICE pnp12a100ll_sh_mis_ckt PNPCOREA100_mis_sh pnpcoll(COLL) nwell(BASE) PNPCOREA100_mis_sh(EMIT) CMACRO BJT_MIS_ON PNPCOREA100_mis_sh
DEVICE pnp12a25ll_mis_ckt PNPCOREA25_mis pnpcoll(COLL) nwell(BASE) PNPCOREA25_mis(EMIT) CMACRO BJT_MIS_ON PNPCOREA25_mis
DEVICE pnp12a25ll_sh_mis_ckt PNPCOREA25_mis_sh pnpcoll(COLL) nwell(BASE) PNPCOREA25_mis_sh(EMIT) CMACRO BJT_MIS_ON PNPCOREA25_mis_sh
DEVICE pnp12a4ll_mis_ckt PNPCOREA4_mis pnpcoll(COLL) nwell(BASE) PNPCOREA4_mis(EMIT) CMACRO BJT_MIS_ON PNPCOREA4_mis
DEVICE pnp12a4ll_sh_mis_ckt PNPCOREA4_mis_sh pnpcoll(COLL) nwell(BASE) PNPCOREA4_mis_sh(EMIT) CMACRO BJT_MIS_ON PNPCOREA4_mis_sh
DEVICE pnp18a100ll_mis_ckt PNPIO1A100_mis pnpcoll(COLL) nwell(BASE) PNPIO1A100_mis(EMIT) CMACRO BJT_MIS_ON PNPIO1A100_mis
DEVICE pnp18a100ll_sh_mis_ckt PNPIO1A100_mis_sh pnpcoll(COLL) nwell(BASE) PNPIO1A100_mis_sh(EMIT) CMACRO BJT_MIS_ON PNPIO1A100_mis_sh
DEVICE pnp18a25ll_mis_ckt PNPIO1A25_mis pnpcoll(COLL) nwell(BASE) PNPIO1A25_mis(EMIT) CMACRO BJT_MIS_ON PNPIO1A25_mis
DEVICE pnp18a25ll_sh_mis_ckt PNPIO1A25_mis_sh pnpcoll(COLL) nwell(BASE) PNPIO1A25_mis_sh(EMIT) CMACRO BJT_MIS_ON PNPIO1A25_mis_sh
DEVICE pnp18a4ll_mis_ckt PNPIO1A4_mis pnpcoll(COLL) nwell(BASE) PNPIO1A4_mis(EMIT) CMACRO BJT_MIS_ON PNPIO1A4_mis
DEVICE pnp18a4ll_sh_mis_ckt PNPIO1A4_mis_sh pnpcoll(COLL) nwell(BASE) PNPIO1A4_mis_sh(EMIT) CMACRO BJT_MIS_ON PNPIO1A4_mis_sh
DEVICE npn12a4ll_mis_ckt NPNCOREA4_mis dnwell(COLL) pwell(BASE) NPNCOREA4_mis(EMIT) bulk_all(BULK) CMACRO BJT_MIS_ON NPNCOREA4_mis
DEVICE npn12a4ll_sh_mis_ckt NPNCOREA4_mis_sh dnwell(COLL) pwell(BASE) NPNCOREA4_mis_sh(EMIT) bulk_all(BULK) CMACRO BJT_MIS_ON NPNCOREA4_mis_sh
DEVICE npn12a25ll_mis_ckt NPNCOREA25_mis dnwell(COLL) pwell(BASE) NPNCOREA25_mis(EMIT) bulk_all(BULK) CMACRO BJT_MIS_ON NPNCOREA25_mis
DEVICE npn12a25ll_sh_mis_ckt NPNCOREA25_mis_sh dnwell(COLL) pwell(BASE) NPNCOREA25_mis_sh(EMIT) bulk_all(BULK) CMACRO BJT_MIS_ON NPNCOREA25_mis_sh
DEVICE npn12a100ll_mis_ckt NPNCOREA100_mis dnwell(COLL) pwell(BASE) NPNCOREA100_mis(EMIT) bulk_all(BULK) CMACRO BJT_MIS_ON NPNCOREA100_mis
DEVICE npn12a100ll_sh_mis_ckt NPNCOREA100_mis_sh dnwell(COLL) pwell(BASE) NPNCOREA100_mis_sh(EMIT) bulk_all(BULK) CMACRO BJT_MIS_ON NPNCOREA100_mis_sh
DEVICE npn18a4ll_mis_ckt NPNIO1A4_mis dnwell(COLL) pwell(BASE) NPNIO1A4_mis(EMIT) bulk_all(BULK) CMACRO BJT_MIS_ON NPNIO1A4_mis
DEVICE npn18a4ll_sh_mis_ckt NPNIO1A4_mis_sh dnwell(COLL) pwell(BASE) NPNIO1A4_mis_sh(EMIT) bulk_all(BULK) CMACRO BJT_MIS_ON NPNIO1A4_mis_sh
DEVICE npn18a25ll_mis_ckt NPNIO1A25_mis dnwell(COLL) pwell(BASE) NPNIO1A25_mis(EMIT) bulk_all(BULK) CMACRO BJT_MIS_ON NPNIO1A25_mis
DEVICE npn18a25ll_sh_mis_ckt NPNIO1A25_mis_sh dnwell(COLL) pwell(BASE) NPNIO1A25_mis_sh(EMIT) bulk_all(BULK) CMACRO BJT_MIS_ON NPNIO1A25_mis_sh
DEVICE npn18a100ll_mis_ckt NPNIO1A100_mis dnwell(COLL) pwell(BASE) NPNIO1A100_mis(EMIT) bulk_all(BULK) CMACRO BJT_MIS_ON NPNIO1A100_mis
DEVICE npn18a100ll_sh_mis_ckt NPNIO1A100_mis_sh dnwell(COLL) pwell(BASE) NPNIO1A100_mis_sh(EMIT) bulk_all(BULK) CMACRO BJT_MIS_ON NPNIO1A100_mis_sh
#ELSE
#IFDEF BJT_MIS_MODE 0
DEVICE pnp12a100ll_mis_ckt PNPCOREA100_mis pnpcoll(COLL) nwell(BASE) PNPCOREA100_mis(EMIT) CMACRO BJT_MIS_OFF PNPCOREA100_mis
DEVICE pnp12a100ll_sh_mis_ckt PNPCOREA100_mis_sh pnpcoll(COLL) nwell(BASE) PNPCOREA100_mis_sh(EMIT) CMACRO BJT_MIS_OFF PNPCOREA100_mis_sh
DEVICE pnp12a25ll_mis_ckt PNPCOREA25_mis pnpcoll(COLL) nwell(BASE) PNPCOREA25_mis(EMIT) CMACRO BJT_MIS_OFF PNPCOREA25_mis
DEVICE pnp12a25ll_sh_mis_ckt PNPCOREA25_mis_sh pnpcoll(COLL) nwell(BASE) PNPCOREA25_mis_sh(EMIT) CMACRO BJT_MIS_OFF PNPCOREA25_mis_sh
DEVICE pnp12a4ll_mis_ckt PNPCOREA4_mis pnpcoll(COLL) nwell(BASE) PNPCOREA4_mis(EMIT) CMACRO BJT_MIS_OFF PNPCOREA4_mis
DEVICE pnp12a4ll_sh_mis_ckt PNPCOREA4_mis_sh pnpcoll(COLL) nwell(BASE) PNPCOREA4_mis_sh(EMIT) CMACRO BJT_MIS_OFF PNPCOREA4_mis_sh
DEVICE pnp18a100ll_mis_ckt PNPIO1A100_mis pnpcoll(COLL) nwell(BASE) PNPIO1A100_mis(EMIT) CMACRO BJT_MIS_OFF PNPIO1A100_mis
DEVICE pnp18a100ll_sh_mis_ckt PNPIO1A100_mis_sh pnpcoll(COLL) nwell(BASE) PNPIO1A100_mis_sh(EMIT) CMACRO BJT_MIS_OFF PNPIO1A100_mis_sh
DEVICE pnp18a25ll_mis_ckt PNPIO1A25_mis pnpcoll(COLL) nwell(BASE) PNPIO1A25_mis(EMIT) CMACRO BJT_MIS_OFF PNPIO1A25_mis
DEVICE pnp18a25ll_sh_mis_ckt PNPIO1A25_mis_sh pnpcoll(COLL) nwell(BASE) PNPIO1A25_mis_sh(EMIT) CMACRO BJT_MIS_OFF PNPIO1A25_mis_sh
DEVICE pnp18a4ll_mis_ckt PNPIO1A4_mis pnpcoll(COLL) nwell(BASE) PNPIO1A4_mis(EMIT) CMACRO BJT_MIS_OFF PNPIO1A4_mis
DEVICE pnp18a4ll_sh_mis_ckt PNPIO1A4_mis_sh pnpcoll(COLL) nwell(BASE) PNPIO1A4_mis_sh(EMIT) CMACRO BJT_MIS_OFF PNPIO1A4_mis_sh
DEVICE npn12a4ll_mis_ckt NPNCOREA4_mis dnwell(COLL) pwell(BASE) NPNCOREA4_mis(EMIT) bulk_all(BULK) CMACRO BJT_MIS_OFF NPNCOREA4_mis
DEVICE npn12a4ll_sh_mis_ckt NPNCOREA4_mis_sh dnwell(COLL) pwell(BASE) NPNCOREA4_mis_sh(EMIT) bulk_all(BULK) CMACRO BJT_MIS_OFF NPNCOREA4_mis_sh
DEVICE npn12a25ll_mis_ckt NPNCOREA25_mis dnwell(COLL) pwell(BASE) NPNCOREA25_mis(EMIT) bulk_all(BULK) CMACRO BJT_MIS_OFF NPNCOREA25_mis
DEVICE npn12a25ll_sh_mis_ckt NPNCOREA25_mis_sh dnwell(COLL) pwell(BASE) NPNCOREA25_mis_sh(EMIT) bulk_all(BULK) CMACRO BJT_MIS_OFF NPNCOREA25_mis_sh
DEVICE npn12a100ll_mis_ckt NPNCOREA100_mis dnwell(COLL) pwell(BASE) NPNCOREA100_mis(EMIT) bulk_all(BULK) CMACRO BJT_MIS_OFF NPNCOREA100_mis
DEVICE npn12a100ll_sh_mis_ckt NPNCOREA100_mis_sh dnwell(COLL) pwell(BASE) NPNCOREA100_mis_sh(EMIT) bulk_all(BULK) CMACRO BJT_MIS_OFF NPNCOREA100_mis_sh
DEVICE npn18a4ll_mis_ckt NPNIO1A4_mis dnwell(COLL) pwell(BASE) NPNIO1A4_mis(EMIT) bulk_all(BULK) CMACRO BJT_MIS_OFF NPNIO1A4_mis
DEVICE npn18a4ll_sh_mis_ckt NPNIO1A4_mis_sh dnwell(COLL) pwell(BASE) NPNIO1A4_mis_sh(EMIT) bulk_all(BULK) CMACRO BJT_MIS_OFF NPNIO1A4_mis_sh
DEVICE npn18a25ll_mis_ckt NPNIO1A25_mis dnwell(COLL) pwell(BASE) NPNIO1A25_mis(EMIT) bulk_all(BULK) CMACRO BJT_MIS_OFF NPNIO1A25_mis
DEVICE npn18a25ll_sh_mis_ckt NPNIO1A25_mis_sh dnwell(COLL) pwell(BASE) NPNIO1A25_mis_sh(EMIT) bulk_all(BULK) CMACRO BJT_MIS_OFF NPNIO1A25_mis_sh
DEVICE npn18a100ll_mis_ckt NPNIO1A100_mis dnwell(COLL) pwell(BASE) NPNIO1A100_mis(EMIT) bulk_all(BULK) CMACRO BJT_MIS_OFF NPNIO1A100_mis
DEVICE npn18a100ll_sh_mis_ckt NPNIO1A100_mis_sh dnwell(COLL) pwell(BASE) NPNIO1A100_mis_sh(EMIT) bulk_all(BULK) CMACRO BJT_MIS_OFF NPNIO1A100_mis_sh
#ENDIF
#ENDIF


#IFDEF IO 1825
DEVICE Q(pnp25a100ll) PNPIO2A100 pnpcoll nwell PNPIO2A100 CMACRO BJT_PRO PNPIO2A100
DEVICE Q(pnp25a100ll_sh) PNPIO2A100_sh pnpcoll nwell PNPIO2A100_sh CMACRO BJT_PRO PNPIO2A100_sh
DEVICE Q(pnp25a25ll) PNPIO2A25  pnpcoll nwell PNPIO2A25 CMACRO BJT_PRO PNPIO2A25
DEVICE Q(pnp25a25ll_sh) PNPIO2A25_sh  pnpcoll nwell PNPIO2A25_sh CMACRO BJT_PRO PNPIO2A25_sh
DEVICE Q(pnp25a4ll) PNPIO2A4  pnpcoll nwell PNPIO2A4 CMACRO BJT_PRO PNPIO2A4
DEVICE Q(pnp25a4ll_sh) PNPIO2A4_sh  pnpcoll nwell PNPIO2A4_sh CMACRO BJT_PRO PNPIO2A4_sh
DEVICE Q(npn25a4ll) NPNIO2A4 dnwell pwell NPNIO2A4 bulk_all CMACRO BJT_PRO NPNIO2A4
DEVICE Q(npn25a4ll_sh) NPNIO2A4_sh dnwell pwell NPNIO2A4_sh bulk_all CMACRO BJT_PRO NPNIO2A4_sh
DEVICE Q(npn25a25ll) NPNIO2A25 dnwell pwell NPNIO2A25 bulk_all CMACRO BJT_PRO NPNIO2A25
DEVICE Q(npn25a25ll_sh) NPNIO2A25_sh dnwell pwell NPNIO2A25_sh bulk_all CMACRO BJT_PRO NPNIO2A25_sh
DEVICE Q(npn25a100ll) NPNIO2A100 dnwell pwell NPNIO2A100 bulk_all CMACRO BJT_PRO NPNIO2A100
DEVICE Q(npn25a100ll_sh) NPNIO2A100_sh dnwell pwell NPNIO2A100_sh bulk_all CMACRO BJT_PRO NPNIO2A100_sh

#IFDEF BJT_MIS_MODE 1
DEVICE pnp25a100ll_mis_ckt PNPIO2A100_mis pnpcoll(COLL) nwell(BASE) PNPIO2A100_mis(EMIT) CMACRO BJT_MIS_ON PNPIO2A100_mis
DEVICE pnp25a100ll_sh_mis_ckt PNPIO2A100_mis_sh pnpcoll(COLL) nwell(BASE) PNPIO2A100_mis_sh(EMIT) CMACRO BJT_MIS_ON PNPIO2A100_mis_sh
DEVICE pnp25a25ll_mis_ckt PNPIO2A25_mis  pnpcoll(COLL) nwell(BASE) PNPIO2A25_mis(EMIT) CMACRO BJT_MIS_ON PNPIO2A25_mis
DEVICE pnp25a25ll_sh_mis_ckt PNPIO2A25_mis_sh  pnpcoll(COLL) nwell(BASE) PNPIO2A25_mis_sh(EMIT) CMACRO BJT_MIS_ON PNPIO2A25_mis_sh
DEVICE pnp25a4ll_mis_ckt PNPIO2A4_mis  pnpcoll(COLL) nwell(BASE) PNPIO2A4_mis(EMIT) CMACRO BJT_MIS_ON PNPIO2A4_mis
DEVICE pnp25a4ll_sh_mis_ckt PNPIO2A4_mis_sh  pnpcoll(COLL) nwell(BASE) PNPIO2A4_mis_sh(EMIT) CMACRO BJT_MIS_ON PNPIO2A4_mis_sh
DEVICE npn25a4ll_mis_ckt NPNIO2A4_mis dnwell(COLL) pwell(BASE) NPNIO2A4_mis(EMIT) bulk_all(BULK) CMACRO BJT_MIS_ON NPNIO2A4_mis
DEVICE npn25a4ll_sh_mis_ckt NPNIO2A4_mis_sh dnwell(COLL) pwell(BASE) NPNIO2A4_mis_sh(EMIT) bulk_all(BULK) CMACRO BJT_MIS_ON NPNIO2A4_mis_sh
DEVICE npn25a25ll_mis_ckt NPNIO2A25_mis dnwell(COLL) pwell(BASE) NPNIO2A25_mis(EMIT) bulk_all(BULK) CMACRO BJT_MIS_ON NPNIO2A25_mis
DEVICE npn25a25ll_sh_mis_ckt NPNIO2A25_mis_sh dnwell(COLL) pwell(BASE) NPNIO2A25_mis_sh(EMIT) bulk_all(BULK) CMACRO BJT_MIS_ON NPNIO2A25_mis_sh
DEVICE npn25a100ll_mis_ckt NPNIO2A100_mis dnwell(COLL) pwell(BASE) NPNIO2A100_mis(EMIT) bulk_all(BULK) CMACRO BJT_MIS_ON NPNIO2A100_mis
DEVICE npn25a100ll_sh_mis_ckt NPNIO2A100_mis_sh dnwell(COLL) pwell(BASE) NPNIO2A100_mis_sh(EMIT) bulk_all(BULK) CMACRO BJT_MIS_ON NPNIO2A100_mis_sh
#ELSE
#IFDEF BJT_MIS_MODE 0
DEVICE pnp25a100ll_mis_ckt PNPIO2A100_mis pnpcoll(COLL) nwell(BASE) PNPIO2A100_mis(EMIT) CMACRO BJT_MIS_OFF PNPIO2A100_mis
DEVICE pnp25a100ll_sh_mis_ckt PNPIO2A100_mis_sh pnpcoll(COLL) nwell(BASE) PNPIO2A100_mis_sh(EMIT) CMACRO BJT_MIS_OFF PNPIO2A100_mis_sh
DEVICE pnp25a25ll_mis_ckt PNPIO2A25_mis  pnpcoll(COLL) nwell(BASE) PNPIO2A25_mis(EMIT) CMACRO BJT_MIS_OFF PNPIO2A25_mis
DEVICE pnp25a25ll_sh_mis_ckt PNPIO2A25_mis_sh  pnpcoll(COLL) nwell(BASE) PNPIO2A25_mis_sh(EMIT) CMACRO BJT_MIS_OFF PNPIO2A25_mis_sh
DEVICE pnp25a4ll_mis_ckt PNPIO2A4_mis  pnpcoll(COLL) nwell(BASE) PNPIO2A4_mis(EMIT) CMACRO BJT_MIS_OFF PNPIO2A4_mis
DEVICE pnp25a4ll_sh_mis_ckt PNPIO2A4_mis_sh  pnpcoll(COLL) nwell(BASE) PNPIO2A4_mis_sh(EMIT) CMACRO BJT_MIS_OFF PNPIO2A4_mis_sh
DEVICE npn25a4ll_mis_ckt NPNIO2A4_mis dnwell(COLL) pwell(BASE) NPNIO2A4_mis(EMIT) bulk_all(BULK) CMACRO BJT_MIS_OFF NPNIO2A4_mis
DEVICE npn25a4ll_sh_mis_ckt NPNIO2A4_mis_sh dnwell(COLL) pwell(BASE) NPNIO2A4_mis_sh(EMIT) bulk_all(BULK) CMACRO BJT_MIS_OFF NPNIO2A4_mis_sh
DEVICE npn25a25ll_mis_ckt NPNIO2A25_mis dnwell(COLL) pwell(BASE) NPNIO2A25_mis(EMIT) bulk_all(BULK) CMACRO BJT_MIS_OFF NPNIO2A25_mis
DEVICE npn25a25ll_sh_mis_ckt NPNIO2A25_mis_sh dnwell(COLL) pwell(BASE) NPNIO2A25_mis_sh(EMIT) bulk_all(BULK) CMACRO BJT_MIS_OFF NPNIO2A25_mis_sh
DEVICE npn25a100ll_mis_ckt NPNIO2A100_mis dnwell(COLL) pwell(BASE) NPNIO2A100_mis(EMIT) bulk_all(BULK) CMACRO BJT_MIS_OFF NPNIO2A100_mis
DEVICE npn25a100ll_sh_mis_ckt NPNIO2A100_mis_sh dnwell(COLL) pwell(BASE) NPNIO2A100_mis_sh(EMIT) bulk_all(BULK) CMACRO BJT_MIS_OFF NPNIO2A100_mis_sh
#ENDIF
#ENDIF

#ENDIF
#ENDIF

DMACRO BJT_PRO reg_layer {
   #IFDEF BACK_ANNOTATION_FLOW 1
   [PROPERTY m,FA
    m=1
    FA=AREA(reg_layer)
   ]
   #ENDIF
   #IFDEF BACK_ANNOTATION_FLOW 2
   [PROPERTY m
    m=1
   ]
   #ENDIF
}
DMACRO BJT_MIS_ON reg_layer {
   #IFDEF BACK_ANNOTATION_FLOW 1
   [PROPERTY mismod_bjt,m,FA
    mismod_bjt=1
    m=1
    FA=AREA(reg_layer)
   ]
   #ENDIF
   #IFDEF BACK_ANNOTATION_FLOW 2
   [PROPERTY mismod_bjt,m
    mismod_bjt=1
    m=1
   ]
   #ENDIF

}

DMACRO BJT_MIS_OFF reg_layer {
   #IFDEF BACK_ANNOTATION_FLOW 1
   [PROPERTY mismod_bjt,m,FA
    mismod_bjt=0
    m=1
    FA=AREA(reg_layer)
   ]
   #ENDIF
   #IFDEF BACK_ANNOTATION_FLOW 2
   [PROPERTY mismod_bjt,m
    mismod_bjt=0
    m=1
   ]
   #ENDIF
}

//LDMOS definition
#IFDEF RC_RUN FALSE
DEVICE nld50ll_ckt nld50ll_gate_body nld50ll_d(D) nld50ll_gate_body(G) nld50ll_s(S)  pwell(B) <nld50ll_gate>
       [ PROPERTY W,L,NF
         W1 = PERIM_CO(nld50ll_gate,nld50ll_s)
         W  = W1*0.9
         L1 = AREA(nld50ll_gate)/W1
         L  = L1*0.9
         NF = count(nld50ll_gate)
       ]
CMACRO MOS_REDUCE nld50ll_ckt

DEVICE nld50ll_sh_ckt nld50ll_gate_sh_body nld50ll_d(D) nld50ll_gate_sh_body(G) nld50ll_s(S)  pwell(B) <nld50ll_gate_sh>
       [ PROPERTY W,L,NF
         W1 = PERIM_CO(nld50ll_gate_sh,nld50ll_s)
         W  = W1
         L1 = AREA(nld50ll_gate_sh)/W1
         L  = L1
         NF = count(nld50ll_gate_sh)
       ]
CMACRO MOS_REDUCE nld50ll_sh_ckt

DEVICE pld50ll_ckt pld50ll_gate_body pld50ll_d(D) pld50ll_gate_body(G) pld50ll_s(S) nwell(B) <pld50ll_gate>
       [ PROPERTY W,L,NF
         W1 = PERIM_CO(pld50ll_gate,pld50ll_s)
         W  = W1*0.9
         L1 = AREA(pld50ll_gate)/W1
         L  = L1*0.9
         NF = count(pld50ll_gate)
       ]
CMACRO MOS_REDUCE pld50ll_ckt

DEVICE pld50ll_sh_ckt pld50ll_gate_sh_body pld50ll_d(D) pld50ll_gate_sh_body(G) pld50ll_s(S) nwell(B) <pld50ll_gate_sh>
       [ PROPERTY W,L,NF
         W1 = PERIM_CO(pld50ll_gate_sh,pld50ll_s)
         W  = W1
         L1 = AREA(pld50ll_gate_sh)/W1
         L  = L1
         NF = count(pld50ll_gate_sh)
       ]
CMACRO MOS_REDUCE pld50ll_sh_ckt

DEVICE nld50llod_ckt nld50ll_gate_od_body nld50ll_d(D) nld50ll_gate_od_body(G) nld50ll_s(S)  pwell(B) <nld50ll_gate_od>
       [ PROPERTY W,L,NF
         W1 = PERIM_CO(nld50ll_gate_od,nld50ll_s)
         W  = W1*0.9
         L1 = AREA(nld50ll_gate_od)/W1
         L  = L1*0.9
         NF = count(nld50ll_gate_od)
       ]
CMACRO MOS_REDUCE nld50llod_ckt

DEVICE nld50llod_sh_ckt nld50ll_gate_od_sh_body nld50ll_d(D) nld50ll_gate_od_sh_body(G) nld50ll_s(S)  pwell(B) <nld50ll_gate_od_sh>
       [ PROPERTY W,L,NF
         W1 = PERIM_CO(nld50ll_gate_od_sh,nld50ll_s)
         W  = W1
         L1 = AREA(nld50ll_gate_od_sh)/W1
         L  = L1
         NF = count(nld50ll_gate_od_sh)
       ]
CMACRO MOS_REDUCE nld50llod_sh_ckt

DEVICE pld50llod_ckt pld50ll_gate_od_body pld50ll_d(D) pld50ll_gate_od_body(G) pld50ll_s(S) nwell(B) <pld50ll_gate_od> 
       [ PROPERTY W,L,NF
         W1 = PERIM_CO(pld50ll_gate_od,pld50ll_s)
         W  = W1*0.9
         L1 = AREA(pld50ll_gate_od)/W1
         L  = L1*0.9
         NF = count(pld50ll_gate_od)
       ]
CMACRO MOS_REDUCE pld50llod_ckt

DEVICE pld50llod_sh_ckt pld50ll_gate_od_sh_body pld50ll_d(D) pld50ll_gate_od_sh_body(G) pld50ll_s(S) nwell(B) <pld50ll_gate_od_sh>
       [ PROPERTY W,L,NF
         W1 = PERIM_CO(pld50ll_gate_od_sh,pld50ll_s)
         W  = W1
         L1 = AREA(pld50ll_gate_od_sh)/W1
         L  = L1
         NF = count(pld50ll_gate_od_sh)
       ]
CMACRO MOS_REDUCE pld50llod_sh_ckt
#ENDIF

#IFDEF RC_RUN TRUE
DEVICE nld50ll_ckt nld50ll_gate_body nld50ll_d(D) nld50ll_gate_body(G) nld50ll_s(S)  pwell(B) <nld50ll_ad> <ndif> <nld50ll_gate> <nld50ll_gate_body:prop>
       #IFDEF BACK_ANNOTATION_FLOW 1
       [ PROPERTY W,L,AS,AD,PS,PD,NF,M,FW
       #ENDIF
       #IFDEF BACK_ANNOTATION_FLOW 2
       [ PROPERTY W,L,AS,AD,PS,PD,NF,M
       #ENDIF
         W1 = PERIM_CO(nld50ll_gate,nld50ll_s)
         W  = W1*0.9
         FW = W/2
         L1 = AREA(nld50ll_gate)/W1
         L  = L1*0.9 
         NF = count(nld50ll_gate)
         PER_S = perimeter_inside(S,ndif)
         AS1 = 1e-12 * DFM_NUM_VALUE(nld50ll_gate_body:prop,"ar")
         AS  = AS1*0.81
         PS1 = 1e-6 * DFM_NUM_VALUE(nld50ll_gate_body:prop,"pm")
         PS  = PS1*0.9
         AD1= AREA(nld50ll_ad)
         AD = AD1*0.81
         PD1= PERIMETER(nld50ll_ad)
         PD = PD1*0.9
         M  = 1
       ]
CMACRO MOS_REDUCE nld50ll_ckt

DEVICE nld50ll_sh_ckt nld50ll_gate_sh_body nld50ll_d(D) nld50ll_gate_sh_body(G) nld50ll_s(S)  pwell(B) <nld50ll_ad> <ndif> <nld50ll_gate_sh> <nld50ll_gate_sh_body:prop>
       #IFDEF BACK_ANNOTATION_FLOW 1
       [ PROPERTY W,L,AS,AD,PS,PD,NF,M,FW
       #ENDIF
       #IFDEF BACK_ANNOTATION_FLOW 2
       [ PROPERTY W,L,AS,AD,PS,PD,NF,M
       #ENDIF
         W1 = PERIM_CO(nld50ll_gate_sh,nld50ll_s)
         W  = W1
         FW = W/2
         L1 = AREA(nld50ll_gate_sh)/W1
         L  = L1
         NF = count(nld50ll_gate_sh)
         PER_S = perimeter_inside(S,ndif)
         AS1 = 1e-12 * DFM_NUM_VALUE(nld50ll_gate_sh_body:prop,"ar")
         AS = AS1
         PS1 = 1e-6 * DFM_NUM_VALUE(nld50ll_gate_sh_body:prop,"pm")
         PS = PS1
         AD1= AREA(nld50ll_ad)
         AD = AD1
         PD1= PERIMETER(nld50ll_ad)
         PD = PD1
         M  = 1
       ]
CMACRO MOS_REDUCE nld50ll_sh_ckt

DEVICE pld50ll_ckt pld50ll_gate_body pld50ll_d(D) pld50ll_gate_body(G) pld50ll_s(S) nwell(B) <pld50ll_ad> <pdif> <pld50ll_gate> <pld50ll_gate_body:prop>
       #IFDEF BACK_ANNOTATION_FLOW 1
       [ PROPERTY W,L,AS,AD,PS,PD,NF,M,FW
       #ENDIF
       #IFDEF BACK_ANNOTATION_FLOW 2
       [ PROPERTY W,L,AS,AD,PS,PD,NF,M
       #ENDIF
         W1 = PERIM_CO(pld50ll_gate,pld50ll_s)
         W  = W1*0.9
         FW = W/2
         L1 = AREA(pld50ll_gate)/W1
         L  = L1*0.9
         NF = count(pld50ll_gate)
         PER_S = perimeter_inside(S,pdif)
         AS1 = 1e-12 * DFM_NUM_VALUE(pld50ll_gate_body:prop,"ar")
         AS  = AS1*0.81
         PS1 = 1e-6 * DFM_NUM_VALUE(pld50ll_gate_body:prop,"pm")
         PS  = PS1*0.9
         AD1= AREA(pld50ll_ad)
         AD = AD1*0.81
         PD1= PERIMETER(pld50ll_ad)
         PD = PD1*0.9
         M  = 1
       ]
CMACRO MOS_REDUCE pld50ll_ckt

DEVICE pld50ll_sh_ckt pld50ll_gate_sh_body pld50ll_d(D) pld50ll_gate_sh_body(G) pld50ll_s(S) nwell(B) <pld50ll_ad> <pdif> <pld50ll_gate_sh> <pld50ll_gate_sh_body:prop>
       #IFDEF BACK_ANNOTATION_FLOW 1
       [ PROPERTY W,L,AS,AD,PS,PD,NF,M,FW
       #ENDIF
       #IFDEF BACK_ANNOTATION_FLOW 2
       [ PROPERTY W,L,AS,AD,PS,PD,NF,M
       #ENDIF
         W1 = PERIM_CO(pld50ll_gate_sh,pld50ll_s)
         W  = W1
         FW = W/2
         L1 = AREA(pld50ll_gate_sh)/W1
         L  = L1
         NF = count(pld50ll_gate_sh)
         PER_S = perimeter_inside(S,pdif)
         AS1 = 1e-12 * DFM_NUM_VALUE(pld50ll_gate_sh_body:prop,"ar")
         AS = AS1
         PS1 = 1e-6 * DFM_NUM_VALUE(pld50ll_gate_sh_body:prop,"pm")
         PS = PS1
         AD1= AREA(pld50ll_ad)
         AD = AD1
         PD1= PERIMETER(pld50ll_ad)
         PD = PD1
         M  = 1
       ]
CMACRO MOS_REDUCE pld50ll_sh_ckt

DEVICE nld50llod_ckt nld50ll_gate_od_body nld50ll_d(D) nld50ll_gate_od_body(G) nld50ll_s(S)  pwell(B) <nld50ll_ad> <ndif> <nld50ll_gate_od> <nld50ll_gate_od_body:prop>
       #IFDEF BACK_ANNOTATION_FLOW 1
       [ PROPERTY W,L,AS,AD,PS,PD,NF,M,FW
       #ENDIF
       #IFDEF BACK_ANNOTATION_FLOW 2
       [ PROPERTY W,L,AS,AD,PS,PD,NF,M
       #ENDIF
         W1 = PERIM_CO(nld50ll_gate_od,nld50ll_s)
	 W  = W1*0.9
         FW = W/2
         L1 = AREA(nld50ll_gate_od)/W1
	 L  = L1*0.9
         NF = count(nld50ll_gate_od)
         PER_S = perimeter_inside(S,ndif)
         AS1 = 1e-12 * DFM_NUM_VALUE(nld50ll_gate_od_body:prop,"ar")
         AS  = AS1*0.81
         PS1 = 1e-6 * DFM_NUM_VALUE(nld50ll_gate_od_body:prop,"pm")
         PS  = PS1*0.9
         AD1= AREA(nld50ll_ad)
         AD = AD1*0.81
         PD1= PERIMETER(nld50ll_ad)
         PD = PD1*0.9
         M  = 1
       ]
CMACRO MOS_REDUCE nld50llod_ckt

DEVICE nld50llod_sh_ckt nld50ll_gate_od_sh_body nld50ll_d(D) nld50ll_gate_od_sh_body(G) nld50ll_s(S)  pwell(B) <nld50ll_ad> <ndif> <nld50ll_gate_od_sh> <nld50ll_gate_od_sh_body:prop>
       #IFDEF BACK_ANNOTATION_FLOW 1
       [ PROPERTY W,L,AS,AD,PS,PD,NF,M,FW
       #ENDIF
       #IFDEF BACK_ANNOTATION_FLOW 2
       [ PROPERTY W,L,AS,AD,PS,PD,NF,M
       #ENDIF
         W1 = PERIM_CO(nld50ll_gate_od_sh,nld50ll_s)
         W  = W1
         FW = W/2
         L1 = AREA(nld50ll_gate_od_sh)/W1
         L  = L1
         NF = count(nld50ll_gate_od_sh)
         PER_S = perimeter_inside(S,ndif)
         AS1 = 1e-12 * DFM_NUM_VALUE(nld50ll_gate_od_sh_body:prop,"ar")
         AS = AS1
         PS1 = 1e-6 * DFM_NUM_VALUE(nld50ll_gate_od_sh_body:prop,"pm")
         PS = PS1
         AD1= AREA(nld50ll_ad)
         AD = AD1
         PD1= PERIMETER(nld50ll_ad)
         PD = PD1
         M  = 1
       ]
CMACRO MOS_REDUCE nld50llod_sh_ckt

DEVICE pld50llod_ckt pld50ll_gate_od_body pld50ll_d(D) pld50ll_gate_od_body(G) pld50ll_s(S) nwell(B) <pld50ll_ad> <pdif> <pld50ll_gate_od> <pld50ll_gate_od_body:prop>
       #IFDEF BACK_ANNOTATION_FLOW 1
       [ PROPERTY W,L,AS,AD,PS,PD,NF,M,FW
       #ENDIF
       #IFDEF BACK_ANNOTATION_FLOW 2
       [ PROPERTY W,L,AS,AD,PS,PD,NF,M
       #ENDIF
         W1 = PERIM_CO(pld50ll_gate_od,pld50ll_s)
	 W  = W1*0.9
         FW = W/2
         L1 = AREA(pld50ll_gate_od)/W1
	 L  = L1*0.9
         NF = count(pld50ll_gate_od)
         PER_S = perimeter_inside(S,pdif)
         AS1 = 1e-12 * DFM_NUM_VALUE(pld50ll_gate_od_body:prop,"ar")
         AS  = AS1*0.81
         PS1 = 1e-6 * DFM_NUM_VALUE(pld50ll_gate_od_body:prop,"pm")
         PS  = PS1*0.9
         AD1= AREA(pld50ll_ad)
         AD = AD1*0.81
         PD1= PERIMETER(pld50ll_ad)
         PD = PD1*0.9
         M  = 1
       ]
CMACRO MOS_REDUCE pld50llod_ckt

DEVICE pld50llod_sh_ckt pld50ll_gate_od_sh_body pld50ll_d(D) pld50ll_gate_od_sh_body(G) pld50ll_s(S) nwell(B) <pld50ll_ad> <pdif> <pld50ll_gate_od_sh> <pld50ll_gate_od_sh_body:prop>
       #IFDEF BACK_ANNOTATION_FLOW 1
       [ PROPERTY W,L,AS,AD,PS,PD,NF,M,FW
       #ENDIF
       #IFDEF BACK_ANNOTATION_FLOW 2
       [ PROPERTY W,L,AS,AD,PS,PD,NF,M
       #ENDIF
         W1 = PERIM_CO(pld50ll_gate_od_sh,pld50ll_s)
         W  = W1
         FW = W/2
         L1 = AREA(pld50ll_gate_od_sh)/W1
         L  = L1
         NF = count(pld50ll_gate_od_sh)
         PER_S = perimeter_inside(S,pdif)
         AS1 = 1e-12 * DFM_NUM_VALUE(pld50ll_gate_od_sh_body:prop,"ar")
         AS  = AS1
         PS1 = 1e-6 * DFM_NUM_VALUE(pld50ll_gate_od_sh_body:prop,"pm")
         PS  = PS1
         AD1= AREA(pld50ll_ad)
         AD = AD1
         PD1= PERIMETER(pld50ll_ad)
         PD = PD1
         M  = 1
       ]
CMACRO MOS_REDUCE pld50llod_sh_ckt
#ENDIF

DMACRO LDMOS_PARALLEL_REDUCE device_name {
       LVS REDUCE device_name PARALLEL yes
       [TOLERANCE L 0
        effective L,W,AS,AD,PS,PD
        P = sum( W*L )
        Q = sum( W/L )
        W = sqrt( P*Q )
        L = sqrt ( P/Q )
        AS = sum( AS ) // Effective AS: sum of ASi
        AD = sum( AD ) // Effective AD: sum of ADi
        PS = sum( PS ) // Effective PS: sum of PSi
        PD = sum( PD ) // Effective PD: sum of PDi
       ]
}

/////////////////////////////////////
//*Define property check tolerance //
/////////////////////////////////////
//*MOS///////////////////////////////

TRACE PROPERTY MN(n12ll)      L L mos_err
TRACE PROPERTY MN(n12ll)      W W mos_err

TRACE PROPERTY n12ll_egl4 A A mos_err
TRACE PROPERTY n12ll_egl4 B B mos_err
TRACE PROPERTY n12ll_egl4 D D mos_err
TRACE PROPERTY n12ll_egl4 H H mos_err
TRACE PROPERTY n12ll_egl4 NF NF 0

TRACE PROPERTY n12ll_sab_egl4 A A 0.5
TRACE PROPERTY n12ll_sab_egl4 B B 0.5
TRACE PROPERTY n12ll_sab_egl4 D D 0.5
TRACE PROPERTY n12ll_sab_egl4 H H 0.5
TRACE PROPERTY n12ll_sab_egl4 NF NF 0

TRACE PROPERTY n12ll_egl1 A A mos_err
TRACE PROPERTY n12ll_egl1 B B mos_err

TRACE PROPERTY n12ll_mis_ckt  L L mos_err
TRACE PROPERTY n12ll_mis_ckt  W W mos_err

TRACE PROPERTY MP(p12ll)      L L mos_err
TRACE PROPERTY MP(p12ll)      W W mos_err

TRACE PROPERTY p12ll_egl4 A A mos_err
TRACE PROPERTY p12ll_egl4 B B mos_err
TRACE PROPERTY p12ll_egl4 D D mos_err
TRACE PROPERTY p12ll_egl4 H H mos_err
TRACE PROPERTY p12ll_egl4 NF NF 0

TRACE PROPERTY p12ll_sab_egl4 A A 0.5
TRACE PROPERTY p12ll_sab_egl4 B B 0.5
TRACE PROPERTY p12ll_sab_egl4 D D 0.5
TRACE PROPERTY p12ll_sab_egl4 H H 0.5
TRACE PROPERTY p12ll_sab_egl4 NF NF 0

TRACE PROPERTY p12ll_egl1 A A mos_err
TRACE PROPERTY p12ll_egl1 B B mos_err

TRACE PROPERTY p12ll_mis_ckt  L L mos_err
TRACE PROPERTY p12ll_mis_ckt  W W mos_err

TRACE PROPERTY MN(n18ll)      L L mos_err
TRACE PROPERTY MN(n18ll)      W W mos_err

TRACE PROPERTY n18ll_mis_ckt  L L mos_err
TRACE PROPERTY n18ll_mis_ckt  W W mos_err


TRACE PROPERTY MP(p18ll)      L L mos_err
TRACE PROPERTY MP(p18ll)      W W mos_err

TRACE PROPERTY p18ll_mis_ckt  L L mos_err
TRACE PROPERTY p18ll_mis_ckt  W W mos_err


TRACE PROPERTY MN(nt12ll)     L L mos_err
TRACE PROPERTY MN(nt12ll)     W W mos_err

TRACE PROPERTY nt12ll_mis_ckt  L L mos_err
TRACE PROPERTY nt12ll_mis_ckt  W W mos_err


TRACE PROPERTY MN(nt18ll)     L L mos_err
TRACE PROPERTY MN(nt18ll)     W W mos_err

TRACE PROPERTY nt18ll_mis_ckt  L L mos_err
TRACE PROPERTY nt18ll_mis_ckt  W W mos_err


TRACE PROPERTY MN(nhvt12ll)   L L mos_err
TRACE PROPERTY MN(nhvt12ll)   W W mos_err

TRACE PROPERTY nhvt12ll_mis_ckt  L L mos_err
TRACE PROPERTY nhvt12ll_mis_ckt  W W mos_err


TRACE PROPERTY MP(phvt12ll)   L L mos_err
TRACE PROPERTY MP(phvt12ll)   W W mos_err

TRACE PROPERTY phvt12ll_mis_ckt  L L mos_err
TRACE PROPERTY phvt12ll_mis_ckt  W W mos_err

TRACE PROPERTY MN(nlvt12ll)   L L mos_err
TRACE PROPERTY MN(nlvt12ll)   W W mos_err

TRACE PROPERTY nlvt12ll_mis_ckt  L L mos_err
TRACE PROPERTY nlvt12ll_mis_ckt  W W mos_err

TRACE PROPERTY MP(plvt12ll)   L L mos_err
TRACE PROPERTY MP(plvt12ll)   W W mos_err

TRACE PROPERTY plvt12ll_mis_ckt  L L mos_err
TRACE PROPERTY plvt12ll_mis_ckt  W W mos_err

TRACE PROPERTY M(ulln)  L L mos_err
TRACE PROPERTY M(ulln)  W W mos_err
TRACE PROPERTY M(ullp)  L L mos_err
TRACE PROPERTY M(ullp)  W W mos_err

TRACE PROPERTY ulln_mis_ckt  L L mos_err
TRACE PROPERTY ulln_mis_ckt  W W mos_err

TRACE PROPERTY ullp_mis_ckt  L L mos_err
TRACE PROPERTY ullp_mis_ckt  W W mos_err

TRACE PROPERTY nld50ll_ckt   L L mos_err
TRACE PROPERTY nld50ll_ckt   W W mos_err

TRACE PROPERTY pld50ll_ckt   L L mos_err
TRACE PROPERTY pld50ll_ckt   W W mos_err

TRACE PROPERTY nld50llod_ckt   L L mos_err
TRACE PROPERTY nld50llod_ckt   W W mos_err

TRACE PROPERTY pld50llod_ckt   L L mos_err
TRACE PROPERTY pld50llod_ckt   W W mos_err

TRACE PROPERTY nld50ll_sh_ckt   L L mos_err
TRACE PROPERTY nld50ll_sh_ckt   W W mos_err

TRACE PROPERTY pld50ll_sh_ckt   L L mos_err
TRACE PROPERTY pld50ll_sh_ckt   W W mos_err

TRACE PROPERTY nld50llod_sh_ckt   L L mos_err
TRACE PROPERTY nld50llod_sh_ckt   W W mos_err

TRACE PROPERTY pld50llod_sh_ckt   L L mos_err
TRACE PROPERTY pld50llod_sh_ckt   W W mos_err

TRACE PROPERTY dnw12ll_ckt WR WR mos_err
TRACE PROPERTY dnw12ll_ckt LR LR mos_err

TRACE PROPERTY dnw18ll_ckt WR WR mos_err
TRACE PROPERTY dnw18ll_ckt LR LR mos_err

TRACE PROPERTY dnwhvt12ll_ckt WR WR mos_err
TRACE PROPERTY dnwhvt12ll_ckt LR LR mos_err

TRACE PROPERTY dnwlvt12ll_ckt WR WR mos_err
TRACE PROPERTY dnwlvt12ll_ckt LR LR mos_err

TRACE PROPERTY dnwulln_ckt WR WR mos_err
TRACE PROPERTY dnwulln_ckt LR LR mos_err

#IFDEF IO 1825
TRACE PROPERTY MN(n25ll)      L L mos_err
TRACE PROPERTY MN(n25ll)      W W mos_err

TRACE PROPERTY n25ll_egl4 A A mos_err
TRACE PROPERTY n25ll_egl4 B B mos_err
TRACE PROPERTY n25ll_egl4 D D mos_err
TRACE PROPERTY n25ll_egl4 H H mos_err
TRACE PROPERTY n25ll_egl4 NF NF 0

TRACE PROPERTY n25ll_sab_egl4 A A 0.5
TRACE PROPERTY n25ll_sab_egl4 B B 0.5
TRACE PROPERTY n25ll_sab_egl4 D D 0.5
TRACE PROPERTY n25ll_sab_egl4 H H 0.5
TRACE PROPERTY n25ll_sab_egl4 NF NF 0

TRACE PROPERTY n25ll_egl1 A A mos_err
TRACE PROPERTY n25ll_egl1 B B mos_err

TRACE PROPERTY n25ll_mis_ckt  L L mos_err
TRACE PROPERTY n25ll_mis_ckt  W W mos_err


TRACE PROPERTY MP(p25ll)      L L mos_err
TRACE PROPERTY MP(p25ll)      W W mos_err

TRACE PROPERTY p25ll_egl4 A A mos_err
TRACE PROPERTY p25ll_egl4 B B mos_err
TRACE PROPERTY p25ll_egl4 D D mos_err
TRACE PROPERTY p25ll_egl4 H H mos_err
TRACE PROPERTY p25ll_egl4 NF NF 0

TRACE PROPERTY p25ll_sab_egl4 A A 0.5
TRACE PROPERTY p25ll_sab_egl4 B B 0.5
TRACE PROPERTY p25ll_sab_egl4 D D 0.5
TRACE PROPERTY p25ll_sab_egl4 H H 0.5
TRACE PROPERTY p25ll_sab_egl4 NF NF 0

TRACE PROPERTY p25ll_egl1 A A mos_err
TRACE PROPERTY p25ll_egl1 B B mos_err

TRACE PROPERTY p25ll_mis_ckt  L L mos_err
TRACE PROPERTY p25ll_mis_ckt  W W mos_err


TRACE PROPERTY MN(nt25ll)     L L mos_err
TRACE PROPERTY MN(nt25ll)     W W mos_err

TRACE PROPERTY nt25ll_mis_ckt  L L mos_err
TRACE PROPERTY nt25ll_mis_ckt  W W mos_err

TRACE PROPERTY MN(nod33ll)    L L mos_err
TRACE PROPERTY MN(nod33ll)    W W mos_err

TRACE PROPERTY nod33ll_egl4 A A mos_err
TRACE PROPERTY nod33ll_egl4 B B mos_err
TRACE PROPERTY nod33ll_egl4 D D mos_err
TRACE PROPERTY nod33ll_egl4 H H mos_err
TRACE PROPERTY nod33ll_egl4 NF NF 0

TRACE PROPERTY nod33ll_sab_egl4 A A 0.5
TRACE PROPERTY nod33ll_sab_egl4 B B 0.5
TRACE PROPERTY nod33ll_sab_egl4 D D 0.5
TRACE PROPERTY nod33ll_sab_egl4 H H 0.5
TRACE PROPERTY nod33ll_sab_egl4 NF NF 0

TRACE PROPERTY nod33ll_egl1 A A mos_err
TRACE PROPERTY nod33ll_egl1 B B mos_err

TRACE PROPERTY nod33ll_mis_ckt  L L mos_err
TRACE PROPERTY nod33ll_mis_ckt  W W mos_err

TRACE PROPERTY MN(ntod33ll)    L L mos_err
TRACE PROPERTY MN(ntod33ll)    W W mos_err

TRACE PROPERTY ntod33ll_mis_ckt  L L mos_err
TRACE PROPERTY ntod33ll_mis_ckt  W W mos_err

TRACE PROPERTY MP(pod33ll)    L L mos_err
TRACE PROPERTY MP(pod33ll)    W W mos_err

TRACE PROPERTY pod33ll_egl4 A A mos_err
TRACE PROPERTY pod33ll_egl4 B B mos_err
TRACE PROPERTY pod33ll_egl4 D D mos_err
TRACE PROPERTY pod33ll_egl4 H H mos_err
TRACE PROPERTY pod33ll_egl4 NF NF 0

TRACE PROPERTY pod33ll_sab_egl4 A A 0.5
TRACE PROPERTY pod33ll_sab_egl4 B B 0.5
TRACE PROPERTY pod33ll_sab_egl4 D D 0.5
TRACE PROPERTY pod33ll_sab_egl4 H H 0.5
TRACE PROPERTY pod33ll_sab_egl4 NF NF 0

TRACE PROPERTY pod33ll_egl1 A A mos_err
TRACE PROPERTY pod33ll_egl1 B B mos_err

TRACE PROPERTY pod33ll_mis_ckt  L L mos_err
TRACE PROPERTY pod33ll_mis_ckt  W W mos_err

TRACE PROPERTY MN(nud18ll)    L L mos_err
TRACE PROPERTY MN(nud18ll)    W W mos_err

TRACE PROPERTY nud18ll_mis_ckt  L L mos_err
TRACE PROPERTY nud18ll_mis_ckt  W W mos_err

TRACE PROPERTY MN(ntud18ll)    L L mos_err
TRACE PROPERTY MN(ntud18ll)    W W mos_err

TRACE PROPERTY ntud18ll_mis_ckt  L L mos_err
TRACE PROPERTY ntud18ll_mis_ckt  W W mos_err

TRACE PROPERTY MP(pud18ll)    L L mos_err
TRACE PROPERTY MP(pud18ll)    W W mos_err

TRACE PROPERTY pud18ll_mis_ckt  L L mos_err
TRACE PROPERTY pud18ll_mis_ckt  W W mos_err

TRACE PROPERTY dnw25ll_ckt WR WR mos_err
TRACE PROPERTY dnw25ll_ckt LR LR mos_err

TRACE PROPERTY dnwod33ll_ckt WR WR mos_err
TRACE PROPERTY dnwod33ll_ckt LR LR mos_err

TRACE PROPERTY dnwud18ll_ckt WR WR mos_err
TRACE PROPERTY dnwud18ll_ckt LR LR mos_err
#ENDIF

//*RF MOS//////////////////////////////////////

TRACE PROPERTY n12ll_ckt_rf   LR LR mos_err
TRACE PROPERTY n12ll_ckt_rf   WR WR mos_err
TRACE PROPERTY n12ll_ckt_rf   NF NF 0

TRACE PROPERTY n12ll_ckt_rf_sdc   LR LR mos_err
TRACE PROPERTY n12ll_ckt_rf_sdc   WR WR mos_err
TRACE PROPERTY n12ll_ckt_rf_sdc   NF NF 0

TRACE PROPERTY nlvt12ll_ckt_rf   LR LR mos_err
TRACE PROPERTY nlvt12ll_ckt_rf   WR WR mos_err
TRACE PROPERTY nlvt12ll_ckt_rf   NF NF 0

TRACE PROPERTY nlvt12ll_ckt_rf_sdc   LR LR mos_err
TRACE PROPERTY nlvt12ll_ckt_rf_sdc   WR WR mos_err
TRACE PROPERTY nlvt12ll_ckt_rf_sdc   NF NF 0


TRACE PROPERTY n18ll_ckt_rf   LR LR mos_err
TRACE PROPERTY n18ll_ckt_rf   WR WR mos_err
TRACE PROPERTY n18ll_ckt_rf   NF NF 0

TRACE PROPERTY p12ll_ckt_rf   LR LR mos_err
TRACE PROPERTY p12ll_ckt_rf   WR WR mos_err
TRACE PROPERTY p12ll_ckt_rf   NF NF 0

TRACE PROPERTY p12ll_ckt_rf_5t   LR LR mos_err
TRACE PROPERTY p12ll_ckt_rf_5t   WR WR mos_err
TRACE PROPERTY p12ll_ckt_rf_5t   NF NF 0

TRACE PROPERTY p12ll_ckt_rf_sdc   LR LR mos_err
TRACE PROPERTY p12ll_ckt_rf_sdc   WR WR mos_err
TRACE PROPERTY p12ll_ckt_rf_sdc   NF NF 0

TRACE PROPERTY p12ll_ckt_rf_5t_sdc   LR LR mos_err
TRACE PROPERTY p12ll_ckt_rf_5t_sdc   WR WR mos_err
TRACE PROPERTY p12ll_ckt_rf_5t_sdc   NF NF 0

TRACE PROPERTY plvt12ll_ckt_rf   LR LR mos_err
TRACE PROPERTY plvt12ll_ckt_rf   WR WR mos_err
TRACE PROPERTY plvt12ll_ckt_rf   NF NF 0

TRACE PROPERTY plvt12ll_ckt_rf_5t   LR LR mos_err
TRACE PROPERTY plvt12ll_ckt_rf_5t   WR WR mos_err
TRACE PROPERTY plvt12ll_ckt_rf_5t   NF NF 0

TRACE PROPERTY plvt12ll_ckt_rf_sdc  LR LR mos_err
TRACE PROPERTY plvt12ll_ckt_rf_sdc  WR WR mos_err
TRACE PROPERTY plvt12ll_ckt_rf_sdc  NF NF 0

TRACE PROPERTY plvt12ll_ckt_rf_5t_sdc  LR LR mos_err
TRACE PROPERTY plvt12ll_ckt_rf_5t_sdc  WR WR mos_err
TRACE PROPERTY plvt12ll_ckt_rf_5t_sdc  NF NF 0


TRACE PROPERTY p18ll_ckt_rf   LR LR mos_err
TRACE PROPERTY p18ll_ckt_rf   WR WR mos_err
TRACE PROPERTY p18ll_ckt_rf   NF NF 0

TRACE PROPERTY p18ll_ckt_rf_5t   LR LR mos_err
TRACE PROPERTY p18ll_ckt_rf_5t   WR WR mos_err
TRACE PROPERTY p18ll_ckt_rf_5t   NF NF 0


TRACE PROPERTY dnw12ll_ckt_rf   LR LR mos_err
TRACE PROPERTY dnw12ll_ckt_rf   WR WR mos_err
TRACE PROPERTY dnw12ll_ckt_rf   NF NF 0

TRACE PROPERTY dnw12ll_ckt_rf_6t    LR LR mos_err
TRACE PROPERTY dnw12ll_ckt_rf_6t    WR WR mos_err
TRACE PROPERTY dnw12ll_ckt_rf_6t    NF NF 0

TRACE PROPERTY dnw12ll_ckt_rf_sdc   LR LR mos_err
TRACE PROPERTY dnw12ll_ckt_rf_sdc   WR WR mos_err
TRACE PROPERTY dnw12ll_ckt_rf_sdc   NF NF 0

TRACE PROPERTY dnw12ll_ckt_rf_6t_sdc   LR LR mos_err
TRACE PROPERTY dnw12ll_ckt_rf_6t_sdc   WR WR mos_err
TRACE PROPERTY dnw12ll_ckt_rf_6t_sdc   NF NF 0

TRACE PROPERTY dnwlvt12ll_ckt_rf   LR LR mos_err
TRACE PROPERTY dnwlvt12ll_ckt_rf   WR WR mos_err
TRACE PROPERTY dnwlvt12ll_ckt_rf   NF NF 0

TRACE PROPERTY dnwlvt12ll_ckt_rf_6t   LR LR mos_err
TRACE PROPERTY dnwlvt12ll_ckt_rf_6t   WR WR mos_err
TRACE PROPERTY dnwlvt12ll_ckt_rf_6t   NF NF 0

TRACE PROPERTY dnwlvt12ll_ckt_rf_sdc   LR LR mos_err
TRACE PROPERTY dnwlvt12ll_ckt_rf_sdc   WR WR mos_err
TRACE PROPERTY dnwlvt12ll_ckt_rf_sdc   NF NF 0

TRACE PROPERTY dnwlvt12ll_ckt_rf_6t_sdc   LR LR mos_err
TRACE PROPERTY dnwlvt12ll_ckt_rf_6t_sdc   WR WR mos_err
TRACE PROPERTY dnwlvt12ll_ckt_rf_6t_sdc   NF NF 0

TRACE PROPERTY dnw18ll_ckt_rf   LR LR mos_err
TRACE PROPERTY dnw18ll_ckt_rf   WR WR mos_err
TRACE PROPERTY dnw18ll_ckt_rf   NF NF 0

TRACE PROPERTY dnw18ll_ckt_rf_6t   LR LR mos_err
TRACE PROPERTY dnw18ll_ckt_rf_6t   WR WR mos_err
TRACE PROPERTY dnw18ll_ckt_rf_6t   NF NF 0

#IFDEF IO 1825

TRACE PROPERTY n25ll_ckt_rf   LR LR mos_err
TRACE PROPERTY n25ll_ckt_rf   WR WR mos_err
TRACE PROPERTY n25ll_ckt_rf   NF NF 0

TRACE PROPERTY n25ll_ckt_rf_sdc  LR LR mos_err
TRACE PROPERTY n25ll_ckt_rf_sdc  WR WR mos_err
TRACE PROPERTY n25ll_ckt_rf_sdc  NF NF 0

TRACE PROPERTY n25llod33_ckt_rf   LR LR mos_err
TRACE PROPERTY n25llod33_ckt_rf   WR WR mos_err
TRACE PROPERTY n25llod33_ckt_rf   NF NF 0

TRACE PROPERTY n25llud18_ckt_rf   LR LR mos_err
TRACE PROPERTY n25llud18_ckt_rf   WR WR mos_err
TRACE PROPERTY n25llud18_ckt_rf   NF NF 0 

TRACE PROPERTY p25ll_ckt_rf   LR LR mos_err
TRACE PROPERTY p25ll_ckt_rf   WR WR mos_err
TRACE PROPERTY p25ll_ckt_rf   NF NF 0

TRACE PROPERTY p25ll_ckt_rf_5t   LR LR mos_err
TRACE PROPERTY p25ll_ckt_rf_5t   WR WR mos_err
TRACE PROPERTY p25ll_ckt_rf_5t   NF NF 0

TRACE PROPERTY p25ll_ckt_rf_sdc   LR LR mos_err
TRACE PROPERTY p25ll_ckt_rf_sdc   WR WR mos_err
TRACE PROPERTY p25ll_ckt_rf_sdc   NF NF 0

TRACE PROPERTY p25ll_ckt_rf_5t_sdc   LR LR mos_err
TRACE PROPERTY p25ll_ckt_rf_5t_sdc   WR WR mos_err
TRACE PROPERTY p25ll_ckt_rf_5t_sdc   NF NF 0

TRACE PROPERTY p25llod33_ckt_rf   LR LR mos_err
TRACE PROPERTY p25llod33_ckt_rf   WR WR mos_err
TRACE PROPERTY p25llod33_ckt_rf   NF NF 0

TRACE PROPERTY p25llod33_ckt_rf_5t   LR LR mos_err
TRACE PROPERTY p25llod33_ckt_rf_5t   WR WR mos_err
TRACE PROPERTY p25llod33_ckt_rf_5t   NF NF 0

TRACE PROPERTY p25llud18_ckt_rf  LR LR mos_err
TRACE PROPERTY p25llud18_ckt_rf  WR WR mos_err
TRACE PROPERTY p25llud18_ckt_rf  NF NF 0

TRACE PROPERTY p25llud18_ckt_rf_5t  LR LR mos_err
TRACE PROPERTY p25llud18_ckt_rf_5t  WR WR mos_err
TRACE PROPERTY p25llud18_ckt_rf_5t  NF NF 0

TRACE PROPERTY dnw25ll_ckt_rf   LR LR mos_err
TRACE PROPERTY dnw25ll_ckt_rf   WR WR mos_err
TRACE PROPERTY dnw25ll_ckt_rf   NF NF 0

TRACE PROPERTY dnw25ll_ckt_rf_6t   LR LR mos_err
TRACE PROPERTY dnw25ll_ckt_rf_6t   WR WR mos_err
TRACE PROPERTY dnw25ll_ckt_rf_6t   NF NF 0

TRACE PROPERTY dnw25ll_ckt_rf_sdc   LR LR mos_err
TRACE PROPERTY dnw25ll_ckt_rf_sdc   WR WR mos_err
TRACE PROPERTY dnw25ll_ckt_rf_sdc   NF NF 0

TRACE PROPERTY dnw25ll_ckt_rf_6t_sdc   LR LR mos_err
TRACE PROPERTY dnw25ll_ckt_rf_6t_sdc   WR WR mos_err
TRACE PROPERTY dnw25ll_ckt_rf_6t_sdc   NF NF 0

TRACE PROPERTY dnw25llod33_ckt_rf   LR LR mos_err
TRACE PROPERTY dnw25llod33_ckt_rf   WR WR mos_err
TRACE PROPERTY dnw25llod33_ckt_rf   NF NF 0

TRACE PROPERTY dnw25llod33_ckt_rf_6t   LR LR mos_err
TRACE PROPERTY dnw25llod33_ckt_rf_6t   WR WR mos_err
TRACE PROPERTY dnw25llod33_ckt_rf_6t   NF NF 0

TRACE PROPERTY dnw25llud18_ckt_rf      LR LR mos_err
TRACE PROPERTY dnw25llud18_ckt_rf      WR WR mos_err
TRACE PROPERTY dnw25llud18_ckt_rf      NF NF 0

TRACE PROPERTY dnw25llud18_ckt_rf_6t   LR LR mos_err
TRACE PROPERTY dnw25llud18_ckt_rf_6t   WR WR mos_err
TRACE PROPERTY dnw25llud18_ckt_rf_6t   NF NF 0
#ENDIF


TRACE PROPERTY n12ll_ckt_rf_mis   LR LR mos_err
TRACE PROPERTY n12ll_ckt_rf_mis   WR WR mos_err
TRACE PROPERTY n12ll_ckt_rf_mis   NF NF 0

TRACE PROPERTY n12ll_ckt_rf_sdc_mis   LR LR mos_err
TRACE PROPERTY n12ll_ckt_rf_sdc_mis   WR WR mos_err
TRACE PROPERTY n12ll_ckt_rf_sdc_mis   NF NF 0

TRACE PROPERTY nlvt12ll_ckt_rf_mis   LR LR mos_err
TRACE PROPERTY nlvt12ll_ckt_rf_mis   WR WR mos_err
TRACE PROPERTY nlvt12ll_ckt_rf_mis   NF NF 0

TRACE PROPERTY nlvt12ll_ckt_rf_sdc_mis   LR LR mos_err
TRACE PROPERTY nlvt12ll_ckt_rf_sdc_mis   WR WR mos_err
TRACE PROPERTY nlvt12ll_ckt_rf_sdc_mis   NF NF 0

TRACE PROPERTY p12ll_ckt_rf_mis   LR LR mos_err
TRACE PROPERTY p12ll_ckt_rf_mis   WR WR mos_err
TRACE PROPERTY p12ll_ckt_rf_mis   NF NF 0

TRACE PROPERTY p12ll_ckt_rf_5t_mis   LR LR mos_err
TRACE PROPERTY p12ll_ckt_rf_5t_mis   WR WR mos_err
TRACE PROPERTY p12ll_ckt_rf_5t_mis   NF NF 0

TRACE PROPERTY p12ll_ckt_rf_sdc_mis   LR LR mos_err
TRACE PROPERTY p12ll_ckt_rf_sdc_mis   WR WR mos_err
TRACE PROPERTY p12ll_ckt_rf_sdc_mis   NF NF 0

TRACE PROPERTY p12ll_ckt_rf_5t_sdc_mis   LR LR mos_err
TRACE PROPERTY p12ll_ckt_rf_5t_sdc_mis   WR WR mos_err
TRACE PROPERTY p12ll_ckt_rf_5t_sdc_mis   NF NF 0

TRACE PROPERTY plvt12ll_ckt_rf_mis   LR LR mos_err
TRACE PROPERTY plvt12ll_ckt_rf_mis   WR WR mos_err
TRACE PROPERTY plvt12ll_ckt_rf_mis   NF NF 0

TRACE PROPERTY plvt12ll_ckt_rf_5t_mis   LR LR mos_err
TRACE PROPERTY plvt12ll_ckt_rf_5t_mis   WR WR mos_err
TRACE PROPERTY plvt12ll_ckt_rf_5t_mis   NF NF 0

TRACE PROPERTY plvt12ll_ckt_rf_sdc_mis  LR LR mos_err
TRACE PROPERTY plvt12ll_ckt_rf_sdc_mis  WR WR mos_err
TRACE PROPERTY plvt12ll_ckt_rf_sdc_mis  NF NF 0

TRACE PROPERTY plvt12ll_ckt_rf_5t_sdc_mis  LR LR mos_err
TRACE PROPERTY plvt12ll_ckt_rf_5t_sdc_mis  WR WR mos_err
TRACE PROPERTY plvt12ll_ckt_rf_5t_sdc_mis  NF NF 0

TRACE PROPERTY dnw12ll_ckt_rf_mis   LR LR mos_err
TRACE PROPERTY dnw12ll_ckt_rf_mis   WR WR mos_err
TRACE PROPERTY dnw12ll_ckt_rf_mis   NF NF 0

TRACE PROPERTY dnw12ll_ckt_rf_6t_mis   LR LR mos_err
TRACE PROPERTY dnw12ll_ckt_rf_6t_mis   WR WR mos_err
TRACE PROPERTY dnw12ll_ckt_rf_6t_mis   NF NF 0

TRACE PROPERTY dnw12ll_ckt_rf_sdc_mis   LR LR mos_err
TRACE PROPERTY dnw12ll_ckt_rf_sdc_mis   WR WR mos_err
TRACE PROPERTY dnw12ll_ckt_rf_sdc_mis   NF NF 0

TRACE PROPERTY dnw12ll_ckt_rf_6t_sdc_mis   LR LR mos_err
TRACE PROPERTY dnw12ll_ckt_rf_6t_sdc_mis   WR WR mos_err
TRACE PROPERTY dnw12ll_ckt_rf_6t_sdc_mis   NF NF 0

TRACE PROPERTY dnwlvt12ll_ckt_rf_mis   LR LR mos_err
TRACE PROPERTY dnwlvt12ll_ckt_rf_mis   WR WR mos_err
TRACE PROPERTY dnwlvt12ll_ckt_rf_mis   NF NF 0

TRACE PROPERTY dnwlvt12ll_ckt_rf_6t_mis   LR LR mos_err
TRACE PROPERTY dnwlvt12ll_ckt_rf_6t_mis   WR WR mos_err
TRACE PROPERTY dnwlvt12ll_ckt_rf_6t_mis   NF NF 0

TRACE PROPERTY dnwlvt12ll_ckt_rf_sdc_mis   LR LR mos_err
TRACE PROPERTY dnwlvt12ll_ckt_rf_sdc_mis   WR WR mos_err
TRACE PROPERTY dnwlvt12ll_ckt_rf_sdc_mis   NF NF 0

TRACE PROPERTY dnwlvt12ll_ckt_rf_6t_sdc_mis   LR LR mos_err
TRACE PROPERTY dnwlvt12ll_ckt_rf_6t_sdc_mis   WR WR mos_err
TRACE PROPERTY dnwlvt12ll_ckt_rf_6t_sdc_mis   NF NF 0

#IFDEF IO 1825

TRACE PROPERTY n25ll_ckt_rf_mis   LR LR mos_err
TRACE PROPERTY n25ll_ckt_rf_mis   WR WR mos_err
TRACE PROPERTY n25ll_ckt_rf_mis   NF NF 0

TRACE PROPERTY n25ll_ckt_rf_sdc_mis  LR LR mos_err
TRACE PROPERTY n25ll_ckt_rf_sdc_mis  WR WR mos_err
TRACE PROPERTY n25ll_ckt_rf_sdc_mis  NF NF 0

TRACE PROPERTY n25llod33_ckt_rf_mis   LR LR mos_err
TRACE PROPERTY n25llod33_ckt_rf_mis   WR WR mos_err
TRACE PROPERTY n25llod33_ckt_rf_mis   NF NF 0

TRACE PROPERTY n25llud18_ckt_rf_mis   LR LR mos_err
TRACE PROPERTY n25llud18_ckt_rf_mis   WR WR mos_err
TRACE PROPERTY n25llud18_ckt_rf_mis   NF NF 0

TRACE PROPERTY p25ll_ckt_rf_mis   LR LR mos_err
TRACE PROPERTY p25ll_ckt_rf_mis   WR WR mos_err
TRACE PROPERTY p25ll_ckt_rf_mis   NF NF 0

TRACE PROPERTY p25ll_ckt_rf_5t_mis   LR LR mos_err
TRACE PROPERTY p25ll_ckt_rf_5t_mis   WR WR mos_err
TRACE PROPERTY p25ll_ckt_rf_5t_mis   NF NF 0

TRACE PROPERTY p25ll_ckt_rf_sdc_mis   LR LR mos_err
TRACE PROPERTY p25ll_ckt_rf_sdc_mis   WR WR mos_err
TRACE PROPERTY p25ll_ckt_rf_sdc_mis   NF NF 0

TRACE PROPERTY p25ll_ckt_rf_5t_sdc_mis   LR LR mos_err
TRACE PROPERTY p25ll_ckt_rf_5t_sdc_mis   WR WR mos_err
TRACE PROPERTY p25ll_ckt_rf_5t_sdc_mis   NF NF 0

TRACE PROPERTY p25llod33_ckt_rf_mis   LR LR mos_err
TRACE PROPERTY p25llod33_ckt_rf_mis   WR WR mos_err
TRACE PROPERTY p25llod33_ckt_rf_mis   NF NF 0

TRACE PROPERTY p25llod33_ckt_rf_5t_mis   LR LR mos_err
TRACE PROPERTY p25llod33_ckt_rf_5t_mis   WR WR mos_err
TRACE PROPERTY p25llod33_ckt_rf_5t_mis   NF NF 0

TRACE PROPERTY p25llud18_ckt_rf_mis      LR LR mos_err
TRACE PROPERTY p25llud18_ckt_rf_mis      WR WR mos_err
TRACE PROPERTY p25llud18_ckt_rf_mis      NF NF 0

TRACE PROPERTY p25llud18_ckt_rf_5t_mis   LR LR mos_err
TRACE PROPERTY p25llud18_ckt_rf_5t_mis   WR WR mos_err
TRACE PROPERTY p25llud18_ckt_rf_5t_mis   NF NF 0



TRACE PROPERTY dnw25ll_ckt_rf_mis   LR LR mos_err
TRACE PROPERTY dnw25ll_ckt_rf_mis   WR WR mos_err
TRACE PROPERTY dnw25ll_ckt_rf_mis   NF NF 0

TRACE PROPERTY dnw25ll_ckt_rf_6t_mis   LR LR mos_err
TRACE PROPERTY dnw25ll_ckt_rf_6t_mis   WR WR mos_err
TRACE PROPERTY dnw25ll_ckt_rf_6t_mis   NF NF 0

TRACE PROPERTY dnw25ll_ckt_rf_sdc_mis   LR LR mos_err
TRACE PROPERTY dnw25ll_ckt_rf_sdc_mis   WR WR mos_err
TRACE PROPERTY dnw25ll_ckt_rf_sdc_mis   NF NF 0

TRACE PROPERTY dnw25ll_ckt_rf_6t_sdc_mis   LR LR mos_err
TRACE PROPERTY dnw25ll_ckt_rf_6t_sdc_mis   WR WR mos_err
TRACE PROPERTY dnw25ll_ckt_rf_6t_sdc_mis   NF NF 0

TRACE PROPERTY dnw25llod33_ckt_rf_mis   LR LR mos_err
TRACE PROPERTY dnw25llod33_ckt_rf_mis   WR WR mos_err
TRACE PROPERTY dnw25llod33_ckt_rf_mis   NF NF 0

TRACE PROPERTY dnw25llod33_ckt_rf_6t_mis   LR LR mos_err
TRACE PROPERTY dnw25llod33_ckt_rf_6t_mis   WR WR mos_err
TRACE PROPERTY dnw25llod33_ckt_rf_6t_mis   NF NF 0

TRACE PROPERTY dnw25llud18_ckt_rf_mis     LR LR mos_err
TRACE PROPERTY dnw25llud18_ckt_rf_mis     WR WR mos_err
TRACE PROPERTY dnw25llud18_ckt_rf_mis     NF NF 0

TRACE PROPERTY dnw25llud18_ckt_rf_6t_mis  LR LR mos_err
TRACE PROPERTY dnw25llud18_ckt_rf_6t_mis  WR WR mos_err
TRACE PROPERTY dnw25llud18_ckt_rf_6t_mis  NF NF 0

#ENDIF

#IFDEF SRAM DEV
/*
TRACE PROPERTY M(UDNPDSVT)   L L mos_err
TRACE PROPERTY M(UDNPDSVT)   W W mos_err
TRACE PROPERTY M(UDNPGSVT)   L L mos_err
TRACE PROPERTY M(UDNPGSVT)   W W mos_err
TRACE PROPERTY M(UDPLSVT)    L L mos_err
TRACE PROPERTY M(UDPLSVT)    W W mos_err
TRACE PROPERTY M(UDNPDHVT)   L L mos_err
TRACE PROPERTY M(UDNPDHVT)   W W mos_err
TRACE PROPERTY M(UDNPGHVT)   L L mos_err
TRACE PROPERTY M(UDNPGHVT)   W W mos_err
TRACE PROPERTY M(UDPLHVT)    L L mos_err
TRACE PROPERTY M(UDPLHVT)    W W mos_err
*/

TRACE PROPERTY M(STNPDSVT)   L L mos_err
TRACE PROPERTY M(STNPDSVT)   W W mos_err
TRACE PROPERTY M(STNPGSVT)   L L mos_err
TRACE PROPERTY M(STNPGSVT)   W W mos_err
TRACE PROPERTY M(STPLSVT)    L L mos_err
TRACE PROPERTY M(STPLSVT)    W W mos_err
TRACE PROPERTY M(STNPDHVT)   L L mos_err
TRACE PROPERTY M(STNPDHVT)   W W mos_err
TRACE PROPERTY M(STNPGHVT)   L L mos_err
TRACE PROPERTY M(STNPGHVT)   W W mos_err
TRACE PROPERTY M(STPLHVT)    L L mos_err
TRACE PROPERTY M(STPLHVT)    W W mos_err

TRACE PROPERTY MD(DNNPDSVT)   L L mos_err
TRACE PROPERTY MD(DNNPDSVT)   W W mos_err
TRACE PROPERTY MD(DNNPGSVT)   L L mos_err
TRACE PROPERTY MD(DNNPGSVT)   W W mos_err
TRACE PROPERTY MD(DNPLSVT)    L L mos_err
TRACE PROPERTY MD(DNPLSVT)    W W mos_err
TRACE PROPERTY MD(DNNPDHVT)   L L mos_err
TRACE PROPERTY MD(DNNPDHVT)   W W mos_err
TRACE PROPERTY MD(DNNPGHVT)   L L mos_err
TRACE PROPERTY MD(DNNPGHVT)   W W mos_err
TRACE PROPERTY MD(DNPLHVT)    L L mos_err
TRACE PROPERTY MD(DNPLHVT)    W W mos_err
/*
TRACE PROPERTY MD(DNNPDULL)   L L mos_err
TRACE PROPERTY MD(DNNPDULL)   W W mos_err
TRACE PROPERTY MD(DNNPGULL)   L L mos_err
TRACE PROPERTY MD(DNNPGULL)   W W mos_err
TRACE PROPERTY MD(DNPLULL)    L L mos_err
TRACE PROPERTY MD(DNPLULL)    W W mos_err
*/

TRACE PROPERTY MD(DPNPDSVT)   L L mos_err
TRACE PROPERTY MD(DPNPDSVT)   W W mos_err
TRACE PROPERTY MD(DPNPGASVT)  L L mos_err
TRACE PROPERTY MD(DPNPGASVT)  W W mos_err
TRACE PROPERTY MD(DPNPGBSVT)  L L mos_err
TRACE PROPERTY MD(DPNPGBSVT)  W W mos_err
TRACE PROPERTY MD(DPPLSVT)    L L mos_err
TRACE PROPERTY MD(DPPLSVT)    W W mos_err
TRACE PROPERTY MD(DPNPDHVT)   L L mos_err
TRACE PROPERTY MD(DPNPDHVT)   W W mos_err
TRACE PROPERTY MD(DPNPGAHVT)  L L mos_err
TRACE PROPERTY MD(DPNPGAHVT)  W W mos_err
TRACE PROPERTY MD(DPNPGBHVT)  L L mos_err
TRACE PROPERTY MD(DPNPGBHVT)  W W mos_err
TRACE PROPERTY MD(DPPLHVT)    L L mos_err
TRACE PROPERTY MD(DPPLHVT)    W W mos_err
/*
TRACE PROPERTY MD(DPNPDULL)   L L mos_err
TRACE PROPERTY MD(DPNPDULL)   W W mos_err
TRACE PROPERTY MD(DPNPGAULL)  L L mos_err
TRACE PROPERTY MD(DPNPGAULL)  W W mos_err
TRACE PROPERTY MD(DPNPGBULL)  L L mos_err
TRACE PROPERTY MD(DPNPGBULL)  W W mos_err
TRACE PROPERTY MD(DPPLULL)    L L mos_err
TRACE PROPERTY MD(DPPLULL)    W W mos_err
*/

/*
TRACE PROPERTY M(RFNPDSVT)   L L mos_err
TRACE PROPERTY M(RFNPDSVT)   W W mos_err
TRACE PROPERTY M(RFNPGASVT)  L L mos_err
TRACE PROPERTY M(RFNPGASVT)  W W mos_err
TRACE PROPERTY M(RFNPGBSVT)  L L mos_err
TRACE PROPERTY M(RFNPGBSVT)  W W mos_err
TRACE PROPERTY M(RFPLSVT)    L L mos_err
TRACE PROPERTY M(RFPLSVT)    W W mos_err
*/
TRACE PROPERTY M(RFNPDHVT)   L L mos_err
TRACE PROPERTY M(RFNPDHVT)   W W mos_err
TRACE PROPERTY M(RFNPGAHVT)  L L mos_err
TRACE PROPERTY M(RFNPGAHVT)  W W mos_err
TRACE PROPERTY M(RFNPGBHVT)  L L mos_err
TRACE PROPERTY M(RFNPGBHVT)  W W mos_err
TRACE PROPERTY M(RFPLHVT)    L L mos_err
TRACE PROPERTY M(RFPLHVT)    W W mos_err
#ENDIF

#IFDEF SRAM SUBCKT
/*
TRACE PROPERTY UDNPDSVT_ckt   L L mos_err
TRACE PROPERTY UDNPDSVT_ckt   W W mos_err
TRACE PROPERTY UDNPGSVT_ckt   L L mos_err
TRACE PROPERTY UDNPGSVT_ckt   W W mos_err
TRACE PROPERTY UDPLSVT_ckt    L L mos_err
TRACE PROPERTY UDPLSVT_ckt    W W mos_err
TRACE PROPERTY UDNPDHVT_ckt   L L mos_err
TRACE PROPERTY UDNPDHVT_ckt   W W mos_err
TRACE PROPERTY UDNPGHVT_ckt   L L mos_err
TRACE PROPERTY UDNPGHVT_ckt   W W mos_err
TRACE PROPERTY UDPLHVT_ckt    L L mos_err
TRACE PROPERTY UDPLHVT_ckt    W W mos_err
*/

TRACE PROPERTY NPDSVT_ckt   L L mos_err
TRACE PROPERTY NPDSVT_ckt   W W mos_err
TRACE PROPERTY NPGSVT_ckt   L L mos_err
TRACE PROPERTY NPGSVT_ckt   W W mos_err
TRACE PROPERTY PLSVT_ckt    L L mos_err
TRACE PROPERTY PLSVT_ckt    W W mos_err
TRACE PROPERTY STNPDHVT_ckt   L L mos_err
TRACE PROPERTY STNPDHVT_ckt   W W mos_err
TRACE PROPERTY STNPGHVT_ckt   L L mos_err
TRACE PROPERTY STNPGHVT_ckt   W W mos_err
TRACE PROPERTY STPLHVT_ckt    L L mos_err
TRACE PROPERTY STPLHVT_ckt    W W mos_err


TRACE PROPERTY DNNPDSVT_ckt   L L mos_err
TRACE PROPERTY DNNPDSVT_ckt   W W mos_err
TRACE PROPERTY DNNPGSVT_ckt   L L mos_err
TRACE PROPERTY DNNPGSVT_ckt   W W mos_err
TRACE PROPERTY DNPLSVT_ckt    L L mos_err
TRACE PROPERTY DNPLSVT_ckt    W W mos_err
TRACE PROPERTY DNNPDHVT_ckt   L L mos_err
TRACE PROPERTY DNNPDHVT_ckt   W W mos_err
TRACE PROPERTY DNNPGHVT_ckt   L L mos_err
TRACE PROPERTY DNNPGHVT_ckt   W W mos_err
TRACE PROPERTY DNPLHVT_ckt    L L mos_err
TRACE PROPERTY DNPLHVT_ckt    W W mos_err

TRACE PROPERTY DNNPDULL_ckt   L L mos_err
TRACE PROPERTY DNNPDULL_ckt   W W mos_err
TRACE PROPERTY DNNPGULL_ckt   L L mos_err
TRACE PROPERTY DNNPGULL_ckt   W W mos_err
TRACE PROPERTY DNPLULL_ckt    L L mos_err
TRACE PROPERTY DNPLULL_ckt    W W mos_err

TRACE PROPERTY NPDDPSVT_ckt   L L mos_err
TRACE PROPERTY NPDDPSVT_ckt   W W mos_err
TRACE PROPERTY NPGADPSVT_ckt  L L mos_err
TRACE PROPERTY NPGADPSVT_ckt  W W mos_err
TRACE PROPERTY NPGBDPSVT_ckt  L L mos_err
TRACE PROPERTY NPGBDPSVT_ckt  W W mos_err
TRACE PROPERTY PLDPSVT_ckt    L L mos_err
TRACE PROPERTY PLDPSVT_ckt    W W mos_err
TRACE PROPERTY DPNPDHVT_ckt   L L mos_err
TRACE PROPERTY DPNPDHVT_ckt   W W mos_err
TRACE PROPERTY DPNPGAHVT_ckt  L L mos_err
TRACE PROPERTY DPNPGAHVT_ckt  W W mos_err
TRACE PROPERTY DPNPGBHVT_ckt  L L mos_err
TRACE PROPERTY DPNPGBHVT_ckt  W W mos_err
TRACE PROPERTY DPPLHVT_ckt    L L mos_err
TRACE PROPERTY DPPLHVT_ckt    W W mos_err

TRACE PROPERTY DPNPDULL_ckt   L L mos_err
TRACE PROPERTY DPNPDULL_ckt   W W mos_err
TRACE PROPERTY DPNPGAULL_ckt  L L mos_err
TRACE PROPERTY DPNPGAULL_ckt  W W mos_err
TRACE PROPERTY DPNPGBULL_ckt  L L mos_err
TRACE PROPERTY DPNPGBULL_ckt  W W mos_err
TRACE PROPERTY DPPLULL_ckt    L L mos_err
TRACE PROPERTY DPPLULL_ckt    W W mos_err


/*
TRACE PROPERTY RFNPDSVT_ckt   L L mos_err
TRACE PROPERTY RFNPDSVT_ckt   W W mos_err
TRACE PROPERTY RFNPGASVT_ckt  L L mos_err
TRACE PROPERTY RFNPGASVT_ckt  W W mos_err
TRACE PROPERTY RFNPGBSVT_ckt  L L mos_err
TRACE PROPERTY RFNPGBSVT_ckt  W W mos_err
TRACE PROPERTY RFPLSVT_ckt    L L mos_err
TRACE PROPERTY RFPLSVT_ckt    W W mos_err
*/
TRACE PROPERTY RFNPDHVT_ckt   L L mos_err
TRACE PROPERTY RFNPDHVT_ckt   W W mos_err
TRACE PROPERTY RFNPGAHVT_ckt  L L mos_err
TRACE PROPERTY RFNPGAHVT_ckt  W W mos_err
TRACE PROPERTY RFNPGBHVT_ckt  L L mos_err
TRACE PROPERTY RFNPGBHVT_ckt  W W mos_err
TRACE PROPERTY RFPLHVT_ckt    L L mos_err
TRACE PROPERTY RFPLHVT_ckt    W W mos_err
#ENDIF

TRACE PROPERTY M(C1)          L L mos_err
TRACE PROPERTY M(C1)          W W mos_err

TRACE PROPERTY M(C2)          L L mos_err
TRACE PROPERTY M(C2)          W W mos_err

TRACE PROPERTY M(C3)          L L mos_err
TRACE PROPERTY M(C3)          W W mos_err

TRACE PROPERTY pvar12ll_ckt   WR WR var_err
TRACE PROPERTY pvar12ll_ckt   LR LR var_err
TRACE PROPERTY pvar12ll_ckt   NF NF 0

TRACE PROPERTY pvar18ll_ckt   WR WR var_err
TRACE PROPERTY pvar18ll_ckt   LR LR var_err
TRACE PROPERTY pvar18ll_ckt   NF NF 0

#IFDEF IO 1825
TRACE PROPERTY pvar25ll_ckt   WR WR var_err
TRACE PROPERTY pvar25ll_ckt   LR LR var_err
TRACE PROPERTY pvar25ll_ckt   NF NF 0
#ENDIF

TRACE PROPERTY pvar12ll_ckt_rf   WR WR var_err
TRACE PROPERTY pvar12ll_ckt_rf   LR LR var_err
TRACE PROPERTY pvar12ll_ckt_rf   NF NF 0

TRACE PROPERTY pvar12ll_ckt_rf_3t   WR WR var_err
TRACE PROPERTY pvar12ll_ckt_rf_3t   LR LR var_err
TRACE PROPERTY pvar12ll_ckt_rf_3t   NF NF 0

TRACE PROPERTY pvar12lldnw_ckt_rf   WR WR var_err
TRACE PROPERTY pvar12lldnw_ckt_rf   LR LR var_err
TRACE PROPERTY pvar12lldnw_ckt_rf   NF NF 0
TRACE PROPERTY pvar12lldnw_ckt_rf   LADDR LADDR 0
TRACE PROPERTY pvar12lldnw_ckt_rf   WADDR WADDR 0

TRACE PROPERTY pvar12lldnw_ckt_rf_3t   WR WR var_err
TRACE PROPERTY pvar12lldnw_ckt_rf_3t   LR LR var_err
TRACE PROPERTY pvar12lldnw_ckt_rf_3t   NF NF 0
TRACE PROPERTY pvar12lldnw_ckt_rf_3t   LADDR LADDR 0
TRACE PROPERTY pvar12lldnw_ckt_rf_3t   WADDR WADDR 0

TRACE PROPERTY pvar18ll_ckt_rf   WR WR var_err
TRACE PROPERTY pvar18ll_ckt_rf   LR LR var_err
TRACE PROPERTY pvar18ll_ckt_rf   NF NF 0

TRACE PROPERTY pvar18ll_ckt_rf_3t   WR WR var_err
TRACE PROPERTY pvar18ll_ckt_rf_3t   LR LR var_err
TRACE PROPERTY pvar18ll_ckt_rf_3t   NF NF 0

TRACE PROPERTY pvar18lldnw_ckt_rf   WR WR var_err
TRACE PROPERTY pvar18lldnw_ckt_rf   LR LR var_err
TRACE PROPERTY pvar18lldnw_ckt_rf   NF NF 0
TRACE PROPERTY pvar18lldnw_ckt_rf   LADDR LADDR 0
TRACE PROPERTY pvar18lldnw_ckt_rf   WADDR WADDR 0

TRACE PROPERTY pvar18lldnw_ckt_rf_3t   WR WR var_err
TRACE PROPERTY pvar18lldnw_ckt_rf_3t   LR LR var_err
TRACE PROPERTY pvar18lldnw_ckt_rf_3t   NF NF 0
TRACE PROPERTY pvar18lldnw_ckt_rf_3t   LADDR LADDR 0
TRACE PROPERTY pvar18lldnw_ckt_rf_3t   WADDR WADDR 0

#IFDEF IO 1825
TRACE PROPERTY pvar25ll_ckt_rf   WR WR var_err
TRACE PROPERTY pvar25ll_ckt_rf   LR LR var_err
TRACE PROPERTY pvar25ll_ckt_rf   NF NF 0

TRACE PROPERTY pvar25ll_ckt_rf_3t   WR WR var_err
TRACE PROPERTY pvar25ll_ckt_rf_3t   LR LR var_err
TRACE PROPERTY pvar25ll_ckt_rf_3t   NF NF 0

TRACE PROPERTY pvar25lldnw_ckt_rf   WR WR var_err
TRACE PROPERTY pvar25lldnw_ckt_rf   LR LR var_err
TRACE PROPERTY pvar25lldnw_ckt_rf   NF NF 0
TRACE PROPERTY pvar25lldnw_ckt_rf   LADDR LADDR 0
TRACE PROPERTY pvar25lldnw_ckt_rf   WADDR WADDR 0

TRACE PROPERTY pvar25lldnw_ckt_rf_3t   WR WR var_err
TRACE PROPERTY pvar25lldnw_ckt_rf_3t   LR LR var_err
TRACE PROPERTY pvar25lldnw_ckt_rf_3t   NF NF 0
TRACE PROPERTY pvar25lldnw_ckt_rf_3t   LADDR LADDR 0
TRACE PROPERTY pvar25lldnw_ckt_rf_3t   WADDR WADDR 0
#ENDIF


//=================================
//*BJT

#IFDEF RC_RUN FALSE
TRACE PROPERTY Q(pnp12a100ll) A A bjt_err
TRACE PROPERTY Q(pnp12a25ll)  A A bjt_err
TRACE PROPERTY Q(pnp12a4ll)   A A bjt_err

TRACE PROPERTY Q(pnp18a100ll) A A bjt_err
TRACE PROPERTY Q(pnp18a25ll)  A A bjt_err
TRACE PROPERTY Q(pnp18a4ll)   A A bjt_err

TRACE PROPERTY Q(npn12a100ll) A A bjt_err
TRACE PROPERTY Q(npn12a25ll)  A A bjt_err
TRACE PROPERTY Q(npn12a4ll)   A A bjt_err

TRACE PROPERTY Q(npn18a100ll) A A bjt_err
TRACE PROPERTY Q(npn18a25ll)  A A bjt_err
TRACE PROPERTY Q(npn18a4ll)   A A bjt_err

TRACE PROPERTY pnp12a100ll_mis_ckt "AREA" "AREA" bjt_err
TRACE PROPERTY pnp12a25ll_mis_ckt  "AREA" "AREA" bjt_err
TRACE PROPERTY pnp12a4ll_mis_ckt   "AREA" "AREA" bjt_err

TRACE PROPERTY pnp18a100ll_mis_ckt "AREA" "AREA" bjt_err
TRACE PROPERTY pnp18a25ll_mis_ckt  "AREA" "AREA" bjt_err
TRACE PROPERTY pnp18a4ll_mis_ckt   "AREA" "AREA" bjt_err

TRACE PROPERTY npn12a100ll_mis_ckt "AREA" "AREA" bjt_err
TRACE PROPERTY npn12a25ll_mis_ckt  "AREA" "AREA" bjt_err
TRACE PROPERTY npn12a4ll_mis_ckt   "AREA" "AREA" bjt_err

TRACE PROPERTY npn18a100ll_mis_ckt "AREA" "AREA" bjt_err
TRACE PROPERTY npn18a25ll_mis_ckt  "AREA" "AREA" bjt_err
TRACE PROPERTY npn18a4ll_mis_ckt   "AREA" "AREA" bjt_err

TRACE PROPERTY Q(pnp12a100ll_sh) A A bjt_err
TRACE PROPERTY Q(pnp12a25ll_sh)  A A bjt_err
TRACE PROPERTY Q(pnp12a4ll_sh)   A A bjt_err

TRACE PROPERTY Q(pnp18a100ll_sh) A A bjt_err
TRACE PROPERTY Q(pnp18a25ll_sh)  A A bjt_err
TRACE PROPERTY Q(pnp18a4ll_sh)   A A bjt_err

TRACE PROPERTY Q(npn12a100ll_sh) A A bjt_err
TRACE PROPERTY Q(npn12a25ll_sh)  A A bjt_err
TRACE PROPERTY Q(npn12a4ll_sh)   A A bjt_err

TRACE PROPERTY Q(npn18a100ll_sh) A A bjt_err
TRACE PROPERTY Q(npn18a25ll_sh)  A A bjt_err
TRACE PROPERTY Q(npn18a4ll_sh)   A A bjt_err

TRACE PROPERTY pnp12a100ll_sh_mis_ckt "AREA" "AREA" bjt_err
TRACE PROPERTY pnp12a25ll_sh_mis_ckt  "AREA" "AREA" bjt_err
TRACE PROPERTY pnp12a4ll_sh_mis_ckt   "AREA" "AREA" bjt_err

TRACE PROPERTY pnp18a100ll_sh_mis_ckt "AREA" "AREA" bjt_err
TRACE PROPERTY pnp18a25ll_sh_mis_ckt  "AREA" "AREA" bjt_err
TRACE PROPERTY pnp18a4ll_sh_mis_ckt   "AREA" "AREA" bjt_err

TRACE PROPERTY npn12a100ll_sh_mis_ckt "AREA" "AREA" bjt_err
TRACE PROPERTY npn12a25ll_sh_mis_ckt  "AREA" "AREA" bjt_err
TRACE PROPERTY npn12a4ll_sh_mis_ckt   "AREA" "AREA" bjt_err

TRACE PROPERTY npn18a100ll_sh_mis_ckt "AREA" "AREA" bjt_err
TRACE PROPERTY npn18a25ll_sh_mis_ckt  "AREA" "AREA" bjt_err
TRACE PROPERTY npn18a4ll_sh_mis_ckt   "AREA" "AREA" bjt_err

#IFDEF IO 1825
TRACE PROPERTY Q(pnp25a100ll) A A bjt_err
TRACE PROPERTY Q(pnp25a25ll)  A A bjt_err
TRACE PROPERTY Q(pnp25a4ll)   A A bjt_err

TRACE PROPERTY Q(npn25a100ll) A A bjt_err
TRACE PROPERTY Q(npn25a25ll)  A A bjt_err
TRACE PROPERTY Q(npn25a4ll)   A A bjt_err

TRACE PROPERTY pnp25a100ll_mis_ckt "AREA" "AREA" bjt_err
TRACE PROPERTY pnp25a25ll_mis_ckt  "AREA" "AREA" bjt_err
TRACE PROPERTY pnp25a4ll_mis_ckt   "AREA" "AREA" bjt_err

TRACE PROPERTY npn25a100ll_mis_ckt "AREA" "AREA" bjt_err
TRACE PROPERTY npn25a25ll_mis_ckt  "AREA" "AREA" bjt_err
TRACE PROPERTY npn25a4ll_mis_ckt   "AREA" "AREA" bjt_err

TRACE PROPERTY Q(pnp25a100ll_sh) A A bjt_err
TRACE PROPERTY Q(pnp25a25ll_sh)  A A bjt_err
TRACE PROPERTY Q(pnp25a4ll_sh)   A A bjt_err

TRACE PROPERTY Q(npn25a100ll_sh) A A bjt_err
TRACE PROPERTY Q(npn25a25ll_sh)  A A bjt_err
TRACE PROPERTY Q(npn25a4ll_sh)   A A bjt_err

TRACE PROPERTY pnp25a100ll_sh_mis_ckt "AREA" "AREA" bjt_err
TRACE PROPERTY pnp25a25ll_sh_mis_ckt  "AREA" "AREA" bjt_err
TRACE PROPERTY pnp25a4ll_sh_mis_ckt   "AREA" "AREA" bjt_err

TRACE PROPERTY npn25a100ll_sh_mis_ckt "AREA" "AREA" bjt_err
TRACE PROPERTY npn25a25ll_sh_mis_ckt  "AREA" "AREA" bjt_err
TRACE PROPERTY npn25a4ll_sh_mis_ckt   "AREA" "AREA" bjt_err
#ENDIF
#ENDIF

//==================================

//*Diode
DMACRO DIODE_CHECK_PROPERTY device_name {
#IFDEF DIO_PJ FALSE
TRACE PROPERTY D(device_name) A A dio_err
#ELSE
TRACE PROPERTY D(device_name) A A dio_err
TRACE PROPERTY D(device_name) P P dio_err
#ENDIF
}

CMACRO DIODE_CHECK_PROPERTY ndio12ll
CMACRO DIODE_CHECK_PROPERTY pdio12ll
CMACRO DIODE_CHECK_PROPERTY ntdio12ll
CMACRO DIODE_CHECK_PROPERTY ndio18ll
CMACRO DIODE_CHECK_PROPERTY pdio18ll
CMACRO DIODE_CHECK_PROPERTY ntdio18ll
CMACRO DIODE_CHECK_PROPERTY nwdioll
CMACRO DIODE_CHECK_PROPERTY ndio12llhvt
CMACRO DIODE_CHECK_PROPERTY pdio12llhvt
CMACRO DIODE_CHECK_PROPERTY ndio12lllvt
CMACRO DIODE_CHECK_PROPERTY pdio12lllvt
CMACRO DIODE_CHECK_PROPERTY ndioull
CMACRO DIODE_CHECK_PROPERTY pdioull
CMACRO DIODE_CHECK_PROPERTY dnd12ll
CMACRO DIODE_CHECK_PROPERTY rwd12ll
CMACRO DIODE_CHECK_PROPERTY dnwd12ll

#IFDEF IO 1825
CMACRO DIODE_CHECK_PROPERTY ndio25ll
CMACRO DIODE_CHECK_PROPERTY pdio25ll
CMACRO DIODE_CHECK_PROPERTY ntdio25ll
#ENDIF

//*Resistor
TRACE PROPERTY rndif_ckt      W W res_err
TRACE PROPERTY rndif_ckt      L L res_err

TRACE PROPERTY rpdif_ckt      W W res_err
TRACE PROPERTY rpdif_ckt      L L res_err

TRACE PROPERTY rnpo_ckt       W W res_err
TRACE PROPERTY rnpo_ckt       L L res_err

TRACE PROPERTY rppo_ckt       W W res_err
TRACE PROPERTY rppo_ckt       L L res_err

TRACE PROPERTY rnwsti_ckt     W W res_err
TRACE PROPERTY rnwsti_ckt     L L res_err

TRACE PROPERTY rnwaa_ckt      W W res_err
TRACE PROPERTY rnwaa_ckt      L L res_err

TRACE PROPERTY rndifsab_ckt   W W res_err
TRACE PROPERTY rndifsab_ckt   L L res_err

TRACE PROPERTY rpdifsab_ckt   W W res_err
TRACE PROPERTY rpdifsab_ckt   L L res_err

TRACE PROPERTY rnposab_ckt    W W res_err
TRACE PROPERTY rnposab_ckt    L L res_err

TRACE PROPERTY rpposab_ckt    W W res_err
TRACE PROPERTY rpposab_ckt    L L res_err


TRACE PROPERTY rnpo_3t_ckt    W W res_err
TRACE PROPERTY rnpo_3t_ckt    L L res_err

TRACE PROPERTY rppo_3t_ckt    W W res_err
TRACE PROPERTY rppo_3t_ckt    L L res_err

TRACE PROPERTY rnposab_3t_ckt W W res_err
TRACE PROPERTY rnposab_3t_ckt L L res_err

TRACE PROPERTY rpposab_3t_ckt W W res_err
TRACE PROPERTY rpposab_3t_ckt L L res_err

TRACE PROPERTY rm1_ckt        W W res_err
TRACE PROPERTY rm1_ckt        L L res_err

TRACE PROPERTY rm2_ckt        W W res_err
TRACE PROPERTY rm2_ckt        L L res_err

TRACE PROPERTY rhrpo_ckt        W W res_err
TRACE PROPERTY rhrpo_ckt        L L res_err

TRACE PROPERTY rhrpo_3t_ckt        W W res_err
TRACE PROPERTY rhrpo_3t_ckt        L L res_err

#IFDEF ALPA_THICK THIN
TRACE PROPERTY ralpa_ckt      W W res_err
TRACE PROPERTY ralpa_ckt      L L res_err
#ELSE
TRACE PROPERTY ralpa_utm_ckt  W W res_err
TRACE PROPERTY ralpa_utm_ckt  L L res_err
#ENDIF

#IFDEF TOPMETAL 10

TRACE PROPERTY rm3_ckt        W W res_err
TRACE PROPERTY rm3_ckt        L L res_err

TRACE PROPERTY rm4_ckt        W W res_err
TRACE PROPERTY rm4_ckt        L L res_err

TRACE PROPERTY rm5_ckt        W W res_err
TRACE PROPERTY rm5_ckt        L L res_err

TRACE PROPERTY rm6_ckt        W W res_err
TRACE PROPERTY rm6_ckt        L L res_err

TRACE PROPERTY rm7_ckt        W W res_err
TRACE PROPERTY rm7_ckt        L L res_err

TRACE PROPERTY rm8_ckt        W W res_err
TRACE PROPERTY rm8_ckt        L L res_err

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 2
TRACE PROPERTY rtm1_d2_ckt     W W res_err
TRACE PROPERTY rtm1_d2_ckt     L L res_err
#IFDEF TM2_WIDTH 2
TRACE PROPERTY rtm2_d2_ckt     W W res_err
TRACE PROPERTY rtm2_d2_ckt     L L res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY rtm2_ckt        W W res_err
TRACE PROPERTY rtm2_ckt        L L res_err
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 4
TRACE PROPERTY rtm1_ckt        W W res_err
TRACE PROPERTY rtm1_ckt        L L res_err
#IFDEF TM2_WIDTH 4
TRACE PROPERTY rtm2_ckt        W W res_err
TRACE PROPERTY rtm2_ckt        L L res_err
#ENDIF
#ENDIF
#ENDIF
#ENDIF


#IFDEF TOPMETAL 9

TRACE PROPERTY rm3_ckt        W W res_err
TRACE PROPERTY rm3_ckt        L L res_err

TRACE PROPERTY rm4_ckt        W W res_err
TRACE PROPERTY rm4_ckt        L L res_err

TRACE PROPERTY rm5_ckt        W W res_err
TRACE PROPERTY rm5_ckt        L L res_err

TRACE PROPERTY rm6_ckt        W W res_err
TRACE PROPERTY rm6_ckt        L L res_err

TRACE PROPERTY rm7_ckt        W W res_err
TRACE PROPERTY rm7_ckt        L L res_err

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 2
TRACE PROPERTY rtm1_d2_ckt     W W res_err
TRACE PROPERTY rtm1_d2_ckt     L L res_err
#IFDEF TM2_WIDTH 2
TRACE PROPERTY rtm2_d2_ckt     W W res_err
TRACE PROPERTY rtm2_d2_ckt     L L res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY rtm2_ckt        W W res_err
TRACE PROPERTY rtm2_ckt        L L res_err
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 4
TRACE PROPERTY rtm1_ckt        W W res_err
TRACE PROPERTY rtm1_ckt        L L res_err
#IFDEF TM2_WIDTH 4
TRACE PROPERTY rtm2_ckt        W W res_err
TRACE PROPERTY rtm2_ckt        L L res_err
#ENDIF
#ENDIF
#ENDIF


#IFDEF TOP_METAL_NUM single
TRACE PROPERTY rm8_ckt        W W res_err
TRACE PROPERTY rm8_ckt        L L res_err

#IFDEF TM2_WIDTH 2
TRACE PROPERTY rtm2_d2_ckt     W W res_err
TRACE PROPERTY rtm2_d2_ckt     L L res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY rtm2_ckt        W W res_err
TRACE PROPERTY rtm2_ckt        L L res_err
#ENDIF
#ENDIF
#ENDIF


#IFDEF TOPMETAL 8

TRACE PROPERTY rm3_ckt        W W res_err
TRACE PROPERTY rm3_ckt        L L res_err

TRACE PROPERTY rm4_ckt        W W res_err
TRACE PROPERTY rm4_ckt        L L res_err

TRACE PROPERTY rm5_ckt        W W res_err
TRACE PROPERTY rm5_ckt        L L res_err

TRACE PROPERTY rm6_ckt        W W res_err
TRACE PROPERTY rm6_ckt        L L res_err

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 2
TRACE PROPERTY rtm1_d2_ckt     W W res_err
TRACE PROPERTY rtm1_d2_ckt     L L res_err
#IFDEF TM2_WIDTH 2
TRACE PROPERTY rtm2_d2_ckt     W W res_err
TRACE PROPERTY rtm2_d2_ckt     L L res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY rtm2_ckt        W W res_err
TRACE PROPERTY rtm2_ckt        L L res_err
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 4
TRACE PROPERTY rtm1_ckt        W W res_err
TRACE PROPERTY rtm1_ckt        L L res_err
#IFDEF TM2_WIDTH 4
TRACE PROPERTY rtm2_ckt        W W res_err
TRACE PROPERTY rtm2_ckt        L L res_err
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM single
TRACE PROPERTY rm7_ckt        W W res_err
TRACE PROPERTY rm7_ckt        L L res_err

#IFDEF TM2_WIDTH 2
TRACE PROPERTY rtm2_d2_ckt     W W res_err
TRACE PROPERTY rtm2_d2_ckt     L L res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY rtm2_ckt        W W res_err
TRACE PROPERTY rtm2_ckt        L L res_err
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOPMETAL 7

TRACE PROPERTY rm3_ckt        W W res_err
TRACE PROPERTY rm3_ckt        L L res_err

TRACE PROPERTY rm4_ckt        W W res_err
TRACE PROPERTY rm4_ckt        L L res_err

TRACE PROPERTY rm5_ckt        W W res_err
TRACE PROPERTY rm5_ckt        L L res_err


#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 2
TRACE PROPERTY rtm1_d2_ckt     W W res_err
TRACE PROPERTY rtm1_d2_ckt     L L res_err
#IFDEF TM2_WIDTH 2
TRACE PROPERTY rtm2_d2_ckt     W W res_err
TRACE PROPERTY rtm2_d2_ckt     L L res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY rtm2_ckt        W W res_err
TRACE PROPERTY rtm2_ckt        L L res_err
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 4
TRACE PROPERTY rtm1_ckt        W W res_err
TRACE PROPERTY rtm1_ckt        L L res_err
#IFDEF TM2_WIDTH 4
TRACE PROPERTY rtm2_ckt        W W res_err
TRACE PROPERTY rtm2_ckt        L L res_err
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM single
TRACE PROPERTY rm6_ckt        W W res_err
TRACE PROPERTY rm6_ckt        L L res_err

#IFDEF TM2_WIDTH 2
TRACE PROPERTY rtm2_d2_ckt     W W res_err
TRACE PROPERTY rtm2_d2_ckt     L L res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY rtm2_ckt        W W res_err
TRACE PROPERTY rtm2_ckt        L L res_err
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOPMETAL 6

TRACE PROPERTY rm3_ckt        W W res_err
TRACE PROPERTY rm3_ckt        L L res_err

TRACE PROPERTY rm4_ckt        W W res_err
TRACE PROPERTY rm4_ckt        L L res_err

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 2
TRACE PROPERTY rtm1_d2_ckt     W W res_err
TRACE PROPERTY rtm1_d2_ckt     L L res_err
#IFDEF TM2_WIDTH 2
TRACE PROPERTY rtm2_d2_ckt     W W res_err
TRACE PROPERTY rtm2_d2_ckt     L L res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY rtm2_ckt        W W res_err
TRACE PROPERTY rtm2_ckt        L L res_err
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 4
TRACE PROPERTY rtm1_ckt        W W res_err
TRACE PROPERTY rtm1_ckt        L L res_err
#IFDEF TM2_WIDTH 4
TRACE PROPERTY rtm2_ckt        W W res_err
TRACE PROPERTY rtm2_ckt        L L res_err
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM single
TRACE PROPERTY rm5_ckt        W W res_err
TRACE PROPERTY rm5_ckt        L L res_err

#IFDEF TM2_WIDTH 2
TRACE PROPERTY rtm2_d2_ckt     W W res_err
TRACE PROPERTY rtm2_d2_ckt     L L res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY rtm2_ckt        W W res_err
TRACE PROPERTY rtm2_ckt        L L res_err
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOPMETAL 5

TRACE PROPERTY rm3_ckt        W W res_err
TRACE PROPERTY rm3_ckt        L L res_err

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 2
TRACE PROPERTY rtm1_d2_ckt     W W res_err
TRACE PROPERTY rtm1_d2_ckt     L L res_err
#IFDEF TM2_WIDTH 2
TRACE PROPERTY rtm2_d2_ckt     W W res_err
TRACE PROPERTY rtm2_d2_ckt     L L res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY rtm2_ckt        W W res_err
TRACE PROPERTY rtm2_ckt        L L res_err
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 4
TRACE PROPERTY rtm1_ckt        W W res_err
TRACE PROPERTY rtm1_ckt        L L res_err
#IFDEF TM2_WIDTH 4
TRACE PROPERTY rtm2_ckt        W W res_err
TRACE PROPERTY rtm2_ckt        L L res_err
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM single
TRACE PROPERTY rm4_ckt        W W res_err
TRACE PROPERTY rm4_ckt        L L res_err

#IFDEF TM2_WIDTH 2
TRACE PROPERTY rtm2_d2_ckt     W W res_err
TRACE PROPERTY rtm2_d2_ckt     L L res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY rtm2_ckt        W W res_err
TRACE PROPERTY rtm2_ckt        L L res_err
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOPMETAL 4
#IFDEF TOP_METAL_NUM single
TRACE PROPERTY rm3_ckt        W W res_err
TRACE PROPERTY rm3_ckt        L L res_err
#IFDEF TM2_WIDTH 2
TRACE PROPERTY rtm2_d2_ckt     W W res_err
TRACE PROPERTY rtm2_d2_ckt     L L res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY rtm2_ckt        W W res_err
TRACE PROPERTY rtm2_ckt        L L res_err
#ENDIF
#ENDIF
#ENDIF

//===================================
#IFDEF RC_RUN FALSE
TRACE PROPERTY R(rndif)       R R res_err
TRACE PROPERTY R(rpdif)       R R res_err
TRACE PROPERTY R(rnpo)        R R res_err
TRACE PROPERTY R(rppo)        R R res_err
TRACE PROPERTY R(rnwsti)      R R res_err
TRACE PROPERTY R(rnwaa)       R R res_err
TRACE PROPERTY R(rndifsab)    R R res_err
TRACE PROPERTY R(rpdifsab)    R R res_err
TRACE PROPERTY R(rnposab)     R R res_err
TRACE PROPERTY R(rpposab)     R R res_err


TRACE PROPERTY R(rnpo_3t)     R R res_err
TRACE PROPERTY R(rppo_3t)     R R res_err
TRACE PROPERTY R(rnposab_3t)  R R res_err
TRACE PROPERTY R(rpposab_3t)  R R res_err


TRACE PROPERTY R(rm1)       R R res_err
TRACE PROPERTY R(rm2)       R R res_err

TRACE PROPERTY R(rhrpo)       R R res_err
TRACE PROPERTY R(rhrpo_3t)    R R res_err

#IFDEF ALPA_THICK THIN
TRACE PROPERTY R(ralpa)     R R res_err
#ELSE
TRACE PROPERTY R(ralpa_utm)     R R res_err
#ENDIF

//================================

#IFDEF TOPMETAL 10 

TRACE PROPERTY R(rm3)       R R res_err
TRACE PROPERTY R(rm4)       R R res_err
TRACE PROPERTY R(rm5)       R R res_err
TRACE PROPERTY R(rm6)       R R res_err
TRACE PROPERTY R(rm7)       R R res_err
TRACE PROPERTY R(rm8)       R R res_err

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 2
TRACE PROPERTY R(rtm1_d2)   R R res_err
#IFDEF TM2_WIDTH 2
TRACE PROPERTY R(rtm2_d2)   R R res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)   R R res_err
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 4
TRACE PROPERTY R(rtm1)   R R res_err
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)   R R res_err
#ENDIF
#ENDIF
#ENDIF
#ENDIF

//================================

#IFDEF TOPMETAL 9

TRACE PROPERTY R(rm3)       R R res_err
TRACE PROPERTY R(rm4)       R R res_err
TRACE PROPERTY R(rm5)       R R res_err
TRACE PROPERTY R(rm6)       R R res_err
TRACE PROPERTY R(rm7)       R R res_err

#IFDEF TOP_METAL_NUM single
TRACE PROPERTY R(rm8)       R R res_err

#IFDEF TM2_WIDTH 2
TRACE PROPERTY R(rtm2_d2)   R R res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)   R R res_err
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 2
TRACE PROPERTY R(rtm1_d2)   R R res_err
#IFDEF TM2_WIDTH 2
TRACE PROPERTY R(rtm2_d2)   R R res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)   R R res_err
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 4
TRACE PROPERTY R(rtm1)   R R res_err
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)   R R res_err
#ENDIF
#ENDIF
#ENDIF
#ENDIF

//================================

#IFDEF TOPMETAL 8

TRACE PROPERTY R(rm3)       R R res_err
TRACE PROPERTY R(rm4)       R R res_err
TRACE PROPERTY R(rm5)       R R res_err
TRACE PROPERTY R(rm6)       R R res_err

#IFDEF TOP_METAL_NUM single
TRACE PROPERTY R(rm7)       R R res_err

#IFDEF TM2_WIDTH 2
TRACE PROPERTY R(rtm2_d2)       R R res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)       R R res_err
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 2
TRACE PROPERTY R(rtm1_d2)       R R res_err
#IFDEF TM2_WIDTH 2
TRACE PROPERTY R(rtm2_d2)       R R res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)       R R res_err
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 4
TRACE PROPERTY R(rtm1)       R R res_err
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)       R R res_err
#ENDIF
#ENDIF
#ENDIF
#ENDIF

//================================

#IFDEF TOPMETAL 7

TRACE PROPERTY R(rm3)       R R res_err
TRACE PROPERTY R(rm4)       R R res_err
TRACE PROPERTY R(rm5)       R R res_err

#IFDEF TOP_METAL_NUM single
TRACE PROPERTY R(rm6)       R R res_err

#IFDEF TM2_WIDTH 2
TRACE PROPERTY R(rtm2_d2)       R R res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)       R R res_err
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 2
TRACE PROPERTY R(rtm1_d2)       R R res_err
#IFDEF TM2_WIDTH 2
TRACE PROPERTY R(rtm2_d2)       R R res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)       R R res_err
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 4
TRACE PROPERTY R(rtm1)       R R res_err
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)       R R res_err
#ENDIF
#ENDIF
#ENDIF
#ENDIF

//=================================

#IFDEF TOPMETAL 6
TRACE PROPERTY R(rm3)       R R res_err
TRACE PROPERTY R(rm4)       R R res_err

#IFDEF TOP_METAL_NUM single
TRACE PROPERTY R(rm5)       R R res_err

#IFDEF TM2_WIDTH 2
TRACE PROPERTY R(rtm2_d2)       R R res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)       R R res_err
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 2
TRACE PROPERTY R(rtm1_d2)       R R res_err
#IFDEF TM2_WIDTH 2
TRACE PROPERTY R(rtm2_d2)       R R res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)       R R res_err
#ENDIF
#ENDIF
#IFDEF TM1_WIDTH 4
TRACE PROPERTY R(rtm1)       R R res_err
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)       R R res_err
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOPMETAL 5
TRACE PROPERTY R(rm3)       R R res_err

#IFDEF TOP_METAL_NUM single
TRACE PROPERTY R(rm4)       R R res_err

#IFDEF TM2_WIDTH 2
TRACE PROPERTY R(rtm2_d2)   R R res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)      R R res_err
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 2
TRACE PROPERTY R(rtm1_d2)       R R res_err
#IFDEF TM2_WIDTH 2
TRACE PROPERTY R(rtm2_d2)       R R res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)       R R res_err
#ENDIF
#ENDIF
#IFDEF TM1_WIDTH 4
TRACE PROPERTY R(rtm1)       R R res_err
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)       R R res_err
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOPMETAL 4
#IFDEF TOP_METAL_NUM single
#IFDEF TM2_WIDTH 2
TRACE PROPERTY R(rtm2_d2)       R R res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)       R R res_err
#ENDIF
#ENDIF
#ENDIF
#ENDIF


#IFDEF RC_RUN TRUE
TRACE PROPERTY R(rndif)       W W res_err
TRACE PROPERTY R(rndif)       L L res_err
TRACE PROPERTY R(rpdif)       W W res_err
TRACE PROPERTY R(rpdif)       L L res_err
TRACE PROPERTY R(rnpo)        W W res_err
TRACE PROPERTY R(rnpo)        L L res_err
TRACE PROPERTY R(rppo)        W W res_err
TRACE PROPERTY R(rppo)        L L res_err
TRACE PROPERTY R(rnwsti)      W W res_err
TRACE PROPERTY R(rnwsti)      L L res_err
TRACE PROPERTY R(rnwaa)       W W res_err
TRACE PROPERTY R(rnwaa)       L L res_err
TRACE PROPERTY R(rndifsab)    W W res_err
TRACE PROPERTY R(rndifsab)    L L res_err
TRACE PROPERTY R(rpdifsab)    W W res_err
TRACE PROPERTY R(rpdifsab)    L L res_err
TRACE PROPERTY R(rnposab)     W W res_err
TRACE PROPERTY R(rnposab)     L L res_err
TRACE PROPERTY R(rpposab)     W W res_err
TRACE PROPERTY R(rpposab)     L L res_err
TRACE PROPERTY R(rnpo_3t)     W W res_err
TRACE PROPERTY R(rnpo_3t)     L L res_err
TRACE PROPERTY R(rppo_3t)     W W res_err
TRACE PROPERTY R(rppo_3t)     L L res_err
TRACE PROPERTY R(rnposab_3t)  W W res_err
TRACE PROPERTY R(rnposab_3t)  L L res_err
TRACE PROPERTY R(rpposab_3t)  W W res_err
TRACE PROPERTY R(rpposab_3t)  L L res_err

TRACE PROPERTY R(rm1)       W W res_err
TRACE PROPERTY R(rm1)       L L res_err
TRACE PROPERTY R(rm2)       W W res_err
TRACE PROPERTY R(rm2)       L L res_err
TRACE PROPERTY R(rhrpo)       W W res_err
TRACE PROPERTY R(rhrpo)       L L res_err
TRACE PROPERTY R(rhrpo_3t)    W W res_err
TRACE PROPERTY R(rhrpo_3t)    L L res_err

#IFDEF ALPA_THICK THIN
TRACE PROPERTY R(ralpa)     W W res_err
TRACE PROPERTY R(ralpa)     L L res_err
#ELSE
TRACE PROPERTY R(ralpa_utm)     W W res_err
TRACE PROPERTY R(ralpa_utm)     L L res_err
#ENDIF

//================================

#IFDEF TOPMETAL 10

TRACE PROPERTY R(rm3)       W W res_err
TRACE PROPERTY R(rm3)       L L res_err
TRACE PROPERTY R(rm4)       W W res_err
TRACE PROPERTY R(rm4)       L L res_err
TRACE PROPERTY R(rm5)       W W res_err
TRACE PROPERTY R(rm5)       L L res_err
TRACE PROPERTY R(rm6)       W W res_err
TRACE PROPERTY R(rm6)       L L res_err
TRACE PROPERTY R(rm7)       W W res_err
TRACE PROPERTY R(rm7)       L L res_err
TRACE PROPERTY R(rm8)       W W res_err
TRACE PROPERTY R(rm8)       L L res_err

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 2
TRACE PROPERTY R(rtm1_d2)   W W res_err
TRACE PROPERTY R(rtm1_d2)   L L res_err
#IFDEF TM2_WIDTH 2
TRACE PROPERTY R(rtm2_d2)   W W res_err
TRACE PROPERTY R(rtm2_d2)   L L res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)   W W res_err
TRACE PROPERTY R(rtm2)   L L res_err
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 4
TRACE PROPERTY R(rtm1)   W W res_err
TRACE PROPERTY R(rtm1)   L L res_err
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)   W W res_err
TRACE PROPERTY R(rtm2)   L L res_err
#ENDIF
#ENDIF
#ENDIF
#ENDIF

//================================

#IFDEF TOPMETAL 9

TRACE PROPERTY R(rm3)       W W res_err
TRACE PROPERTY R(rm3)       L L res_err
TRACE PROPERTY R(rm4)       W W res_err
TRACE PROPERTY R(rm4)       L L res_err
TRACE PROPERTY R(rm5)       W W res_err
TRACE PROPERTY R(rm5)       L L res_err
TRACE PROPERTY R(rm6)       W W res_err
TRACE PROPERTY R(rm6)       L L res_err
TRACE PROPERTY R(rm7)       W W res_err
TRACE PROPERTY R(rm7)       L L res_err

#IFDEF TOP_METAL_NUM single
TRACE PROPERTY R(rm8)       W W res_err
TRACE PROPERTY R(rm8)       L L res_err

#IFDEF TM2_WIDTH 2
TRACE PROPERTY R(rtm2_d2)   W W res_err
TRACE PROPERTY R(rtm2_d2)   L L res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)   W W res_err
TRACE PROPERTY R(rtm2)   L L res_err
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 2
TRACE PROPERTY R(rtm1_d2)   W W res_err
TRACE PROPERTY R(rtm1_d2)   L L res_err
#IFDEF TM2_WIDTH 2
TRACE PROPERTY R(rtm2_d2)   W W res_err
TRACE PROPERTY R(rtm2_d2)   L L res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)   W W res_err
TRACE PROPERTY R(rtm2)   L L res_err
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 4
TRACE PROPERTY R(rtm1)   W W res_err
TRACE PROPERTY R(rtm1)   L L res_err
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)   W W res_err
TRACE PROPERTY R(rtm2)   L L res_err
#ENDIF
#ENDIF
#ENDIF
#ENDIF

//================================

#IFDEF TOPMETAL 8

TRACE PROPERTY R(rm3)       W W res_err
TRACE PROPERTY R(rm3)       L L res_err
TRACE PROPERTY R(rm4)       W W res_err
TRACE PROPERTY R(rm4)       L L res_err
TRACE PROPERTY R(rm5)       W W res_err
TRACE PROPERTY R(rm5)       L L res_err
TRACE PROPERTY R(rm6)       W W res_err
TRACE PROPERTY R(rm6)       L L res_err

#IFDEF TOP_METAL_NUM single
TRACE PROPERTY R(rm7)       W W res_err
TRACE PROPERTY R(rm7)       L L res_err

#IFDEF TM2_WIDTH 2
TRACE PROPERTY R(rtm2_d2)       W W res_err
TRACE PROPERTY R(rtm2_d2)       L L res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)       W W res_err
TRACE PROPERTY R(rtm2)       L L res_err
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 2
TRACE PROPERTY R(rtm1_d2)       W W res_err
TRACE PROPERTY R(rtm1_d2)       L L res_err
#IFDEF TM2_WIDTH 2
TRACE PROPERTY R(rtm2_d2)       W W res_err
TRACE PROPERTY R(rtm2_d2)       L L res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)       W W res_err
TRACE PROPERTY R(rtm2)       L L res_err
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 4
TRACE PROPERTY R(rtm1)       W W res_err
TRACE PROPERTY R(rtm1)       L L res_err
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)       W W res_err
TRACE PROPERTY R(rtm2)       L L res_err
#ENDIF
#ENDIF
#ENDIF
#ENDIF

//================================

#IFDEF TOPMETAL 7

TRACE PROPERTY R(rm3)       W W res_err
TRACE PROPERTY R(rm3)       L L res_err
TRACE PROPERTY R(rm4)       W W res_err
TRACE PROPERTY R(rm4)       L L res_err
TRACE PROPERTY R(rm5)       W W res_err
TRACE PROPERTY R(rm5)       L L res_err

#IFDEF TOP_METAL_NUM single
TRACE PROPERTY R(rm6)       W W res_err
TRACE PROPERTY R(rm6)       L L res_err

#IFDEF TM2_WIDTH 2
TRACE PROPERTY R(rtm2_d2)       W W res_err
TRACE PROPERTY R(rtm2_d2)       L L res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)       W W res_err
TRACE PROPERTY R(rtm2)       L L res_err
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 2
TRACE PROPERTY R(rtm1_d2)       W W res_err
TRACE PROPERTY R(rtm1_d2)       L L res_err
#IFDEF TM2_WIDTH 2
TRACE PROPERTY R(rtm2_d2)       W W res_err
TRACE PROPERTY R(rtm2_d2)       L L res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)       W W res_err
TRACE PROPERTY R(rtm2)       L L res_err
#ENDIF
#ENDIF

#IFDEF TM1_WIDTH 4
TRACE PROPERTY R(rtm1)       W W res_err
TRACE PROPERTY R(rtm1)       L L res_err
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)       W W res_err
TRACE PROPERTY R(rtm2)       L L res_err
#ENDIF
#ENDIF
#ENDIF
#ENDIF

//=================================

#IFDEF TOPMETAL 6
TRACE PROPERTY R(rm3)       W W res_err
TRACE PROPERTY R(rm3)       L L res_err
TRACE PROPERTY R(rm4)       W W res_err
TRACE PROPERTY R(rm4)       L L res_err

#IFDEF TOP_METAL_NUM single
TRACE PROPERTY R(rm5)       W W res_err
TRACE PROPERTY R(rm5)       L L res_err

#IFDEF TM2_WIDTH 2
TRACE PROPERTY R(rtm2_d2)       W W res_err
TRACE PROPERTY R(rtm2_d2)       L L res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)       W W res_err
TRACE PROPERTY R(rtm2)       L L res_err
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 2
TRACE PROPERTY R(rtm1_d2)       W W res_err
TRACE PROPERTY R(rtm1_d2)       L L res_err
#IFDEF TM2_WIDTH 2
TRACE PROPERTY R(rtm2_d2)       W W res_err
TRACE PROPERTY R(rtm2_d2)       L L res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)       W W res_err
TRACE PROPERTY R(rtm2)       L L res_err
#ENDIF
#ENDIF
#IFDEF TM1_WIDTH 4
TRACE PROPERTY R(rtm1)       W W res_err
TRACE PROPERTY R(rtm1)       L L res_err
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)       W W res_err
TRACE PROPERTY R(rtm2)       L L res_err
#ENDIF
#ENDIF
#ENDIF
#ENDIF

//=================================

#IFDEF TOPMETAL 5
TRACE PROPERTY R(rm3)       W W res_err
TRACE PROPERTY R(rm3)       L L res_err

#IFDEF TOP_METAL_NUM single
TRACE PROPERTY R(rm4)       W W res_err
TRACE PROPERTY R(rm4)       L L res_err

#IFDEF TM2_WIDTH 2
TRACE PROPERTY R(rtm2_d2)   W W res_err
TRACE PROPERTY R(rtm2_d2)   L L res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)      W W res_err
TRACE PROPERTY R(rtm2)      L L res_err
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 2
TRACE PROPERTY R(rtm1_d2)       W W res_err
TRACE PROPERTY R(rtm1_d2)       L L res_err
#IFDEF TM2_WIDTH 2
TRACE PROPERTY R(rtm2_d2)       W W res_err
TRACE PROPERTY R(rtm2_d2)       L L res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)       W W res_err
TRACE PROPERTY R(rtm2)       L L res_err
#ENDIF
#ENDIF
#IFDEF TM1_WIDTH 4
TRACE PROPERTY R(rtm1)       W W res_err
TRACE PROPERTY R(rtm1)       L L res_err
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)       W W res_err
TRACE PROPERTY R(rtm2)       L L res_err
#ENDIF
#ENDIF
#ENDIF
#ENDIF

//=================================

#IFDEF TOPMETAL 4
#IFDEF TOP_METAL_NUM single
#IFDEF TM2_WIDTH 2
TRACE PROPERTY R(rtm2_d2)       W W res_err
TRACE PROPERTY R(rtm2_d2)       L L res_err
#ENDIF
#IFDEF TM2_WIDTH 4
TRACE PROPERTY R(rtm2)       W W res_err
TRACE PROPERTY R(rtm2)       L L res_err
#ENDIF
#ENDIF
#ENDIF
#ENDIF


//*RF Resistor

TRACE PROPERTY rndifsab_ckt_rf   W W res_err
TRACE PROPERTY rndifsab_ckt_rf   L L res_err
TRACE PROPERTY rpdifsab_ckt_rf   W W res_err
TRACE PROPERTY rpdifsab_ckt_rf   L L res_err
TRACE PROPERTY rnposab_ckt_rf    W W res_err
TRACE PROPERTY rnposab_ckt_rf    L L res_err
TRACE PROPERTY rnposab_ckt_rf_3t W W res_err
TRACE PROPERTY rnposab_ckt_rf_3t L L res_err
TRACE PROPERTY rpposab_ckt_rf    W W res_err
TRACE PROPERTY rpposab_ckt_rf    L L res_err
TRACE PROPERTY rpposab_ckt_rf_3t W W res_err
TRACE PROPERTY rpposab_ckt_rf_3t L L res_err
TRACE PROPERTY rhrpo_ckt_rf      W W res_err
TRACE PROPERTY rhrpo_ckt_rf      L L res_err
TRACE PROPERTY rhrpo_ckt_rf_3t   W W res_err
TRACE PROPERTY rhrpo_ckt_rf_3t   L L res_err

#IFDEF TM2_WIDTH 15
TRACE PROPERTY rtm2_ckt_rf       W W res_err
TRACE PROPERTY rtm2_ckt_rf       L L res_err
#ENDIF

//*MOM
TRACE PROPERTY mom_rf     LR LR mom_err
TRACE PROPERTY mom_rf     NR NR 0
TRACE PROPERTY mom_rf     BM BM 0
TRACE PROPERTY mom_rf     TM TM 0
TRACE PROPERTY mom_rf     shielding shielding 0

TRACE PROPERTY mom_2t_ckt    LF LF mom_err
TRACE PROPERTY mom_2t_ckt    NF NF 0
TRACE PROPERTY mom_2t_ckt    BM BM 0
TRACE PROPERTY mom_2t_ckt    TM TM 0
TRACE PROPERTY mom_3t_ckt    LF LF mom_err
TRACE PROPERTY mom_3t_ckt    NF NF 0
TRACE PROPERTY mom_3t_ckt    BM BM 0
TRACE PROPERTY mom_3t_ckt    TM TM 0
TRACE PROPERTY mom_3t_ckt    shielding shielding 0
TRACE PROPERTY mom_4t_ckt    LF LF mom_err
TRACE PROPERTY mom_4t_ckt    NF NF 0
TRACE PROPERTY mom_4t_ckt    BM BM 0
TRACE PROPERTY mom_4t_ckt    TM TM 0
TRACE PROPERTY mom_5t_ckt    LF LF mom_err
TRACE PROPERTY mom_5t_ckt    NF NF 0
TRACE PROPERTY mom_5t_ckt    BM BM 0
TRACE PROPERTY mom_5t_ckt    TM TM 0
TRACE PROPERTY mom_5t_ckt    shielding shielding 0

//*Inductory

#IFDEF TOPMETAL 4
#ELSE
#IFDEF TOPMETAL 5
#ELSE
#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 4
#IFDEF TM2_WIDTH 15
TRACE PROPERTY ind_rf_t2 R R ind_err
TRACE PROPERTY ind_rf_t2 N N 0
TRACE PROPERTY ind_rf_t3 R R ind_err
TRACE PROPERTY ind_rf_t3 N N 0
TRACE PROPERTY ind_rf_t4 R R ind_err
TRACE PROPERTY ind_rf_t4 N N 0
TRACE PROPERTY ind_rf_t5 R R ind_err
TRACE PROPERTY ind_rf_t5 N N 0
TRACE PROPERTY ind_rf_t6 R R ind_err
TRACE PROPERTY ind_rf_t6 N N 0

TRACE PROPERTY ind_rf_t2_psub R R ind_err
TRACE PROPERTY ind_rf_t2_psub N N 0
TRACE PROPERTY ind_rf_t3_psub R R ind_err
TRACE PROPERTY ind_rf_t3_psub N N 0
TRACE PROPERTY ind_rf_t4_psub R R ind_err
TRACE PROPERTY ind_rf_t4_psub N N 0
TRACE PROPERTY ind_rf_t5_psub R R ind_err
TRACE PROPERTY ind_rf_t5_psub N N 0
TRACE PROPERTY ind_rf_t6_psub R R ind_err
TRACE PROPERTY ind_rf_t6_psub N N 0

TRACE PROPERTY ind_diff_t2 R R ind_err
TRACE PROPERTY ind_diff_t2 N N 0
TRACE PROPERTY ind_diff_t3 R R ind_err
TRACE PROPERTY ind_diff_t3 N N 0
TRACE PROPERTY ind_diff_t4 R R ind_err
TRACE PROPERTY ind_diff_t4 N N 0
TRACE PROPERTY ind_diff_t5 R R ind_err
TRACE PROPERTY ind_diff_t5 N N 0
TRACE PROPERTY ind_diff_t6 R R ind_err
TRACE PROPERTY ind_diff_t6 N N 0

TRACE PROPERTY ind_diff_t2_psub R R ind_err
TRACE PROPERTY ind_diff_t2_psub N N 0
TRACE PROPERTY ind_diff_t3_psub R R ind_err
TRACE PROPERTY ind_diff_t3_psub N N 0
TRACE PROPERTY ind_diff_t4_psub R R ind_err
TRACE PROPERTY ind_diff_t4_psub N N 0
TRACE PROPERTY ind_diff_t5_psub R R ind_err
TRACE PROPERTY ind_diff_t5_psub N N 0
TRACE PROPERTY ind_diff_t6_psub R R ind_err
TRACE PROPERTY ind_diff_t6_psub N N 0
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM single
#IFDEF TM2_WIDTH 15
TRACE PROPERTY ind_rf_1tm_t2 R R ind_err
TRACE PROPERTY ind_rf_1tm_t2 N N 0
TRACE PROPERTY ind_rf_1tm_t3 R R ind_err
TRACE PROPERTY ind_rf_1tm_t3 N N 0
TRACE PROPERTY ind_rf_1tm_t4 R R ind_err
TRACE PROPERTY ind_rf_1tm_t4 N N 0
TRACE PROPERTY ind_rf_1tm_t5 R R ind_err
TRACE PROPERTY ind_rf_1tm_t5 N N 0
//TRACE PROPERTY ind_rf_1tm_t6 R R ind_err
//TRACE PROPERTY ind_rf_1tm_t6 N N 0

TRACE PROPERTY ind_rf_1tm_t2_psub R R ind_err
TRACE PROPERTY ind_rf_1tm_t2_psub N N 0
TRACE PROPERTY ind_rf_1tm_t3_psub R R ind_err
TRACE PROPERTY ind_rf_1tm_t3_psub N N 0
TRACE PROPERTY ind_rf_1tm_t4_psub R R ind_err
TRACE PROPERTY ind_rf_1tm_t4_psub N N 0
TRACE PROPERTY ind_rf_1tm_t5_psub R R ind_err
TRACE PROPERTY ind_rf_1tm_t5_psub N N 0
//TRACE PROPERTY ind_rf_1tm_t6_psub R R ind_err
//TRACE PROPERTY ind_rf_1tm_t6_psub N N 0

TRACE PROPERTY ind_diff_1tm_t2 R R ind_err
TRACE PROPERTY ind_diff_1tm_t2 N N 0
TRACE PROPERTY ind_diff_1tm_t3 R R ind_err
TRACE PROPERTY ind_diff_1tm_t3 N N 0
TRACE PROPERTY ind_diff_1tm_t4 R R ind_err
TRACE PROPERTY ind_diff_1tm_t4 N N 0
TRACE PROPERTY ind_diff_1tm_t5 R R ind_err
TRACE PROPERTY ind_diff_1tm_t5 N N 0
//TRACE PROPERTY ind_diff_1tm_t6 R R ind_err
//TRACE PROPERTY ind_diff_1tm_t6 N N 0

TRACE PROPERTY ind_diff_1tm_t2_psub R R ind_err
TRACE PROPERTY ind_diff_1tm_t2_psub N N 0
TRACE PROPERTY ind_diff_1tm_t3_psub R R ind_err
TRACE PROPERTY ind_diff_1tm_t3_psub N N 0
TRACE PROPERTY ind_diff_1tm_t4_psub R R ind_err
TRACE PROPERTY ind_diff_1tm_t4_psub N N 0
TRACE PROPERTY ind_diff_1tm_t5_psub R R ind_err
TRACE PROPERTY ind_diff_1tm_t5_psub N N 0
//TRACE PROPERTY ind_diff_1tm_t6_psub R R ind_err
//TRACE PROPERTY ind_diff_1tm_t6_psub N N 0
#ENDIF

#IFDEF TM2_WIDTH 4
#IFDEF ALPA_THICK THIN
TRACE PROPERTY ind_rf_t1alpa_t1 R R ind_err
TRACE PROPERTY ind_rf_t1alpa_t1 N N 0
TRACE PROPERTY ind_rf_t1alpa_t2 R R ind_err
TRACE PROPERTY ind_rf_t1alpa_t2 N N 0
TRACE PROPERTY ind_rf_t1alpa_t3 R R ind_err
TRACE PROPERTY ind_rf_t1alpa_t3 N N 0
TRACE PROPERTY ind_rf_t1alpa_t4 R R ind_err
TRACE PROPERTY ind_rf_t1alpa_t4 N N 0
TRACE PROPERTY ind_rf_t1alpa_t5 R R ind_err
TRACE PROPERTY ind_rf_t1alpa_t5 N N 0

TRACE PROPERTY ind_rf_t1alpa_psub_t1 R R ind_err
TRACE PROPERTY ind_rf_t1alpa_psub_t1 N N 0
TRACE PROPERTY ind_rf_t1alpa_psub_t2 R R ind_err
TRACE PROPERTY ind_rf_t1alpa_psub_t2 N N 0
TRACE PROPERTY ind_rf_t1alpa_psub_t3 R R ind_err
TRACE PROPERTY ind_rf_t1alpa_psub_t3 N N 0
TRACE PROPERTY ind_rf_t1alpa_psub_t4 R R ind_err
TRACE PROPERTY ind_rf_t1alpa_psub_t4 N N 0
TRACE PROPERTY ind_rf_t1alpa_psub_t5 R R ind_err
TRACE PROPERTY ind_rf_t1alpa_psub_t5 N N 0

TRACE PROPERTY ind_rf_diff_t1alpa_t1 R R ind_err
TRACE PROPERTY ind_rf_diff_t1alpa_t1 N N 0
TRACE PROPERTY ind_rf_diff_t1alpa_t2 R R ind_err
TRACE PROPERTY ind_rf_diff_t1alpa_t2 N N 0
TRACE PROPERTY ind_rf_diff_t1alpa_t3 R R ind_err
TRACE PROPERTY ind_rf_diff_t1alpa_t3 N N 0
TRACE PROPERTY ind_rf_diff_t1alpa_t4 R R ind_err
TRACE PROPERTY ind_rf_diff_t1alpa_t4 N N 0
TRACE PROPERTY ind_rf_diff_t1alpa_t5 R R ind_err
TRACE PROPERTY ind_rf_diff_t1alpa_t5 N N 0

TRACE PROPERTY diff_t1alpa_psub_t1 R R ind_err
TRACE PROPERTY diff_t1alpa_psub_t1 N N 0
TRACE PROPERTY diff_t1alpa_psub_t2 R R ind_err
TRACE PROPERTY diff_t1alpa_psub_t2 N N 0
TRACE PROPERTY diff_t1alpa_psub_t3 R R ind_err
TRACE PROPERTY diff_t1alpa_psub_t3 N N 0
TRACE PROPERTY diff_t1alpa_psub_t4 R R ind_err
TRACE PROPERTY diff_t1alpa_psub_t4 N N 0
TRACE PROPERTY diff_t1alpa_psub_t5 R R ind_err
TRACE PROPERTY diff_t1alpa_psub_t5 N N 0
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM single
#IFDEF TM2_WIDTH 15
#IFDEF ALPA_THICK THIN
TRACE PROPERTY spi_ind_rf_1p1 R R ind_err
TRACE PROPERTY spi_ind_rf_1p2 R R ind_err
TRACE PROPERTY spi_ind_rf_1p3 R R ind_err

TRACE PROPERTY spi_ind_rf_psub_1p1 R R ind_err
TRACE PROPERTY spi_ind_rf_psub_1p2 R R ind_err
TRACE PROPERTY spi_ind_rf_psub_1p3 R R ind_err
#ENDIF

#IFDEF ALPA_THICK THICK
TRACE PROPERTY spi_ind_rf_RDL2d8_psub_1p1 R R ind_err
TRACE PROPERTY spi_ind_rf_RDL2d8_psub_1p2 R R ind_err
TRACE PROPERTY spi_ind_rf_RDL2d8_psub_1p3 R R ind_err
TRACE PROPERTY spi_ind_rf_RDL2d8_psub_2p3 R R ind_err
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 4
#IFDEF TM2_WIDTH 15
#IFDEF ALPA_THICK THIN
TRACE PROPERTY spi_ind_rf_1p1 R R ind_err
TRACE PROPERTY spi_ind_rf_1p2 R R ind_err
TRACE PROPERTY spi_ind_rf_1p3 R R ind_err

TRACE PROPERTY spi_ind_rf_psub_1p1 R R ind_err
TRACE PROPERTY spi_ind_rf_psub_1p2 R R ind_err
TRACE PROPERTY spi_ind_rf_psub_1p3 R R ind_err
#ENDIF

#IFDEF ALPA_THICK THICK
TRACE PROPERTY spi_ind_rf_RDL2d8_psub_1p1 R R ind_err
TRACE PROPERTY spi_ind_rf_RDL2d8_psub_1p2 R R ind_err
TRACE PROPERTY spi_ind_rf_RDL2d8_psub_1p3 R R ind_err
TRACE PROPERTY spi_ind_rf_RDL2d8_psub_2p3 R R ind_err
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM single
#IFDEF TM2_WIDTH 15
#IFDEF ALPA_THICK THIN
TRACE PROPERTY rf_ind_alutm_psub    R R ind_err
TRACE PROPERTY rf_ind_alutm_psub    N N 0
TRACE PROPERTY rf_ind_alutm_psub    W W ind_err
TRACE PROPERTY ind_3Tdiff_alutm R R ind_err
TRACE PROPERTY ind_3Tdiff_alutm N N 0
TRACE PROPERTY ind_3Tdiff_alutm W W ind_err
TRACE PROPERTY ind_2Tdiff_alutm R R ind_err
TRACE PROPERTY ind_2Tdiff_alutm N N 0
TRACE PROPERTY ind_2Tdiff_alutm W W ind_err
TRACE PROPERTY ind_3Tdiff_alutm_psub R R ind_err
TRACE PROPERTY ind_3Tdiff_alutm_psub N N 0
TRACE PROPERTY ind_3Tdiff_alutm_psub W W ind_err
TRACE PROPERTY ind_2Tdiff_alutm_psub R R ind_err
TRACE PROPERTY ind_2Tdiff_alutm_psub N N 0
TRACE PROPERTY ind_2Tdiff_alutm_psub W W ind_err
#ENDIF

#IFDEF ALPA_THICK THICK
TRACE PROPERTY rf_ind_2d8alutm_psub R R ind_err
TRACE PROPERTY rf_ind_2d8alutm_psub N N 0
TRACE PROPERTY rf_ind_2d8alutm_psub W W ind_err
TRACE PROPERTY ind_2Tdiff_2d8alutm_psub R R ind_err
TRACE PROPERTY ind_2Tdiff_2d8alutm_psub N N 0
TRACE PROPERTY ind_2Tdiff_2d8alutm_psub W W ind_err
TRACE PROPERTY ind_3Tdiff_2d8alutm_psub R R ind_err
TRACE PROPERTY ind_3Tdiff_2d8alutm_psub N N 0
TRACE PROPERTY ind_3Tdiff_2d8alutm_psub W W ind_err
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 4
#IFDEF TM2_WIDTH 15
#IFDEF ALPA_THICK THIN
TRACE PROPERTY rf_ind_alutm_psub    R R ind_err
TRACE PROPERTY rf_ind_alutm_psub    N N 0
TRACE PROPERTY rf_ind_alutm_psub    W W ind_err
TRACE PROPERTY ind_3Tdiff_alutm R R ind_err 
TRACE PROPERTY ind_3Tdiff_alutm N N 0 
TRACE PROPERTY ind_3Tdiff_alutm W W ind_err 
TRACE PROPERTY ind_2Tdiff_alutm R R ind_err 
TRACE PROPERTY ind_2Tdiff_alutm N N 0 
TRACE PROPERTY ind_2Tdiff_alutm W W ind_err 
TRACE PROPERTY ind_3Tdiff_alutm_psub R R ind_err
TRACE PROPERTY ind_3Tdiff_alutm_psub N N 0
TRACE PROPERTY ind_3Tdiff_alutm_psub W W ind_err
TRACE PROPERTY ind_2Tdiff_alutm_psub R R ind_err
TRACE PROPERTY ind_2Tdiff_alutm_psub N N 0
TRACE PROPERTY ind_2Tdiff_alutm_psub W W ind_err
#ENDIF

#IFDEF ALPA_THICK THICK
TRACE PROPERTY rf_ind_2d8alutm_psub R R ind_err
TRACE PROPERTY rf_ind_2d8alutm_psub N N 0
TRACE PROPERTY rf_ind_2d8alutm_psub W W ind_err
TRACE PROPERTY ind_2Tdiff_2d8alutm_psub R R ind_err
TRACE PROPERTY ind_2Tdiff_2d8alutm_psub N N 0
TRACE PROPERTY ind_2Tdiff_2d8alutm_psub W W ind_err
TRACE PROPERTY ind_3Tdiff_2d8alutm_psub R R ind_err
TRACE PROPERTY ind_3Tdiff_2d8alutm_psub N N 0
TRACE PROPERTY ind_3Tdiff_2d8alutm_psub W W ind_err
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#ENDIF
#ENDIF

LVS DEVICE TYPE RESISTOR rndif_ckt    [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rpdif_ckt    [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rnpo_ckt     [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rppo_ckt     [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rnwsti_ckt   [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rnwaa_ckt    [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rndifsab_ckt [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rpdifsab_ckt [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rnposab_ckt  [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rpposab_ckt  [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rhrpo_ckt    [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rnpo_3t_ckt  [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rppo_3t_ckt  [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rnposab_3t_ckt [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rpposab_3t_ckt [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rhrpo_3t_ckt [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rm1_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rm2_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rm3_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT

#IFDEF ALPA_THICK THIN
LVS DEVICE TYPE RESISTOR ralpa_ckt      [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ELSE
LVS DEVICE TYPE RESISTOR ralpa_utm_ckt  [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF

#IFDEF TOPMETAL  10
#IFDEF TOP_METAL_NUM double
LVS DEVICE TYPE RESISTOR rm4_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rm5_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rm6_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rm7_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rm8_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#IFDEF TM1_WIDTH 2
LVS DEVICE TYPE RESISTOR rtm1_d2_ckt    [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#IFDEF TM2_WIDTH 2 
LVS DEVICE TYPE RESISTOR rtm2_d2_ckt    [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF
#IFDEF TM2_WIDTH 4 
LVS DEVICE TYPE RESISTOR rtm2_ckt       [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF
#ENDIF
#IFDEF TM1_WIDTH 4
LVS DEVICE TYPE RESISTOR rtm1_ckt       [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#IFDEF TM2_WIDTH 4
LVS DEVICE TYPE RESISTOR rtm2_ckt       [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOPMETAL  9
#IFDEF TOP_METAL_NUM double
LVS DEVICE TYPE RESISTOR rm4_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rm5_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rm6_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rm7_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#IFDEF TM1_WIDTH 2
LVS DEVICE TYPE RESISTOR rtm1_d2_ckt    [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#IFDEF TM2_WIDTH 2
LVS DEVICE TYPE RESISTOR rtm2_d2_ckt    [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF
#IFDEF TM2_WIDTH 4
LVS DEVICE TYPE RESISTOR rtm2_ckt       [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF
#ENDIF
#IFDEF TM1_WIDTH 4
LVS DEVICE TYPE RESISTOR rtm1_ckt       [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#IFDEF TM2_WIDTH 4
LVS DEVICE TYPE RESISTOR rtm2_ckt       [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOP_METAL_NUM single
LVS DEVICE TYPE RESISTOR rm4_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rm5_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rm6_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rm7_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rm8_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#IFDEF TM2_WIDTH 2
LVS DEVICE TYPE RESISTOR rtm2_d2_ckt    [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF
#IFDEF TM2_WIDTH 4
LVS DEVICE TYPE RESISTOR rtm2_ckt       [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOPMETAL  8
#IFDEF TOP_METAL_NUM double
LVS DEVICE TYPE RESISTOR rm4_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rm5_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rm6_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#IFDEF TM1_WIDTH 2
LVS DEVICE TYPE RESISTOR rtm1_d2_ckt    [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#IFDEF TM2_WIDTH 2
LVS DEVICE TYPE RESISTOR rtm2_d2_ckt    [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF
#IFDEF TM2_WIDTH 4
LVS DEVICE TYPE RESISTOR rtm2_ckt       [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF
#ENDIF
#IFDEF TM1_WIDTH 4
LVS DEVICE TYPE RESISTOR rtm1_ckt       [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#IFDEF TM2_WIDTH 4
LVS DEVICE TYPE RESISTOR rtm2_ckt       [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF
#ENDIF
#ENDIF
#IFDEF TOP_METAL_NUM single
LVS DEVICE TYPE RESISTOR rm4_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rm5_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rm6_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rm7_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#IFDEF TM2_WIDTH 2
LVS DEVICE TYPE RESISTOR rtm2_d2_ckt    [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF
#IFDEF TM2_WIDTH 4
LVS DEVICE TYPE RESISTOR rtm2_ckt       [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOPMETAL  7
#IFDEF TOP_METAL_NUM double
LVS DEVICE TYPE RESISTOR rm4_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rm5_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#IFDEF TM1_WIDTH 2
LVS DEVICE TYPE RESISTOR rtm1_d2_ckt    [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#IFDEF TM2_WIDTH 2
LVS DEVICE TYPE RESISTOR rtm2_d2_ckt    [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF
#IFDEF TM2_WIDTH 4
LVS DEVICE TYPE RESISTOR rtm2_ckt       [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF
#ENDIF
#IFDEF TM1_WIDTH 4
LVS DEVICE TYPE RESISTOR rtm1_ckt       [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#IFDEF TM2_WIDTH 4
LVS DEVICE TYPE RESISTOR rtm2_ckt       [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF
#ENDIF
#ENDIF
#IFDEF TOP_METAL_NUM single
LVS DEVICE TYPE RESISTOR rm4_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rm5_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rm6_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#IFDEF TM2_WIDTH 2
LVS DEVICE TYPE RESISTOR rtm2_d2_ckt    [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF
#IFDEF TM2_WIDTH 4
LVS DEVICE TYPE RESISTOR rtm2_ckt       [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF
#ENDIF
#ENDIF

#IFDEF TOPMETAL  6
#IFDEF TOP_METAL_NUM double
LVS DEVICE TYPE RESISTOR rm4_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#IFDEF TM1_WIDTH 2
LVS DEVICE TYPE RESISTOR rtm1_d2_ckt    [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#IFDEF TM2_WIDTH 2
LVS DEVICE TYPE RESISTOR rtm2_d2_ckt    [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF
#IFDEF TM2_WIDTH 4
LVS DEVICE TYPE RESISTOR rtm2_ckt       [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF
#ENDIF
#IFDEF TM1_WIDTH 4
LVS DEVICE TYPE RESISTOR rtm1_ckt       [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#IFDEF TM2_WIDTH 4
LVS DEVICE TYPE RESISTOR rtm2_ckt       [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF
#ENDIF
#ENDIF
#IFDEF TOP_METAL_NUM single
LVS DEVICE TYPE RESISTOR rm4_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rm5_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#IFDEF TM2_WIDTH 2
LVS DEVICE TYPE RESISTOR rtm2_d2_ckt    [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF
#IFDEF TM2_WIDTH 4
LVS DEVICE TYPE RESISTOR rtm2_ckt       [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF

#ENDIF
#ENDIF

#IFDEF TOPMETAL  5
#IFDEF TOP_METAL_NUM double
#IFDEF TM1_WIDTH 2
LVS DEVICE TYPE RESISTOR rtm1_d2_ckt    [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#IFDEF TM2_WIDTH 2
LVS DEVICE TYPE RESISTOR rtm2_d2_ckt    [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF
#IFDEF TM2_WIDTH 4
LVS DEVICE TYPE RESISTOR rtm2_ckt       [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF
#ENDIF
#IFDEF TM1_WIDTH 4
LVS DEVICE TYPE RESISTOR rtm1_ckt       [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#IFDEF TM2_WIDTH 4
LVS DEVICE TYPE RESISTOR rtm2_ckt       [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF
#ENDIF
#ENDIF
#IFDEF TOP_METAL_NUM single
LVS DEVICE TYPE RESISTOR rm4_ckt        [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#IFDEF TM2_WIDTH 2
LVS DEVICE TYPE RESISTOR rtm2_d2_ckt    [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF
#IFDEF TM2_WIDTH 4
LVS DEVICE TYPE RESISTOR rtm2_ckt       [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF

#ENDIF
#ENDIF

#IFDEF TOPMETAL  4
#IFDEF TOP_METAL_NUM single
#IFDEF TM2_WIDTH 2
LVS DEVICE TYPE RESISTOR rtm2_d2_ckt    [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF
#IFDEF TM2_WIDTH 4
LVS DEVICE TYPE RESISTOR rtm2_ckt       [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF

#ENDIF
#ENDIF

//*RF Resistor
LVS DEVICE TYPE RESISTOR rndifsab_ckt_rf   [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rpdifsab_ckt_rf   [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rnposab_ckt_rf    [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rnposab_ckt_rf_3t [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rpposab_ckt_rf    [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rpposab_ckt_rf_3t [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rhrpo_ckt_rf      [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE RESISTOR rhrpo_ckt_rf_3t   [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT


#IFDEF TM2_WIDTH 15
LVS DEVICE TYPE RESISTOR rtm2_ckt_rf    [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
#ENDIF

LVS DEVICE TYPE NMOS n12ll_mis_ckt 
LVS DEVICE TYPE NMOS nt12ll_mis_ckt 
LVS DEVICE TYPE NMOS n18ll_mis_ckt 
LVS DEVICE TYPE NMOS nt18ll_mis_ckt 
LVS DEVICE TYPE NMOS nlvt12ll_mis_ckt 
LVS DEVICE TYPE NMOS nhvt12ll_mis_ckt 
LVS DEVICE TYPE NMOS dnw12ll_ckt
LVS DEVICE TYPE NMOS dnwulln_ckt
LVS DEVICE TYPE NMOS dnw18ll_ckt
LVS DEVICE TYPE NMOS dnwlvt12ll_ckt
LVS DEVICE TYPE NMOS dnwhvt12ll_ckt
LVS DEVICE TYPE NMOS ulln_mis_ckt
LVS DEVICE TYPE PMOS p12ll_mis_ckt 
LVS DEVICE TYPE PMOS p18ll_mis_ckt 
LVS DEVICE TYPE PMOS phvt12ll_mis_ckt 
LVS DEVICE TYPE PMOS plvt12ll_mis_ckt 
LVS DEVICE TYPE PMOS ullp_mis_ckt
LVS DEVICE TYPE NMOS n12ll_egl4
LVS DEVICE TYPE PMOS p12ll_egl4
LVS DEVICE TYPE NMOS n25ll_egl4
LVS DEVICE TYPE PMOS p25ll_egl4
LVS DEVICE TYPE NMOS nod33ll_egl4
LVS DEVICE TYPE PMOS pod33ll_egl4
LVS DEVICE TYPE NMOS n12ll_egl1
LVS DEVICE TYPE PMOS p12ll_egl1
LVS DEVICE TYPE NMOS n25ll_egl1
LVS DEVICE TYPE PMOS p25ll_egl1
LVS DEVICE TYPE NMOS nod33ll_egl1
LVS DEVICE TYPE PMOS pod33ll_egl1
LVS DEVICE TYPE NMOS n12ll_sab_egl4
LVS DEVICE TYPE PMOS p12ll_sab_egl4
LVS DEVICE TYPE NMOS n25ll_sab_egl4
LVS DEVICE TYPE PMOS p25ll_sab_egl4
LVS DEVICE TYPE NMOS nod33ll_sab_egl4
LVS DEVICE TYPE PMOS pod33ll_sab_egl4

/*
LVS DEVICE TYPE NMOS nld50ll_ckt 
LVS DEVICE TYPE NMOS nld50llod_ckt 
LVS DEVICE TYPE NMOS nld50ll_sh_ckt 
LVS DEVICE TYPE NMOS nld50llod_sh_ckt 
LVS DEVICE TYPE PMOS pld50ll_ckt 
LVS DEVICE TYPE PMOS pld50llod_ckt 
LVS DEVICE TYPE PMOS pld50ll_sh_ckt 
LVS DEVICE TYPE PMOS pld50llod_sh_ckt 
*/
#IFDEF IO 1825
LVS DEVICE TYPE NMOS n25ll_mis_ckt
LVS DEVICE TYPE NMOS nt25ll_mis_ckt
LVS DEVICE TYPE NMOS nod33ll_mis_ckt
LVS DEVICE TYPE NMOS nud18ll_mis_ckt
LVS DEVICE TYPE NMOS ntod33ll_mis_ckt
LVS DEVICE TYPE NMOS ntud18ll_mis_ckt
LVS DEVICE TYPE PMOS p25ll_mis_ckt
LVS DEVICE TYPE PMOS pod33ll_mis_ckt
LVS DEVICE TYPE PMOS pud18ll_mis_ckt
LVS DEVICE TYPE NMOS dnw25ll_ckt
LVS DEVICE TYPE NMOS dnwod33ll_ckt
LVS DEVICE TYPE NMOS dnwud18ll_ckt
#ENDIF

#IFDEF SRAM SUBCKT
/*
LVS DEVICE TYPE NMOS UDNPDSVT_ckt   
LVS DEVICE TYPE NMOS UDNPGSVT_ckt   
LVS DEVICE TYPE PMOS UDPLSVT_ckt    
LVS DEVICE TYPE NMOS UDNPDHVT_ckt   
LVS DEVICE TYPE NMOS UDNPGHVT_ckt   
LVS DEVICE TYPE PMOS UDPLHVT_ckt    
*/
LVS DEVICE TYPE NMOS NPDSVT_ckt   
LVS DEVICE TYPE NMOS NPGSVT_ckt   
LVS DEVICE TYPE PMOS PLSVT_ckt
LVS DEVICE TYPE NMOS STNPDHVT_ckt   
LVS DEVICE TYPE NMOS STNPGHVT_ckt   
LVS DEVICE TYPE PMOS STPLHVT_ckt    
LVS DEVICE TYPE NMOS DNNPDSVT_ckt   
LVS DEVICE TYPE NMOS DNNPGSVT_ckt   
LVS DEVICE TYPE PMOS DNPLSVT_ckt    
LVS DEVICE TYPE NMOS DNNPDHVT_ckt   
LVS DEVICE TYPE NMOS DNNPGHVT_ckt   
LVS DEVICE TYPE PMOS DNPLHVT_ckt

LVS DEVICE TYPE NMOS DNNPDULL_ckt
LVS DEVICE TYPE NMOS DNNPGULL_ckt
LVS DEVICE TYPE PMOS DNPLULL_ckt

LVS DEVICE TYPE NMOS NPDDPSVT_ckt   
LVS DEVICE TYPE NMOS NPGADPSVT_ckt  
LVS DEVICE TYPE NMOS NPGBDPSVT_ckt  
LVS DEVICE TYPE PMOS PLDPSVT_ckt    
LVS DEVICE TYPE NMOS DPNPDHVT_ckt   
LVS DEVICE TYPE NMOS DPNPGAHVT_ckt  
LVS DEVICE TYPE NMOS DPNPGBHVT_ckt  
LVS DEVICE TYPE PMOS DPPLHVT_ckt 

LVS DEVICE TYPE NMOS DPNPDULL_ckt   
LVS DEVICE TYPE NMOS DPNPGAULL_ckt  
LVS DEVICE TYPE NMOS DPNPGBULL_ckt  
LVS DEVICE TYPE PMOS DPPLULL_ckt


/*
LVS DEVICE TYPE NMOS RFNPDSVT_ckt   
LVS DEVICE TYPE NMOS RFNPGASVT_ckt  
LVS DEVICE TYPE NMOS RFNPGBSVT_ckt  
LVS DEVICE TYPE PMOS RFPLSVT_ckt   
*/ 
LVS DEVICE TYPE NMOS RFNPDHVT_ckt   
LVS DEVICE TYPE NMOS RFNPGAHVT_ckt  
LVS DEVICE TYPE NMOS RFNPGBHVT_ckt  
LVS DEVICE TYPE PMOS RFPLHVT_ckt    
#ENDIF

LVS DEVICE TYPE BIPOLAR pnp12a4ll_mis_ckt      [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR pnp12a25ll_mis_ckt     [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR pnp12a100ll_mis_ckt    [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR pnp18a4ll_mis_ckt      [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR pnp18a25ll_mis_ckt     [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR pnp18a100ll_mis_ckt    [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR pnp25a4ll_mis_ckt      [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR pnp25a25ll_mis_ckt     [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR pnp25a100ll_mis_ckt    [C=COLL B=BASE E=EMIT]

LVS DEVICE TYPE BIPOLAR npn12a4ll_mis_ckt      [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR npn12a25ll_mis_ckt     [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR npn12a100ll_mis_ckt    [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR npn18a4ll_mis_ckt      [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR npn18a25ll_mis_ckt     [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR npn18a100ll_mis_ckt    [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR npn25a4ll_mis_ckt      [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR npn25a25ll_mis_ckt     [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR npn25a100ll_mis_ckt    [C=COLL B=BASE E=EMIT]

LVS DEVICE TYPE BIPOLAR pnp12a4ll_sh_mis_ckt      [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR pnp12a25ll_sh_mis_ckt     [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR pnp12a100ll_sh_mis_ckt    [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR pnp18a4ll_sh_mis_ckt      [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR pnp18a25ll_sh_mis_ckt     [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR pnp18a100ll_sh_mis_ckt    [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR pnp25a4ll_sh_mis_ckt      [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR pnp25a25ll_sh_mis_ckt     [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR pnp25a100ll_sh_mis_ckt    [C=COLL B=BASE E=EMIT]

LVS DEVICE TYPE BIPOLAR npn12a4ll_sh_mis_ckt      [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR npn12a25ll_sh_mis_ckt     [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR npn12a100ll_sh_mis_ckt    [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR npn18a4ll_sh_mis_ckt      [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR npn18a25ll_sh_mis_ckt     [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR npn18a100ll_sh_mis_ckt    [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR npn25a4ll_sh_mis_ckt      [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR npn25a25ll_sh_mis_ckt     [C=COLL B=BASE E=EMIT]
LVS DEVICE TYPE BIPOLAR npn25a100ll_sh_mis_ckt    [C=COLL B=BASE E=EMIT]

LVS DEVICE TYPE CAPACITOR mom_2t_ckt   [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE CAPACITOR mom_3t_ckt   [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
LVS DEVICE TYPE CAPACITOR mom_rf       [POS=PLUS NEG=MINUS]  SOURCE  LAYOUT
//////////////////////////////////////////////////////////
//* ERC Check                                           //
//////////////////////////////////////////////////////////
#IFDEF ERCCHECK TRUE

//*Report nodes with a path to ground but not power
ERC PATHCHK GROUND && !POWER NOFLOAT

//*Report nodes with a path to power but not ground
ERC PATHCHK POWER && !GROUND NOFLOAT

//*Report nodes without label
ERC PATHCHK !LABELED NOFLOAT

//*Report nodes without a path to both power and ground
pathchk_bad
{@nodes without a path to both power and ground
pathchk_layer1 =PATHCHK !POWER &&!GROUND NOFLOAT
pathchk_layer2 =PATHCHK !LABELED NOFLOAT
(pathchk_layer1 AND pathchk_layer2) NOT INTERACT parasitic_nw
}

//*Report pwell pick-up layer ptd connect to power nets.
ptd_to_power { @ Pwell pick-up layer ptd texted with power net.
        (NET ptd LVS_POWER_NAME) NOT INTERACT AADUM }

//*Report pwell pick-up layer ptap_outside_dnw connect to non-ground nets.
ptap_outside_dnw_ground = (NET ptd LVS_GROUND_NAME) NOT DNW 
ptap_outside_dnw_non_ground{@ pwell pick-up layer connect to non-ground nets.
                ((ptd NOT DNW) NOT ptap_outside_dnw_ground) NOT INTERACT AADUM }

//*Report nwell pick-up layer ntd connect to ground nets.
ntd_to_ground { @ Nwell pick-up layer ntd texted with ground net.
        (NET ntd LVS_GROUND_NAME) NOT INTERACT AADUM }

// 1.2V NMOS S/D connect to both Power and Ground nets
nsdtoground = NET nsd LVS_GROUND_NAME
T1nsd = gate_core TOUCH nsdtoground
nsdtopower = NET nsd LVS_POWER_NAME
T2nsd = gate_core TOUCH nsdtopower
mntopg {@ 1.2V NMOS(n12ll) connect to both Power and Ground.
        T1nsd AND T2nsd }

// 1.2V PMOS S/D connect to both Power and Ground Nets.
psdtoground = NET psd LVS_GROUND_NAME
T1psd = gate_core TOUCH psdtoground
psdtopower  = NET psd LVS_POWER_NAME
T2psd = gate_core TOUCH psdtopower
mptopg {@ 1.2V PMOS(p12ll) connect to both Power and Ground.
        T1psd AND T2psd}

//*Report floating nwell with no pick up
nwell_check = (nwell NOT INTERACT DMPNP) NOT INTERACT RESNW
nwell_floating { @ nwell is floating and there is no pick up
       nwell_check not interact (ntd NOT INTERACT AADUM) }

//*Report nwell not connecting to power 
nwell_not_to_power { @ nwell is not connecting to power net
      nwell_with_ntd = nwell_check interact (ntd NOT INTERACT AADUM)
      nwell_with_ntd NOT NET LVS_POWER_NAME }

//*Report pwell not connecting to ground net
pwell_not_to_ground { @ pwell is not connecting to ground net
      (ptd NOT NET LVS_GROUND_NAME) NOT INTERACT AADUM  }

ERC SELECT CHECK ptd_to_power ntd_to_ground mptopg mntopg pathchk_bad ptap_outside_dnw_non_ground

#IFDEF NWELL_FLOATING_CHECK TRUE
ERC SELECT CHECK nwell_floating
#ENDIF

#IFDEF NWELL_NOT_TO_POWER_CHECK TRUE
ERC SELECT CHECK nwell_not_to_power
#ENDIF

#IFDEF PWELL_NOT_TO_GROUND_CHECK TRUE
ERC SELECT CHECK pwell_not_to_ground
#ENDIF

#ENDIF

//*END//

TVF FUNCTION device_function [/*

    package require CalibreLVS_DEVICE_DFM
    namespace import device::*
    proc catching_expr { arg } {
        #puts "called catching_expr"
        set rtval 0.0
        if { [ catch {
            set rtval [ expr $arg ]
        } result ] } {
            global errorCode
            set tmpError $errorCode
            #puts $result
            if { [ string match "ARITH UNDERFLOW *" $errorCode ] } {
                #puts "$errorCode error caught during expr"
                set rtval 0.0
            } elseif { [ string match "ARITH OVERFLOW *" $errorCode ] } {
                #puts "$errorCode error caught during expr"
                set rtval 1e200
            } else {
                #puts "error propagated during expr"
                error $result $tmpError
            }
        }
        return $rtval
    }

proc calc_sca_dfm__getsum { tclvec pgw units } {

    # pgw = perpendicular gate width (L for sides, W for ends)

    set SCref 1.0
    set sum 0.0
    set scale 0.9

    foreach segment $tclvec {
        foreach { width encval } $segment {
            set width [ expr { $width * $units * $scale  } ]
            set encval [ expr { $encval * $units * $scale } ]
            set sum [ expr { $sum + $width * ( \
                                                   $SCref * $SCref / ( $encval ) - \
                                                   $SCref * $SCref / ( $encval + $pgw * $scale ) \
                                                   ) } ]
        }
    }

    return $sum
}

proc calc_sca_dfm { PER_1 PER_2 PAR_1 PAR_2 W L UNITS } {

    set scale 0.9 

    set side_1 [ device::dfm_vec_measurements $PER_1 ]
    set side_2 [ device::dfm_vec_measurements $PER_2 ]
    set sides  [ concat $side_1 $side_2 ]

    set end_1  [ device::dfm_vec_measurements $PAR_1 ]
    set end_2  [ device::dfm_vec_measurements $PAR_2 ]

    set sum [ expr { [ calc_sca_dfm__getsum $sides [$L] [$UNITS] ] + \
                         [ calc_sca_dfm__getsum $end_1 [$W] [$UNITS] ] + \
                         [ calc_sca_dfm__getsum $end_2 [$W] [$UNITS] ] } ]

    return [ expr { $sum / ( [$W] * $scale * [$L] * $scale * 1e12 ) } ]
}

proc calc_scbscc_dfm__getsum { tclvec pgw units em d1 d2 } {

    # pgw = perpendicular gate width (L for sides, W for ends)
    # em = multiplier for args to exp
    # d1 = denominator1 (for 1st and 3rd terms)
    # d2 = denominator2 (for 2nd and 4th terms)

    set SCref 1.0
    set sum 0.0
    set constant 1e6
    set scale 0.9

    foreach segment $tclvec {
        foreach { width encval } $segment {
            set width [ expr { $width * $units * $scale } ]
            set encval [ expr { $encval * $units * $scale } ]
            set encval_1 [ expr { ( $encval ) } ]
            set encval_2 [ expr { ( $encval + $pgw * $scale ) } ]
            set encval_1_exp [ catching_expr "exp( $em * $encval_1 * $constant / $SCref )" ]
            set encval_2_exp [ catching_expr "exp( $em * $encval_2 * $constant / $SCref )" ]
            set sum [ expr { $sum + $width * $constant * ( \
                                                               $encval_1 * $constant * ( $encval_1_exp/$d1 ) + \
                                                               $SCref * ( $encval_1_exp/$d2 ) - \
                                                               $encval_2 * $constant * ( $encval_2_exp/$d1 ) - \
                                                               $SCref * ( $encval_2_exp/$d2 ) \
                                                               ) } ]
        }
    }

    return $sum
}


proc calc_scb_dfm { PER_1 PER_2 PAR_1 PAR_2 W L UNITS } {

    set scale 0.9
    set side_1 [ device::dfm_vec_measurements $PER_1 ]
    set side_2 [ device::dfm_vec_measurements $PER_2 ]
    set sides  [ concat $side_1 $side_2 ]

    set end_1  [ device::dfm_vec_measurements $PAR_1 ]
    set end_2  [ device::dfm_vec_measurements $PAR_2 ]

    set sum [ expr { [ calc_scbscc_dfm__getsum $sides [$L] [$UNITS] -10 10 100 ] + \
                         [ calc_scbscc_dfm__getsum $end_1 [$W] [$UNITS] -10 10 100 ] + \
                         [ calc_scbscc_dfm__getsum $end_2 [$W] [$UNITS] -10 10 100 ] } ]

    return [ expr { $sum / ( [$W] * $scale * [$L] * $scale * 1e12 ) } ]
}

proc calc_scc_dfm { PER_1 PER_2 PAR_1 PAR_2 W L UNITS } {

    set scale 0.9
    set side_1 [ device::dfm_vec_measurements $PER_1 ]
    set side_2 [ device::dfm_vec_measurements $PER_2 ]
    set sides  [ concat $side_1 $side_2 ]

    set end_1  [ device::dfm_vec_measurements $PAR_1 ]
    set end_2  [ device::dfm_vec_measurements $PAR_2 ]

    set sum [ expr { [ calc_scbscc_dfm__getsum $sides [$L] [$UNITS] -20 20 400 ] + \
                         [ calc_scbscc_dfm__getsum $end_1 [$W] [$UNITS] -20 20 400 ] + \
                         [ calc_scbscc_dfm__getsum $end_2 [$W] [$UNITS] -20 20 400 ] } ]

    return [ expr { $sum / ( [$W] *$scale * [$L] *$scale * 1e12 ) } ]
}

proc calc_sca_multi { PER PAR W L MAX} {
 set scale 0.9
 set maxv [$MAX]*1e-6
 set sca_sum1 0.0
 set sca_sum2 0.0
 set sca_tmp 0.0
 set sum_tmp 0.0
 set finger_count [ $PER finger_count]
 set Ws [ expr { [$W] * $scale } ]
 set Ls [ expr { [$L] * $scale } ]
 for {set i 0} { $i < $finger_count } {incr i} {
            set slice_count1 [ $PER slice_count $i]
            set slice_count2 [ $PAR slice_count $i]
            set SCref 1.0
            for { set k 0 } { $k < $slice_count1} { incr k } {
                set tmpa [expr ([$PER a $i $k]>$maxv) ? $maxv : [$PER a $i $k]]
                set tmpb [expr ([$PER b $i $k]>$maxv) ? $maxv : [$PER b $i $k]]
                #puts "PER: a=[$PER a $i $k] -> $tmpa  b=[$PER b $i $k] -> $tmpb "
                set sca_sum1 [ expr { $sca_sum1 + ( ([$PER w $i $k]*$scale) * ( ($SCref * $SCref/(($tmpa*$scale))) - ( $SCref * $SCref/(($tmpa*$scale+$Ls))) + ($SCref * $SCref/(($tmpb*$scale))) - ($SCref * $SCref/(($tmpb*$scale+$Ls))))) }]
                }

            for { set k 0 } { $k < $slice_count2} { incr k } {
                set tmpa [expr ([$PAR a $i $k]>$maxv) ? $maxv : [$PAR a $i $k]]
                set tmpb [expr ([$PAR b $i $k]>$maxv) ? $maxv : [$PAR b $i $k]]
                #puts "PAR: a=[$PER a $i $k] -> $tmpa  b=[$PAR b $i $k] -> $tmpb "
                set sca_sum2 [ expr { $sca_sum2 + ( ([$PAR w $i $k]*$scale) * ( ($SCref * $SCref/(($tmpa*$scale))) - ( $SCref * $SCref/(($tmpa*$scale+$Ws))) + ($SCref * $SCref/(($tmpb*$scale))) - ($SCref * $SCref/(($tmpb*$scale +$Ws))))) }]
                }
            set sca_tmp [ expr { ( $sca_sum1 + $sca_sum2 ) / ( (($Ws) * ($Ls)) * 1e12) } ]
            puts "sca_finger$i = $sca_tmp"
            set sum_tmp [ expr { $sum_tmp + $sca_tmp } ]
            set sca_sum1 0.0
            set sca_sum2 0.0
 }
    return [ expr { $sum_tmp / $finger_count} ]
}



proc calc_scb_multi {  PER PAR W  L MAX   } {
    set scale 0.9
    set maxv [$MAX]*1e-6
	set scb_sum1 0.0
	set scb_sum2 0.0
	set scb_tmp 0.0
	set sum_tmp 0.0
	set finger_count [ $PER finger_count]
    set Ws [ expr { [$W] * $scale } ]
    set Ls [ expr { [$L] * $scale } ]
	for {set i 0} { $i < $finger_count } {incr i} {
		set SCref 1.0
		set slice_count1 [ $PER slice_count $i]
		set slice_count2 [ $PAR slice_count $i]
		for { set k 0 } { $k < $slice_count1} { incr k } {
            set tmpa [expr ([$PER a $i $k]>$maxv) ? $maxv : [$PER a $i $k]]
            set tmpb [expr ([$PER b $i $k]>$maxv) ? $maxv : [$PER b $i $k]]
			set exp_term1 [ catching_expr " exp(-10*$tmpa*$scale*1e6/$SCref) " ]
			set exp_term2 [ catching_expr " exp(-10*$tmpa*$scale*1e6/$SCref) " ]
			set exp_term3 [ catching_expr " exp(-10*($tmpa*$scale+$Ls)*1e6/$SCref) " ]
			set exp_term4 [ catching_expr " exp(-10*($tmpa*$scale+$Ls)*1e6/$SCref) " ]
			set exp_term5 [ catching_expr " exp(-10*$tmpb*$scale*1e6/$SCref) " ]
			set exp_term6 [ catching_expr " exp(-10*$tmpb*$scale*1e6/$SCref) " ]
			set exp_term7 [ catching_expr " exp(-10*($tmpb*$scale+$Ls)*1e6/$SCref) " ]
			set exp_term8 [ catching_expr " exp(-10*($tmpb*$scale+$Ls)*1e6/$SCref) " ]
			set scb_sum1 [ expr { $scb_sum1 + ( [ $PER w $i $k]*$scale*1e6 * (($tmpa*$scale*1e6*( $exp_term1/10)) +   ($SCref*($exp_term2/100)) - (($tmpa*$scale+$Ls)*1e6*($exp_term3/10)) - (($SCref*($exp_term4/100))) + ($tmpb*$scale*1e6*( $exp_term5/10)) +   ($SCref*($exp_term6/100)) - (($tmpb*$scale+$Ls)*1e6*($exp_term7/10)) - ($SCref*($exp_term8/100))       )) } ]
			}
		for { set k 0 } { $k < $slice_count2} { incr k } {
            set tmpa [expr ([$PAR a $i $k]>$maxv) ? $maxv : [$PAR a $i $k]]
            set tmpb [expr ([$PAR b $i $k]>$maxv) ? $maxv : [$PAR b $i $k]]
			set exp_term1 [ catching_expr " exp(-10*$tmpa*$scale*1e6/$SCref) " ]
			set exp_term2 [ catching_expr " exp(-10*$tmpa*$scale*1e6/$SCref) " ]
			set exp_term3 [ catching_expr " exp(-10*($tmpa*$scale+$Ws)*1e6/$SCref) " ]
			set exp_term4 [ catching_expr " exp(-10*($tmpa*$scale+$Ws)*1e6/$SCref) " ]
			set exp_term5 [ catching_expr " exp(-10*$tmpb*$scale*1e6/$SCref) " ]
			set exp_term6 [ catching_expr " exp(-10*$tmpb*$scale*1e6/$SCref) " ]
			set exp_term7 [ catching_expr " exp(-10*($tmpb*$scale+$Ws)*1e6/$SCref) " ]
			set exp_term8 [ catching_expr " exp(-10*($tmpb*$scale+$Ws)*1e6/$SCref) " ]
			set scb_sum2 [ expr { $scb_sum2 + ( [$PAR w $i $k]*$scale*1e6 * (($tmpa*$scale*1e6*( $exp_term1/10)) +   ($SCref*($exp_term2/100)) - (($tmpa*$scale+$Ws)*1e6*($exp_term3/10)) - ($SCref*($exp_term4/100)) + ($tmpb*$scale*1e6*( $exp_term5/10)) +   ($SCref*($exp_term6/100)) - (($tmpb*$scale+$Ws)*1e6*($exp_term7/10)) - ($SCref*($exp_term8/100))       )) } ]
			}
		
		set scb_tmp [ expr { ( $scb_sum1 + $scb_sum2 ) / ( (($Ws) * ($Ls)) * 1e12) } ]
		set sum_tmp [ expr { $sum_tmp + $scb_tmp } ]
		set scb_sum1 0.0
		set scb_sum2 0.0
 }
	return [ expr { $sum_tmp / $finger_count} ]
}

proc calc_scc_multi { PER PAR W L  MAX    } {
    set scale 0.9
    set maxv [$MAX]*1e-6
	set scc_sum1 0.0
	set scc_sum2 0.0
	set scc_tmp 0.0
	set sum_tmp 0.0
	set finger_count [ $PER finger_count]
    set Ws [ expr { [$W] * $scale } ]
    set Ls [ expr { [$L] * $scale } ]
    for {set i 0} { $i < $finger_count } {incr i} {
        set SCref 1.0
        set slice_count1 [ $PER slice_count $i]
        set slice_count2 [ $PAR slice_count $i]
        for { set k 0 } { $k < $slice_count1} { incr k } {
            set tmpa [expr ([$PER a $i $k]>$maxv) ? $maxv : [$PER a $i $k]]
            set tmpb [expr ([$PER b $i $k]>$maxv) ? $maxv : [$PER b $i $k]]
            set exp_term1 [ catching_expr " exp(-20*$tmpa*$scale*1e6/$SCref) " ]
            set exp_term2 [ catching_expr " exp(-20*$tmpa*$scale*1e6/$SCref) " ]
            set exp_term3 [ catching_expr " exp(-20*($tmpa*$scale+$Ls)*1e6/$SCref) " ]
            set exp_term4 [ catching_expr " exp(-20*($tmpa*$scale+$Ls)*1e6/$SCref) " ]
            set exp_term5 [ catching_expr " exp(-20*$tmpb*$scale*1e6/$SCref) " ]
            set exp_term6 [ catching_expr " exp(-20*$tmpb*$scale*1e6/$SCref) " ]
            set exp_term7 [ catching_expr " exp(-20*($tmpb*$scale+$Ls)*1e6/$SCref) " ]
            set exp_term8 [ catching_expr " exp(-20*($tmpb*$scale+$Ls)*1e6/$SCref) " ]
            set scc_sum1 [ expr { $scc_sum1 + ( [$PER w $i $k]*$scale*1e6 * (($tmpa*$scale*1e6*( $exp_term1/20)) +   ($SCref*($exp_term2/400)) - (($tmpa*$scale+$Ls)*1e6*($exp_term3/20)) - ($SCref*($exp_term4/400)) + ($tmpb*$scale*1e6*( $exp_term5/20)) +   ($SCref*($exp_term6/400)) - (($tmpb*$scale+$Ls)*1e6*($exp_term7/20)) - ($SCref*($exp_term8/400))       )) } ]
        }
        for { set k 0 } { $k < $slice_count2} { incr k } {
            set tmpa [expr ([$PAR a $i $k]>$maxv) ? $maxv : [$PAR a $i $k]]
            set tmpb [expr ([$PAR b $i $k]>$maxv) ? $maxv : [$PAR b $i $k]]
            set exp_term1 [ catching_expr " exp(-20*$tmpa*$scale*1e6/$SCref) " ]
            set exp_term2 [ catching_expr " exp(-20*$tmpa*$scale*1e6/$SCref) " ]
            set exp_term3 [ catching_expr " exp(-20*($tmpa*$scale+$Ws)*1e6/$SCref) " ]
            set exp_term4 [ catching_expr " exp(-20*($tmpa*$scale+$Ws)*1e6/$SCref) " ]
            set exp_term5 [ catching_expr " exp(-20*$tmpb*$scale*1e6/$SCref) " ]
            set exp_term6 [ catching_expr " exp(-20*$tmpb*$scale*1e6/$SCref) " ]
            set exp_term7 [ catching_expr " exp(-20*($tmpb*$scale+$Ws)*1e6/$SCref) " ]
            set exp_term8 [ catching_expr " exp(-20*($tmpb*$scale+$Ws)*1e6/$SCref) " ]
            set scc_sum2 [ expr { $scc_sum2 + ( [$PAR w $i $k]*$scale*1e6 * (($tmpa*$scale*1e6*( $exp_term1/20)) +   ($SCref*($exp_term2/400)) - (($tmpa*$scale+$Ws)*1e6*($exp_term3/20)) - ($SCref*($exp_term4/400)) + ($tmpb*$scale*1e6*( $exp_term5/20)) +   ($SCref*($exp_term6/400)) - (($tmpb*$scale+$Ws)*1e6*($exp_term7/20)) - ($SCref*($exp_term8/400))       )) } ]
        }
        set scc_tmp [ expr { ( $scc_sum1 + $scc_sum2 ) / ( (($Ws) * ($Ls)) * 1e12) } ]
        set sum_tmp [ expr { $sum_tmp + $scc_tmp } ]
        set scc_sum1 0.0
        set scc_sum2 0.0
 }
    return [ expr { $sum_tmp / $finger_count} ]

}

*/]

}

package require CalibreDFM_DEVICE

tvf::SETLAYER ngate_wpe_core = [
  device::enclosure_measurements -base ngate_wpe -measurement pwell_wpe_core -orient nsd -max_par 2.000  -max_per 2.000
]
tvf::SETLAYER ngate_wpe_IO1  = [
  device::enclosure_measurements -base ngate_wpe -measurement pwell_wpe_IO1 -orient nsd -max_par 2.000  -max_per 2.000
]
tvf::SETLAYER ngate_wpe_IO2 = [
  device::enclosure_measurements -base ngate_wpe -measurement pwell_wpe_IO2 -orient nsd -max_par 2.000  -max_per 2.000
]
tvf::SETLAYER pgate_wpe_core = [
  device::enclosure_measurements -base pgate_wpe -measurement nwell_wpe_core -orient psd -max_par 2.000  -max_per 2.000
]
tvf::SETLAYER ngate_egl4_box_wpe_core = [
  device::enclosure_measurements -base ngate_egl4_box_wpe -measurement pwell_wpe_core -orient nsd -max_par 2.000  -max_per 2.000
]
tvf::SETLAYER pgate_egl4_box_wpe_core = [
  device::enclosure_measurements -base pgate_egl4_box_wpe -measurement nwell_wpe_core -orient psd -max_par 2.000  -max_per 2.000
]
tvf::SETLAYER ngate_egl4_box_wpe_IO2 = [
  device::enclosure_measurements -base ngate_egl4_box_wpe -measurement pwell_wpe_IO2 -orient nsd -max_par 2.000  -max_per 2.000
]
tvf::SETLAYER pgate_egl4_box_wpe_IO2 = [
  device::enclosure_measurements -base pgate_egl4_box_wpe -measurement nwell_wpe_IO2 -orient psd -max_par 2.000  -max_per 2.000
]
tvf::SETLAYER ngate_egl1_box_wpe_core = [
  device::enclosure_measurements -base ngate_egl1_box_wpe -measurement pwell_wpe_core -orient nsd -max_par 2.000  -max_per 2.000
]
tvf::SETLAYER pgate_egl1_box_wpe_core = [
  device::enclosure_measurements -base pgate_egl1_box_wpe -measurement nwell_wpe_core -orient psd -max_par 2.000  -max_per 2.000
]
tvf::SETLAYER ngate_egl1_box_wpe_IO2 = [
  device::enclosure_measurements -base ngate_egl1_box_wpe -measurement pwell_wpe_IO2 -orient nsd -max_par 2.000  -max_per 2.000
]
tvf::SETLAYER pgate_egl1_box_wpe_IO2 = [
  device::enclosure_measurements -base pgate_egl1_box_wpe -measurement nwell_wpe_IO2 -orient psd -max_par 2.000  -max_per 2.000
]
tvf::SETLAYER pgate_wpe_IO1  = [
  device::enclosure_measurements -base pgate_wpe -measurement nwell_wpe_IO1 -orient psd -max_par 2.000  -max_per 2.000
]
tvf::SETLAYER pgate_wpe_IO2 = [
  device::enclosure_measurements -base pgate_wpe -measurement nwell_wpe_IO2 -orient psd -max_par 2.000  -max_per 2.000
]
tvf::SETLAYER dnwngate_wpe_core = [
  device::enclosure_measurements -base ngate_wpe -measurement rwell_wpe_core -orient nsd -max_par 2.000  -max_per 2.000
]
tvf::SETLAYER dnwngate_wpe_IO1  = [
  device::enclosure_measurements -base ngate_wpe -measurement rwell_wpe_IO1 -orient nsd -max_par 2.000  -max_per 2.000
]
tvf::SETLAYER dnwngate_wpe_IO2 = [
  device::enclosure_measurements -base ngate_wpe -measurement rwell_wpe_IO2 -orient nsd -max_par 2.000  -max_per 2.000
]

